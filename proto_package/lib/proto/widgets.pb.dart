//
//  Generated code. Do not modify.
//  source: widgets.proto
//
// @dart = 2.12

// ignore_for_file: annotate_overrides, camel_case_types, comment_references
// ignore_for_file: constant_identifier_names, library_prefixes
// ignore_for_file: non_constant_identifier_names, prefer_final_fields
// ignore_for_file: unnecessary_import, unnecessary_this, unused_import

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import 'types.pb.dart' as $1;

/// package:flutter/src/cupertino/activity_indicator.dart
class CupertinoActivityIndicator extends $pb.GeneratedMessage {
  factory CupertinoActivityIndicator({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.bool? animating,
    $core.double? radius,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (animating != null) {
      $result.animating = animating;
    }
    if (radius != null) {
      $result.radius = radius;
    }
    return $result;
  }
  CupertinoActivityIndicator._() : super();
  factory CupertinoActivityIndicator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoActivityIndicator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoActivityIndicator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'animating')
    ..a<$core.double>(5, _omitFieldNames ? '' : 'radius', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoActivityIndicator clone() => CupertinoActivityIndicator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoActivityIndicator copyWith(void Function(CupertinoActivityIndicator) updates) => super.copyWith((message) => updates(message as CupertinoActivityIndicator)) as CupertinoActivityIndicator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoActivityIndicator create() => CupertinoActivityIndicator._();
  CupertinoActivityIndicator createEmptyInstance() => create();
  static $pb.PbList<CupertinoActivityIndicator> createRepeated() => $pb.PbList<CupertinoActivityIndicator>();
  @$core.pragma('dart2js:noInline')
  static CupertinoActivityIndicator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoActivityIndicator>(create);
  static CupertinoActivityIndicator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get animating => $_getBF(2);
  @$pb.TagNumber(4)
  set animating($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAnimating() => $_has(2);
  @$pb.TagNumber(4)
  void clearAnimating() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get radius => $_getN(3);
  @$pb.TagNumber(5)
  set radius($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasRadius() => $_has(3);
  @$pb.TagNumber(5)
  void clearRadius() => clearField(5);
}

/// package:flutter/src/cupertino/activity_indicator.dart
class CupertinoActivityIndicatorNamedPartiallyRevealed extends $pb.GeneratedMessage {
  factory CupertinoActivityIndicatorNamedPartiallyRevealed({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? radius,
    $core.double? progress,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (radius != null) {
      $result.radius = radius;
    }
    if (progress != null) {
      $result.progress = progress;
    }
    return $result;
  }
  CupertinoActivityIndicatorNamedPartiallyRevealed._() : super();
  factory CupertinoActivityIndicatorNamedPartiallyRevealed.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoActivityIndicatorNamedPartiallyRevealed.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoActivityIndicatorNamedPartiallyRevealed', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'radius', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'progress', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoActivityIndicatorNamedPartiallyRevealed clone() => CupertinoActivityIndicatorNamedPartiallyRevealed()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoActivityIndicatorNamedPartiallyRevealed copyWith(void Function(CupertinoActivityIndicatorNamedPartiallyRevealed) updates) => super.copyWith((message) => updates(message as CupertinoActivityIndicatorNamedPartiallyRevealed)) as CupertinoActivityIndicatorNamedPartiallyRevealed;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoActivityIndicatorNamedPartiallyRevealed create() => CupertinoActivityIndicatorNamedPartiallyRevealed._();
  CupertinoActivityIndicatorNamedPartiallyRevealed createEmptyInstance() => create();
  static $pb.PbList<CupertinoActivityIndicatorNamedPartiallyRevealed> createRepeated() => $pb.PbList<CupertinoActivityIndicatorNamedPartiallyRevealed>();
  @$core.pragma('dart2js:noInline')
  static CupertinoActivityIndicatorNamedPartiallyRevealed getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoActivityIndicatorNamedPartiallyRevealed>(create);
  static CupertinoActivityIndicatorNamedPartiallyRevealed? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get radius => $_getN(2);
  @$pb.TagNumber(4)
  set radius($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasRadius() => $_has(2);
  @$pb.TagNumber(4)
  void clearRadius() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get progress => $_getN(3);
  @$pb.TagNumber(5)
  set progress($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasProgress() => $_has(3);
  @$pb.TagNumber(5)
  void clearProgress() => clearField(5);
}

/// package:flutter/src/cupertino/app.dart
class CupertinoApp extends $pb.GeneratedMessage {
  factory CupertinoApp({
    $1.FlutterKeyExpression? key,
    WidgetExpression? home,
    $core.String? initialRoute,
    $core.String? title,
    $1.DartColorExpression? color,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (home != null) {
      $result.home = home;
    }
    if (initialRoute != null) {
      $result.initialRoute = initialRoute;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  CupertinoApp._() : super();
  factory CupertinoApp.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoApp.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoApp', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'home', subBuilder: WidgetExpression.create)
    ..aOS(7, _omitFieldNames ? '' : 'initialRoute')
    ..aOS(13, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(21, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(22, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(23, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(24, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(25, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(28, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoApp clone() => CupertinoApp()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoApp copyWith(void Function(CupertinoApp) updates) => super.copyWith((message) => updates(message as CupertinoApp)) as CupertinoApp;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoApp create() => CupertinoApp._();
  CupertinoApp createEmptyInstance() => create();
  static $pb.PbList<CupertinoApp> createRepeated() => $pb.PbList<CupertinoApp>();
  @$core.pragma('dart2js:noInline')
  static CupertinoApp getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoApp>(create);
  static CupertinoApp? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get home => $_getN(1);
  @$pb.TagNumber(4)
  set home(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasHome() => $_has(1);
  @$pb.TagNumber(4)
  void clearHome() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureHome() => $_ensure(1);

  @$pb.TagNumber(7)
  $core.String get initialRoute => $_getSZ(2);
  @$pb.TagNumber(7)
  set initialRoute($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasInitialRoute() => $_has(2);
  @$pb.TagNumber(7)
  void clearInitialRoute() => clearField(7);

  @$pb.TagNumber(13)
  $core.String get title => $_getSZ(3);
  @$pb.TagNumber(13)
  set title($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(13)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(13)
  void clearTitle() => clearField(13);

  @$pb.TagNumber(15)
  $1.DartColorExpression get color => $_getN(4);
  @$pb.TagNumber(15)
  set color($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasColor() => $_has(4);
  @$pb.TagNumber(15)
  void clearColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureColor() => $_ensure(4);

  @$pb.TagNumber(21)
  $core.bool get showPerformanceOverlay => $_getBF(5);
  @$pb.TagNumber(21)
  set showPerformanceOverlay($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(21)
  $core.bool hasShowPerformanceOverlay() => $_has(5);
  @$pb.TagNumber(21)
  void clearShowPerformanceOverlay() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get checkerboardRasterCacheImages => $_getBF(6);
  @$pb.TagNumber(22)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(22)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(6);
  @$pb.TagNumber(22)
  void clearCheckerboardRasterCacheImages() => clearField(22);

  @$pb.TagNumber(23)
  $core.bool get checkerboardOffscreenLayers => $_getBF(7);
  @$pb.TagNumber(23)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(23)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(7);
  @$pb.TagNumber(23)
  void clearCheckerboardOffscreenLayers() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get showSemanticsDebugger => $_getBF(8);
  @$pb.TagNumber(24)
  set showSemanticsDebugger($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(24)
  $core.bool hasShowSemanticsDebugger() => $_has(8);
  @$pb.TagNumber(24)
  void clearShowSemanticsDebugger() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get debugShowCheckedModeBanner => $_getBF(9);
  @$pb.TagNumber(25)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(25)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(9);
  @$pb.TagNumber(25)
  void clearDebugShowCheckedModeBanner() => clearField(25);

  @$pb.TagNumber(28)
  $core.String get restorationScopeId => $_getSZ(10);
  @$pb.TagNumber(28)
  set restorationScopeId($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(28)
  $core.bool hasRestorationScopeId() => $_has(10);
  @$pb.TagNumber(28)
  void clearRestorationScopeId() => clearField(28);
}

/// package:flutter/src/cupertino/app.dart
class CupertinoAppNamedRouter extends $pb.GeneratedMessage {
  factory CupertinoAppNamedRouter({
    $1.FlutterKeyExpression? key,
    $core.String? title,
    $1.DartColorExpression? color,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  CupertinoAppNamedRouter._() : super();
  factory CupertinoAppNamedRouter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoAppNamedRouter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoAppNamedRouter', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(10, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(18, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(19, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(20, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(21, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(22, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(25, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoAppNamedRouter clone() => CupertinoAppNamedRouter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoAppNamedRouter copyWith(void Function(CupertinoAppNamedRouter) updates) => super.copyWith((message) => updates(message as CupertinoAppNamedRouter)) as CupertinoAppNamedRouter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoAppNamedRouter create() => CupertinoAppNamedRouter._();
  CupertinoAppNamedRouter createEmptyInstance() => create();
  static $pb.PbList<CupertinoAppNamedRouter> createRepeated() => $pb.PbList<CupertinoAppNamedRouter>();
  @$core.pragma('dart2js:noInline')
  static CupertinoAppNamedRouter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoAppNamedRouter>(create);
  static CupertinoAppNamedRouter? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(10)
  $core.String get title => $_getSZ(1);
  @$pb.TagNumber(10)
  set title($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(10)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(10)
  void clearTitle() => clearField(10);

  @$pb.TagNumber(12)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(12)
  set color($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(12)
  void clearColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(18)
  $core.bool get showPerformanceOverlay => $_getBF(3);
  @$pb.TagNumber(18)
  set showPerformanceOverlay($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(18)
  $core.bool hasShowPerformanceOverlay() => $_has(3);
  @$pb.TagNumber(18)
  void clearShowPerformanceOverlay() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get checkerboardRasterCacheImages => $_getBF(4);
  @$pb.TagNumber(19)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(19)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(4);
  @$pb.TagNumber(19)
  void clearCheckerboardRasterCacheImages() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get checkerboardOffscreenLayers => $_getBF(5);
  @$pb.TagNumber(20)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(20)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(5);
  @$pb.TagNumber(20)
  void clearCheckerboardOffscreenLayers() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get showSemanticsDebugger => $_getBF(6);
  @$pb.TagNumber(21)
  set showSemanticsDebugger($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(21)
  $core.bool hasShowSemanticsDebugger() => $_has(6);
  @$pb.TagNumber(21)
  void clearShowSemanticsDebugger() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get debugShowCheckedModeBanner => $_getBF(7);
  @$pb.TagNumber(22)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(22)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(7);
  @$pb.TagNumber(22)
  void clearDebugShowCheckedModeBanner() => clearField(22);

  @$pb.TagNumber(25)
  $core.String get restorationScopeId => $_getSZ(8);
  @$pb.TagNumber(25)
  set restorationScopeId($core.String v) { $_setString(8, v); }
  @$pb.TagNumber(25)
  $core.bool hasRestorationScopeId() => $_has(8);
  @$pb.TagNumber(25)
  void clearRestorationScopeId() => clearField(25);
}

/// package:flutter/src/cupertino/button.dart
class CupertinoButton extends $pb.GeneratedMessage {
  factory CupertinoButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartColorExpression? color,
    $1.DartColorExpression? disabledColor,
    $core.double? minSize,
    $core.double? pressedOpacity,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (color != null) {
      $result.color = color;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (minSize != null) {
      $result.minSize = minSize;
    }
    if (pressedOpacity != null) {
      $result.pressedOpacity = pressedOpacity;
    }
    return $result;
  }
  CupertinoButton._() : super();
  factory CupertinoButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'minSize', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'pressedOpacity', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoButton clone() => CupertinoButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoButton copyWith(void Function(CupertinoButton) updates) => super.copyWith((message) => updates(message as CupertinoButton)) as CupertinoButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoButton create() => CupertinoButton._();
  CupertinoButton createEmptyInstance() => create();
  static $pb.PbList<CupertinoButton> createRepeated() => $pb.PbList<CupertinoButton>();
  @$core.pragma('dart2js:noInline')
  static CupertinoButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoButton>(create);
  static CupertinoButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get disabledColor => $_getN(3);
  @$pb.TagNumber(6)
  set disabledColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDisabledColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearDisabledColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $core.double get minSize => $_getN(4);
  @$pb.TagNumber(7)
  set minSize($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasMinSize() => $_has(4);
  @$pb.TagNumber(7)
  void clearMinSize() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get pressedOpacity => $_getN(5);
  @$pb.TagNumber(8)
  set pressedOpacity($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasPressedOpacity() => $_has(5);
  @$pb.TagNumber(8)
  void clearPressedOpacity() => clearField(8);
}

/// package:flutter/src/cupertino/button.dart
class CupertinoButtonNamedFilled extends $pb.GeneratedMessage {
  factory CupertinoButtonNamedFilled({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartColorExpression? disabledColor,
    $core.double? minSize,
    $core.double? pressedOpacity,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (minSize != null) {
      $result.minSize = minSize;
    }
    if (pressedOpacity != null) {
      $result.pressedOpacity = pressedOpacity;
    }
    return $result;
  }
  CupertinoButtonNamedFilled._() : super();
  factory CupertinoButtonNamedFilled.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoButtonNamedFilled.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoButtonNamedFilled', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'minSize', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'pressedOpacity', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoButtonNamedFilled clone() => CupertinoButtonNamedFilled()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoButtonNamedFilled copyWith(void Function(CupertinoButtonNamedFilled) updates) => super.copyWith((message) => updates(message as CupertinoButtonNamedFilled)) as CupertinoButtonNamedFilled;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoButtonNamedFilled create() => CupertinoButtonNamedFilled._();
  CupertinoButtonNamedFilled createEmptyInstance() => create();
  static $pb.PbList<CupertinoButtonNamedFilled> createRepeated() => $pb.PbList<CupertinoButtonNamedFilled>();
  @$core.pragma('dart2js:noInline')
  static CupertinoButtonNamedFilled getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoButtonNamedFilled>(create);
  static CupertinoButtonNamedFilled? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $1.DartColorExpression get disabledColor => $_getN(2);
  @$pb.TagNumber(5)
  set disabledColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasDisabledColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearDisabledColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $core.double get minSize => $_getN(3);
  @$pb.TagNumber(6)
  set minSize($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasMinSize() => $_has(3);
  @$pb.TagNumber(6)
  void clearMinSize() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get pressedOpacity => $_getN(4);
  @$pb.TagNumber(7)
  set pressedOpacity($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasPressedOpacity() => $_has(4);
  @$pb.TagNumber(7)
  void clearPressedOpacity() => clearField(7);
}

/// package:flutter/src/cupertino/checkbox.dart
class CupertinoCheckbox extends $pb.GeneratedMessage {
  factory CupertinoCheckbox({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $core.bool? tristate,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? inactiveColor,
    $1.DartColorExpression? checkColor,
    $1.DartColorExpression? focusColor,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (inactiveColor != null) {
      $result.inactiveColor = inactiveColor;
    }
    if (checkColor != null) {
      $result.checkColor = checkColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  CupertinoCheckbox._() : super();
  factory CupertinoCheckbox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoCheckbox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoCheckbox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOB(4, _omitFieldNames ? '' : 'tristate')
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'inactiveColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'checkColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(11, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoCheckbox clone() => CupertinoCheckbox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoCheckbox copyWith(void Function(CupertinoCheckbox) updates) => super.copyWith((message) => updates(message as CupertinoCheckbox)) as CupertinoCheckbox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoCheckbox create() => CupertinoCheckbox._();
  CupertinoCheckbox createEmptyInstance() => create();
  static $pb.PbList<CupertinoCheckbox> createRepeated() => $pb.PbList<CupertinoCheckbox>();
  @$core.pragma('dart2js:noInline')
  static CupertinoCheckbox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoCheckbox>(create);
  static CupertinoCheckbox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get tristate => $_getBF(2);
  @$pb.TagNumber(4)
  set tristate($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTristate() => $_has(2);
  @$pb.TagNumber(4)
  void clearTristate() => clearField(4);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeColor => $_getN(3);
  @$pb.TagNumber(6)
  set activeColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearActiveColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get inactiveColor => $_getN(4);
  @$pb.TagNumber(7)
  set inactiveColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInactiveColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearInactiveColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureInactiveColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get checkColor => $_getN(5);
  @$pb.TagNumber(8)
  set checkColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasCheckColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearCheckColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureCheckColor() => $_ensure(5);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(6);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(6);

  @$pb.TagNumber(11)
  $core.bool get autofocus => $_getBF(7);
  @$pb.TagNumber(11)
  set autofocus($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(11)
  $core.bool hasAutofocus() => $_has(7);
  @$pb.TagNumber(11)
  void clearAutofocus() => clearField(11);
}

/// package:flutter/src/cupertino/context_menu.dart
class CupertinoContextMenu extends $pb.GeneratedMessage {
  factory CupertinoContextMenu({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? child,
    $core.bool? enableHapticFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (child != null) {
      $result.child = child;
    }
    if (enableHapticFeedback != null) {
      $result.enableHapticFeedback = enableHapticFeedback;
    }
    return $result;
  }
  CupertinoContextMenu._() : super();
  factory CupertinoContextMenu.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoContextMenu.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoContextMenu', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'enableHapticFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoContextMenu clone() => CupertinoContextMenu()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoContextMenu copyWith(void Function(CupertinoContextMenu) updates) => super.copyWith((message) => updates(message as CupertinoContextMenu)) as CupertinoContextMenu;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoContextMenu create() => CupertinoContextMenu._();
  CupertinoContextMenu createEmptyInstance() => create();
  static $pb.PbList<CupertinoContextMenu> createRepeated() => $pb.PbList<CupertinoContextMenu>();
  @$core.pragma('dart2js:noInline')
  static CupertinoContextMenu getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoContextMenu>(create);
  static CupertinoContextMenu? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get actions => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get enableHapticFeedback => $_getBF(3);
  @$pb.TagNumber(5)
  set enableHapticFeedback($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnableHapticFeedback() => $_has(3);
  @$pb.TagNumber(5)
  void clearEnableHapticFeedback() => clearField(5);
}

/// package:flutter/src/cupertino/context_menu_action.dart
class CupertinoContextMenuAction extends $pb.GeneratedMessage {
  factory CupertinoContextMenuAction({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? isDefaultAction,
    $core.bool? isDestructiveAction,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (isDefaultAction != null) {
      $result.isDefaultAction = isDefaultAction;
    }
    if (isDestructiveAction != null) {
      $result.isDestructiveAction = isDestructiveAction;
    }
    return $result;
  }
  CupertinoContextMenuAction._() : super();
  factory CupertinoContextMenuAction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoContextMenuAction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoContextMenuAction', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'isDefaultAction')
    ..aOB(5, _omitFieldNames ? '' : 'isDestructiveAction')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoContextMenuAction clone() => CupertinoContextMenuAction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoContextMenuAction copyWith(void Function(CupertinoContextMenuAction) updates) => super.copyWith((message) => updates(message as CupertinoContextMenuAction)) as CupertinoContextMenuAction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoContextMenuAction create() => CupertinoContextMenuAction._();
  CupertinoContextMenuAction createEmptyInstance() => create();
  static $pb.PbList<CupertinoContextMenuAction> createRepeated() => $pb.PbList<CupertinoContextMenuAction>();
  @$core.pragma('dart2js:noInline')
  static CupertinoContextMenuAction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoContextMenuAction>(create);
  static CupertinoContextMenuAction? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get isDefaultAction => $_getBF(2);
  @$pb.TagNumber(4)
  set isDefaultAction($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsDefaultAction() => $_has(2);
  @$pb.TagNumber(4)
  void clearIsDefaultAction() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get isDestructiveAction => $_getBF(3);
  @$pb.TagNumber(5)
  set isDestructiveAction($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsDestructiveAction() => $_has(3);
  @$pb.TagNumber(5)
  void clearIsDestructiveAction() => clearField(5);
}

/// package:flutter/src/cupertino/desktop_text_selection_toolbar_button.dart
class CupertinoDesktopTextSelectionToolbarButton extends $pb.GeneratedMessage {
  factory CupertinoDesktopTextSelectionToolbarButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  CupertinoDesktopTextSelectionToolbarButton._() : super();
  factory CupertinoDesktopTextSelectionToolbarButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoDesktopTextSelectionToolbarButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoDesktopTextSelectionToolbarButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoDesktopTextSelectionToolbarButton clone() => CupertinoDesktopTextSelectionToolbarButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoDesktopTextSelectionToolbarButton copyWith(void Function(CupertinoDesktopTextSelectionToolbarButton) updates) => super.copyWith((message) => updates(message as CupertinoDesktopTextSelectionToolbarButton)) as CupertinoDesktopTextSelectionToolbarButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoDesktopTextSelectionToolbarButton create() => CupertinoDesktopTextSelectionToolbarButton._();
  CupertinoDesktopTextSelectionToolbarButton createEmptyInstance() => create();
  static $pb.PbList<CupertinoDesktopTextSelectionToolbarButton> createRepeated() => $pb.PbList<CupertinoDesktopTextSelectionToolbarButton>();
  @$core.pragma('dart2js:noInline')
  static CupertinoDesktopTextSelectionToolbarButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoDesktopTextSelectionToolbarButton>(create);
  static CupertinoDesktopTextSelectionToolbarButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/cupertino/desktop_text_selection_toolbar_button.dart
class CupertinoDesktopTextSelectionToolbarButtonNamedText extends $pb.GeneratedMessage {
  factory CupertinoDesktopTextSelectionToolbarButtonNamedText({
    $1.FlutterKeyExpression? key,
    $core.String? text,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (text != null) {
      $result.text = text;
    }
    return $result;
  }
  CupertinoDesktopTextSelectionToolbarButtonNamedText._() : super();
  factory CupertinoDesktopTextSelectionToolbarButtonNamedText.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoDesktopTextSelectionToolbarButtonNamedText.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoDesktopTextSelectionToolbarButtonNamedText', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'text')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoDesktopTextSelectionToolbarButtonNamedText clone() => CupertinoDesktopTextSelectionToolbarButtonNamedText()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoDesktopTextSelectionToolbarButtonNamedText copyWith(void Function(CupertinoDesktopTextSelectionToolbarButtonNamedText) updates) => super.copyWith((message) => updates(message as CupertinoDesktopTextSelectionToolbarButtonNamedText)) as CupertinoDesktopTextSelectionToolbarButtonNamedText;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoDesktopTextSelectionToolbarButtonNamedText create() => CupertinoDesktopTextSelectionToolbarButtonNamedText._();
  CupertinoDesktopTextSelectionToolbarButtonNamedText createEmptyInstance() => create();
  static $pb.PbList<CupertinoDesktopTextSelectionToolbarButtonNamedText> createRepeated() => $pb.PbList<CupertinoDesktopTextSelectionToolbarButtonNamedText>();
  @$core.pragma('dart2js:noInline')
  static CupertinoDesktopTextSelectionToolbarButtonNamedText getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoDesktopTextSelectionToolbarButtonNamedText>(create);
  static CupertinoDesktopTextSelectionToolbarButtonNamedText? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.String get text => $_getSZ(1);
  @$pb.TagNumber(4)
  set text($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasText() => $_has(1);
  @$pb.TagNumber(4)
  void clearText() => clearField(4);
}

/// package:flutter/src/cupertino/dialog.dart
class CupertinoActionSheet extends $pb.GeneratedMessage {
  factory CupertinoActionSheet({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    WidgetExpression? message,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? cancelButton,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (message != null) {
      $result.message = message;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (cancelButton != null) {
      $result.cancelButton = cancelButton;
    }
    return $result;
  }
  CupertinoActionSheet._() : super();
  factory CupertinoActionSheet.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoActionSheet.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoActionSheet', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'message', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(5, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'cancelButton', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoActionSheet clone() => CupertinoActionSheet()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoActionSheet copyWith(void Function(CupertinoActionSheet) updates) => super.copyWith((message) => updates(message as CupertinoActionSheet)) as CupertinoActionSheet;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoActionSheet create() => CupertinoActionSheet._();
  CupertinoActionSheet createEmptyInstance() => create();
  static $pb.PbList<CupertinoActionSheet> createRepeated() => $pb.PbList<CupertinoActionSheet>();
  @$core.pragma('dart2js:noInline')
  static CupertinoActionSheet getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoActionSheet>(create);
  static CupertinoActionSheet? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get message => $_getN(2);
  @$pb.TagNumber(4)
  set message(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasMessage() => $_has(2);
  @$pb.TagNumber(4)
  void clearMessage() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureMessage() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.List<WidgetExpression> get actions => $_getList(3);

  @$pb.TagNumber(8)
  WidgetExpression get cancelButton => $_getN(4);
  @$pb.TagNumber(8)
  set cancelButton(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasCancelButton() => $_has(4);
  @$pb.TagNumber(8)
  void clearCancelButton() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureCancelButton() => $_ensure(4);
}

/// package:flutter/src/cupertino/dialog.dart
class CupertinoAlertDialog extends $pb.GeneratedMessage {
  factory CupertinoAlertDialog({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    WidgetExpression? content,
    $core.Iterable<WidgetExpression>? actions,
    $1.DartDurationExpression? insetAnimationDuration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (content != null) {
      $result.content = content;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (insetAnimationDuration != null) {
      $result.insetAnimationDuration = insetAnimationDuration;
    }
    return $result;
  }
  CupertinoAlertDialog._() : super();
  factory CupertinoAlertDialog.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoAlertDialog.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoAlertDialog', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'content', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(5, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(8, _omitFieldNames ? '' : 'insetAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoAlertDialog clone() => CupertinoAlertDialog()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoAlertDialog copyWith(void Function(CupertinoAlertDialog) updates) => super.copyWith((message) => updates(message as CupertinoAlertDialog)) as CupertinoAlertDialog;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoAlertDialog create() => CupertinoAlertDialog._();
  CupertinoAlertDialog createEmptyInstance() => create();
  static $pb.PbList<CupertinoAlertDialog> createRepeated() => $pb.PbList<CupertinoAlertDialog>();
  @$core.pragma('dart2js:noInline')
  static CupertinoAlertDialog getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoAlertDialog>(create);
  static CupertinoAlertDialog? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get content => $_getN(2);
  @$pb.TagNumber(4)
  set content(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasContent() => $_has(2);
  @$pb.TagNumber(4)
  void clearContent() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureContent() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.List<WidgetExpression> get actions => $_getList(3);

  @$pb.TagNumber(8)
  $1.DartDurationExpression get insetAnimationDuration => $_getN(4);
  @$pb.TagNumber(8)
  set insetAnimationDuration($1.DartDurationExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasInsetAnimationDuration() => $_has(4);
  @$pb.TagNumber(8)
  void clearInsetAnimationDuration() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartDurationExpression ensureInsetAnimationDuration() => $_ensure(4);
}

/// package:flutter/src/cupertino/dialog.dart
class CupertinoDialogAction extends $pb.GeneratedMessage {
  factory CupertinoDialogAction({
    $1.FlutterKeyExpression? key,
    $core.bool? isDefaultAction,
    $core.bool? isDestructiveAction,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (isDefaultAction != null) {
      $result.isDefaultAction = isDefaultAction;
    }
    if (isDestructiveAction != null) {
      $result.isDestructiveAction = isDestructiveAction;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  CupertinoDialogAction._() : super();
  factory CupertinoDialogAction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoDialogAction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoDialogAction', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'isDefaultAction')
    ..aOB(5, _omitFieldNames ? '' : 'isDestructiveAction')
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoDialogAction clone() => CupertinoDialogAction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoDialogAction copyWith(void Function(CupertinoDialogAction) updates) => super.copyWith((message) => updates(message as CupertinoDialogAction)) as CupertinoDialogAction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoDialogAction create() => CupertinoDialogAction._();
  CupertinoDialogAction createEmptyInstance() => create();
  static $pb.PbList<CupertinoDialogAction> createRepeated() => $pb.PbList<CupertinoDialogAction>();
  @$core.pragma('dart2js:noInline')
  static CupertinoDialogAction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoDialogAction>(create);
  static CupertinoDialogAction? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get isDefaultAction => $_getBF(1);
  @$pb.TagNumber(4)
  set isDefaultAction($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsDefaultAction() => $_has(1);
  @$pb.TagNumber(4)
  void clearIsDefaultAction() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get isDestructiveAction => $_getBF(2);
  @$pb.TagNumber(5)
  set isDestructiveAction($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsDestructiveAction() => $_has(2);
  @$pb.TagNumber(5)
  void clearIsDestructiveAction() => clearField(5);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/cupertino/dialog.dart
class CupertinoPopupSurface extends $pb.GeneratedMessage {
  factory CupertinoPopupSurface({
    $1.FlutterKeyExpression? key,
    $core.bool? isSurfacePainted,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (isSurfacePainted != null) {
      $result.isSurfacePainted = isSurfacePainted;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  CupertinoPopupSurface._() : super();
  factory CupertinoPopupSurface.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoPopupSurface.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoPopupSurface', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'isSurfacePainted')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoPopupSurface clone() => CupertinoPopupSurface()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoPopupSurface copyWith(void Function(CupertinoPopupSurface) updates) => super.copyWith((message) => updates(message as CupertinoPopupSurface)) as CupertinoPopupSurface;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoPopupSurface create() => CupertinoPopupSurface._();
  CupertinoPopupSurface createEmptyInstance() => create();
  static $pb.PbList<CupertinoPopupSurface> createRepeated() => $pb.PbList<CupertinoPopupSurface>();
  @$core.pragma('dart2js:noInline')
  static CupertinoPopupSurface getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoPopupSurface>(create);
  static CupertinoPopupSurface? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get isSurfacePainted => $_getBF(1);
  @$pb.TagNumber(3)
  set isSurfacePainted($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsSurfacePainted() => $_has(1);
  @$pb.TagNumber(3)
  void clearIsSurfacePainted() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/cupertino/form_row.dart
class CupertinoFormRow extends $pb.GeneratedMessage {
  factory CupertinoFormRow({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    WidgetExpression? prefix,
    WidgetExpression? helper,
    WidgetExpression? error,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (prefix != null) {
      $result.prefix = prefix;
    }
    if (helper != null) {
      $result.helper = helper;
    }
    if (error != null) {
      $result.error = error;
    }
    return $result;
  }
  CupertinoFormRow._() : super();
  factory CupertinoFormRow.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoFormRow.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoFormRow', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'prefix', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'helper', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'error', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoFormRow clone() => CupertinoFormRow()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoFormRow copyWith(void Function(CupertinoFormRow) updates) => super.copyWith((message) => updates(message as CupertinoFormRow)) as CupertinoFormRow;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoFormRow create() => CupertinoFormRow._();
  CupertinoFormRow createEmptyInstance() => create();
  static $pb.PbList<CupertinoFormRow> createRepeated() => $pb.PbList<CupertinoFormRow>();
  @$core.pragma('dart2js:noInline')
  static CupertinoFormRow getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoFormRow>(create);
  static CupertinoFormRow? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get prefix => $_getN(2);
  @$pb.TagNumber(4)
  set prefix(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasPrefix() => $_has(2);
  @$pb.TagNumber(4)
  void clearPrefix() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensurePrefix() => $_ensure(2);

  @$pb.TagNumber(6)
  WidgetExpression get helper => $_getN(3);
  @$pb.TagNumber(6)
  set helper(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasHelper() => $_has(3);
  @$pb.TagNumber(6)
  void clearHelper() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureHelper() => $_ensure(3);

  @$pb.TagNumber(7)
  WidgetExpression get error => $_getN(4);
  @$pb.TagNumber(7)
  set error(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasError() => $_has(4);
  @$pb.TagNumber(7)
  void clearError() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureError() => $_ensure(4);
}

/// package:flutter/src/cupertino/form_section.dart
class CupertinoFormSection extends $pb.GeneratedMessage {
  factory CupertinoFormSection({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? header,
    WidgetExpression? footer,
    $1.DartColorExpression? backgroundColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (header != null) {
      $result.header = header;
    }
    if (footer != null) {
      $result.footer = footer;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    return $result;
  }
  CupertinoFormSection._() : super();
  factory CupertinoFormSection.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoFormSection.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoFormSection', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'header', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'footer', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoFormSection clone() => CupertinoFormSection()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoFormSection copyWith(void Function(CupertinoFormSection) updates) => super.copyWith((message) => updates(message as CupertinoFormSection)) as CupertinoFormSection;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoFormSection create() => CupertinoFormSection._();
  CupertinoFormSection createEmptyInstance() => create();
  static $pb.PbList<CupertinoFormSection> createRepeated() => $pb.PbList<CupertinoFormSection>();
  @$core.pragma('dart2js:noInline')
  static CupertinoFormSection getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoFormSection>(create);
  static CupertinoFormSection? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get header => $_getN(2);
  @$pb.TagNumber(4)
  set header(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeader() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeader() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureHeader() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get footer => $_getN(3);
  @$pb.TagNumber(5)
  set footer(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFooter() => $_has(3);
  @$pb.TagNumber(5)
  void clearFooter() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureFooter() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(7)
  set backgroundColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearBackgroundColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);
}

/// package:flutter/src/cupertino/form_section.dart
class CupertinoFormSectionNamedInsetGrouped extends $pb.GeneratedMessage {
  factory CupertinoFormSectionNamedInsetGrouped({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? header,
    WidgetExpression? footer,
    $1.DartColorExpression? backgroundColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (header != null) {
      $result.header = header;
    }
    if (footer != null) {
      $result.footer = footer;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    return $result;
  }
  CupertinoFormSectionNamedInsetGrouped._() : super();
  factory CupertinoFormSectionNamedInsetGrouped.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoFormSectionNamedInsetGrouped.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoFormSectionNamedInsetGrouped', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'header', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'footer', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoFormSectionNamedInsetGrouped clone() => CupertinoFormSectionNamedInsetGrouped()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoFormSectionNamedInsetGrouped copyWith(void Function(CupertinoFormSectionNamedInsetGrouped) updates) => super.copyWith((message) => updates(message as CupertinoFormSectionNamedInsetGrouped)) as CupertinoFormSectionNamedInsetGrouped;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoFormSectionNamedInsetGrouped create() => CupertinoFormSectionNamedInsetGrouped._();
  CupertinoFormSectionNamedInsetGrouped createEmptyInstance() => create();
  static $pb.PbList<CupertinoFormSectionNamedInsetGrouped> createRepeated() => $pb.PbList<CupertinoFormSectionNamedInsetGrouped>();
  @$core.pragma('dart2js:noInline')
  static CupertinoFormSectionNamedInsetGrouped getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoFormSectionNamedInsetGrouped>(create);
  static CupertinoFormSectionNamedInsetGrouped? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get header => $_getN(2);
  @$pb.TagNumber(4)
  set header(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeader() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeader() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureHeader() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get footer => $_getN(3);
  @$pb.TagNumber(5)
  set footer(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFooter() => $_has(3);
  @$pb.TagNumber(5)
  void clearFooter() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureFooter() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(7)
  set backgroundColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearBackgroundColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);
}

/// package:flutter/src/cupertino/list_section.dart
class CupertinoListSection extends $pb.GeneratedMessage {
  factory CupertinoListSection({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? header,
    WidgetExpression? footer,
    $1.DartColorExpression? backgroundColor,
    $core.double? dividerMargin,
    $core.double? additionalDividerMargin,
    $core.double? topMargin,
    $core.bool? hasLeading,
    $1.DartColorExpression? separatorColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (header != null) {
      $result.header = header;
    }
    if (footer != null) {
      $result.footer = footer;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (dividerMargin != null) {
      $result.dividerMargin = dividerMargin;
    }
    if (additionalDividerMargin != null) {
      $result.additionalDividerMargin = additionalDividerMargin;
    }
    if (topMargin != null) {
      $result.topMargin = topMargin;
    }
    if (hasLeading != null) {
      $result.hasLeading = hasLeading;
    }
    if (separatorColor != null) {
      $result.separatorColor = separatorColor;
    }
    return $result;
  }
  CupertinoListSection._() : super();
  factory CupertinoListSection.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoListSection.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoListSection', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'header', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'footer', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'dividerMargin', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'additionalDividerMargin', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'topMargin', $pb.PbFieldType.OD)
    ..aOB(13, _omitFieldNames ? '' : 'hasLeading')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'separatorColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoListSection clone() => CupertinoListSection()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoListSection copyWith(void Function(CupertinoListSection) updates) => super.copyWith((message) => updates(message as CupertinoListSection)) as CupertinoListSection;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoListSection create() => CupertinoListSection._();
  CupertinoListSection createEmptyInstance() => create();
  static $pb.PbList<CupertinoListSection> createRepeated() => $pb.PbList<CupertinoListSection>();
  @$core.pragma('dart2js:noInline')
  static CupertinoListSection getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoListSection>(create);
  static CupertinoListSection? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get header => $_getN(2);
  @$pb.TagNumber(4)
  set header(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeader() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeader() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureHeader() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get footer => $_getN(3);
  @$pb.TagNumber(5)
  set footer(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFooter() => $_has(3);
  @$pb.TagNumber(5)
  void clearFooter() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureFooter() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(7)
  set backgroundColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearBackgroundColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.double get dividerMargin => $_getN(5);
  @$pb.TagNumber(10)
  set dividerMargin($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasDividerMargin() => $_has(5);
  @$pb.TagNumber(10)
  void clearDividerMargin() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get additionalDividerMargin => $_getN(6);
  @$pb.TagNumber(11)
  set additionalDividerMargin($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasAdditionalDividerMargin() => $_has(6);
  @$pb.TagNumber(11)
  void clearAdditionalDividerMargin() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get topMargin => $_getN(7);
  @$pb.TagNumber(12)
  set topMargin($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTopMargin() => $_has(7);
  @$pb.TagNumber(12)
  void clearTopMargin() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get hasLeading => $_getBF(8);
  @$pb.TagNumber(13)
  set hasLeading($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(13)
  $core.bool hasHasLeading() => $_has(8);
  @$pb.TagNumber(13)
  void clearHasLeading() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get separatorColor => $_getN(9);
  @$pb.TagNumber(14)
  set separatorColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasSeparatorColor() => $_has(9);
  @$pb.TagNumber(14)
  void clearSeparatorColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureSeparatorColor() => $_ensure(9);
}

/// package:flutter/src/cupertino/list_section.dart
class CupertinoListSectionNamedInsetGrouped extends $pb.GeneratedMessage {
  factory CupertinoListSectionNamedInsetGrouped({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? header,
    WidgetExpression? footer,
    $1.DartColorExpression? backgroundColor,
    $core.double? dividerMargin,
    $core.double? additionalDividerMargin,
    $core.double? topMargin,
    $core.bool? hasLeading,
    $1.DartColorExpression? separatorColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (header != null) {
      $result.header = header;
    }
    if (footer != null) {
      $result.footer = footer;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (dividerMargin != null) {
      $result.dividerMargin = dividerMargin;
    }
    if (additionalDividerMargin != null) {
      $result.additionalDividerMargin = additionalDividerMargin;
    }
    if (topMargin != null) {
      $result.topMargin = topMargin;
    }
    if (hasLeading != null) {
      $result.hasLeading = hasLeading;
    }
    if (separatorColor != null) {
      $result.separatorColor = separatorColor;
    }
    return $result;
  }
  CupertinoListSectionNamedInsetGrouped._() : super();
  factory CupertinoListSectionNamedInsetGrouped.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoListSectionNamedInsetGrouped.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoListSectionNamedInsetGrouped', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'header', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'footer', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'dividerMargin', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'additionalDividerMargin', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'topMargin', $pb.PbFieldType.OD)
    ..aOB(13, _omitFieldNames ? '' : 'hasLeading')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'separatorColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoListSectionNamedInsetGrouped clone() => CupertinoListSectionNamedInsetGrouped()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoListSectionNamedInsetGrouped copyWith(void Function(CupertinoListSectionNamedInsetGrouped) updates) => super.copyWith((message) => updates(message as CupertinoListSectionNamedInsetGrouped)) as CupertinoListSectionNamedInsetGrouped;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoListSectionNamedInsetGrouped create() => CupertinoListSectionNamedInsetGrouped._();
  CupertinoListSectionNamedInsetGrouped createEmptyInstance() => create();
  static $pb.PbList<CupertinoListSectionNamedInsetGrouped> createRepeated() => $pb.PbList<CupertinoListSectionNamedInsetGrouped>();
  @$core.pragma('dart2js:noInline')
  static CupertinoListSectionNamedInsetGrouped getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoListSectionNamedInsetGrouped>(create);
  static CupertinoListSectionNamedInsetGrouped? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get header => $_getN(2);
  @$pb.TagNumber(4)
  set header(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeader() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeader() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureHeader() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get footer => $_getN(3);
  @$pb.TagNumber(5)
  set footer(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFooter() => $_has(3);
  @$pb.TagNumber(5)
  void clearFooter() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureFooter() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(7)
  set backgroundColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearBackgroundColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.double get dividerMargin => $_getN(5);
  @$pb.TagNumber(10)
  set dividerMargin($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasDividerMargin() => $_has(5);
  @$pb.TagNumber(10)
  void clearDividerMargin() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get additionalDividerMargin => $_getN(6);
  @$pb.TagNumber(11)
  set additionalDividerMargin($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasAdditionalDividerMargin() => $_has(6);
  @$pb.TagNumber(11)
  void clearAdditionalDividerMargin() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get topMargin => $_getN(7);
  @$pb.TagNumber(12)
  set topMargin($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTopMargin() => $_has(7);
  @$pb.TagNumber(12)
  void clearTopMargin() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get hasLeading => $_getBF(8);
  @$pb.TagNumber(13)
  set hasLeading($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(13)
  $core.bool hasHasLeading() => $_has(8);
  @$pb.TagNumber(13)
  void clearHasLeading() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get separatorColor => $_getN(9);
  @$pb.TagNumber(14)
  set separatorColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasSeparatorColor() => $_has(9);
  @$pb.TagNumber(14)
  void clearSeparatorColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureSeparatorColor() => $_ensure(9);
}

/// package:flutter/src/cupertino/list_tile.dart
class CupertinoListTile extends $pb.GeneratedMessage {
  factory CupertinoListTile({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    WidgetExpression? additionalInfo,
    WidgetExpression? leading,
    WidgetExpression? trailing,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? backgroundColorActivated,
    $core.double? leadingSize,
    $core.double? leadingToTitle,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (additionalInfo != null) {
      $result.additionalInfo = additionalInfo;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (backgroundColorActivated != null) {
      $result.backgroundColorActivated = backgroundColorActivated;
    }
    if (leadingSize != null) {
      $result.leadingSize = leadingSize;
    }
    if (leadingToTitle != null) {
      $result.leadingToTitle = leadingToTitle;
    }
    return $result;
  }
  CupertinoListTile._() : super();
  factory CupertinoListTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoListTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoListTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'additionalInfo', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'backgroundColorActivated', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'leadingSize', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'leadingToTitle', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoListTile clone() => CupertinoListTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoListTile copyWith(void Function(CupertinoListTile) updates) => super.copyWith((message) => updates(message as CupertinoListTile)) as CupertinoListTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoListTile create() => CupertinoListTile._();
  CupertinoListTile createEmptyInstance() => create();
  static $pb.PbList<CupertinoListTile> createRepeated() => $pb.PbList<CupertinoListTile>();
  @$core.pragma('dart2js:noInline')
  static CupertinoListTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoListTile>(create);
  static CupertinoListTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get subtitle => $_getN(2);
  @$pb.TagNumber(4)
  set subtitle(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSubtitle() => $_has(2);
  @$pb.TagNumber(4)
  void clearSubtitle() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSubtitle() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get additionalInfo => $_getN(3);
  @$pb.TagNumber(5)
  set additionalInfo(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAdditionalInfo() => $_has(3);
  @$pb.TagNumber(5)
  void clearAdditionalInfo() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureAdditionalInfo() => $_ensure(3);

  @$pb.TagNumber(6)
  WidgetExpression get leading => $_getN(4);
  @$pb.TagNumber(6)
  set leading(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasLeading() => $_has(4);
  @$pb.TagNumber(6)
  void clearLeading() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureLeading() => $_ensure(4);

  @$pb.TagNumber(7)
  WidgetExpression get trailing => $_getN(5);
  @$pb.TagNumber(7)
  set trailing(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasTrailing() => $_has(5);
  @$pb.TagNumber(7)
  void clearTrailing() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureTrailing() => $_ensure(5);

  @$pb.TagNumber(9)
  $1.DartColorExpression get backgroundColor => $_getN(6);
  @$pb.TagNumber(9)
  set backgroundColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasBackgroundColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearBackgroundColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(6);

  @$pb.TagNumber(10)
  $1.DartColorExpression get backgroundColorActivated => $_getN(7);
  @$pb.TagNumber(10)
  set backgroundColorActivated($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasBackgroundColorActivated() => $_has(7);
  @$pb.TagNumber(10)
  void clearBackgroundColorActivated() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureBackgroundColorActivated() => $_ensure(7);

  @$pb.TagNumber(12)
  $core.double get leadingSize => $_getN(8);
  @$pb.TagNumber(12)
  set leadingSize($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(12)
  $core.bool hasLeadingSize() => $_has(8);
  @$pb.TagNumber(12)
  void clearLeadingSize() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get leadingToTitle => $_getN(9);
  @$pb.TagNumber(13)
  set leadingToTitle($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(13)
  $core.bool hasLeadingToTitle() => $_has(9);
  @$pb.TagNumber(13)
  void clearLeadingToTitle() => clearField(13);
}

/// package:flutter/src/cupertino/list_tile.dart
class CupertinoListTileNamedNotched extends $pb.GeneratedMessage {
  factory CupertinoListTileNamedNotched({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    WidgetExpression? additionalInfo,
    WidgetExpression? leading,
    WidgetExpression? trailing,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? backgroundColorActivated,
    $core.double? leadingSize,
    $core.double? leadingToTitle,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (additionalInfo != null) {
      $result.additionalInfo = additionalInfo;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (backgroundColorActivated != null) {
      $result.backgroundColorActivated = backgroundColorActivated;
    }
    if (leadingSize != null) {
      $result.leadingSize = leadingSize;
    }
    if (leadingToTitle != null) {
      $result.leadingToTitle = leadingToTitle;
    }
    return $result;
  }
  CupertinoListTileNamedNotched._() : super();
  factory CupertinoListTileNamedNotched.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoListTileNamedNotched.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoListTileNamedNotched', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'additionalInfo', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'backgroundColorActivated', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'leadingSize', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'leadingToTitle', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoListTileNamedNotched clone() => CupertinoListTileNamedNotched()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoListTileNamedNotched copyWith(void Function(CupertinoListTileNamedNotched) updates) => super.copyWith((message) => updates(message as CupertinoListTileNamedNotched)) as CupertinoListTileNamedNotched;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoListTileNamedNotched create() => CupertinoListTileNamedNotched._();
  CupertinoListTileNamedNotched createEmptyInstance() => create();
  static $pb.PbList<CupertinoListTileNamedNotched> createRepeated() => $pb.PbList<CupertinoListTileNamedNotched>();
  @$core.pragma('dart2js:noInline')
  static CupertinoListTileNamedNotched getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoListTileNamedNotched>(create);
  static CupertinoListTileNamedNotched? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get subtitle => $_getN(2);
  @$pb.TagNumber(4)
  set subtitle(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSubtitle() => $_has(2);
  @$pb.TagNumber(4)
  void clearSubtitle() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSubtitle() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get additionalInfo => $_getN(3);
  @$pb.TagNumber(5)
  set additionalInfo(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAdditionalInfo() => $_has(3);
  @$pb.TagNumber(5)
  void clearAdditionalInfo() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureAdditionalInfo() => $_ensure(3);

  @$pb.TagNumber(6)
  WidgetExpression get leading => $_getN(4);
  @$pb.TagNumber(6)
  set leading(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasLeading() => $_has(4);
  @$pb.TagNumber(6)
  void clearLeading() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureLeading() => $_ensure(4);

  @$pb.TagNumber(7)
  WidgetExpression get trailing => $_getN(5);
  @$pb.TagNumber(7)
  set trailing(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasTrailing() => $_has(5);
  @$pb.TagNumber(7)
  void clearTrailing() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureTrailing() => $_ensure(5);

  @$pb.TagNumber(9)
  $1.DartColorExpression get backgroundColor => $_getN(6);
  @$pb.TagNumber(9)
  set backgroundColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasBackgroundColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearBackgroundColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(6);

  @$pb.TagNumber(10)
  $1.DartColorExpression get backgroundColorActivated => $_getN(7);
  @$pb.TagNumber(10)
  set backgroundColorActivated($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasBackgroundColorActivated() => $_has(7);
  @$pb.TagNumber(10)
  void clearBackgroundColorActivated() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureBackgroundColorActivated() => $_ensure(7);

  @$pb.TagNumber(12)
  $core.double get leadingSize => $_getN(8);
  @$pb.TagNumber(12)
  set leadingSize($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(12)
  $core.bool hasLeadingSize() => $_has(8);
  @$pb.TagNumber(12)
  void clearLeadingSize() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get leadingToTitle => $_getN(9);
  @$pb.TagNumber(13)
  set leadingToTitle($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(13)
  $core.bool hasLeadingToTitle() => $_has(9);
  @$pb.TagNumber(13)
  void clearLeadingToTitle() => clearField(13);
}

/// package:flutter/src/cupertino/list_tile.dart
class CupertinoListTileChevron extends $pb.GeneratedMessage {
  factory CupertinoListTileChevron({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  CupertinoListTileChevron._() : super();
  factory CupertinoListTileChevron.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoListTileChevron.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoListTileChevron', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoListTileChevron clone() => CupertinoListTileChevron()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoListTileChevron copyWith(void Function(CupertinoListTileChevron) updates) => super.copyWith((message) => updates(message as CupertinoListTileChevron)) as CupertinoListTileChevron;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoListTileChevron create() => CupertinoListTileChevron._();
  CupertinoListTileChevron createEmptyInstance() => create();
  static $pb.PbList<CupertinoListTileChevron> createRepeated() => $pb.PbList<CupertinoListTileChevron>();
  @$core.pragma('dart2js:noInline')
  static CupertinoListTileChevron getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoListTileChevron>(create);
  static CupertinoListTileChevron? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/cupertino/magnifier.dart
class CupertinoMagnifier extends $pb.GeneratedMessage {
  factory CupertinoMagnifier({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  CupertinoMagnifier._() : super();
  factory CupertinoMagnifier.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoMagnifier.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoMagnifier', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoMagnifier clone() => CupertinoMagnifier()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoMagnifier copyWith(void Function(CupertinoMagnifier) updates) => super.copyWith((message) => updates(message as CupertinoMagnifier)) as CupertinoMagnifier;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoMagnifier create() => CupertinoMagnifier._();
  CupertinoMagnifier createEmptyInstance() => create();
  static $pb.PbList<CupertinoMagnifier> createRepeated() => $pb.PbList<CupertinoMagnifier>();
  @$core.pragma('dart2js:noInline')
  static CupertinoMagnifier getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoMagnifier>(create);
  static CupertinoMagnifier? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/cupertino/nav_bar.dart
class CupertinoNavigationBar extends $pb.GeneratedMessage {
  factory CupertinoNavigationBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    $core.bool? automaticallyImplyMiddle,
    $core.String? previousPageTitle,
    WidgetExpression? middle,
    WidgetExpression? trailing,
    $1.DartColorExpression? backgroundColor,
    $core.bool? transitionBetweenRoutes,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (automaticallyImplyMiddle != null) {
      $result.automaticallyImplyMiddle = automaticallyImplyMiddle;
    }
    if (previousPageTitle != null) {
      $result.previousPageTitle = previousPageTitle;
    }
    if (middle != null) {
      $result.middle = middle;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (transitionBetweenRoutes != null) {
      $result.transitionBetweenRoutes = transitionBetweenRoutes;
    }
    return $result;
  }
  CupertinoNavigationBar._() : super();
  factory CupertinoNavigationBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoNavigationBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoNavigationBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOB(5, _omitFieldNames ? '' : 'automaticallyImplyMiddle')
    ..aOS(6, _omitFieldNames ? '' : 'previousPageTitle')
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'middle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(13, _omitFieldNames ? '' : 'transitionBetweenRoutes')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoNavigationBar clone() => CupertinoNavigationBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoNavigationBar copyWith(void Function(CupertinoNavigationBar) updates) => super.copyWith((message) => updates(message as CupertinoNavigationBar)) as CupertinoNavigationBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoNavigationBar create() => CupertinoNavigationBar._();
  CupertinoNavigationBar createEmptyInstance() => create();
  static $pb.PbList<CupertinoNavigationBar> createRepeated() => $pb.PbList<CupertinoNavigationBar>();
  @$core.pragma('dart2js:noInline')
  static CupertinoNavigationBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoNavigationBar>(create);
  static CupertinoNavigationBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get automaticallyImplyLeading => $_getBF(2);
  @$pb.TagNumber(4)
  set automaticallyImplyLeading($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAutomaticallyImplyLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearAutomaticallyImplyLeading() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get automaticallyImplyMiddle => $_getBF(3);
  @$pb.TagNumber(5)
  set automaticallyImplyMiddle($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasAutomaticallyImplyMiddle() => $_has(3);
  @$pb.TagNumber(5)
  void clearAutomaticallyImplyMiddle() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get previousPageTitle => $_getSZ(4);
  @$pb.TagNumber(6)
  set previousPageTitle($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasPreviousPageTitle() => $_has(4);
  @$pb.TagNumber(6)
  void clearPreviousPageTitle() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get middle => $_getN(5);
  @$pb.TagNumber(7)
  set middle(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasMiddle() => $_has(5);
  @$pb.TagNumber(7)
  void clearMiddle() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureMiddle() => $_ensure(5);

  @$pb.TagNumber(8)
  WidgetExpression get trailing => $_getN(6);
  @$pb.TagNumber(8)
  set trailing(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasTrailing() => $_has(6);
  @$pb.TagNumber(8)
  void clearTrailing() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureTrailing() => $_ensure(6);

  @$pb.TagNumber(10)
  $1.DartColorExpression get backgroundColor => $_getN(7);
  @$pb.TagNumber(10)
  set backgroundColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasBackgroundColor() => $_has(7);
  @$pb.TagNumber(10)
  void clearBackgroundColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $core.bool get transitionBetweenRoutes => $_getBF(8);
  @$pb.TagNumber(13)
  set transitionBetweenRoutes($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(13)
  $core.bool hasTransitionBetweenRoutes() => $_has(8);
  @$pb.TagNumber(13)
  void clearTransitionBetweenRoutes() => clearField(13);
}

/// package:flutter/src/cupertino/nav_bar.dart
class CupertinoNavigationBarBackButton extends $pb.GeneratedMessage {
  factory CupertinoNavigationBarBackButton({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.String? previousPageTitle,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (previousPageTitle != null) {
      $result.previousPageTitle = previousPageTitle;
    }
    return $result;
  }
  CupertinoNavigationBarBackButton._() : super();
  factory CupertinoNavigationBarBackButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoNavigationBarBackButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoNavigationBarBackButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'previousPageTitle')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoNavigationBarBackButton clone() => CupertinoNavigationBarBackButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoNavigationBarBackButton copyWith(void Function(CupertinoNavigationBarBackButton) updates) => super.copyWith((message) => updates(message as CupertinoNavigationBarBackButton)) as CupertinoNavigationBarBackButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoNavigationBarBackButton create() => CupertinoNavigationBarBackButton._();
  CupertinoNavigationBarBackButton createEmptyInstance() => create();
  static $pb.PbList<CupertinoNavigationBarBackButton> createRepeated() => $pb.PbList<CupertinoNavigationBarBackButton>();
  @$core.pragma('dart2js:noInline')
  static CupertinoNavigationBarBackButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoNavigationBarBackButton>(create);
  static CupertinoNavigationBarBackButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.String get previousPageTitle => $_getSZ(2);
  @$pb.TagNumber(4)
  set previousPageTitle($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasPreviousPageTitle() => $_has(2);
  @$pb.TagNumber(4)
  void clearPreviousPageTitle() => clearField(4);
}

/// package:flutter/src/cupertino/nav_bar.dart
class CupertinoSliverNavigationBar extends $pb.GeneratedMessage {
  factory CupertinoSliverNavigationBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? largeTitle,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    $core.bool? automaticallyImplyTitle,
    $core.bool? alwaysShowMiddle,
    $core.String? previousPageTitle,
    WidgetExpression? middle,
    WidgetExpression? trailing,
    $1.DartColorExpression? backgroundColor,
    $core.bool? transitionBetweenRoutes,
    $core.bool? stretch,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (largeTitle != null) {
      $result.largeTitle = largeTitle;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (automaticallyImplyTitle != null) {
      $result.automaticallyImplyTitle = automaticallyImplyTitle;
    }
    if (alwaysShowMiddle != null) {
      $result.alwaysShowMiddle = alwaysShowMiddle;
    }
    if (previousPageTitle != null) {
      $result.previousPageTitle = previousPageTitle;
    }
    if (middle != null) {
      $result.middle = middle;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (transitionBetweenRoutes != null) {
      $result.transitionBetweenRoutes = transitionBetweenRoutes;
    }
    if (stretch != null) {
      $result.stretch = stretch;
    }
    return $result;
  }
  CupertinoSliverNavigationBar._() : super();
  factory CupertinoSliverNavigationBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoSliverNavigationBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoSliverNavigationBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'largeTitle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOB(6, _omitFieldNames ? '' : 'automaticallyImplyTitle')
    ..aOB(7, _omitFieldNames ? '' : 'alwaysShowMiddle')
    ..aOS(8, _omitFieldNames ? '' : 'previousPageTitle')
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'middle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(15, _omitFieldNames ? '' : 'transitionBetweenRoutes')
    ..aOB(17, _omitFieldNames ? '' : 'stretch')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoSliverNavigationBar clone() => CupertinoSliverNavigationBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoSliverNavigationBar copyWith(void Function(CupertinoSliverNavigationBar) updates) => super.copyWith((message) => updates(message as CupertinoSliverNavigationBar)) as CupertinoSliverNavigationBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoSliverNavigationBar create() => CupertinoSliverNavigationBar._();
  CupertinoSliverNavigationBar createEmptyInstance() => create();
  static $pb.PbList<CupertinoSliverNavigationBar> createRepeated() => $pb.PbList<CupertinoSliverNavigationBar>();
  @$core.pragma('dart2js:noInline')
  static CupertinoSliverNavigationBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoSliverNavigationBar>(create);
  static CupertinoSliverNavigationBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get largeTitle => $_getN(1);
  @$pb.TagNumber(3)
  set largeTitle(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLargeTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearLargeTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLargeTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get leading => $_getN(2);
  @$pb.TagNumber(4)
  set leading(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearLeading() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLeading() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get automaticallyImplyLeading => $_getBF(3);
  @$pb.TagNumber(5)
  set automaticallyImplyLeading($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasAutomaticallyImplyLeading() => $_has(3);
  @$pb.TagNumber(5)
  void clearAutomaticallyImplyLeading() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get automaticallyImplyTitle => $_getBF(4);
  @$pb.TagNumber(6)
  set automaticallyImplyTitle($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasAutomaticallyImplyTitle() => $_has(4);
  @$pb.TagNumber(6)
  void clearAutomaticallyImplyTitle() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get alwaysShowMiddle => $_getBF(5);
  @$pb.TagNumber(7)
  set alwaysShowMiddle($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasAlwaysShowMiddle() => $_has(5);
  @$pb.TagNumber(7)
  void clearAlwaysShowMiddle() => clearField(7);

  @$pb.TagNumber(8)
  $core.String get previousPageTitle => $_getSZ(6);
  @$pb.TagNumber(8)
  set previousPageTitle($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasPreviousPageTitle() => $_has(6);
  @$pb.TagNumber(8)
  void clearPreviousPageTitle() => clearField(8);

  @$pb.TagNumber(9)
  WidgetExpression get middle => $_getN(7);
  @$pb.TagNumber(9)
  set middle(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasMiddle() => $_has(7);
  @$pb.TagNumber(9)
  void clearMiddle() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureMiddle() => $_ensure(7);

  @$pb.TagNumber(10)
  WidgetExpression get trailing => $_getN(8);
  @$pb.TagNumber(10)
  set trailing(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasTrailing() => $_has(8);
  @$pb.TagNumber(10)
  void clearTrailing() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureTrailing() => $_ensure(8);

  @$pb.TagNumber(12)
  $1.DartColorExpression get backgroundColor => $_getN(9);
  @$pb.TagNumber(12)
  set backgroundColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasBackgroundColor() => $_has(9);
  @$pb.TagNumber(12)
  void clearBackgroundColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(15)
  $core.bool get transitionBetweenRoutes => $_getBF(10);
  @$pb.TagNumber(15)
  set transitionBetweenRoutes($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(15)
  $core.bool hasTransitionBetweenRoutes() => $_has(10);
  @$pb.TagNumber(15)
  void clearTransitionBetweenRoutes() => clearField(15);

  @$pb.TagNumber(17)
  $core.bool get stretch => $_getBF(11);
  @$pb.TagNumber(17)
  set stretch($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(17)
  $core.bool hasStretch() => $_has(11);
  @$pb.TagNumber(17)
  void clearStretch() => clearField(17);
}

/// package:flutter/src/cupertino/page_scaffold.dart
class CupertinoPageScaffold extends $pb.GeneratedMessage {
  factory CupertinoPageScaffold({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $core.bool? resizeToAvoidBottomInset,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (resizeToAvoidBottomInset != null) {
      $result.resizeToAvoidBottomInset = resizeToAvoidBottomInset;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  CupertinoPageScaffold._() : super();
  factory CupertinoPageScaffold.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoPageScaffold.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoPageScaffold', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'resizeToAvoidBottomInset')
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoPageScaffold clone() => CupertinoPageScaffold()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoPageScaffold copyWith(void Function(CupertinoPageScaffold) updates) => super.copyWith((message) => updates(message as CupertinoPageScaffold)) as CupertinoPageScaffold;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoPageScaffold create() => CupertinoPageScaffold._();
  CupertinoPageScaffold createEmptyInstance() => create();
  static $pb.PbList<CupertinoPageScaffold> createRepeated() => $pb.PbList<CupertinoPageScaffold>();
  @$core.pragma('dart2js:noInline')
  static CupertinoPageScaffold getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoPageScaffold>(create);
  static CupertinoPageScaffold? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.bool get resizeToAvoidBottomInset => $_getBF(2);
  @$pb.TagNumber(5)
  set resizeToAvoidBottomInset($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasResizeToAvoidBottomInset() => $_has(2);
  @$pb.TagNumber(5)
  void clearResizeToAvoidBottomInset() => clearField(5);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/cupertino/picker.dart
class CupertinoPicker extends $pb.GeneratedMessage {
  factory CupertinoPicker({
    $1.FlutterKeyExpression? key,
    $core.double? diameterRatio,
    $1.DartColorExpression? backgroundColor,
    $core.double? offAxisFraction,
    $core.bool? useMagnifier,
    $core.double? magnification,
    $core.double? squeeze,
    $core.double? itemExtent,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? selectionOverlay,
    $core.bool? looping,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (diameterRatio != null) {
      $result.diameterRatio = diameterRatio;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (offAxisFraction != null) {
      $result.offAxisFraction = offAxisFraction;
    }
    if (useMagnifier != null) {
      $result.useMagnifier = useMagnifier;
    }
    if (magnification != null) {
      $result.magnification = magnification;
    }
    if (squeeze != null) {
      $result.squeeze = squeeze;
    }
    if (itemExtent != null) {
      $result.itemExtent = itemExtent;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (selectionOverlay != null) {
      $result.selectionOverlay = selectionOverlay;
    }
    if (looping != null) {
      $result.looping = looping;
    }
    return $result;
  }
  CupertinoPicker._() : super();
  factory CupertinoPicker.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoPicker.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoPicker', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'diameterRatio', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'offAxisFraction', $pb.PbFieldType.OD)
    ..aOB(6, _omitFieldNames ? '' : 'useMagnifier')
    ..a<$core.double>(7, _omitFieldNames ? '' : 'magnification', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'squeeze', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'itemExtent', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(12, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'selectionOverlay', subBuilder: WidgetExpression.create)
    ..aOB(14, _omitFieldNames ? '' : 'looping')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoPicker clone() => CupertinoPicker()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoPicker copyWith(void Function(CupertinoPicker) updates) => super.copyWith((message) => updates(message as CupertinoPicker)) as CupertinoPicker;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoPicker create() => CupertinoPicker._();
  CupertinoPicker createEmptyInstance() => create();
  static $pb.PbList<CupertinoPicker> createRepeated() => $pb.PbList<CupertinoPicker>();
  @$core.pragma('dart2js:noInline')
  static CupertinoPicker getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoPicker>(create);
  static CupertinoPicker? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get diameterRatio => $_getN(1);
  @$pb.TagNumber(3)
  set diameterRatio($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasDiameterRatio() => $_has(1);
  @$pb.TagNumber(3)
  void clearDiameterRatio() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.double get offAxisFraction => $_getN(3);
  @$pb.TagNumber(5)
  set offAxisFraction($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasOffAxisFraction() => $_has(3);
  @$pb.TagNumber(5)
  void clearOffAxisFraction() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get useMagnifier => $_getBF(4);
  @$pb.TagNumber(6)
  set useMagnifier($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasUseMagnifier() => $_has(4);
  @$pb.TagNumber(6)
  void clearUseMagnifier() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get magnification => $_getN(5);
  @$pb.TagNumber(7)
  set magnification($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasMagnification() => $_has(5);
  @$pb.TagNumber(7)
  void clearMagnification() => clearField(7);

  @$pb.TagNumber(9)
  $core.double get squeeze => $_getN(6);
  @$pb.TagNumber(9)
  set squeeze($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasSqueeze() => $_has(6);
  @$pb.TagNumber(9)
  void clearSqueeze() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get itemExtent => $_getN(7);
  @$pb.TagNumber(10)
  set itemExtent($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasItemExtent() => $_has(7);
  @$pb.TagNumber(10)
  void clearItemExtent() => clearField(10);

  @$pb.TagNumber(12)
  $core.List<WidgetExpression> get children => $_getList(8);

  @$pb.TagNumber(13)
  WidgetExpression get selectionOverlay => $_getN(9);
  @$pb.TagNumber(13)
  set selectionOverlay(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasSelectionOverlay() => $_has(9);
  @$pb.TagNumber(13)
  void clearSelectionOverlay() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureSelectionOverlay() => $_ensure(9);

  @$pb.TagNumber(14)
  $core.bool get looping => $_getBF(10);
  @$pb.TagNumber(14)
  set looping($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(14)
  $core.bool hasLooping() => $_has(10);
  @$pb.TagNumber(14)
  void clearLooping() => clearField(14);
}

/// package:flutter/src/cupertino/picker.dart
class CupertinoPickerDefaultSelectionOverlay extends $pb.GeneratedMessage {
  factory CupertinoPickerDefaultSelectionOverlay({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? background,
    $core.bool? capStartEdge,
    $core.bool? capEndEdge,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (background != null) {
      $result.background = background;
    }
    if (capStartEdge != null) {
      $result.capStartEdge = capStartEdge;
    }
    if (capEndEdge != null) {
      $result.capEndEdge = capEndEdge;
    }
    return $result;
  }
  CupertinoPickerDefaultSelectionOverlay._() : super();
  factory CupertinoPickerDefaultSelectionOverlay.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoPickerDefaultSelectionOverlay.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoPickerDefaultSelectionOverlay', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'background', subBuilder: $1.DartColorExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'capStartEdge')
    ..aOB(5, _omitFieldNames ? '' : 'capEndEdge')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoPickerDefaultSelectionOverlay clone() => CupertinoPickerDefaultSelectionOverlay()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoPickerDefaultSelectionOverlay copyWith(void Function(CupertinoPickerDefaultSelectionOverlay) updates) => super.copyWith((message) => updates(message as CupertinoPickerDefaultSelectionOverlay)) as CupertinoPickerDefaultSelectionOverlay;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoPickerDefaultSelectionOverlay create() => CupertinoPickerDefaultSelectionOverlay._();
  CupertinoPickerDefaultSelectionOverlay createEmptyInstance() => create();
  static $pb.PbList<CupertinoPickerDefaultSelectionOverlay> createRepeated() => $pb.PbList<CupertinoPickerDefaultSelectionOverlay>();
  @$core.pragma('dart2js:noInline')
  static CupertinoPickerDefaultSelectionOverlay getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoPickerDefaultSelectionOverlay>(create);
  static CupertinoPickerDefaultSelectionOverlay? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get background => $_getN(1);
  @$pb.TagNumber(3)
  set background($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackground() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackground() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackground() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get capStartEdge => $_getBF(2);
  @$pb.TagNumber(4)
  set capStartEdge($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasCapStartEdge() => $_has(2);
  @$pb.TagNumber(4)
  void clearCapStartEdge() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get capEndEdge => $_getBF(3);
  @$pb.TagNumber(5)
  set capEndEdge($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCapEndEdge() => $_has(3);
  @$pb.TagNumber(5)
  void clearCapEndEdge() => clearField(5);
}

/// package:flutter/src/cupertino/refresh.dart
class CupertinoSliverRefreshControl extends $pb.GeneratedMessage {
  factory CupertinoSliverRefreshControl({
    $1.FlutterKeyExpression? key,
    $core.double? refreshTriggerPullDistance,
    $core.double? refreshIndicatorExtent,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (refreshTriggerPullDistance != null) {
      $result.refreshTriggerPullDistance = refreshTriggerPullDistance;
    }
    if (refreshIndicatorExtent != null) {
      $result.refreshIndicatorExtent = refreshIndicatorExtent;
    }
    return $result;
  }
  CupertinoSliverRefreshControl._() : super();
  factory CupertinoSliverRefreshControl.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoSliverRefreshControl.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoSliverRefreshControl', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'refreshTriggerPullDistance', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'refreshIndicatorExtent', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoSliverRefreshControl clone() => CupertinoSliverRefreshControl()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoSliverRefreshControl copyWith(void Function(CupertinoSliverRefreshControl) updates) => super.copyWith((message) => updates(message as CupertinoSliverRefreshControl)) as CupertinoSliverRefreshControl;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoSliverRefreshControl create() => CupertinoSliverRefreshControl._();
  CupertinoSliverRefreshControl createEmptyInstance() => create();
  static $pb.PbList<CupertinoSliverRefreshControl> createRepeated() => $pb.PbList<CupertinoSliverRefreshControl>();
  @$core.pragma('dart2js:noInline')
  static CupertinoSliverRefreshControl getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoSliverRefreshControl>(create);
  static CupertinoSliverRefreshControl? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get refreshTriggerPullDistance => $_getN(1);
  @$pb.TagNumber(3)
  set refreshTriggerPullDistance($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasRefreshTriggerPullDistance() => $_has(1);
  @$pb.TagNumber(3)
  void clearRefreshTriggerPullDistance() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get refreshIndicatorExtent => $_getN(2);
  @$pb.TagNumber(4)
  set refreshIndicatorExtent($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasRefreshIndicatorExtent() => $_has(2);
  @$pb.TagNumber(4)
  void clearRefreshIndicatorExtent() => clearField(4);
}

/// package:flutter/src/cupertino/scrollbar.dart
class CupertinoScrollbar extends $pb.GeneratedMessage {
  factory CupertinoScrollbar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? thumbVisibility,
    $core.double? thickness,
    $core.double? thicknessWhileDragging,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (thumbVisibility != null) {
      $result.thumbVisibility = thumbVisibility;
    }
    if (thickness != null) {
      $result.thickness = thickness;
    }
    if (thicknessWhileDragging != null) {
      $result.thicknessWhileDragging = thicknessWhileDragging;
    }
    return $result;
  }
  CupertinoScrollbar._() : super();
  factory CupertinoScrollbar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoScrollbar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoScrollbar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'thumbVisibility')
    ..a<$core.double>(6, _omitFieldNames ? '' : 'thickness', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'thicknessWhileDragging', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoScrollbar clone() => CupertinoScrollbar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoScrollbar copyWith(void Function(CupertinoScrollbar) updates) => super.copyWith((message) => updates(message as CupertinoScrollbar)) as CupertinoScrollbar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoScrollbar create() => CupertinoScrollbar._();
  CupertinoScrollbar createEmptyInstance() => create();
  static $pb.PbList<CupertinoScrollbar> createRepeated() => $pb.PbList<CupertinoScrollbar>();
  @$core.pragma('dart2js:noInline')
  static CupertinoScrollbar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoScrollbar>(create);
  static CupertinoScrollbar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.bool get thumbVisibility => $_getBF(2);
  @$pb.TagNumber(5)
  set thumbVisibility($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasThumbVisibility() => $_has(2);
  @$pb.TagNumber(5)
  void clearThumbVisibility() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get thickness => $_getN(3);
  @$pb.TagNumber(6)
  set thickness($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasThickness() => $_has(3);
  @$pb.TagNumber(6)
  void clearThickness() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get thicknessWhileDragging => $_getN(4);
  @$pb.TagNumber(7)
  set thicknessWhileDragging($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasThicknessWhileDragging() => $_has(4);
  @$pb.TagNumber(7)
  void clearThicknessWhileDragging() => clearField(7);
}

/// package:flutter/src/cupertino/search_field.dart
class CupertinoSearchTextField extends $pb.GeneratedMessage {
  factory CupertinoSearchTextField({
    $1.FlutterKeyExpression? key,
    $core.String? placeholder,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? itemColor,
    $core.double? itemSize,
    WidgetExpression? prefixIcon,
    $core.String? restorationId,
    $core.bool? enableIMEPersonalizedLearning,
    $core.bool? autofocus,
    $core.bool? autocorrect,
    $core.bool? enabled,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (placeholder != null) {
      $result.placeholder = placeholder;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (itemColor != null) {
      $result.itemColor = itemColor;
    }
    if (itemSize != null) {
      $result.itemSize = itemSize;
    }
    if (prefixIcon != null) {
      $result.prefixIcon = prefixIcon;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (enableIMEPersonalizedLearning != null) {
      $result.enableIMEPersonalizedLearning = enableIMEPersonalizedLearning;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    return $result;
  }
  CupertinoSearchTextField._() : super();
  factory CupertinoSearchTextField.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoSearchTextField.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoSearchTextField', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(7, _omitFieldNames ? '' : 'placeholder')
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'itemColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'itemSize', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(17, _omitFieldNames ? '' : 'prefixIcon', subBuilder: WidgetExpression.create)
    ..aOS(22, _omitFieldNames ? '' : 'restorationId')
    ..aOB(26, _omitFieldNames ? '' : 'enableIMEPersonalizedLearning')
    ..aOB(27, _omitFieldNames ? '' : 'autofocus')
    ..aOB(29, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(30, _omitFieldNames ? '' : 'enabled')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoSearchTextField clone() => CupertinoSearchTextField()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoSearchTextField copyWith(void Function(CupertinoSearchTextField) updates) => super.copyWith((message) => updates(message as CupertinoSearchTextField)) as CupertinoSearchTextField;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoSearchTextField create() => CupertinoSearchTextField._();
  CupertinoSearchTextField createEmptyInstance() => create();
  static $pb.PbList<CupertinoSearchTextField> createRepeated() => $pb.PbList<CupertinoSearchTextField>();
  @$core.pragma('dart2js:noInline')
  static CupertinoSearchTextField getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoSearchTextField>(create);
  static CupertinoSearchTextField? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(7)
  $core.String get placeholder => $_getSZ(1);
  @$pb.TagNumber(7)
  set placeholder($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(7)
  $core.bool hasPlaceholder() => $_has(1);
  @$pb.TagNumber(7)
  void clearPlaceholder() => clearField(7);

  @$pb.TagNumber(10)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(10)
  set backgroundColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(10)
  void clearBackgroundColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(14)
  $1.DartColorExpression get itemColor => $_getN(3);
  @$pb.TagNumber(14)
  set itemColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasItemColor() => $_has(3);
  @$pb.TagNumber(14)
  void clearItemColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureItemColor() => $_ensure(3);

  @$pb.TagNumber(15)
  $core.double get itemSize => $_getN(4);
  @$pb.TagNumber(15)
  set itemSize($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(15)
  $core.bool hasItemSize() => $_has(4);
  @$pb.TagNumber(15)
  void clearItemSize() => clearField(15);

  @$pb.TagNumber(17)
  WidgetExpression get prefixIcon => $_getN(5);
  @$pb.TagNumber(17)
  set prefixIcon(WidgetExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasPrefixIcon() => $_has(5);
  @$pb.TagNumber(17)
  void clearPrefixIcon() => clearField(17);
  @$pb.TagNumber(17)
  WidgetExpression ensurePrefixIcon() => $_ensure(5);

  @$pb.TagNumber(22)
  $core.String get restorationId => $_getSZ(6);
  @$pb.TagNumber(22)
  set restorationId($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(22)
  $core.bool hasRestorationId() => $_has(6);
  @$pb.TagNumber(22)
  void clearRestorationId() => clearField(22);

  @$pb.TagNumber(26)
  $core.bool get enableIMEPersonalizedLearning => $_getBF(7);
  @$pb.TagNumber(26)
  set enableIMEPersonalizedLearning($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(26)
  $core.bool hasEnableIMEPersonalizedLearning() => $_has(7);
  @$pb.TagNumber(26)
  void clearEnableIMEPersonalizedLearning() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(27)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(27)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(27)
  void clearAutofocus() => clearField(27);

  @$pb.TagNumber(29)
  $core.bool get autocorrect => $_getBF(9);
  @$pb.TagNumber(29)
  set autocorrect($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(29)
  $core.bool hasAutocorrect() => $_has(9);
  @$pb.TagNumber(29)
  void clearAutocorrect() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get enabled => $_getBF(10);
  @$pb.TagNumber(30)
  set enabled($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(30)
  $core.bool hasEnabled() => $_has(10);
  @$pb.TagNumber(30)
  void clearEnabled() => clearField(30);
}

/// package:flutter/src/cupertino/slider.dart
class CupertinoSlider extends $pb.GeneratedMessage {
  factory CupertinoSlider({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $core.double? min,
    $core.double? max,
    $core.int? divisions,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? thumbColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (min != null) {
      $result.min = min;
    }
    if (max != null) {
      $result.max = max;
    }
    if (divisions != null) {
      $result.divisions = divisions;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (thumbColor != null) {
      $result.thumbColor = thumbColor;
    }
    return $result;
  }
  CupertinoSlider._() : super();
  factory CupertinoSlider.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoSlider.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoSlider', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'min', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'max', $pb.PbFieldType.OD)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'divisions', $pb.PbFieldType.O3)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'thumbColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoSlider clone() => CupertinoSlider()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoSlider copyWith(void Function(CupertinoSlider) updates) => super.copyWith((message) => updates(message as CupertinoSlider)) as CupertinoSlider;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoSlider create() => CupertinoSlider._();
  CupertinoSlider createEmptyInstance() => create();
  static $pb.PbList<CupertinoSlider> createRepeated() => $pb.PbList<CupertinoSlider>();
  @$core.pragma('dart2js:noInline')
  static CupertinoSlider getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoSlider>(create);
  static CupertinoSlider? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(7)
  $core.double get min => $_getN(2);
  @$pb.TagNumber(7)
  set min($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasMin() => $_has(2);
  @$pb.TagNumber(7)
  void clearMin() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get max => $_getN(3);
  @$pb.TagNumber(8)
  set max($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasMax() => $_has(3);
  @$pb.TagNumber(8)
  void clearMax() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get divisions => $_getIZ(4);
  @$pb.TagNumber(9)
  set divisions($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasDivisions() => $_has(4);
  @$pb.TagNumber(9)
  void clearDivisions() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get activeColor => $_getN(5);
  @$pb.TagNumber(10)
  set activeColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasActiveColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearActiveColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureActiveColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get thumbColor => $_getN(6);
  @$pb.TagNumber(11)
  set thumbColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasThumbColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearThumbColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureThumbColor() => $_ensure(6);
}

/// package:flutter/src/cupertino/switch.dart
class CupertinoSwitch extends $pb.GeneratedMessage {
  factory CupertinoSwitch({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? trackColor,
    $1.DartColorExpression? thumbColor,
    $core.bool? applyTheme,
    $1.DartColorExpression? focusColor,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (trackColor != null) {
      $result.trackColor = trackColor;
    }
    if (thumbColor != null) {
      $result.thumbColor = thumbColor;
    }
    if (applyTheme != null) {
      $result.applyTheme = applyTheme;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  CupertinoSwitch._() : super();
  factory CupertinoSwitch.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoSwitch.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoSwitch', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'trackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'thumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'applyTheme')
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(12, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoSwitch clone() => CupertinoSwitch()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoSwitch copyWith(void Function(CupertinoSwitch) updates) => super.copyWith((message) => updates(message as CupertinoSwitch)) as CupertinoSwitch;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoSwitch create() => CupertinoSwitch._();
  CupertinoSwitch createEmptyInstance() => create();
  static $pb.PbList<CupertinoSwitch> createRepeated() => $pb.PbList<CupertinoSwitch>();
  @$core.pragma('dart2js:noInline')
  static CupertinoSwitch getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoSwitch>(create);
  static CupertinoSwitch? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(5)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(5)
  set activeColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearActiveColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get trackColor => $_getN(3);
  @$pb.TagNumber(6)
  set trackColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasTrackColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearTrackColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureTrackColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get thumbColor => $_getN(4);
  @$pb.TagNumber(7)
  set thumbColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasThumbColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearThumbColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureThumbColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $core.bool get applyTheme => $_getBF(5);
  @$pb.TagNumber(8)
  set applyTheme($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasApplyTheme() => $_has(5);
  @$pb.TagNumber(8)
  void clearApplyTheme() => clearField(8);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(6);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.bool get autofocus => $_getBF(7);
  @$pb.TagNumber(12)
  set autofocus($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasAutofocus() => $_has(7);
  @$pb.TagNumber(12)
  void clearAutofocus() => clearField(12);
}

/// package:flutter/src/cupertino/tab_view.dart
class CupertinoTabView extends $pb.GeneratedMessage {
  factory CupertinoTabView({
    $1.FlutterKeyExpression? key,
    $core.String? defaultTitle,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (defaultTitle != null) {
      $result.defaultTitle = defaultTitle;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  CupertinoTabView._() : super();
  factory CupertinoTabView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTabView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTabView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(5, _omitFieldNames ? '' : 'defaultTitle')
    ..aOS(10, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTabView clone() => CupertinoTabView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTabView copyWith(void Function(CupertinoTabView) updates) => super.copyWith((message) => updates(message as CupertinoTabView)) as CupertinoTabView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTabView create() => CupertinoTabView._();
  CupertinoTabView createEmptyInstance() => create();
  static $pb.PbList<CupertinoTabView> createRepeated() => $pb.PbList<CupertinoTabView>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTabView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTabView>(create);
  static CupertinoTabView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.String get defaultTitle => $_getSZ(1);
  @$pb.TagNumber(5)
  set defaultTitle($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasDefaultTitle() => $_has(1);
  @$pb.TagNumber(5)
  void clearDefaultTitle() => clearField(5);

  @$pb.TagNumber(10)
  $core.String get restorationScopeId => $_getSZ(2);
  @$pb.TagNumber(10)
  set restorationScopeId($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(10)
  $core.bool hasRestorationScopeId() => $_has(2);
  @$pb.TagNumber(10)
  void clearRestorationScopeId() => clearField(10);
}

/// package:flutter/src/cupertino/text_field.dart
class CupertinoTextField extends $pb.GeneratedMessage {
  factory CupertinoTextField({
    $1.FlutterKeyExpression? key,
    $core.String? placeholder,
    WidgetExpression? prefix,
    WidgetExpression? suffix,
    $core.bool? readOnly,
    $core.bool? showCursor,
    $core.bool? autofocus,
    $core.String? obscuringCharacter,
    $core.bool? obscureText,
    $core.bool? autocorrect,
    $core.bool? enableSuggestions,
    $core.int? maxLines,
    $core.int? minLines,
    $core.bool? expands,
    $core.int? maxLength,
    $core.bool? enabled,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $core.bool? cursorOpacityAnimates,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.Iterable<$core.String>? autofillHints,
    $core.String? restorationId,
    $core.bool? scribbleEnabled,
    $core.bool? enableIMEPersonalizedLearning,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (placeholder != null) {
      $result.placeholder = placeholder;
    }
    if (prefix != null) {
      $result.prefix = prefix;
    }
    if (suffix != null) {
      $result.suffix = suffix;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (obscuringCharacter != null) {
      $result.obscuringCharacter = obscuringCharacter;
    }
    if (obscureText != null) {
      $result.obscureText = obscureText;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enableSuggestions != null) {
      $result.enableSuggestions = enableSuggestions;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (expands != null) {
      $result.expands = expands;
    }
    if (maxLength != null) {
      $result.maxLength = maxLength;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorOpacityAnimates != null) {
      $result.cursorOpacityAnimates = cursorOpacityAnimates;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (autofillHints != null) {
      $result.autofillHints.addAll(autofillHints);
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (scribbleEnabled != null) {
      $result.scribbleEnabled = scribbleEnabled;
    }
    if (enableIMEPersonalizedLearning != null) {
      $result.enableIMEPersonalizedLearning = enableIMEPersonalizedLearning;
    }
    return $result;
  }
  CupertinoTextField._() : super();
  factory CupertinoTextField.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTextField.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTextField', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(8, _omitFieldNames ? '' : 'placeholder')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'prefix', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'suffix', subBuilder: WidgetExpression.create)
    ..aOB(23, _omitFieldNames ? '' : 'readOnly')
    ..aOB(24, _omitFieldNames ? '' : 'showCursor')
    ..aOB(25, _omitFieldNames ? '' : 'autofocus')
    ..aOS(26, _omitFieldNames ? '' : 'obscuringCharacter')
    ..aOB(27, _omitFieldNames ? '' : 'obscureText')
    ..aOB(28, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(31, _omitFieldNames ? '' : 'enableSuggestions')
    ..a<$core.int>(32, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.int>(33, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..aOB(34, _omitFieldNames ? '' : 'expands')
    ..a<$core.int>(35, _omitFieldNames ? '' : 'maxLength', $pb.PbFieldType.O3)
    ..aOB(42, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(43, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(44, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOB(46, _omitFieldNames ? '' : 'cursorOpacityAnimates')
    ..aOM<$1.DartColorExpression>(47, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(53, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..pPS(58, _omitFieldNames ? '' : 'autofillHints')
    ..aOS(61, _omitFieldNames ? '' : 'restorationId')
    ..aOB(62, _omitFieldNames ? '' : 'scribbleEnabled')
    ..aOB(63, _omitFieldNames ? '' : 'enableIMEPersonalizedLearning')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTextField clone() => CupertinoTextField()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTextField copyWith(void Function(CupertinoTextField) updates) => super.copyWith((message) => updates(message as CupertinoTextField)) as CupertinoTextField;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTextField create() => CupertinoTextField._();
  CupertinoTextField createEmptyInstance() => create();
  static $pb.PbList<CupertinoTextField> createRepeated() => $pb.PbList<CupertinoTextField>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTextField getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTextField>(create);
  static CupertinoTextField? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $core.String get placeholder => $_getSZ(1);
  @$pb.TagNumber(8)
  set placeholder($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(8)
  $core.bool hasPlaceholder() => $_has(1);
  @$pb.TagNumber(8)
  void clearPlaceholder() => clearField(8);

  @$pb.TagNumber(10)
  WidgetExpression get prefix => $_getN(2);
  @$pb.TagNumber(10)
  set prefix(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasPrefix() => $_has(2);
  @$pb.TagNumber(10)
  void clearPrefix() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensurePrefix() => $_ensure(2);

  @$pb.TagNumber(12)
  WidgetExpression get suffix => $_getN(3);
  @$pb.TagNumber(12)
  set suffix(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSuffix() => $_has(3);
  @$pb.TagNumber(12)
  void clearSuffix() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureSuffix() => $_ensure(3);

  @$pb.TagNumber(23)
  $core.bool get readOnly => $_getBF(4);
  @$pb.TagNumber(23)
  set readOnly($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(23)
  $core.bool hasReadOnly() => $_has(4);
  @$pb.TagNumber(23)
  void clearReadOnly() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get showCursor => $_getBF(5);
  @$pb.TagNumber(24)
  set showCursor($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(24)
  $core.bool hasShowCursor() => $_has(5);
  @$pb.TagNumber(24)
  void clearShowCursor() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get autofocus => $_getBF(6);
  @$pb.TagNumber(25)
  set autofocus($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(25)
  $core.bool hasAutofocus() => $_has(6);
  @$pb.TagNumber(25)
  void clearAutofocus() => clearField(25);

  @$pb.TagNumber(26)
  $core.String get obscuringCharacter => $_getSZ(7);
  @$pb.TagNumber(26)
  set obscuringCharacter($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(26)
  $core.bool hasObscuringCharacter() => $_has(7);
  @$pb.TagNumber(26)
  void clearObscuringCharacter() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get obscureText => $_getBF(8);
  @$pb.TagNumber(27)
  set obscureText($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(27)
  $core.bool hasObscureText() => $_has(8);
  @$pb.TagNumber(27)
  void clearObscureText() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get autocorrect => $_getBF(9);
  @$pb.TagNumber(28)
  set autocorrect($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(28)
  $core.bool hasAutocorrect() => $_has(9);
  @$pb.TagNumber(28)
  void clearAutocorrect() => clearField(28);

  @$pb.TagNumber(31)
  $core.bool get enableSuggestions => $_getBF(10);
  @$pb.TagNumber(31)
  set enableSuggestions($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(31)
  $core.bool hasEnableSuggestions() => $_has(10);
  @$pb.TagNumber(31)
  void clearEnableSuggestions() => clearField(31);

  @$pb.TagNumber(32)
  $core.int get maxLines => $_getIZ(11);
  @$pb.TagNumber(32)
  set maxLines($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(32)
  $core.bool hasMaxLines() => $_has(11);
  @$pb.TagNumber(32)
  void clearMaxLines() => clearField(32);

  @$pb.TagNumber(33)
  $core.int get minLines => $_getIZ(12);
  @$pb.TagNumber(33)
  set minLines($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(33)
  $core.bool hasMinLines() => $_has(12);
  @$pb.TagNumber(33)
  void clearMinLines() => clearField(33);

  @$pb.TagNumber(34)
  $core.bool get expands => $_getBF(13);
  @$pb.TagNumber(34)
  set expands($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(34)
  $core.bool hasExpands() => $_has(13);
  @$pb.TagNumber(34)
  void clearExpands() => clearField(34);

  @$pb.TagNumber(35)
  $core.int get maxLength => $_getIZ(14);
  @$pb.TagNumber(35)
  set maxLength($core.int v) { $_setSignedInt32(14, v); }
  @$pb.TagNumber(35)
  $core.bool hasMaxLength() => $_has(14);
  @$pb.TagNumber(35)
  void clearMaxLength() => clearField(35);

  @$pb.TagNumber(42)
  $core.bool get enabled => $_getBF(15);
  @$pb.TagNumber(42)
  set enabled($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(42)
  $core.bool hasEnabled() => $_has(15);
  @$pb.TagNumber(42)
  void clearEnabled() => clearField(42);

  @$pb.TagNumber(43)
  $core.double get cursorWidth => $_getN(16);
  @$pb.TagNumber(43)
  set cursorWidth($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(43)
  $core.bool hasCursorWidth() => $_has(16);
  @$pb.TagNumber(43)
  void clearCursorWidth() => clearField(43);

  @$pb.TagNumber(44)
  $core.double get cursorHeight => $_getN(17);
  @$pb.TagNumber(44)
  set cursorHeight($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(44)
  $core.bool hasCursorHeight() => $_has(17);
  @$pb.TagNumber(44)
  void clearCursorHeight() => clearField(44);

  @$pb.TagNumber(46)
  $core.bool get cursorOpacityAnimates => $_getBF(18);
  @$pb.TagNumber(46)
  set cursorOpacityAnimates($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(46)
  $core.bool hasCursorOpacityAnimates() => $_has(18);
  @$pb.TagNumber(46)
  void clearCursorOpacityAnimates() => clearField(46);

  @$pb.TagNumber(47)
  $1.DartColorExpression get cursorColor => $_getN(19);
  @$pb.TagNumber(47)
  set cursorColor($1.DartColorExpression v) { setField(47, v); }
  @$pb.TagNumber(47)
  $core.bool hasCursorColor() => $_has(19);
  @$pb.TagNumber(47)
  void clearCursorColor() => clearField(47);
  @$pb.TagNumber(47)
  $1.DartColorExpression ensureCursorColor() => $_ensure(19);

  @$pb.TagNumber(53)
  $core.bool get enableInteractiveSelection => $_getBF(20);
  @$pb.TagNumber(53)
  set enableInteractiveSelection($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(53)
  $core.bool hasEnableInteractiveSelection() => $_has(20);
  @$pb.TagNumber(53)
  void clearEnableInteractiveSelection() => clearField(53);

  @$pb.TagNumber(58)
  $core.List<$core.String> get autofillHints => $_getList(21);

  @$pb.TagNumber(61)
  $core.String get restorationId => $_getSZ(22);
  @$pb.TagNumber(61)
  set restorationId($core.String v) { $_setString(22, v); }
  @$pb.TagNumber(61)
  $core.bool hasRestorationId() => $_has(22);
  @$pb.TagNumber(61)
  void clearRestorationId() => clearField(61);

  @$pb.TagNumber(62)
  $core.bool get scribbleEnabled => $_getBF(23);
  @$pb.TagNumber(62)
  set scribbleEnabled($core.bool v) { $_setBool(23, v); }
  @$pb.TagNumber(62)
  $core.bool hasScribbleEnabled() => $_has(23);
  @$pb.TagNumber(62)
  void clearScribbleEnabled() => clearField(62);

  @$pb.TagNumber(63)
  $core.bool get enableIMEPersonalizedLearning => $_getBF(24);
  @$pb.TagNumber(63)
  set enableIMEPersonalizedLearning($core.bool v) { $_setBool(24, v); }
  @$pb.TagNumber(63)
  $core.bool hasEnableIMEPersonalizedLearning() => $_has(24);
  @$pb.TagNumber(63)
  void clearEnableIMEPersonalizedLearning() => clearField(63);
}

/// package:flutter/src/cupertino/text_field.dart
class CupertinoTextFieldNamedBorderless extends $pb.GeneratedMessage {
  factory CupertinoTextFieldNamedBorderless({
    $1.FlutterKeyExpression? key,
    $core.String? placeholder,
    WidgetExpression? prefix,
    WidgetExpression? suffix,
    $core.bool? readOnly,
    $core.bool? showCursor,
    $core.bool? autofocus,
    $core.String? obscuringCharacter,
    $core.bool? obscureText,
    $core.bool? autocorrect,
    $core.bool? enableSuggestions,
    $core.int? maxLines,
    $core.int? minLines,
    $core.bool? expands,
    $core.int? maxLength,
    $core.bool? enabled,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $core.bool? cursorOpacityAnimates,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.Iterable<$core.String>? autofillHints,
    $core.String? restorationId,
    $core.bool? scribbleEnabled,
    $core.bool? enableIMEPersonalizedLearning,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (placeholder != null) {
      $result.placeholder = placeholder;
    }
    if (prefix != null) {
      $result.prefix = prefix;
    }
    if (suffix != null) {
      $result.suffix = suffix;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (obscuringCharacter != null) {
      $result.obscuringCharacter = obscuringCharacter;
    }
    if (obscureText != null) {
      $result.obscureText = obscureText;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enableSuggestions != null) {
      $result.enableSuggestions = enableSuggestions;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (expands != null) {
      $result.expands = expands;
    }
    if (maxLength != null) {
      $result.maxLength = maxLength;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorOpacityAnimates != null) {
      $result.cursorOpacityAnimates = cursorOpacityAnimates;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (autofillHints != null) {
      $result.autofillHints.addAll(autofillHints);
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (scribbleEnabled != null) {
      $result.scribbleEnabled = scribbleEnabled;
    }
    if (enableIMEPersonalizedLearning != null) {
      $result.enableIMEPersonalizedLearning = enableIMEPersonalizedLearning;
    }
    return $result;
  }
  CupertinoTextFieldNamedBorderless._() : super();
  factory CupertinoTextFieldNamedBorderless.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTextFieldNamedBorderless.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTextFieldNamedBorderless', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(8, _omitFieldNames ? '' : 'placeholder')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'prefix', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'suffix', subBuilder: WidgetExpression.create)
    ..aOB(23, _omitFieldNames ? '' : 'readOnly')
    ..aOB(24, _omitFieldNames ? '' : 'showCursor')
    ..aOB(25, _omitFieldNames ? '' : 'autofocus')
    ..aOS(26, _omitFieldNames ? '' : 'obscuringCharacter')
    ..aOB(27, _omitFieldNames ? '' : 'obscureText')
    ..aOB(28, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(31, _omitFieldNames ? '' : 'enableSuggestions')
    ..a<$core.int>(32, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.int>(33, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..aOB(34, _omitFieldNames ? '' : 'expands')
    ..a<$core.int>(35, _omitFieldNames ? '' : 'maxLength', $pb.PbFieldType.O3)
    ..aOB(42, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(43, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(44, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOB(46, _omitFieldNames ? '' : 'cursorOpacityAnimates')
    ..aOM<$1.DartColorExpression>(47, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(53, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..pPS(58, _omitFieldNames ? '' : 'autofillHints')
    ..aOS(61, _omitFieldNames ? '' : 'restorationId')
    ..aOB(62, _omitFieldNames ? '' : 'scribbleEnabled')
    ..aOB(63, _omitFieldNames ? '' : 'enableIMEPersonalizedLearning')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTextFieldNamedBorderless clone() => CupertinoTextFieldNamedBorderless()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTextFieldNamedBorderless copyWith(void Function(CupertinoTextFieldNamedBorderless) updates) => super.copyWith((message) => updates(message as CupertinoTextFieldNamedBorderless)) as CupertinoTextFieldNamedBorderless;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTextFieldNamedBorderless create() => CupertinoTextFieldNamedBorderless._();
  CupertinoTextFieldNamedBorderless createEmptyInstance() => create();
  static $pb.PbList<CupertinoTextFieldNamedBorderless> createRepeated() => $pb.PbList<CupertinoTextFieldNamedBorderless>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTextFieldNamedBorderless getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTextFieldNamedBorderless>(create);
  static CupertinoTextFieldNamedBorderless? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $core.String get placeholder => $_getSZ(1);
  @$pb.TagNumber(8)
  set placeholder($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(8)
  $core.bool hasPlaceholder() => $_has(1);
  @$pb.TagNumber(8)
  void clearPlaceholder() => clearField(8);

  @$pb.TagNumber(10)
  WidgetExpression get prefix => $_getN(2);
  @$pb.TagNumber(10)
  set prefix(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasPrefix() => $_has(2);
  @$pb.TagNumber(10)
  void clearPrefix() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensurePrefix() => $_ensure(2);

  @$pb.TagNumber(12)
  WidgetExpression get suffix => $_getN(3);
  @$pb.TagNumber(12)
  set suffix(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSuffix() => $_has(3);
  @$pb.TagNumber(12)
  void clearSuffix() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureSuffix() => $_ensure(3);

  @$pb.TagNumber(23)
  $core.bool get readOnly => $_getBF(4);
  @$pb.TagNumber(23)
  set readOnly($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(23)
  $core.bool hasReadOnly() => $_has(4);
  @$pb.TagNumber(23)
  void clearReadOnly() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get showCursor => $_getBF(5);
  @$pb.TagNumber(24)
  set showCursor($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(24)
  $core.bool hasShowCursor() => $_has(5);
  @$pb.TagNumber(24)
  void clearShowCursor() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get autofocus => $_getBF(6);
  @$pb.TagNumber(25)
  set autofocus($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(25)
  $core.bool hasAutofocus() => $_has(6);
  @$pb.TagNumber(25)
  void clearAutofocus() => clearField(25);

  @$pb.TagNumber(26)
  $core.String get obscuringCharacter => $_getSZ(7);
  @$pb.TagNumber(26)
  set obscuringCharacter($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(26)
  $core.bool hasObscuringCharacter() => $_has(7);
  @$pb.TagNumber(26)
  void clearObscuringCharacter() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get obscureText => $_getBF(8);
  @$pb.TagNumber(27)
  set obscureText($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(27)
  $core.bool hasObscureText() => $_has(8);
  @$pb.TagNumber(27)
  void clearObscureText() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get autocorrect => $_getBF(9);
  @$pb.TagNumber(28)
  set autocorrect($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(28)
  $core.bool hasAutocorrect() => $_has(9);
  @$pb.TagNumber(28)
  void clearAutocorrect() => clearField(28);

  @$pb.TagNumber(31)
  $core.bool get enableSuggestions => $_getBF(10);
  @$pb.TagNumber(31)
  set enableSuggestions($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(31)
  $core.bool hasEnableSuggestions() => $_has(10);
  @$pb.TagNumber(31)
  void clearEnableSuggestions() => clearField(31);

  @$pb.TagNumber(32)
  $core.int get maxLines => $_getIZ(11);
  @$pb.TagNumber(32)
  set maxLines($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(32)
  $core.bool hasMaxLines() => $_has(11);
  @$pb.TagNumber(32)
  void clearMaxLines() => clearField(32);

  @$pb.TagNumber(33)
  $core.int get minLines => $_getIZ(12);
  @$pb.TagNumber(33)
  set minLines($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(33)
  $core.bool hasMinLines() => $_has(12);
  @$pb.TagNumber(33)
  void clearMinLines() => clearField(33);

  @$pb.TagNumber(34)
  $core.bool get expands => $_getBF(13);
  @$pb.TagNumber(34)
  set expands($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(34)
  $core.bool hasExpands() => $_has(13);
  @$pb.TagNumber(34)
  void clearExpands() => clearField(34);

  @$pb.TagNumber(35)
  $core.int get maxLength => $_getIZ(14);
  @$pb.TagNumber(35)
  set maxLength($core.int v) { $_setSignedInt32(14, v); }
  @$pb.TagNumber(35)
  $core.bool hasMaxLength() => $_has(14);
  @$pb.TagNumber(35)
  void clearMaxLength() => clearField(35);

  @$pb.TagNumber(42)
  $core.bool get enabled => $_getBF(15);
  @$pb.TagNumber(42)
  set enabled($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(42)
  $core.bool hasEnabled() => $_has(15);
  @$pb.TagNumber(42)
  void clearEnabled() => clearField(42);

  @$pb.TagNumber(43)
  $core.double get cursorWidth => $_getN(16);
  @$pb.TagNumber(43)
  set cursorWidth($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(43)
  $core.bool hasCursorWidth() => $_has(16);
  @$pb.TagNumber(43)
  void clearCursorWidth() => clearField(43);

  @$pb.TagNumber(44)
  $core.double get cursorHeight => $_getN(17);
  @$pb.TagNumber(44)
  set cursorHeight($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(44)
  $core.bool hasCursorHeight() => $_has(17);
  @$pb.TagNumber(44)
  void clearCursorHeight() => clearField(44);

  @$pb.TagNumber(46)
  $core.bool get cursorOpacityAnimates => $_getBF(18);
  @$pb.TagNumber(46)
  set cursorOpacityAnimates($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(46)
  $core.bool hasCursorOpacityAnimates() => $_has(18);
  @$pb.TagNumber(46)
  void clearCursorOpacityAnimates() => clearField(46);

  @$pb.TagNumber(47)
  $1.DartColorExpression get cursorColor => $_getN(19);
  @$pb.TagNumber(47)
  set cursorColor($1.DartColorExpression v) { setField(47, v); }
  @$pb.TagNumber(47)
  $core.bool hasCursorColor() => $_has(19);
  @$pb.TagNumber(47)
  void clearCursorColor() => clearField(47);
  @$pb.TagNumber(47)
  $1.DartColorExpression ensureCursorColor() => $_ensure(19);

  @$pb.TagNumber(53)
  $core.bool get enableInteractiveSelection => $_getBF(20);
  @$pb.TagNumber(53)
  set enableInteractiveSelection($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(53)
  $core.bool hasEnableInteractiveSelection() => $_has(20);
  @$pb.TagNumber(53)
  void clearEnableInteractiveSelection() => clearField(53);

  @$pb.TagNumber(58)
  $core.List<$core.String> get autofillHints => $_getList(21);

  @$pb.TagNumber(61)
  $core.String get restorationId => $_getSZ(22);
  @$pb.TagNumber(61)
  set restorationId($core.String v) { $_setString(22, v); }
  @$pb.TagNumber(61)
  $core.bool hasRestorationId() => $_has(22);
  @$pb.TagNumber(61)
  void clearRestorationId() => clearField(61);

  @$pb.TagNumber(62)
  $core.bool get scribbleEnabled => $_getBF(23);
  @$pb.TagNumber(62)
  set scribbleEnabled($core.bool v) { $_setBool(23, v); }
  @$pb.TagNumber(62)
  $core.bool hasScribbleEnabled() => $_has(23);
  @$pb.TagNumber(62)
  void clearScribbleEnabled() => clearField(62);

  @$pb.TagNumber(63)
  $core.bool get enableIMEPersonalizedLearning => $_getBF(24);
  @$pb.TagNumber(63)
  set enableIMEPersonalizedLearning($core.bool v) { $_setBool(24, v); }
  @$pb.TagNumber(63)
  $core.bool hasEnableIMEPersonalizedLearning() => $_has(24);
  @$pb.TagNumber(63)
  void clearEnableIMEPersonalizedLearning() => clearField(63);
}

/// package:flutter/src/cupertino/text_form_field_row.dart
class CupertinoTextFormFieldRow extends $pb.GeneratedMessage {
  factory CupertinoTextFormFieldRow({
    $1.FlutterKeyExpression? key,
    WidgetExpression? prefix,
    $core.String? initialValue,
    $core.bool? autofocus,
    $core.bool? readOnly,
    $core.bool? showCursor,
    $core.String? obscuringCharacter,
    $core.bool? obscureText,
    $core.bool? autocorrect,
    $core.bool? enableSuggestions,
    $core.int? maxLines,
    $core.int? minLines,
    $core.bool? expands,
    $core.int? maxLength,
    $core.bool? enabled,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.Iterable<$core.String>? autofillHints,
    $core.String? placeholder,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (prefix != null) {
      $result.prefix = prefix;
    }
    if (initialValue != null) {
      $result.initialValue = initialValue;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (obscuringCharacter != null) {
      $result.obscuringCharacter = obscuringCharacter;
    }
    if (obscureText != null) {
      $result.obscureText = obscureText;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enableSuggestions != null) {
      $result.enableSuggestions = enableSuggestions;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (expands != null) {
      $result.expands = expands;
    }
    if (maxLength != null) {
      $result.maxLength = maxLength;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (autofillHints != null) {
      $result.autofillHints.addAll(autofillHints);
    }
    if (placeholder != null) {
      $result.placeholder = placeholder;
    }
    return $result;
  }
  CupertinoTextFormFieldRow._() : super();
  factory CupertinoTextFormFieldRow.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTextFormFieldRow.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTextFormFieldRow', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'prefix', subBuilder: WidgetExpression.create)
    ..aOS(6, _omitFieldNames ? '' : 'initialValue')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOB(18, _omitFieldNames ? '' : 'readOnly')
    ..aOB(19, _omitFieldNames ? '' : 'showCursor')
    ..aOS(20, _omitFieldNames ? '' : 'obscuringCharacter')
    ..aOB(21, _omitFieldNames ? '' : 'obscureText')
    ..aOB(22, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(25, _omitFieldNames ? '' : 'enableSuggestions')
    ..a<$core.int>(26, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.int>(27, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..aOB(28, _omitFieldNames ? '' : 'expands')
    ..a<$core.int>(29, _omitFieldNames ? '' : 'maxLength', $pb.PbFieldType.O3)
    ..aOB(37, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(38, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(39, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(40, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(43, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..pPS(46, _omitFieldNames ? '' : 'autofillHints')
    ..aOS(48, _omitFieldNames ? '' : 'placeholder')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTextFormFieldRow clone() => CupertinoTextFormFieldRow()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTextFormFieldRow copyWith(void Function(CupertinoTextFormFieldRow) updates) => super.copyWith((message) => updates(message as CupertinoTextFormFieldRow)) as CupertinoTextFormFieldRow;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTextFormFieldRow create() => CupertinoTextFormFieldRow._();
  CupertinoTextFormFieldRow createEmptyInstance() => create();
  static $pb.PbList<CupertinoTextFormFieldRow> createRepeated() => $pb.PbList<CupertinoTextFormFieldRow>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTextFormFieldRow getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTextFormFieldRow>(create);
  static CupertinoTextFormFieldRow? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get prefix => $_getN(1);
  @$pb.TagNumber(3)
  set prefix(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasPrefix() => $_has(1);
  @$pb.TagNumber(3)
  void clearPrefix() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensurePrefix() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.String get initialValue => $_getSZ(2);
  @$pb.TagNumber(6)
  set initialValue($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasInitialValue() => $_has(2);
  @$pb.TagNumber(6)
  void clearInitialValue() => clearField(6);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(3);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(3);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get readOnly => $_getBF(4);
  @$pb.TagNumber(18)
  set readOnly($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(18)
  $core.bool hasReadOnly() => $_has(4);
  @$pb.TagNumber(18)
  void clearReadOnly() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get showCursor => $_getBF(5);
  @$pb.TagNumber(19)
  set showCursor($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(19)
  $core.bool hasShowCursor() => $_has(5);
  @$pb.TagNumber(19)
  void clearShowCursor() => clearField(19);

  @$pb.TagNumber(20)
  $core.String get obscuringCharacter => $_getSZ(6);
  @$pb.TagNumber(20)
  set obscuringCharacter($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(20)
  $core.bool hasObscuringCharacter() => $_has(6);
  @$pb.TagNumber(20)
  void clearObscuringCharacter() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get obscureText => $_getBF(7);
  @$pb.TagNumber(21)
  set obscureText($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(21)
  $core.bool hasObscureText() => $_has(7);
  @$pb.TagNumber(21)
  void clearObscureText() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get autocorrect => $_getBF(8);
  @$pb.TagNumber(22)
  set autocorrect($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(22)
  $core.bool hasAutocorrect() => $_has(8);
  @$pb.TagNumber(22)
  void clearAutocorrect() => clearField(22);

  @$pb.TagNumber(25)
  $core.bool get enableSuggestions => $_getBF(9);
  @$pb.TagNumber(25)
  set enableSuggestions($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(25)
  $core.bool hasEnableSuggestions() => $_has(9);
  @$pb.TagNumber(25)
  void clearEnableSuggestions() => clearField(25);

  @$pb.TagNumber(26)
  $core.int get maxLines => $_getIZ(10);
  @$pb.TagNumber(26)
  set maxLines($core.int v) { $_setSignedInt32(10, v); }
  @$pb.TagNumber(26)
  $core.bool hasMaxLines() => $_has(10);
  @$pb.TagNumber(26)
  void clearMaxLines() => clearField(26);

  @$pb.TagNumber(27)
  $core.int get minLines => $_getIZ(11);
  @$pb.TagNumber(27)
  set minLines($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(27)
  $core.bool hasMinLines() => $_has(11);
  @$pb.TagNumber(27)
  void clearMinLines() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get expands => $_getBF(12);
  @$pb.TagNumber(28)
  set expands($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(28)
  $core.bool hasExpands() => $_has(12);
  @$pb.TagNumber(28)
  void clearExpands() => clearField(28);

  @$pb.TagNumber(29)
  $core.int get maxLength => $_getIZ(13);
  @$pb.TagNumber(29)
  set maxLength($core.int v) { $_setSignedInt32(13, v); }
  @$pb.TagNumber(29)
  $core.bool hasMaxLength() => $_has(13);
  @$pb.TagNumber(29)
  void clearMaxLength() => clearField(29);

  @$pb.TagNumber(37)
  $core.bool get enabled => $_getBF(14);
  @$pb.TagNumber(37)
  set enabled($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(37)
  $core.bool hasEnabled() => $_has(14);
  @$pb.TagNumber(37)
  void clearEnabled() => clearField(37);

  @$pb.TagNumber(38)
  $core.double get cursorWidth => $_getN(15);
  @$pb.TagNumber(38)
  set cursorWidth($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(38)
  $core.bool hasCursorWidth() => $_has(15);
  @$pb.TagNumber(38)
  void clearCursorWidth() => clearField(38);

  @$pb.TagNumber(39)
  $core.double get cursorHeight => $_getN(16);
  @$pb.TagNumber(39)
  set cursorHeight($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(39)
  $core.bool hasCursorHeight() => $_has(16);
  @$pb.TagNumber(39)
  void clearCursorHeight() => clearField(39);

  @$pb.TagNumber(40)
  $1.DartColorExpression get cursorColor => $_getN(17);
  @$pb.TagNumber(40)
  set cursorColor($1.DartColorExpression v) { setField(40, v); }
  @$pb.TagNumber(40)
  $core.bool hasCursorColor() => $_has(17);
  @$pb.TagNumber(40)
  void clearCursorColor() => clearField(40);
  @$pb.TagNumber(40)
  $1.DartColorExpression ensureCursorColor() => $_ensure(17);

  @$pb.TagNumber(43)
  $core.bool get enableInteractiveSelection => $_getBF(18);
  @$pb.TagNumber(43)
  set enableInteractiveSelection($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(43)
  $core.bool hasEnableInteractiveSelection() => $_has(18);
  @$pb.TagNumber(43)
  void clearEnableInteractiveSelection() => clearField(43);

  @$pb.TagNumber(46)
  $core.List<$core.String> get autofillHints => $_getList(19);

  @$pb.TagNumber(48)
  $core.String get placeholder => $_getSZ(20);
  @$pb.TagNumber(48)
  set placeholder($core.String v) { $_setString(20, v); }
  @$pb.TagNumber(48)
  $core.bool hasPlaceholder() => $_has(20);
  @$pb.TagNumber(48)
  void clearPlaceholder() => clearField(48);
}

/// package:flutter/src/cupertino/text_selection_toolbar_button.dart
class CupertinoTextSelectionToolbarButton extends $pb.GeneratedMessage {
  factory CupertinoTextSelectionToolbarButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  CupertinoTextSelectionToolbarButton._() : super();
  factory CupertinoTextSelectionToolbarButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTextSelectionToolbarButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTextSelectionToolbarButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTextSelectionToolbarButton clone() => CupertinoTextSelectionToolbarButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTextSelectionToolbarButton copyWith(void Function(CupertinoTextSelectionToolbarButton) updates) => super.copyWith((message) => updates(message as CupertinoTextSelectionToolbarButton)) as CupertinoTextSelectionToolbarButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTextSelectionToolbarButton create() => CupertinoTextSelectionToolbarButton._();
  CupertinoTextSelectionToolbarButton createEmptyInstance() => create();
  static $pb.PbList<CupertinoTextSelectionToolbarButton> createRepeated() => $pb.PbList<CupertinoTextSelectionToolbarButton>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTextSelectionToolbarButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTextSelectionToolbarButton>(create);
  static CupertinoTextSelectionToolbarButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/cupertino/text_selection_toolbar_button.dart
class CupertinoTextSelectionToolbarButtonNamedText extends $pb.GeneratedMessage {
  factory CupertinoTextSelectionToolbarButtonNamedText({
    $1.FlutterKeyExpression? key,
    $core.String? text,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (text != null) {
      $result.text = text;
    }
    return $result;
  }
  CupertinoTextSelectionToolbarButtonNamedText._() : super();
  factory CupertinoTextSelectionToolbarButtonNamedText.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CupertinoTextSelectionToolbarButtonNamedText.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CupertinoTextSelectionToolbarButtonNamedText', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'text')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CupertinoTextSelectionToolbarButtonNamedText clone() => CupertinoTextSelectionToolbarButtonNamedText()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CupertinoTextSelectionToolbarButtonNamedText copyWith(void Function(CupertinoTextSelectionToolbarButtonNamedText) updates) => super.copyWith((message) => updates(message as CupertinoTextSelectionToolbarButtonNamedText)) as CupertinoTextSelectionToolbarButtonNamedText;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CupertinoTextSelectionToolbarButtonNamedText create() => CupertinoTextSelectionToolbarButtonNamedText._();
  CupertinoTextSelectionToolbarButtonNamedText createEmptyInstance() => create();
  static $pb.PbList<CupertinoTextSelectionToolbarButtonNamedText> createRepeated() => $pb.PbList<CupertinoTextSelectionToolbarButtonNamedText>();
  @$core.pragma('dart2js:noInline')
  static CupertinoTextSelectionToolbarButtonNamedText getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CupertinoTextSelectionToolbarButtonNamedText>(create);
  static CupertinoTextSelectionToolbarButtonNamedText? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.String get text => $_getSZ(1);
  @$pb.TagNumber(4)
  set text($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasText() => $_has(1);
  @$pb.TagNumber(4)
  void clearText() => clearField(4);
}

/// package:flutter/src/material/about.dart
class MaterialAboutDialog extends $pb.GeneratedMessage {
  factory MaterialAboutDialog({
    $1.FlutterKeyExpression? key,
    $core.String? applicationName,
    $core.String? applicationVersion,
    WidgetExpression? applicationIcon,
    $core.String? applicationLegalese,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (applicationName != null) {
      $result.applicationName = applicationName;
    }
    if (applicationVersion != null) {
      $result.applicationVersion = applicationVersion;
    }
    if (applicationIcon != null) {
      $result.applicationIcon = applicationIcon;
    }
    if (applicationLegalese != null) {
      $result.applicationLegalese = applicationLegalese;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  MaterialAboutDialog._() : super();
  factory MaterialAboutDialog.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialAboutDialog.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialAboutDialog', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'applicationName')
    ..aOS(4, _omitFieldNames ? '' : 'applicationVersion')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'applicationIcon', subBuilder: WidgetExpression.create)
    ..aOS(6, _omitFieldNames ? '' : 'applicationLegalese')
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialAboutDialog clone() => MaterialAboutDialog()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialAboutDialog copyWith(void Function(MaterialAboutDialog) updates) => super.copyWith((message) => updates(message as MaterialAboutDialog)) as MaterialAboutDialog;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialAboutDialog create() => MaterialAboutDialog._();
  MaterialAboutDialog createEmptyInstance() => create();
  static $pb.PbList<MaterialAboutDialog> createRepeated() => $pb.PbList<MaterialAboutDialog>();
  @$core.pragma('dart2js:noInline')
  static MaterialAboutDialog getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialAboutDialog>(create);
  static MaterialAboutDialog? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get applicationName => $_getSZ(1);
  @$pb.TagNumber(3)
  set applicationName($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasApplicationName() => $_has(1);
  @$pb.TagNumber(3)
  void clearApplicationName() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get applicationVersion => $_getSZ(2);
  @$pb.TagNumber(4)
  set applicationVersion($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasApplicationVersion() => $_has(2);
  @$pb.TagNumber(4)
  void clearApplicationVersion() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get applicationIcon => $_getN(3);
  @$pb.TagNumber(5)
  set applicationIcon(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasApplicationIcon() => $_has(3);
  @$pb.TagNumber(5)
  void clearApplicationIcon() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureApplicationIcon() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.String get applicationLegalese => $_getSZ(4);
  @$pb.TagNumber(6)
  set applicationLegalese($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasApplicationLegalese() => $_has(4);
  @$pb.TagNumber(6)
  void clearApplicationLegalese() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get children => $_getList(5);
}

/// package:flutter/src/material/about.dart
class MaterialAboutListTile extends $pb.GeneratedMessage {
  factory MaterialAboutListTile({
    $1.FlutterKeyExpression? key,
    WidgetExpression? icon,
    WidgetExpression? child,
    $core.String? applicationName,
    $core.String? applicationVersion,
    WidgetExpression? applicationIcon,
    $core.String? applicationLegalese,
    $core.Iterable<WidgetExpression>? aboutBoxChildren,
    $core.bool? dense,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (child != null) {
      $result.child = child;
    }
    if (applicationName != null) {
      $result.applicationName = applicationName;
    }
    if (applicationVersion != null) {
      $result.applicationVersion = applicationVersion;
    }
    if (applicationIcon != null) {
      $result.applicationIcon = applicationIcon;
    }
    if (applicationLegalese != null) {
      $result.applicationLegalese = applicationLegalese;
    }
    if (aboutBoxChildren != null) {
      $result.aboutBoxChildren.addAll(aboutBoxChildren);
    }
    if (dense != null) {
      $result.dense = dense;
    }
    return $result;
  }
  MaterialAboutListTile._() : super();
  factory MaterialAboutListTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialAboutListTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialAboutListTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(5, _omitFieldNames ? '' : 'applicationName')
    ..aOS(6, _omitFieldNames ? '' : 'applicationVersion')
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'applicationIcon', subBuilder: WidgetExpression.create)
    ..aOS(8, _omitFieldNames ? '' : 'applicationLegalese')
    ..pc<WidgetExpression>(9, _omitFieldNames ? '' : 'aboutBoxChildren', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOB(10, _omitFieldNames ? '' : 'dense')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialAboutListTile clone() => MaterialAboutListTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialAboutListTile copyWith(void Function(MaterialAboutListTile) updates) => super.copyWith((message) => updates(message as MaterialAboutListTile)) as MaterialAboutListTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialAboutListTile create() => MaterialAboutListTile._();
  MaterialAboutListTile createEmptyInstance() => create();
  static $pb.PbList<MaterialAboutListTile> createRepeated() => $pb.PbList<MaterialAboutListTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialAboutListTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialAboutListTile>(create);
  static MaterialAboutListTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get icon => $_getN(1);
  @$pb.TagNumber(3)
  set icon(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasIcon() => $_has(1);
  @$pb.TagNumber(3)
  void clearIcon() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureIcon() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.String get applicationName => $_getSZ(3);
  @$pb.TagNumber(5)
  set applicationName($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasApplicationName() => $_has(3);
  @$pb.TagNumber(5)
  void clearApplicationName() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get applicationVersion => $_getSZ(4);
  @$pb.TagNumber(6)
  set applicationVersion($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasApplicationVersion() => $_has(4);
  @$pb.TagNumber(6)
  void clearApplicationVersion() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get applicationIcon => $_getN(5);
  @$pb.TagNumber(7)
  set applicationIcon(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasApplicationIcon() => $_has(5);
  @$pb.TagNumber(7)
  void clearApplicationIcon() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureApplicationIcon() => $_ensure(5);

  @$pb.TagNumber(8)
  $core.String get applicationLegalese => $_getSZ(6);
  @$pb.TagNumber(8)
  set applicationLegalese($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasApplicationLegalese() => $_has(6);
  @$pb.TagNumber(8)
  void clearApplicationLegalese() => clearField(8);

  @$pb.TagNumber(9)
  $core.List<WidgetExpression> get aboutBoxChildren => $_getList(7);

  @$pb.TagNumber(10)
  $core.bool get dense => $_getBF(8);
  @$pb.TagNumber(10)
  set dense($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(10)
  $core.bool hasDense() => $_has(8);
  @$pb.TagNumber(10)
  void clearDense() => clearField(10);
}

/// package:flutter/src/material/about.dart
class MaterialLicensePage extends $pb.GeneratedMessage {
  factory MaterialLicensePage({
    $1.FlutterKeyExpression? key,
    $core.String? applicationName,
    $core.String? applicationVersion,
    WidgetExpression? applicationIcon,
    $core.String? applicationLegalese,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (applicationName != null) {
      $result.applicationName = applicationName;
    }
    if (applicationVersion != null) {
      $result.applicationVersion = applicationVersion;
    }
    if (applicationIcon != null) {
      $result.applicationIcon = applicationIcon;
    }
    if (applicationLegalese != null) {
      $result.applicationLegalese = applicationLegalese;
    }
    return $result;
  }
  MaterialLicensePage._() : super();
  factory MaterialLicensePage.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialLicensePage.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialLicensePage', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'applicationName')
    ..aOS(4, _omitFieldNames ? '' : 'applicationVersion')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'applicationIcon', subBuilder: WidgetExpression.create)
    ..aOS(6, _omitFieldNames ? '' : 'applicationLegalese')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialLicensePage clone() => MaterialLicensePage()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialLicensePage copyWith(void Function(MaterialLicensePage) updates) => super.copyWith((message) => updates(message as MaterialLicensePage)) as MaterialLicensePage;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialLicensePage create() => MaterialLicensePage._();
  MaterialLicensePage createEmptyInstance() => create();
  static $pb.PbList<MaterialLicensePage> createRepeated() => $pb.PbList<MaterialLicensePage>();
  @$core.pragma('dart2js:noInline')
  static MaterialLicensePage getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialLicensePage>(create);
  static MaterialLicensePage? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get applicationName => $_getSZ(1);
  @$pb.TagNumber(3)
  set applicationName($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasApplicationName() => $_has(1);
  @$pb.TagNumber(3)
  void clearApplicationName() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get applicationVersion => $_getSZ(2);
  @$pb.TagNumber(4)
  set applicationVersion($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasApplicationVersion() => $_has(2);
  @$pb.TagNumber(4)
  void clearApplicationVersion() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get applicationIcon => $_getN(3);
  @$pb.TagNumber(5)
  set applicationIcon(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasApplicationIcon() => $_has(3);
  @$pb.TagNumber(5)
  void clearApplicationIcon() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureApplicationIcon() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.String get applicationLegalese => $_getSZ(4);
  @$pb.TagNumber(6)
  set applicationLegalese($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasApplicationLegalese() => $_has(4);
  @$pb.TagNumber(6)
  void clearApplicationLegalese() => clearField(6);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialBackButton extends $pb.GeneratedMessage {
  factory MaterialBackButton({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    return $result;
  }
  MaterialBackButton._() : super();
  factory MaterialBackButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialBackButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialBackButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialBackButton clone() => MaterialBackButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialBackButton copyWith(void Function(MaterialBackButton) updates) => super.copyWith((message) => updates(message as MaterialBackButton)) as MaterialBackButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialBackButton create() => MaterialBackButton._();
  MaterialBackButton createEmptyInstance() => create();
  static $pb.PbList<MaterialBackButton> createRepeated() => $pb.PbList<MaterialBackButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialBackButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialBackButton>(create);
  static MaterialBackButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialBackButtonIcon extends $pb.GeneratedMessage {
  factory MaterialBackButtonIcon({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialBackButtonIcon._() : super();
  factory MaterialBackButtonIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialBackButtonIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialBackButtonIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialBackButtonIcon clone() => MaterialBackButtonIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialBackButtonIcon copyWith(void Function(MaterialBackButtonIcon) updates) => super.copyWith((message) => updates(message as MaterialBackButtonIcon)) as MaterialBackButtonIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialBackButtonIcon create() => MaterialBackButtonIcon._();
  MaterialBackButtonIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialBackButtonIcon> createRepeated() => $pb.PbList<MaterialBackButtonIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialBackButtonIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialBackButtonIcon>(create);
  static MaterialBackButtonIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialCloseButton extends $pb.GeneratedMessage {
  factory MaterialCloseButton({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    return $result;
  }
  MaterialCloseButton._() : super();
  factory MaterialCloseButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCloseButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCloseButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCloseButton clone() => MaterialCloseButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCloseButton copyWith(void Function(MaterialCloseButton) updates) => super.copyWith((message) => updates(message as MaterialCloseButton)) as MaterialCloseButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCloseButton create() => MaterialCloseButton._();
  MaterialCloseButton createEmptyInstance() => create();
  static $pb.PbList<MaterialCloseButton> createRepeated() => $pb.PbList<MaterialCloseButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialCloseButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCloseButton>(create);
  static MaterialCloseButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialCloseButtonIcon extends $pb.GeneratedMessage {
  factory MaterialCloseButtonIcon({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialCloseButtonIcon._() : super();
  factory MaterialCloseButtonIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCloseButtonIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCloseButtonIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCloseButtonIcon clone() => MaterialCloseButtonIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCloseButtonIcon copyWith(void Function(MaterialCloseButtonIcon) updates) => super.copyWith((message) => updates(message as MaterialCloseButtonIcon)) as MaterialCloseButtonIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCloseButtonIcon create() => MaterialCloseButtonIcon._();
  MaterialCloseButtonIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialCloseButtonIcon> createRepeated() => $pb.PbList<MaterialCloseButtonIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialCloseButtonIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCloseButtonIcon>(create);
  static MaterialCloseButtonIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialDrawerButton extends $pb.GeneratedMessage {
  factory MaterialDrawerButton({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialDrawerButton._() : super();
  factory MaterialDrawerButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDrawerButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDrawerButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDrawerButton clone() => MaterialDrawerButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDrawerButton copyWith(void Function(MaterialDrawerButton) updates) => super.copyWith((message) => updates(message as MaterialDrawerButton)) as MaterialDrawerButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDrawerButton create() => MaterialDrawerButton._();
  MaterialDrawerButton createEmptyInstance() => create();
  static $pb.PbList<MaterialDrawerButton> createRepeated() => $pb.PbList<MaterialDrawerButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialDrawerButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDrawerButton>(create);
  static MaterialDrawerButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialDrawerButtonIcon extends $pb.GeneratedMessage {
  factory MaterialDrawerButtonIcon({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialDrawerButtonIcon._() : super();
  factory MaterialDrawerButtonIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDrawerButtonIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDrawerButtonIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDrawerButtonIcon clone() => MaterialDrawerButtonIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDrawerButtonIcon copyWith(void Function(MaterialDrawerButtonIcon) updates) => super.copyWith((message) => updates(message as MaterialDrawerButtonIcon)) as MaterialDrawerButtonIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDrawerButtonIcon create() => MaterialDrawerButtonIcon._();
  MaterialDrawerButtonIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialDrawerButtonIcon> createRepeated() => $pb.PbList<MaterialDrawerButtonIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialDrawerButtonIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDrawerButtonIcon>(create);
  static MaterialDrawerButtonIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialEndDrawerButton extends $pb.GeneratedMessage {
  factory MaterialEndDrawerButton({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialEndDrawerButton._() : super();
  factory MaterialEndDrawerButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialEndDrawerButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialEndDrawerButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialEndDrawerButton clone() => MaterialEndDrawerButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialEndDrawerButton copyWith(void Function(MaterialEndDrawerButton) updates) => super.copyWith((message) => updates(message as MaterialEndDrawerButton)) as MaterialEndDrawerButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialEndDrawerButton create() => MaterialEndDrawerButton._();
  MaterialEndDrawerButton createEmptyInstance() => create();
  static $pb.PbList<MaterialEndDrawerButton> createRepeated() => $pb.PbList<MaterialEndDrawerButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialEndDrawerButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialEndDrawerButton>(create);
  static MaterialEndDrawerButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_buttons.dart
class MaterialEndDrawerButtonIcon extends $pb.GeneratedMessage {
  factory MaterialEndDrawerButtonIcon({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialEndDrawerButtonIcon._() : super();
  factory MaterialEndDrawerButtonIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialEndDrawerButtonIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialEndDrawerButtonIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialEndDrawerButtonIcon clone() => MaterialEndDrawerButtonIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialEndDrawerButtonIcon copyWith(void Function(MaterialEndDrawerButtonIcon) updates) => super.copyWith((message) => updates(message as MaterialEndDrawerButtonIcon)) as MaterialEndDrawerButtonIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialEndDrawerButtonIcon create() => MaterialEndDrawerButtonIcon._();
  MaterialEndDrawerButtonIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialEndDrawerButtonIcon> createRepeated() => $pb.PbList<MaterialEndDrawerButtonIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialEndDrawerButtonIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialEndDrawerButtonIcon>(create);
  static MaterialEndDrawerButtonIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/material/action_chip.dart
class MaterialActionChip extends $pb.GeneratedMessage {
  factory MaterialActionChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.double? pressElevation,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? disabledColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    return $result;
  }
  MaterialActionChip._() : super();
  factory MaterialActionChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialActionChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialActionChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOS(9, _omitFieldNames ? '' : 'tooltip')
    ..aOB(14, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(23, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialActionChip clone() => MaterialActionChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialActionChip copyWith(void Function(MaterialActionChip) updates) => super.copyWith((message) => updates(message as MaterialActionChip)) as MaterialActionChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialActionChip create() => MaterialActionChip._();
  MaterialActionChip createEmptyInstance() => create();
  static $pb.PbList<MaterialActionChip> createRepeated() => $pb.PbList<MaterialActionChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialActionChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialActionChip>(create);
  static MaterialActionChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.double get pressElevation => $_getN(3);
  @$pb.TagNumber(8)
  set pressElevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasPressElevation() => $_has(3);
  @$pb.TagNumber(8)
  void clearPressElevation() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get tooltip => $_getSZ(4);
  @$pb.TagNumber(9)
  set tooltip($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasTooltip() => $_has(4);
  @$pb.TagNumber(9)
  void clearTooltip() => clearField(9);

  @$pb.TagNumber(14)
  $core.bool get autofocus => $_getBF(5);
  @$pb.TagNumber(14)
  set autofocus($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(14)
  $core.bool hasAutofocus() => $_has(5);
  @$pb.TagNumber(14)
  void clearAutofocus() => clearField(14);

  @$pb.TagNumber(16)
  $1.DartColorExpression get backgroundColor => $_getN(6);
  @$pb.TagNumber(16)
  set backgroundColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasBackgroundColor() => $_has(6);
  @$pb.TagNumber(16)
  void clearBackgroundColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(6);

  @$pb.TagNumber(17)
  $1.DartColorExpression get disabledColor => $_getN(7);
  @$pb.TagNumber(17)
  set disabledColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasDisabledColor() => $_has(7);
  @$pb.TagNumber(17)
  void clearDisabledColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(7);

  @$pb.TagNumber(21)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(21)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(21)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(21)
  void clearElevation() => clearField(21);

  @$pb.TagNumber(22)
  $1.DartColorExpression get shadowColor => $_getN(9);
  @$pb.TagNumber(22)
  set shadowColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasShadowColor() => $_has(9);
  @$pb.TagNumber(22)
  void clearShadowColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureShadowColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $1.DartColorExpression get surfaceTintColor => $_getN(10);
  @$pb.TagNumber(23)
  set surfaceTintColor($1.DartColorExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSurfaceTintColor() => $_has(10);
  @$pb.TagNumber(23)
  void clearSurfaceTintColor() => clearField(23);
  @$pb.TagNumber(23)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(10);
}

/// package:flutter/src/material/action_chip.dart
class MaterialActionChipNamedElevated extends $pb.GeneratedMessage {
  factory MaterialActionChipNamedElevated({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.double? pressElevation,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? disabledColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    return $result;
  }
  MaterialActionChipNamedElevated._() : super();
  factory MaterialActionChipNamedElevated.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialActionChipNamedElevated.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialActionChipNamedElevated', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOS(9, _omitFieldNames ? '' : 'tooltip')
    ..aOB(14, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(23, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialActionChipNamedElevated clone() => MaterialActionChipNamedElevated()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialActionChipNamedElevated copyWith(void Function(MaterialActionChipNamedElevated) updates) => super.copyWith((message) => updates(message as MaterialActionChipNamedElevated)) as MaterialActionChipNamedElevated;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialActionChipNamedElevated create() => MaterialActionChipNamedElevated._();
  MaterialActionChipNamedElevated createEmptyInstance() => create();
  static $pb.PbList<MaterialActionChipNamedElevated> createRepeated() => $pb.PbList<MaterialActionChipNamedElevated>();
  @$core.pragma('dart2js:noInline')
  static MaterialActionChipNamedElevated getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialActionChipNamedElevated>(create);
  static MaterialActionChipNamedElevated? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.double get pressElevation => $_getN(3);
  @$pb.TagNumber(8)
  set pressElevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasPressElevation() => $_has(3);
  @$pb.TagNumber(8)
  void clearPressElevation() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get tooltip => $_getSZ(4);
  @$pb.TagNumber(9)
  set tooltip($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasTooltip() => $_has(4);
  @$pb.TagNumber(9)
  void clearTooltip() => clearField(9);

  @$pb.TagNumber(14)
  $core.bool get autofocus => $_getBF(5);
  @$pb.TagNumber(14)
  set autofocus($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(14)
  $core.bool hasAutofocus() => $_has(5);
  @$pb.TagNumber(14)
  void clearAutofocus() => clearField(14);

  @$pb.TagNumber(16)
  $1.DartColorExpression get backgroundColor => $_getN(6);
  @$pb.TagNumber(16)
  set backgroundColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasBackgroundColor() => $_has(6);
  @$pb.TagNumber(16)
  void clearBackgroundColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(6);

  @$pb.TagNumber(17)
  $1.DartColorExpression get disabledColor => $_getN(7);
  @$pb.TagNumber(17)
  set disabledColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasDisabledColor() => $_has(7);
  @$pb.TagNumber(17)
  void clearDisabledColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(7);

  @$pb.TagNumber(21)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(21)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(21)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(21)
  void clearElevation() => clearField(21);

  @$pb.TagNumber(22)
  $1.DartColorExpression get shadowColor => $_getN(9);
  @$pb.TagNumber(22)
  set shadowColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasShadowColor() => $_has(9);
  @$pb.TagNumber(22)
  void clearShadowColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureShadowColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $1.DartColorExpression get surfaceTintColor => $_getN(10);
  @$pb.TagNumber(23)
  set surfaceTintColor($1.DartColorExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSurfaceTintColor() => $_has(10);
  @$pb.TagNumber(23)
  void clearSurfaceTintColor() => clearField(23);
  @$pb.TagNumber(23)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(10);
}

/// package:flutter/src/material/app.dart
class MaterialMaterialApp extends $pb.GeneratedMessage {
  factory MaterialMaterialApp({
    $1.FlutterKeyExpression? key,
    WidgetExpression? home,
    $core.String? initialRoute,
    $core.String? title,
    $1.DartColorExpression? color,
    $1.DartDurationExpression? themeAnimationDuration,
    $core.bool? debugShowMaterialGrid,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (home != null) {
      $result.home = home;
    }
    if (initialRoute != null) {
      $result.initialRoute = initialRoute;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (themeAnimationDuration != null) {
      $result.themeAnimationDuration = themeAnimationDuration;
    }
    if (debugShowMaterialGrid != null) {
      $result.debugShowMaterialGrid = debugShowMaterialGrid;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  MaterialMaterialApp._() : super();
  factory MaterialMaterialApp.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterialApp.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterialApp', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'home', subBuilder: WidgetExpression.create)
    ..aOS(7, _omitFieldNames ? '' : 'initialRoute')
    ..aOS(13, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(21, _omitFieldNames ? '' : 'themeAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'debugShowMaterialGrid')
    ..aOB(29, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(30, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(31, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(32, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(33, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(36, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterialApp clone() => MaterialMaterialApp()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterialApp copyWith(void Function(MaterialMaterialApp) updates) => super.copyWith((message) => updates(message as MaterialMaterialApp)) as MaterialMaterialApp;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterialApp create() => MaterialMaterialApp._();
  MaterialMaterialApp createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterialApp> createRepeated() => $pb.PbList<MaterialMaterialApp>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterialApp getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterialApp>(create);
  static MaterialMaterialApp? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get home => $_getN(1);
  @$pb.TagNumber(5)
  set home(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasHome() => $_has(1);
  @$pb.TagNumber(5)
  void clearHome() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureHome() => $_ensure(1);

  @$pb.TagNumber(7)
  $core.String get initialRoute => $_getSZ(2);
  @$pb.TagNumber(7)
  set initialRoute($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasInitialRoute() => $_has(2);
  @$pb.TagNumber(7)
  void clearInitialRoute() => clearField(7);

  @$pb.TagNumber(13)
  $core.String get title => $_getSZ(3);
  @$pb.TagNumber(13)
  set title($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(13)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(13)
  void clearTitle() => clearField(13);

  @$pb.TagNumber(15)
  $1.DartColorExpression get color => $_getN(4);
  @$pb.TagNumber(15)
  set color($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasColor() => $_has(4);
  @$pb.TagNumber(15)
  void clearColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureColor() => $_ensure(4);

  @$pb.TagNumber(21)
  $1.DartDurationExpression get themeAnimationDuration => $_getN(5);
  @$pb.TagNumber(21)
  set themeAnimationDuration($1.DartDurationExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasThemeAnimationDuration() => $_has(5);
  @$pb.TagNumber(21)
  void clearThemeAnimationDuration() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartDurationExpression ensureThemeAnimationDuration() => $_ensure(5);

  @$pb.TagNumber(28)
  $core.bool get debugShowMaterialGrid => $_getBF(6);
  @$pb.TagNumber(28)
  set debugShowMaterialGrid($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(28)
  $core.bool hasDebugShowMaterialGrid() => $_has(6);
  @$pb.TagNumber(28)
  void clearDebugShowMaterialGrid() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get showPerformanceOverlay => $_getBF(7);
  @$pb.TagNumber(29)
  set showPerformanceOverlay($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(29)
  $core.bool hasShowPerformanceOverlay() => $_has(7);
  @$pb.TagNumber(29)
  void clearShowPerformanceOverlay() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get checkerboardRasterCacheImages => $_getBF(8);
  @$pb.TagNumber(30)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(30)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(8);
  @$pb.TagNumber(30)
  void clearCheckerboardRasterCacheImages() => clearField(30);

  @$pb.TagNumber(31)
  $core.bool get checkerboardOffscreenLayers => $_getBF(9);
  @$pb.TagNumber(31)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(31)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(9);
  @$pb.TagNumber(31)
  void clearCheckerboardOffscreenLayers() => clearField(31);

  @$pb.TagNumber(32)
  $core.bool get showSemanticsDebugger => $_getBF(10);
  @$pb.TagNumber(32)
  set showSemanticsDebugger($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(32)
  $core.bool hasShowSemanticsDebugger() => $_has(10);
  @$pb.TagNumber(32)
  void clearShowSemanticsDebugger() => clearField(32);

  @$pb.TagNumber(33)
  $core.bool get debugShowCheckedModeBanner => $_getBF(11);
  @$pb.TagNumber(33)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(33)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(11);
  @$pb.TagNumber(33)
  void clearDebugShowCheckedModeBanner() => clearField(33);

  @$pb.TagNumber(36)
  $core.String get restorationScopeId => $_getSZ(12);
  @$pb.TagNumber(36)
  set restorationScopeId($core.String v) { $_setString(12, v); }
  @$pb.TagNumber(36)
  $core.bool hasRestorationScopeId() => $_has(12);
  @$pb.TagNumber(36)
  void clearRestorationScopeId() => clearField(36);
}

/// package:flutter/src/material/app.dart
class MaterialMaterialAppNamedRouter extends $pb.GeneratedMessage {
  factory MaterialMaterialAppNamedRouter({
    $1.FlutterKeyExpression? key,
    $core.String? title,
    $1.DartColorExpression? color,
    $1.DartDurationExpression? themeAnimationDuration,
    $core.bool? debugShowMaterialGrid,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (themeAnimationDuration != null) {
      $result.themeAnimationDuration = themeAnimationDuration;
    }
    if (debugShowMaterialGrid != null) {
      $result.debugShowMaterialGrid = debugShowMaterialGrid;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  MaterialMaterialAppNamedRouter._() : super();
  factory MaterialMaterialAppNamedRouter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterialAppNamedRouter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterialAppNamedRouter', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(10, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(18, _omitFieldNames ? '' : 'themeAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(25, _omitFieldNames ? '' : 'debugShowMaterialGrid')
    ..aOB(26, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(27, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(28, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(29, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(30, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(33, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterialAppNamedRouter clone() => MaterialMaterialAppNamedRouter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterialAppNamedRouter copyWith(void Function(MaterialMaterialAppNamedRouter) updates) => super.copyWith((message) => updates(message as MaterialMaterialAppNamedRouter)) as MaterialMaterialAppNamedRouter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterialAppNamedRouter create() => MaterialMaterialAppNamedRouter._();
  MaterialMaterialAppNamedRouter createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterialAppNamedRouter> createRepeated() => $pb.PbList<MaterialMaterialAppNamedRouter>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterialAppNamedRouter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterialAppNamedRouter>(create);
  static MaterialMaterialAppNamedRouter? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(10)
  $core.String get title => $_getSZ(1);
  @$pb.TagNumber(10)
  set title($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(10)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(10)
  void clearTitle() => clearField(10);

  @$pb.TagNumber(12)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(12)
  set color($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(12)
  void clearColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(18)
  $1.DartDurationExpression get themeAnimationDuration => $_getN(3);
  @$pb.TagNumber(18)
  set themeAnimationDuration($1.DartDurationExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasThemeAnimationDuration() => $_has(3);
  @$pb.TagNumber(18)
  void clearThemeAnimationDuration() => clearField(18);
  @$pb.TagNumber(18)
  $1.DartDurationExpression ensureThemeAnimationDuration() => $_ensure(3);

  @$pb.TagNumber(25)
  $core.bool get debugShowMaterialGrid => $_getBF(4);
  @$pb.TagNumber(25)
  set debugShowMaterialGrid($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(25)
  $core.bool hasDebugShowMaterialGrid() => $_has(4);
  @$pb.TagNumber(25)
  void clearDebugShowMaterialGrid() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get showPerformanceOverlay => $_getBF(5);
  @$pb.TagNumber(26)
  set showPerformanceOverlay($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(26)
  $core.bool hasShowPerformanceOverlay() => $_has(5);
  @$pb.TagNumber(26)
  void clearShowPerformanceOverlay() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get checkerboardRasterCacheImages => $_getBF(6);
  @$pb.TagNumber(27)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(27)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(6);
  @$pb.TagNumber(27)
  void clearCheckerboardRasterCacheImages() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get checkerboardOffscreenLayers => $_getBF(7);
  @$pb.TagNumber(28)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(28)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(7);
  @$pb.TagNumber(28)
  void clearCheckerboardOffscreenLayers() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get showSemanticsDebugger => $_getBF(8);
  @$pb.TagNumber(29)
  set showSemanticsDebugger($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(29)
  $core.bool hasShowSemanticsDebugger() => $_has(8);
  @$pb.TagNumber(29)
  void clearShowSemanticsDebugger() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get debugShowCheckedModeBanner => $_getBF(9);
  @$pb.TagNumber(30)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(30)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(9);
  @$pb.TagNumber(30)
  void clearDebugShowCheckedModeBanner() => clearField(30);

  @$pb.TagNumber(33)
  $core.String get restorationScopeId => $_getSZ(10);
  @$pb.TagNumber(33)
  set restorationScopeId($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(33)
  $core.bool hasRestorationScopeId() => $_has(10);
  @$pb.TagNumber(33)
  void clearRestorationScopeId() => clearField(33);
}

/// package:flutter/src/material/app_bar.dart
class MaterialAppBar extends $pb.GeneratedMessage {
  factory MaterialAppBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    WidgetExpression? title,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? flexibleSpace,
    $core.double? elevation,
    $core.double? scrolledUnderElevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? foregroundColor,
    $core.bool? primary,
    $core.bool? centerTitle,
    $core.bool? excludeHeaderSemantics,
    $core.double? titleSpacing,
    $core.double? toolbarOpacity,
    $core.double? bottomOpacity,
    $core.double? toolbarHeight,
    $core.double? leadingWidth,
    $core.bool? forceMaterialTransparency,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (flexibleSpace != null) {
      $result.flexibleSpace = flexibleSpace;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (scrolledUnderElevation != null) {
      $result.scrolledUnderElevation = scrolledUnderElevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (centerTitle != null) {
      $result.centerTitle = centerTitle;
    }
    if (excludeHeaderSemantics != null) {
      $result.excludeHeaderSemantics = excludeHeaderSemantics;
    }
    if (titleSpacing != null) {
      $result.titleSpacing = titleSpacing;
    }
    if (toolbarOpacity != null) {
      $result.toolbarOpacity = toolbarOpacity;
    }
    if (bottomOpacity != null) {
      $result.bottomOpacity = bottomOpacity;
    }
    if (toolbarHeight != null) {
      $result.toolbarHeight = toolbarHeight;
    }
    if (leadingWidth != null) {
      $result.leadingWidth = leadingWidth;
    }
    if (forceMaterialTransparency != null) {
      $result.forceMaterialTransparency = forceMaterialTransparency;
    }
    return $result;
  }
  MaterialAppBar._() : super();
  factory MaterialAppBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialAppBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialAppBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'flexibleSpace', subBuilder: WidgetExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'scrolledUnderElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(19, _omitFieldNames ? '' : 'primary')
    ..aOB(20, _omitFieldNames ? '' : 'centerTitle')
    ..aOB(21, _omitFieldNames ? '' : 'excludeHeaderSemantics')
    ..a<$core.double>(22, _omitFieldNames ? '' : 'titleSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'toolbarOpacity', $pb.PbFieldType.OD)
    ..a<$core.double>(24, _omitFieldNames ? '' : 'bottomOpacity', $pb.PbFieldType.OD)
    ..a<$core.double>(25, _omitFieldNames ? '' : 'toolbarHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(26, _omitFieldNames ? '' : 'leadingWidth', $pb.PbFieldType.OD)
    ..aOB(30, _omitFieldNames ? '' : 'forceMaterialTransparency')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialAppBar clone() => MaterialAppBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialAppBar copyWith(void Function(MaterialAppBar) updates) => super.copyWith((message) => updates(message as MaterialAppBar)) as MaterialAppBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialAppBar create() => MaterialAppBar._();
  MaterialAppBar createEmptyInstance() => create();
  static $pb.PbList<MaterialAppBar> createRepeated() => $pb.PbList<MaterialAppBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialAppBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialAppBar>(create);
  static MaterialAppBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get automaticallyImplyLeading => $_getBF(2);
  @$pb.TagNumber(4)
  set automaticallyImplyLeading($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAutomaticallyImplyLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearAutomaticallyImplyLeading() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(5)
  set title(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearTitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get actions => $_getList(4);

  @$pb.TagNumber(7)
  WidgetExpression get flexibleSpace => $_getN(5);
  @$pb.TagNumber(7)
  set flexibleSpace(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFlexibleSpace() => $_has(5);
  @$pb.TagNumber(7)
  void clearFlexibleSpace() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureFlexibleSpace() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get scrolledUnderElevation => $_getN(7);
  @$pb.TagNumber(10)
  set scrolledUnderElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasScrolledUnderElevation() => $_has(7);
  @$pb.TagNumber(10)
  void clearScrolledUnderElevation() => clearField(10);

  @$pb.TagNumber(12)
  $1.DartColorExpression get shadowColor => $_getN(8);
  @$pb.TagNumber(12)
  set shadowColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasShadowColor() => $_has(8);
  @$pb.TagNumber(12)
  void clearShadowColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureShadowColor() => $_ensure(8);

  @$pb.TagNumber(13)
  $1.DartColorExpression get surfaceTintColor => $_getN(9);
  @$pb.TagNumber(13)
  set surfaceTintColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasSurfaceTintColor() => $_has(9);
  @$pb.TagNumber(13)
  void clearSurfaceTintColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(9);

  @$pb.TagNumber(15)
  $1.DartColorExpression get backgroundColor => $_getN(10);
  @$pb.TagNumber(15)
  set backgroundColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasBackgroundColor() => $_has(10);
  @$pb.TagNumber(15)
  void clearBackgroundColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(10);

  @$pb.TagNumber(16)
  $1.DartColorExpression get foregroundColor => $_getN(11);
  @$pb.TagNumber(16)
  set foregroundColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasForegroundColor() => $_has(11);
  @$pb.TagNumber(16)
  void clearForegroundColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(11);

  @$pb.TagNumber(19)
  $core.bool get primary => $_getBF(12);
  @$pb.TagNumber(19)
  set primary($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(19)
  $core.bool hasPrimary() => $_has(12);
  @$pb.TagNumber(19)
  void clearPrimary() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get centerTitle => $_getBF(13);
  @$pb.TagNumber(20)
  set centerTitle($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(20)
  $core.bool hasCenterTitle() => $_has(13);
  @$pb.TagNumber(20)
  void clearCenterTitle() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get excludeHeaderSemantics => $_getBF(14);
  @$pb.TagNumber(21)
  set excludeHeaderSemantics($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(21)
  $core.bool hasExcludeHeaderSemantics() => $_has(14);
  @$pb.TagNumber(21)
  void clearExcludeHeaderSemantics() => clearField(21);

  @$pb.TagNumber(22)
  $core.double get titleSpacing => $_getN(15);
  @$pb.TagNumber(22)
  set titleSpacing($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(22)
  $core.bool hasTitleSpacing() => $_has(15);
  @$pb.TagNumber(22)
  void clearTitleSpacing() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get toolbarOpacity => $_getN(16);
  @$pb.TagNumber(23)
  set toolbarOpacity($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(23)
  $core.bool hasToolbarOpacity() => $_has(16);
  @$pb.TagNumber(23)
  void clearToolbarOpacity() => clearField(23);

  @$pb.TagNumber(24)
  $core.double get bottomOpacity => $_getN(17);
  @$pb.TagNumber(24)
  set bottomOpacity($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(24)
  $core.bool hasBottomOpacity() => $_has(17);
  @$pb.TagNumber(24)
  void clearBottomOpacity() => clearField(24);

  @$pb.TagNumber(25)
  $core.double get toolbarHeight => $_getN(18);
  @$pb.TagNumber(25)
  set toolbarHeight($core.double v) { $_setDouble(18, v); }
  @$pb.TagNumber(25)
  $core.bool hasToolbarHeight() => $_has(18);
  @$pb.TagNumber(25)
  void clearToolbarHeight() => clearField(25);

  @$pb.TagNumber(26)
  $core.double get leadingWidth => $_getN(19);
  @$pb.TagNumber(26)
  set leadingWidth($core.double v) { $_setDouble(19, v); }
  @$pb.TagNumber(26)
  $core.bool hasLeadingWidth() => $_has(19);
  @$pb.TagNumber(26)
  void clearLeadingWidth() => clearField(26);

  @$pb.TagNumber(30)
  $core.bool get forceMaterialTransparency => $_getBF(20);
  @$pb.TagNumber(30)
  set forceMaterialTransparency($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(30)
  $core.bool hasForceMaterialTransparency() => $_has(20);
  @$pb.TagNumber(30)
  void clearForceMaterialTransparency() => clearField(30);
}

/// package:flutter/src/material/app_bar.dart
class MaterialSliverAppBar extends $pb.GeneratedMessage {
  factory MaterialSliverAppBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    WidgetExpression? title,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? flexibleSpace,
    $core.double? elevation,
    $core.double? scrolledUnderElevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.bool? forceElevated,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? foregroundColor,
    $core.bool? primary,
    $core.bool? centerTitle,
    $core.bool? excludeHeaderSemantics,
    $core.double? titleSpacing,
    $core.double? collapsedHeight,
    $core.double? expandedHeight,
    $core.bool? floating,
    $core.bool? pinned,
    $core.bool? snap,
    $core.bool? stretch,
    $core.double? stretchTriggerOffset,
    $core.double? toolbarHeight,
    $core.double? leadingWidth,
    $core.bool? forceMaterialTransparency,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (flexibleSpace != null) {
      $result.flexibleSpace = flexibleSpace;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (scrolledUnderElevation != null) {
      $result.scrolledUnderElevation = scrolledUnderElevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (forceElevated != null) {
      $result.forceElevated = forceElevated;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (centerTitle != null) {
      $result.centerTitle = centerTitle;
    }
    if (excludeHeaderSemantics != null) {
      $result.excludeHeaderSemantics = excludeHeaderSemantics;
    }
    if (titleSpacing != null) {
      $result.titleSpacing = titleSpacing;
    }
    if (collapsedHeight != null) {
      $result.collapsedHeight = collapsedHeight;
    }
    if (expandedHeight != null) {
      $result.expandedHeight = expandedHeight;
    }
    if (floating != null) {
      $result.floating = floating;
    }
    if (pinned != null) {
      $result.pinned = pinned;
    }
    if (snap != null) {
      $result.snap = snap;
    }
    if (stretch != null) {
      $result.stretch = stretch;
    }
    if (stretchTriggerOffset != null) {
      $result.stretchTriggerOffset = stretchTriggerOffset;
    }
    if (toolbarHeight != null) {
      $result.toolbarHeight = toolbarHeight;
    }
    if (leadingWidth != null) {
      $result.leadingWidth = leadingWidth;
    }
    if (forceMaterialTransparency != null) {
      $result.forceMaterialTransparency = forceMaterialTransparency;
    }
    return $result;
  }
  MaterialSliverAppBar._() : super();
  factory MaterialSliverAppBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSliverAppBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSliverAppBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'flexibleSpace', subBuilder: WidgetExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'scrolledUnderElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(13, _omitFieldNames ? '' : 'forceElevated')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(18, _omitFieldNames ? '' : 'primary')
    ..aOB(19, _omitFieldNames ? '' : 'centerTitle')
    ..aOB(20, _omitFieldNames ? '' : 'excludeHeaderSemantics')
    ..a<$core.double>(21, _omitFieldNames ? '' : 'titleSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(22, _omitFieldNames ? '' : 'collapsedHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'expandedHeight', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'floating')
    ..aOB(25, _omitFieldNames ? '' : 'pinned')
    ..aOB(26, _omitFieldNames ? '' : 'snap')
    ..aOB(27, _omitFieldNames ? '' : 'stretch')
    ..a<$core.double>(28, _omitFieldNames ? '' : 'stretchTriggerOffset', $pb.PbFieldType.OD)
    ..a<$core.double>(31, _omitFieldNames ? '' : 'toolbarHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(32, _omitFieldNames ? '' : 'leadingWidth', $pb.PbFieldType.OD)
    ..aOB(36, _omitFieldNames ? '' : 'forceMaterialTransparency')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBar clone() => MaterialSliverAppBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBar copyWith(void Function(MaterialSliverAppBar) updates) => super.copyWith((message) => updates(message as MaterialSliverAppBar)) as MaterialSliverAppBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBar create() => MaterialSliverAppBar._();
  MaterialSliverAppBar createEmptyInstance() => create();
  static $pb.PbList<MaterialSliverAppBar> createRepeated() => $pb.PbList<MaterialSliverAppBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSliverAppBar>(create);
  static MaterialSliverAppBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get automaticallyImplyLeading => $_getBF(2);
  @$pb.TagNumber(4)
  set automaticallyImplyLeading($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAutomaticallyImplyLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearAutomaticallyImplyLeading() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(5)
  set title(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearTitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get actions => $_getList(4);

  @$pb.TagNumber(7)
  WidgetExpression get flexibleSpace => $_getN(5);
  @$pb.TagNumber(7)
  set flexibleSpace(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFlexibleSpace() => $_has(5);
  @$pb.TagNumber(7)
  void clearFlexibleSpace() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureFlexibleSpace() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get scrolledUnderElevation => $_getN(7);
  @$pb.TagNumber(10)
  set scrolledUnderElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasScrolledUnderElevation() => $_has(7);
  @$pb.TagNumber(10)
  void clearScrolledUnderElevation() => clearField(10);

  @$pb.TagNumber(11)
  $1.DartColorExpression get shadowColor => $_getN(8);
  @$pb.TagNumber(11)
  set shadowColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasShadowColor() => $_has(8);
  @$pb.TagNumber(11)
  void clearShadowColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureShadowColor() => $_ensure(8);

  @$pb.TagNumber(12)
  $1.DartColorExpression get surfaceTintColor => $_getN(9);
  @$pb.TagNumber(12)
  set surfaceTintColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSurfaceTintColor() => $_has(9);
  @$pb.TagNumber(12)
  void clearSurfaceTintColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(9);

  @$pb.TagNumber(13)
  $core.bool get forceElevated => $_getBF(10);
  @$pb.TagNumber(13)
  set forceElevated($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasForceElevated() => $_has(10);
  @$pb.TagNumber(13)
  void clearForceElevated() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get backgroundColor => $_getN(11);
  @$pb.TagNumber(14)
  set backgroundColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasBackgroundColor() => $_has(11);
  @$pb.TagNumber(14)
  void clearBackgroundColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(11);

  @$pb.TagNumber(15)
  $1.DartColorExpression get foregroundColor => $_getN(12);
  @$pb.TagNumber(15)
  set foregroundColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasForegroundColor() => $_has(12);
  @$pb.TagNumber(15)
  void clearForegroundColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(12);

  @$pb.TagNumber(18)
  $core.bool get primary => $_getBF(13);
  @$pb.TagNumber(18)
  set primary($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(18)
  $core.bool hasPrimary() => $_has(13);
  @$pb.TagNumber(18)
  void clearPrimary() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get centerTitle => $_getBF(14);
  @$pb.TagNumber(19)
  set centerTitle($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(19)
  $core.bool hasCenterTitle() => $_has(14);
  @$pb.TagNumber(19)
  void clearCenterTitle() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get excludeHeaderSemantics => $_getBF(15);
  @$pb.TagNumber(20)
  set excludeHeaderSemantics($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(20)
  $core.bool hasExcludeHeaderSemantics() => $_has(15);
  @$pb.TagNumber(20)
  void clearExcludeHeaderSemantics() => clearField(20);

  @$pb.TagNumber(21)
  $core.double get titleSpacing => $_getN(16);
  @$pb.TagNumber(21)
  set titleSpacing($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(21)
  $core.bool hasTitleSpacing() => $_has(16);
  @$pb.TagNumber(21)
  void clearTitleSpacing() => clearField(21);

  @$pb.TagNumber(22)
  $core.double get collapsedHeight => $_getN(17);
  @$pb.TagNumber(22)
  set collapsedHeight($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(22)
  $core.bool hasCollapsedHeight() => $_has(17);
  @$pb.TagNumber(22)
  void clearCollapsedHeight() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get expandedHeight => $_getN(18);
  @$pb.TagNumber(23)
  set expandedHeight($core.double v) { $_setDouble(18, v); }
  @$pb.TagNumber(23)
  $core.bool hasExpandedHeight() => $_has(18);
  @$pb.TagNumber(23)
  void clearExpandedHeight() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get floating => $_getBF(19);
  @$pb.TagNumber(24)
  set floating($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(24)
  $core.bool hasFloating() => $_has(19);
  @$pb.TagNumber(24)
  void clearFloating() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get pinned => $_getBF(20);
  @$pb.TagNumber(25)
  set pinned($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(25)
  $core.bool hasPinned() => $_has(20);
  @$pb.TagNumber(25)
  void clearPinned() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get snap => $_getBF(21);
  @$pb.TagNumber(26)
  set snap($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(26)
  $core.bool hasSnap() => $_has(21);
  @$pb.TagNumber(26)
  void clearSnap() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get stretch => $_getBF(22);
  @$pb.TagNumber(27)
  set stretch($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(27)
  $core.bool hasStretch() => $_has(22);
  @$pb.TagNumber(27)
  void clearStretch() => clearField(27);

  @$pb.TagNumber(28)
  $core.double get stretchTriggerOffset => $_getN(23);
  @$pb.TagNumber(28)
  set stretchTriggerOffset($core.double v) { $_setDouble(23, v); }
  @$pb.TagNumber(28)
  $core.bool hasStretchTriggerOffset() => $_has(23);
  @$pb.TagNumber(28)
  void clearStretchTriggerOffset() => clearField(28);

  @$pb.TagNumber(31)
  $core.double get toolbarHeight => $_getN(24);
  @$pb.TagNumber(31)
  set toolbarHeight($core.double v) { $_setDouble(24, v); }
  @$pb.TagNumber(31)
  $core.bool hasToolbarHeight() => $_has(24);
  @$pb.TagNumber(31)
  void clearToolbarHeight() => clearField(31);

  @$pb.TagNumber(32)
  $core.double get leadingWidth => $_getN(25);
  @$pb.TagNumber(32)
  set leadingWidth($core.double v) { $_setDouble(25, v); }
  @$pb.TagNumber(32)
  $core.bool hasLeadingWidth() => $_has(25);
  @$pb.TagNumber(32)
  void clearLeadingWidth() => clearField(32);

  @$pb.TagNumber(36)
  $core.bool get forceMaterialTransparency => $_getBF(26);
  @$pb.TagNumber(36)
  set forceMaterialTransparency($core.bool v) { $_setBool(26, v); }
  @$pb.TagNumber(36)
  $core.bool hasForceMaterialTransparency() => $_has(26);
  @$pb.TagNumber(36)
  void clearForceMaterialTransparency() => clearField(36);
}

/// package:flutter/src/material/app_bar.dart
class MaterialSliverAppBarNamedMedium extends $pb.GeneratedMessage {
  factory MaterialSliverAppBarNamedMedium({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    WidgetExpression? title,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? flexibleSpace,
    $core.double? elevation,
    $core.double? scrolledUnderElevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.bool? forceElevated,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? foregroundColor,
    $core.bool? primary,
    $core.bool? centerTitle,
    $core.bool? excludeHeaderSemantics,
    $core.double? titleSpacing,
    $core.double? collapsedHeight,
    $core.double? expandedHeight,
    $core.bool? floating,
    $core.bool? pinned,
    $core.bool? snap,
    $core.bool? stretch,
    $core.double? stretchTriggerOffset,
    $core.double? toolbarHeight,
    $core.double? leadingWidth,
    $core.bool? forceMaterialTransparency,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (flexibleSpace != null) {
      $result.flexibleSpace = flexibleSpace;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (scrolledUnderElevation != null) {
      $result.scrolledUnderElevation = scrolledUnderElevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (forceElevated != null) {
      $result.forceElevated = forceElevated;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (centerTitle != null) {
      $result.centerTitle = centerTitle;
    }
    if (excludeHeaderSemantics != null) {
      $result.excludeHeaderSemantics = excludeHeaderSemantics;
    }
    if (titleSpacing != null) {
      $result.titleSpacing = titleSpacing;
    }
    if (collapsedHeight != null) {
      $result.collapsedHeight = collapsedHeight;
    }
    if (expandedHeight != null) {
      $result.expandedHeight = expandedHeight;
    }
    if (floating != null) {
      $result.floating = floating;
    }
    if (pinned != null) {
      $result.pinned = pinned;
    }
    if (snap != null) {
      $result.snap = snap;
    }
    if (stretch != null) {
      $result.stretch = stretch;
    }
    if (stretchTriggerOffset != null) {
      $result.stretchTriggerOffset = stretchTriggerOffset;
    }
    if (toolbarHeight != null) {
      $result.toolbarHeight = toolbarHeight;
    }
    if (leadingWidth != null) {
      $result.leadingWidth = leadingWidth;
    }
    if (forceMaterialTransparency != null) {
      $result.forceMaterialTransparency = forceMaterialTransparency;
    }
    return $result;
  }
  MaterialSliverAppBarNamedMedium._() : super();
  factory MaterialSliverAppBarNamedMedium.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSliverAppBarNamedMedium.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSliverAppBarNamedMedium', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'flexibleSpace', subBuilder: WidgetExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'scrolledUnderElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(13, _omitFieldNames ? '' : 'forceElevated')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(18, _omitFieldNames ? '' : 'primary')
    ..aOB(19, _omitFieldNames ? '' : 'centerTitle')
    ..aOB(20, _omitFieldNames ? '' : 'excludeHeaderSemantics')
    ..a<$core.double>(21, _omitFieldNames ? '' : 'titleSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(22, _omitFieldNames ? '' : 'collapsedHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'expandedHeight', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'floating')
    ..aOB(25, _omitFieldNames ? '' : 'pinned')
    ..aOB(26, _omitFieldNames ? '' : 'snap')
    ..aOB(27, _omitFieldNames ? '' : 'stretch')
    ..a<$core.double>(28, _omitFieldNames ? '' : 'stretchTriggerOffset', $pb.PbFieldType.OD)
    ..a<$core.double>(31, _omitFieldNames ? '' : 'toolbarHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(32, _omitFieldNames ? '' : 'leadingWidth', $pb.PbFieldType.OD)
    ..aOB(36, _omitFieldNames ? '' : 'forceMaterialTransparency')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBarNamedMedium clone() => MaterialSliverAppBarNamedMedium()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBarNamedMedium copyWith(void Function(MaterialSliverAppBarNamedMedium) updates) => super.copyWith((message) => updates(message as MaterialSliverAppBarNamedMedium)) as MaterialSliverAppBarNamedMedium;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBarNamedMedium create() => MaterialSliverAppBarNamedMedium._();
  MaterialSliverAppBarNamedMedium createEmptyInstance() => create();
  static $pb.PbList<MaterialSliverAppBarNamedMedium> createRepeated() => $pb.PbList<MaterialSliverAppBarNamedMedium>();
  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBarNamedMedium getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSliverAppBarNamedMedium>(create);
  static MaterialSliverAppBarNamedMedium? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get automaticallyImplyLeading => $_getBF(2);
  @$pb.TagNumber(4)
  set automaticallyImplyLeading($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAutomaticallyImplyLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearAutomaticallyImplyLeading() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(5)
  set title(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearTitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get actions => $_getList(4);

  @$pb.TagNumber(7)
  WidgetExpression get flexibleSpace => $_getN(5);
  @$pb.TagNumber(7)
  set flexibleSpace(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFlexibleSpace() => $_has(5);
  @$pb.TagNumber(7)
  void clearFlexibleSpace() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureFlexibleSpace() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get scrolledUnderElevation => $_getN(7);
  @$pb.TagNumber(10)
  set scrolledUnderElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasScrolledUnderElevation() => $_has(7);
  @$pb.TagNumber(10)
  void clearScrolledUnderElevation() => clearField(10);

  @$pb.TagNumber(11)
  $1.DartColorExpression get shadowColor => $_getN(8);
  @$pb.TagNumber(11)
  set shadowColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasShadowColor() => $_has(8);
  @$pb.TagNumber(11)
  void clearShadowColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureShadowColor() => $_ensure(8);

  @$pb.TagNumber(12)
  $1.DartColorExpression get surfaceTintColor => $_getN(9);
  @$pb.TagNumber(12)
  set surfaceTintColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSurfaceTintColor() => $_has(9);
  @$pb.TagNumber(12)
  void clearSurfaceTintColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(9);

  @$pb.TagNumber(13)
  $core.bool get forceElevated => $_getBF(10);
  @$pb.TagNumber(13)
  set forceElevated($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasForceElevated() => $_has(10);
  @$pb.TagNumber(13)
  void clearForceElevated() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get backgroundColor => $_getN(11);
  @$pb.TagNumber(14)
  set backgroundColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasBackgroundColor() => $_has(11);
  @$pb.TagNumber(14)
  void clearBackgroundColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(11);

  @$pb.TagNumber(15)
  $1.DartColorExpression get foregroundColor => $_getN(12);
  @$pb.TagNumber(15)
  set foregroundColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasForegroundColor() => $_has(12);
  @$pb.TagNumber(15)
  void clearForegroundColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(12);

  @$pb.TagNumber(18)
  $core.bool get primary => $_getBF(13);
  @$pb.TagNumber(18)
  set primary($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(18)
  $core.bool hasPrimary() => $_has(13);
  @$pb.TagNumber(18)
  void clearPrimary() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get centerTitle => $_getBF(14);
  @$pb.TagNumber(19)
  set centerTitle($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(19)
  $core.bool hasCenterTitle() => $_has(14);
  @$pb.TagNumber(19)
  void clearCenterTitle() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get excludeHeaderSemantics => $_getBF(15);
  @$pb.TagNumber(20)
  set excludeHeaderSemantics($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(20)
  $core.bool hasExcludeHeaderSemantics() => $_has(15);
  @$pb.TagNumber(20)
  void clearExcludeHeaderSemantics() => clearField(20);

  @$pb.TagNumber(21)
  $core.double get titleSpacing => $_getN(16);
  @$pb.TagNumber(21)
  set titleSpacing($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(21)
  $core.bool hasTitleSpacing() => $_has(16);
  @$pb.TagNumber(21)
  void clearTitleSpacing() => clearField(21);

  @$pb.TagNumber(22)
  $core.double get collapsedHeight => $_getN(17);
  @$pb.TagNumber(22)
  set collapsedHeight($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(22)
  $core.bool hasCollapsedHeight() => $_has(17);
  @$pb.TagNumber(22)
  void clearCollapsedHeight() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get expandedHeight => $_getN(18);
  @$pb.TagNumber(23)
  set expandedHeight($core.double v) { $_setDouble(18, v); }
  @$pb.TagNumber(23)
  $core.bool hasExpandedHeight() => $_has(18);
  @$pb.TagNumber(23)
  void clearExpandedHeight() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get floating => $_getBF(19);
  @$pb.TagNumber(24)
  set floating($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(24)
  $core.bool hasFloating() => $_has(19);
  @$pb.TagNumber(24)
  void clearFloating() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get pinned => $_getBF(20);
  @$pb.TagNumber(25)
  set pinned($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(25)
  $core.bool hasPinned() => $_has(20);
  @$pb.TagNumber(25)
  void clearPinned() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get snap => $_getBF(21);
  @$pb.TagNumber(26)
  set snap($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(26)
  $core.bool hasSnap() => $_has(21);
  @$pb.TagNumber(26)
  void clearSnap() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get stretch => $_getBF(22);
  @$pb.TagNumber(27)
  set stretch($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(27)
  $core.bool hasStretch() => $_has(22);
  @$pb.TagNumber(27)
  void clearStretch() => clearField(27);

  @$pb.TagNumber(28)
  $core.double get stretchTriggerOffset => $_getN(23);
  @$pb.TagNumber(28)
  set stretchTriggerOffset($core.double v) { $_setDouble(23, v); }
  @$pb.TagNumber(28)
  $core.bool hasStretchTriggerOffset() => $_has(23);
  @$pb.TagNumber(28)
  void clearStretchTriggerOffset() => clearField(28);

  @$pb.TagNumber(31)
  $core.double get toolbarHeight => $_getN(24);
  @$pb.TagNumber(31)
  set toolbarHeight($core.double v) { $_setDouble(24, v); }
  @$pb.TagNumber(31)
  $core.bool hasToolbarHeight() => $_has(24);
  @$pb.TagNumber(31)
  void clearToolbarHeight() => clearField(31);

  @$pb.TagNumber(32)
  $core.double get leadingWidth => $_getN(25);
  @$pb.TagNumber(32)
  set leadingWidth($core.double v) { $_setDouble(25, v); }
  @$pb.TagNumber(32)
  $core.bool hasLeadingWidth() => $_has(25);
  @$pb.TagNumber(32)
  void clearLeadingWidth() => clearField(32);

  @$pb.TagNumber(36)
  $core.bool get forceMaterialTransparency => $_getBF(26);
  @$pb.TagNumber(36)
  set forceMaterialTransparency($core.bool v) { $_setBool(26, v); }
  @$pb.TagNumber(36)
  $core.bool hasForceMaterialTransparency() => $_has(26);
  @$pb.TagNumber(36)
  void clearForceMaterialTransparency() => clearField(36);
}

/// package:flutter/src/material/app_bar.dart
class MaterialSliverAppBarNamedLarge extends $pb.GeneratedMessage {
  factory MaterialSliverAppBarNamedLarge({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    $core.bool? automaticallyImplyLeading,
    WidgetExpression? title,
    $core.Iterable<WidgetExpression>? actions,
    WidgetExpression? flexibleSpace,
    $core.double? elevation,
    $core.double? scrolledUnderElevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.bool? forceElevated,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? foregroundColor,
    $core.bool? primary,
    $core.bool? centerTitle,
    $core.bool? excludeHeaderSemantics,
    $core.double? titleSpacing,
    $core.double? collapsedHeight,
    $core.double? expandedHeight,
    $core.bool? floating,
    $core.bool? pinned,
    $core.bool? snap,
    $core.bool? stretch,
    $core.double? stretchTriggerOffset,
    $core.double? toolbarHeight,
    $core.double? leadingWidth,
    $core.bool? forceMaterialTransparency,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (automaticallyImplyLeading != null) {
      $result.automaticallyImplyLeading = automaticallyImplyLeading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (flexibleSpace != null) {
      $result.flexibleSpace = flexibleSpace;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (scrolledUnderElevation != null) {
      $result.scrolledUnderElevation = scrolledUnderElevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (forceElevated != null) {
      $result.forceElevated = forceElevated;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (centerTitle != null) {
      $result.centerTitle = centerTitle;
    }
    if (excludeHeaderSemantics != null) {
      $result.excludeHeaderSemantics = excludeHeaderSemantics;
    }
    if (titleSpacing != null) {
      $result.titleSpacing = titleSpacing;
    }
    if (collapsedHeight != null) {
      $result.collapsedHeight = collapsedHeight;
    }
    if (expandedHeight != null) {
      $result.expandedHeight = expandedHeight;
    }
    if (floating != null) {
      $result.floating = floating;
    }
    if (pinned != null) {
      $result.pinned = pinned;
    }
    if (snap != null) {
      $result.snap = snap;
    }
    if (stretch != null) {
      $result.stretch = stretch;
    }
    if (stretchTriggerOffset != null) {
      $result.stretchTriggerOffset = stretchTriggerOffset;
    }
    if (toolbarHeight != null) {
      $result.toolbarHeight = toolbarHeight;
    }
    if (leadingWidth != null) {
      $result.leadingWidth = leadingWidth;
    }
    if (forceMaterialTransparency != null) {
      $result.forceMaterialTransparency = forceMaterialTransparency;
    }
    return $result;
  }
  MaterialSliverAppBarNamedLarge._() : super();
  factory MaterialSliverAppBarNamedLarge.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSliverAppBarNamedLarge.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSliverAppBarNamedLarge', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'automaticallyImplyLeading')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'flexibleSpace', subBuilder: WidgetExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'scrolledUnderElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(13, _omitFieldNames ? '' : 'forceElevated')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(18, _omitFieldNames ? '' : 'primary')
    ..aOB(19, _omitFieldNames ? '' : 'centerTitle')
    ..aOB(20, _omitFieldNames ? '' : 'excludeHeaderSemantics')
    ..a<$core.double>(21, _omitFieldNames ? '' : 'titleSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(22, _omitFieldNames ? '' : 'collapsedHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'expandedHeight', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'floating')
    ..aOB(25, _omitFieldNames ? '' : 'pinned')
    ..aOB(26, _omitFieldNames ? '' : 'snap')
    ..aOB(27, _omitFieldNames ? '' : 'stretch')
    ..a<$core.double>(28, _omitFieldNames ? '' : 'stretchTriggerOffset', $pb.PbFieldType.OD)
    ..a<$core.double>(31, _omitFieldNames ? '' : 'toolbarHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(32, _omitFieldNames ? '' : 'leadingWidth', $pb.PbFieldType.OD)
    ..aOB(36, _omitFieldNames ? '' : 'forceMaterialTransparency')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBarNamedLarge clone() => MaterialSliverAppBarNamedLarge()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSliverAppBarNamedLarge copyWith(void Function(MaterialSliverAppBarNamedLarge) updates) => super.copyWith((message) => updates(message as MaterialSliverAppBarNamedLarge)) as MaterialSliverAppBarNamedLarge;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBarNamedLarge create() => MaterialSliverAppBarNamedLarge._();
  MaterialSliverAppBarNamedLarge createEmptyInstance() => create();
  static $pb.PbList<MaterialSliverAppBarNamedLarge> createRepeated() => $pb.PbList<MaterialSliverAppBarNamedLarge>();
  @$core.pragma('dart2js:noInline')
  static MaterialSliverAppBarNamedLarge getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSliverAppBarNamedLarge>(create);
  static MaterialSliverAppBarNamedLarge? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get automaticallyImplyLeading => $_getBF(2);
  @$pb.TagNumber(4)
  set automaticallyImplyLeading($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAutomaticallyImplyLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearAutomaticallyImplyLeading() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(5)
  set title(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearTitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get actions => $_getList(4);

  @$pb.TagNumber(7)
  WidgetExpression get flexibleSpace => $_getN(5);
  @$pb.TagNumber(7)
  set flexibleSpace(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFlexibleSpace() => $_has(5);
  @$pb.TagNumber(7)
  void clearFlexibleSpace() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureFlexibleSpace() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get scrolledUnderElevation => $_getN(7);
  @$pb.TagNumber(10)
  set scrolledUnderElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasScrolledUnderElevation() => $_has(7);
  @$pb.TagNumber(10)
  void clearScrolledUnderElevation() => clearField(10);

  @$pb.TagNumber(11)
  $1.DartColorExpression get shadowColor => $_getN(8);
  @$pb.TagNumber(11)
  set shadowColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasShadowColor() => $_has(8);
  @$pb.TagNumber(11)
  void clearShadowColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureShadowColor() => $_ensure(8);

  @$pb.TagNumber(12)
  $1.DartColorExpression get surfaceTintColor => $_getN(9);
  @$pb.TagNumber(12)
  set surfaceTintColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSurfaceTintColor() => $_has(9);
  @$pb.TagNumber(12)
  void clearSurfaceTintColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(9);

  @$pb.TagNumber(13)
  $core.bool get forceElevated => $_getBF(10);
  @$pb.TagNumber(13)
  set forceElevated($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasForceElevated() => $_has(10);
  @$pb.TagNumber(13)
  void clearForceElevated() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get backgroundColor => $_getN(11);
  @$pb.TagNumber(14)
  set backgroundColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasBackgroundColor() => $_has(11);
  @$pb.TagNumber(14)
  void clearBackgroundColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(11);

  @$pb.TagNumber(15)
  $1.DartColorExpression get foregroundColor => $_getN(12);
  @$pb.TagNumber(15)
  set foregroundColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasForegroundColor() => $_has(12);
  @$pb.TagNumber(15)
  void clearForegroundColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(12);

  @$pb.TagNumber(18)
  $core.bool get primary => $_getBF(13);
  @$pb.TagNumber(18)
  set primary($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(18)
  $core.bool hasPrimary() => $_has(13);
  @$pb.TagNumber(18)
  void clearPrimary() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get centerTitle => $_getBF(14);
  @$pb.TagNumber(19)
  set centerTitle($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(19)
  $core.bool hasCenterTitle() => $_has(14);
  @$pb.TagNumber(19)
  void clearCenterTitle() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get excludeHeaderSemantics => $_getBF(15);
  @$pb.TagNumber(20)
  set excludeHeaderSemantics($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(20)
  $core.bool hasExcludeHeaderSemantics() => $_has(15);
  @$pb.TagNumber(20)
  void clearExcludeHeaderSemantics() => clearField(20);

  @$pb.TagNumber(21)
  $core.double get titleSpacing => $_getN(16);
  @$pb.TagNumber(21)
  set titleSpacing($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(21)
  $core.bool hasTitleSpacing() => $_has(16);
  @$pb.TagNumber(21)
  void clearTitleSpacing() => clearField(21);

  @$pb.TagNumber(22)
  $core.double get collapsedHeight => $_getN(17);
  @$pb.TagNumber(22)
  set collapsedHeight($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(22)
  $core.bool hasCollapsedHeight() => $_has(17);
  @$pb.TagNumber(22)
  void clearCollapsedHeight() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get expandedHeight => $_getN(18);
  @$pb.TagNumber(23)
  set expandedHeight($core.double v) { $_setDouble(18, v); }
  @$pb.TagNumber(23)
  $core.bool hasExpandedHeight() => $_has(18);
  @$pb.TagNumber(23)
  void clearExpandedHeight() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get floating => $_getBF(19);
  @$pb.TagNumber(24)
  set floating($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(24)
  $core.bool hasFloating() => $_has(19);
  @$pb.TagNumber(24)
  void clearFloating() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get pinned => $_getBF(20);
  @$pb.TagNumber(25)
  set pinned($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(25)
  $core.bool hasPinned() => $_has(20);
  @$pb.TagNumber(25)
  void clearPinned() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get snap => $_getBF(21);
  @$pb.TagNumber(26)
  set snap($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(26)
  $core.bool hasSnap() => $_has(21);
  @$pb.TagNumber(26)
  void clearSnap() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get stretch => $_getBF(22);
  @$pb.TagNumber(27)
  set stretch($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(27)
  $core.bool hasStretch() => $_has(22);
  @$pb.TagNumber(27)
  void clearStretch() => clearField(27);

  @$pb.TagNumber(28)
  $core.double get stretchTriggerOffset => $_getN(23);
  @$pb.TagNumber(28)
  set stretchTriggerOffset($core.double v) { $_setDouble(23, v); }
  @$pb.TagNumber(28)
  $core.bool hasStretchTriggerOffset() => $_has(23);
  @$pb.TagNumber(28)
  void clearStretchTriggerOffset() => clearField(28);

  @$pb.TagNumber(31)
  $core.double get toolbarHeight => $_getN(24);
  @$pb.TagNumber(31)
  set toolbarHeight($core.double v) { $_setDouble(24, v); }
  @$pb.TagNumber(31)
  $core.bool hasToolbarHeight() => $_has(24);
  @$pb.TagNumber(31)
  void clearToolbarHeight() => clearField(31);

  @$pb.TagNumber(32)
  $core.double get leadingWidth => $_getN(25);
  @$pb.TagNumber(32)
  set leadingWidth($core.double v) { $_setDouble(25, v); }
  @$pb.TagNumber(32)
  $core.bool hasLeadingWidth() => $_has(25);
  @$pb.TagNumber(32)
  void clearLeadingWidth() => clearField(32);

  @$pb.TagNumber(36)
  $core.bool get forceMaterialTransparency => $_getBF(26);
  @$pb.TagNumber(36)
  set forceMaterialTransparency($core.bool v) { $_setBool(26, v); }
  @$pb.TagNumber(36)
  $core.bool hasForceMaterialTransparency() => $_has(26);
  @$pb.TagNumber(36)
  void clearForceMaterialTransparency() => clearField(36);
}

/// package:flutter/src/material/badge.dart
class MaterialBadge extends $pb.GeneratedMessage {
  factory MaterialBadge({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? textColor,
    $core.double? smallSize,
    $core.double? largeSize,
    WidgetExpression? label,
    $core.bool? isLabelVisible,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (smallSize != null) {
      $result.smallSize = smallSize;
    }
    if (largeSize != null) {
      $result.largeSize = largeSize;
    }
    if (label != null) {
      $result.label = label;
    }
    if (isLabelVisible != null) {
      $result.isLabelVisible = isLabelVisible;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialBadge._() : super();
  factory MaterialBadge.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialBadge.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialBadge', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'smallSize', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'largeSize', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(11, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOB(12, _omitFieldNames ? '' : 'isLabelVisible')
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialBadge clone() => MaterialBadge()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialBadge copyWith(void Function(MaterialBadge) updates) => super.copyWith((message) => updates(message as MaterialBadge)) as MaterialBadge;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialBadge create() => MaterialBadge._();
  MaterialBadge createEmptyInstance() => create();
  static $pb.PbList<MaterialBadge> createRepeated() => $pb.PbList<MaterialBadge>();
  @$core.pragma('dart2js:noInline')
  static MaterialBadge getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialBadge>(create);
  static MaterialBadge? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get textColor => $_getN(2);
  @$pb.TagNumber(4)
  set textColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTextColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearTextColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureTextColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.double get smallSize => $_getN(3);
  @$pb.TagNumber(5)
  set smallSize($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasSmallSize() => $_has(3);
  @$pb.TagNumber(5)
  void clearSmallSize() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get largeSize => $_getN(4);
  @$pb.TagNumber(6)
  set largeSize($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasLargeSize() => $_has(4);
  @$pb.TagNumber(6)
  void clearLargeSize() => clearField(6);

  @$pb.TagNumber(11)
  WidgetExpression get label => $_getN(5);
  @$pb.TagNumber(11)
  set label(WidgetExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasLabel() => $_has(5);
  @$pb.TagNumber(11)
  void clearLabel() => clearField(11);
  @$pb.TagNumber(11)
  WidgetExpression ensureLabel() => $_ensure(5);

  @$pb.TagNumber(12)
  $core.bool get isLabelVisible => $_getBF(6);
  @$pb.TagNumber(12)
  set isLabelVisible($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasIsLabelVisible() => $_has(6);
  @$pb.TagNumber(12)
  void clearIsLabelVisible() => clearField(12);

  @$pb.TagNumber(13)
  WidgetExpression get child => $_getN(7);
  @$pb.TagNumber(13)
  set child(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasChild() => $_has(7);
  @$pb.TagNumber(13)
  void clearChild() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureChild() => $_ensure(7);
}

/// package:flutter/src/material/badge.dart
class MaterialBadgeNamedCount extends $pb.GeneratedMessage {
  factory MaterialBadgeNamedCount({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? textColor,
    $core.double? smallSize,
    $core.double? largeSize,
    $core.int? count,
    $core.bool? isLabelVisible,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (smallSize != null) {
      $result.smallSize = smallSize;
    }
    if (largeSize != null) {
      $result.largeSize = largeSize;
    }
    if (count != null) {
      $result.count = count;
    }
    if (isLabelVisible != null) {
      $result.isLabelVisible = isLabelVisible;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialBadgeNamedCount._() : super();
  factory MaterialBadgeNamedCount.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialBadgeNamedCount.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialBadgeNamedCount', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'smallSize', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'largeSize', $pb.PbFieldType.OD)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'count', $pb.PbFieldType.O3)
    ..aOB(12, _omitFieldNames ? '' : 'isLabelVisible')
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialBadgeNamedCount clone() => MaterialBadgeNamedCount()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialBadgeNamedCount copyWith(void Function(MaterialBadgeNamedCount) updates) => super.copyWith((message) => updates(message as MaterialBadgeNamedCount)) as MaterialBadgeNamedCount;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialBadgeNamedCount create() => MaterialBadgeNamedCount._();
  MaterialBadgeNamedCount createEmptyInstance() => create();
  static $pb.PbList<MaterialBadgeNamedCount> createRepeated() => $pb.PbList<MaterialBadgeNamedCount>();
  @$core.pragma('dart2js:noInline')
  static MaterialBadgeNamedCount getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialBadgeNamedCount>(create);
  static MaterialBadgeNamedCount? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get textColor => $_getN(2);
  @$pb.TagNumber(4)
  set textColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTextColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearTextColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureTextColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.double get smallSize => $_getN(3);
  @$pb.TagNumber(5)
  set smallSize($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasSmallSize() => $_has(3);
  @$pb.TagNumber(5)
  void clearSmallSize() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get largeSize => $_getN(4);
  @$pb.TagNumber(6)
  set largeSize($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasLargeSize() => $_has(4);
  @$pb.TagNumber(6)
  void clearLargeSize() => clearField(6);

  @$pb.TagNumber(11)
  $core.int get count => $_getIZ(5);
  @$pb.TagNumber(11)
  set count($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasCount() => $_has(5);
  @$pb.TagNumber(11)
  void clearCount() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get isLabelVisible => $_getBF(6);
  @$pb.TagNumber(12)
  set isLabelVisible($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasIsLabelVisible() => $_has(6);
  @$pb.TagNumber(12)
  void clearIsLabelVisible() => clearField(12);

  @$pb.TagNumber(13)
  WidgetExpression get child => $_getN(7);
  @$pb.TagNumber(13)
  set child(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasChild() => $_has(7);
  @$pb.TagNumber(13)
  void clearChild() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureChild() => $_ensure(7);
}

/// package:flutter/src/material/banner.dart
class MaterialMaterialBanner extends $pb.GeneratedMessage {
  factory MaterialMaterialBanner({
    $1.FlutterKeyExpression? key,
    WidgetExpression? content,
    $core.Iterable<WidgetExpression>? actions,
    $core.double? elevation,
    WidgetExpression? leading,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? dividerColor,
    $core.bool? forceActionsBelow,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (content != null) {
      $result.content = content;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    if (forceActionsBelow != null) {
      $result.forceActionsBelow = forceActionsBelow;
    }
    return $result;
  }
  MaterialMaterialBanner._() : super();
  factory MaterialMaterialBanner.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterialBanner.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterialBanner', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'content', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(5, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(15, _omitFieldNames ? '' : 'forceActionsBelow')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterialBanner clone() => MaterialMaterialBanner()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterialBanner copyWith(void Function(MaterialMaterialBanner) updates) => super.copyWith((message) => updates(message as MaterialMaterialBanner)) as MaterialMaterialBanner;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterialBanner create() => MaterialMaterialBanner._();
  MaterialMaterialBanner createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterialBanner> createRepeated() => $pb.PbList<MaterialMaterialBanner>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterialBanner getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterialBanner>(create);
  static MaterialMaterialBanner? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get content => $_getN(1);
  @$pb.TagNumber(3)
  set content(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasContent() => $_has(1);
  @$pb.TagNumber(3)
  void clearContent() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureContent() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.List<WidgetExpression> get actions => $_getList(2);

  @$pb.TagNumber(6)
  $core.double get elevation => $_getN(3);
  @$pb.TagNumber(6)
  set elevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(6)
  void clearElevation() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get leading => $_getN(4);
  @$pb.TagNumber(7)
  set leading(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasLeading() => $_has(4);
  @$pb.TagNumber(7)
  void clearLeading() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureLeading() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get backgroundColor => $_getN(5);
  @$pb.TagNumber(8)
  set backgroundColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasBackgroundColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearBackgroundColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(5);

  @$pb.TagNumber(9)
  $1.DartColorExpression get surfaceTintColor => $_getN(6);
  @$pb.TagNumber(9)
  set surfaceTintColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasSurfaceTintColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearSurfaceTintColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(6);

  @$pb.TagNumber(10)
  $1.DartColorExpression get shadowColor => $_getN(7);
  @$pb.TagNumber(10)
  set shadowColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasShadowColor() => $_has(7);
  @$pb.TagNumber(10)
  void clearShadowColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureShadowColor() => $_ensure(7);

  @$pb.TagNumber(11)
  $1.DartColorExpression get dividerColor => $_getN(8);
  @$pb.TagNumber(11)
  set dividerColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDividerColor() => $_has(8);
  @$pb.TagNumber(11)
  void clearDividerColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureDividerColor() => $_ensure(8);

  @$pb.TagNumber(15)
  $core.bool get forceActionsBelow => $_getBF(9);
  @$pb.TagNumber(15)
  set forceActionsBelow($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(15)
  $core.bool hasForceActionsBelow() => $_has(9);
  @$pb.TagNumber(15)
  void clearForceActionsBelow() => clearField(15);
}

/// package:flutter/src/material/banner_theme.dart
class MaterialMaterialBannerTheme extends $pb.GeneratedMessage {
  factory MaterialMaterialBannerTheme({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMaterialBannerTheme._() : super();
  factory MaterialMaterialBannerTheme.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterialBannerTheme.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterialBannerTheme', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterialBannerTheme clone() => MaterialMaterialBannerTheme()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterialBannerTheme copyWith(void Function(MaterialMaterialBannerTheme) updates) => super.copyWith((message) => updates(message as MaterialMaterialBannerTheme)) as MaterialMaterialBannerTheme;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterialBannerTheme create() => MaterialMaterialBannerTheme._();
  MaterialMaterialBannerTheme createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterialBannerTheme> createRepeated() => $pb.PbList<MaterialMaterialBannerTheme>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterialBannerTheme getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterialBannerTheme>(create);
  static MaterialMaterialBannerTheme? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/bottom_app_bar.dart
class MaterialBottomAppBar extends $pb.GeneratedMessage {
  factory MaterialBottomAppBar({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? elevation,
    $core.double? notchMargin,
    WidgetExpression? child,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? shadowColor,
    $core.double? height,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (notchMargin != null) {
      $result.notchMargin = notchMargin;
    }
    if (child != null) {
      $result.child = child;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (height != null) {
      $result.height = height;
    }
    return $result;
  }
  MaterialBottomAppBar._() : super();
  factory MaterialBottomAppBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialBottomAppBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialBottomAppBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'notchMargin', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialBottomAppBar clone() => MaterialBottomAppBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialBottomAppBar copyWith(void Function(MaterialBottomAppBar) updates) => super.copyWith((message) => updates(message as MaterialBottomAppBar)) as MaterialBottomAppBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialBottomAppBar create() => MaterialBottomAppBar._();
  MaterialBottomAppBar createEmptyInstance() => create();
  static $pb.PbList<MaterialBottomAppBar> createRepeated() => $pb.PbList<MaterialBottomAppBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialBottomAppBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialBottomAppBar>(create);
  static MaterialBottomAppBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get elevation => $_getN(2);
  @$pb.TagNumber(4)
  set elevation($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasElevation() => $_has(2);
  @$pb.TagNumber(4)
  void clearElevation() => clearField(4);

  @$pb.TagNumber(7)
  $core.double get notchMargin => $_getN(3);
  @$pb.TagNumber(7)
  set notchMargin($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasNotchMargin() => $_has(3);
  @$pb.TagNumber(7)
  void clearNotchMargin() => clearField(7);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get surfaceTintColor => $_getN(5);
  @$pb.TagNumber(10)
  set surfaceTintColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasSurfaceTintColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearSurfaceTintColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get shadowColor => $_getN(6);
  @$pb.TagNumber(11)
  set shadowColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasShadowColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearShadowColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureShadowColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.double get height => $_getN(7);
  @$pb.TagNumber(12)
  set height($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasHeight() => $_has(7);
  @$pb.TagNumber(12)
  void clearHeight() => clearField(12);
}

/// package:flutter/src/material/button.dart
class MaterialRawMaterialButton extends $pb.GeneratedMessage {
  factory MaterialRawMaterialButton({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? fillColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $1.DartDurationExpression? animationDuration,
    $core.bool? autofocus,
    WidgetExpression? child,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (fillColor != null) {
      $result.fillColor = fillColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (child != null) {
      $result.child = child;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialRawMaterialButton._() : super();
  factory MaterialRawMaterialButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialRawMaterialButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialRawMaterialButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'fillColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(16, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(22, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(25, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(27, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialRawMaterialButton clone() => MaterialRawMaterialButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialRawMaterialButton copyWith(void Function(MaterialRawMaterialButton) updates) => super.copyWith((message) => updates(message as MaterialRawMaterialButton)) as MaterialRawMaterialButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialRawMaterialButton create() => MaterialRawMaterialButton._();
  MaterialRawMaterialButton createEmptyInstance() => create();
  static $pb.PbList<MaterialRawMaterialButton> createRepeated() => $pb.PbList<MaterialRawMaterialButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialRawMaterialButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialRawMaterialButton>(create);
  static MaterialRawMaterialButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $1.DartColorExpression get fillColor => $_getN(1);
  @$pb.TagNumber(8)
  set fillColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasFillColor() => $_has(1);
  @$pb.TagNumber(8)
  void clearFillColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureFillColor() => $_ensure(1);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(2);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(2);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(2);

  @$pb.TagNumber(10)
  $1.DartColorExpression get hoverColor => $_getN(3);
  @$pb.TagNumber(10)
  set hoverColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHoverColor() => $_has(3);
  @$pb.TagNumber(10)
  void clearHoverColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureHoverColor() => $_ensure(3);

  @$pb.TagNumber(11)
  $1.DartColorExpression get highlightColor => $_getN(4);
  @$pb.TagNumber(11)
  set highlightColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHighlightColor() => $_has(4);
  @$pb.TagNumber(11)
  void clearHighlightColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(4);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(5);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(5);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(5);

  @$pb.TagNumber(13)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(13)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(13)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(13)
  void clearElevation() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get focusElevation => $_getN(7);
  @$pb.TagNumber(14)
  set focusElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(14)
  $core.bool hasFocusElevation() => $_has(7);
  @$pb.TagNumber(14)
  void clearFocusElevation() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get hoverElevation => $_getN(8);
  @$pb.TagNumber(15)
  set hoverElevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(15)
  $core.bool hasHoverElevation() => $_has(8);
  @$pb.TagNumber(15)
  void clearHoverElevation() => clearField(15);

  @$pb.TagNumber(16)
  $core.double get highlightElevation => $_getN(9);
  @$pb.TagNumber(16)
  set highlightElevation($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(16)
  $core.bool hasHighlightElevation() => $_has(9);
  @$pb.TagNumber(16)
  void clearHighlightElevation() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get disabledElevation => $_getN(10);
  @$pb.TagNumber(17)
  set disabledElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(17)
  $core.bool hasDisabledElevation() => $_has(10);
  @$pb.TagNumber(17)
  void clearDisabledElevation() => clearField(17);

  @$pb.TagNumber(22)
  $1.DartDurationExpression get animationDuration => $_getN(11);
  @$pb.TagNumber(22)
  set animationDuration($1.DartDurationExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasAnimationDuration() => $_has(11);
  @$pb.TagNumber(22)
  void clearAnimationDuration() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(11);

  @$pb.TagNumber(25)
  $core.bool get autofocus => $_getBF(12);
  @$pb.TagNumber(25)
  set autofocus($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(25)
  $core.bool hasAutofocus() => $_has(12);
  @$pb.TagNumber(25)
  void clearAutofocus() => clearField(25);

  @$pb.TagNumber(27)
  WidgetExpression get child => $_getN(13);
  @$pb.TagNumber(27)
  set child(WidgetExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasChild() => $_has(13);
  @$pb.TagNumber(27)
  void clearChild() => clearField(27);
  @$pb.TagNumber(27)
  WidgetExpression ensureChild() => $_ensure(13);

  @$pb.TagNumber(28)
  $core.bool get enableFeedback => $_getBF(14);
  @$pb.TagNumber(28)
  set enableFeedback($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(28)
  $core.bool hasEnableFeedback() => $_has(14);
  @$pb.TagNumber(28)
  void clearEnableFeedback() => clearField(28);
}

/// package:flutter/src/material/button_bar.dart
class MaterialButtonBar extends $pb.GeneratedMessage {
  factory MaterialButtonBar({
    $1.FlutterKeyExpression? key,
    $core.double? buttonMinWidth,
    $core.double? buttonHeight,
    $core.bool? buttonAlignedDropdown,
    $core.double? overflowButtonSpacing,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (buttonMinWidth != null) {
      $result.buttonMinWidth = buttonMinWidth;
    }
    if (buttonHeight != null) {
      $result.buttonHeight = buttonHeight;
    }
    if (buttonAlignedDropdown != null) {
      $result.buttonAlignedDropdown = buttonAlignedDropdown;
    }
    if (overflowButtonSpacing != null) {
      $result.overflowButtonSpacing = overflowButtonSpacing;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  MaterialButtonBar._() : super();
  factory MaterialButtonBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialButtonBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialButtonBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'buttonMinWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'buttonHeight', $pb.PbFieldType.OD)
    ..aOB(9, _omitFieldNames ? '' : 'buttonAlignedDropdown')
    ..a<$core.double>(12, _omitFieldNames ? '' : 'overflowButtonSpacing', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(13, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialButtonBar clone() => MaterialButtonBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialButtonBar copyWith(void Function(MaterialButtonBar) updates) => super.copyWith((message) => updates(message as MaterialButtonBar)) as MaterialButtonBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialButtonBar create() => MaterialButtonBar._();
  MaterialButtonBar createEmptyInstance() => create();
  static $pb.PbList<MaterialButtonBar> createRepeated() => $pb.PbList<MaterialButtonBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialButtonBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialButtonBar>(create);
  static MaterialButtonBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $core.double get buttonMinWidth => $_getN(1);
  @$pb.TagNumber(6)
  set buttonMinWidth($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(6)
  $core.bool hasButtonMinWidth() => $_has(1);
  @$pb.TagNumber(6)
  void clearButtonMinWidth() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get buttonHeight => $_getN(2);
  @$pb.TagNumber(7)
  set buttonHeight($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasButtonHeight() => $_has(2);
  @$pb.TagNumber(7)
  void clearButtonHeight() => clearField(7);

  @$pb.TagNumber(9)
  $core.bool get buttonAlignedDropdown => $_getBF(3);
  @$pb.TagNumber(9)
  set buttonAlignedDropdown($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasButtonAlignedDropdown() => $_has(3);
  @$pb.TagNumber(9)
  void clearButtonAlignedDropdown() => clearField(9);

  @$pb.TagNumber(12)
  $core.double get overflowButtonSpacing => $_getN(4);
  @$pb.TagNumber(12)
  set overflowButtonSpacing($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(12)
  $core.bool hasOverflowButtonSpacing() => $_has(4);
  @$pb.TagNumber(12)
  void clearOverflowButtonSpacing() => clearField(12);

  @$pb.TagNumber(13)
  $core.List<WidgetExpression> get children => $_getList(5);
}

/// package:flutter/src/material/button_theme.dart
class MaterialButtonTheme extends $pb.GeneratedMessage {
  factory MaterialButtonTheme({
    $1.FlutterKeyExpression? key,
    $core.double? minWidth,
    $core.double? height,
    $core.bool? alignedDropdown,
    $1.DartColorExpression? buttonColor,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (minWidth != null) {
      $result.minWidth = minWidth;
    }
    if (height != null) {
      $result.height = height;
    }
    if (alignedDropdown != null) {
      $result.alignedDropdown = alignedDropdown;
    }
    if (buttonColor != null) {
      $result.buttonColor = buttonColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialButtonTheme._() : super();
  factory MaterialButtonTheme.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialButtonTheme.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialButtonTheme', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'minWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOB(9, _omitFieldNames ? '' : 'alignedDropdown')
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'buttonColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(18, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialButtonTheme clone() => MaterialButtonTheme()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialButtonTheme copyWith(void Function(MaterialButtonTheme) updates) => super.copyWith((message) => updates(message as MaterialButtonTheme)) as MaterialButtonTheme;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialButtonTheme create() => MaterialButtonTheme._();
  MaterialButtonTheme createEmptyInstance() => create();
  static $pb.PbList<MaterialButtonTheme> createRepeated() => $pb.PbList<MaterialButtonTheme>();
  @$core.pragma('dart2js:noInline')
  static MaterialButtonTheme getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialButtonTheme>(create);
  static MaterialButtonTheme? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.double get minWidth => $_getN(1);
  @$pb.TagNumber(5)
  set minWidth($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasMinWidth() => $_has(1);
  @$pb.TagNumber(5)
  void clearMinWidth() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get height => $_getN(2);
  @$pb.TagNumber(6)
  set height($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasHeight() => $_has(2);
  @$pb.TagNumber(6)
  void clearHeight() => clearField(6);

  @$pb.TagNumber(9)
  $core.bool get alignedDropdown => $_getBF(3);
  @$pb.TagNumber(9)
  set alignedDropdown($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasAlignedDropdown() => $_has(3);
  @$pb.TagNumber(9)
  void clearAlignedDropdown() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get buttonColor => $_getN(4);
  @$pb.TagNumber(10)
  set buttonColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasButtonColor() => $_has(4);
  @$pb.TagNumber(10)
  void clearButtonColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureButtonColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $1.DartColorExpression get disabledColor => $_getN(5);
  @$pb.TagNumber(11)
  set disabledColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDisabledColor() => $_has(5);
  @$pb.TagNumber(11)
  void clearDisabledColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(5);

  @$pb.TagNumber(12)
  $1.DartColorExpression get focusColor => $_getN(6);
  @$pb.TagNumber(12)
  set focusColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasFocusColor() => $_has(6);
  @$pb.TagNumber(12)
  void clearFocusColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureFocusColor() => $_ensure(6);

  @$pb.TagNumber(13)
  $1.DartColorExpression get hoverColor => $_getN(7);
  @$pb.TagNumber(13)
  set hoverColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasHoverColor() => $_has(7);
  @$pb.TagNumber(13)
  void clearHoverColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureHoverColor() => $_ensure(7);

  @$pb.TagNumber(14)
  $1.DartColorExpression get highlightColor => $_getN(8);
  @$pb.TagNumber(14)
  set highlightColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasHighlightColor() => $_has(8);
  @$pb.TagNumber(14)
  void clearHighlightColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(8);

  @$pb.TagNumber(15)
  $1.DartColorExpression get splashColor => $_getN(9);
  @$pb.TagNumber(15)
  set splashColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasSplashColor() => $_has(9);
  @$pb.TagNumber(15)
  void clearSplashColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureSplashColor() => $_ensure(9);

  @$pb.TagNumber(18)
  WidgetExpression get child => $_getN(10);
  @$pb.TagNumber(18)
  set child(WidgetExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasChild() => $_has(10);
  @$pb.TagNumber(18)
  void clearChild() => clearField(18);
  @$pb.TagNumber(18)
  WidgetExpression ensureChild() => $_ensure(10);
}

/// package:flutter/src/material/card.dart
class MaterialCard extends $pb.GeneratedMessage {
  factory MaterialCard({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.double? elevation,
    $core.bool? borderOnForeground,
    WidgetExpression? child,
    $core.bool? semanticContainer,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (borderOnForeground != null) {
      $result.borderOnForeground = borderOnForeground;
    }
    if (child != null) {
      $result.child = child;
    }
    if (semanticContainer != null) {
      $result.semanticContainer = semanticContainer;
    }
    return $result;
  }
  MaterialCard._() : super();
  factory MaterialCard.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCard.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCard', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOB(8, _omitFieldNames ? '' : 'borderOnForeground')
    ..aOM<WidgetExpression>(11, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(12, _omitFieldNames ? '' : 'semanticContainer')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCard clone() => MaterialCard()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCard copyWith(void Function(MaterialCard) updates) => super.copyWith((message) => updates(message as MaterialCard)) as MaterialCard;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCard create() => MaterialCard._();
  MaterialCard createEmptyInstance() => create();
  static $pb.PbList<MaterialCard> createRepeated() => $pb.PbList<MaterialCard>();
  @$core.pragma('dart2js:noInline')
  static MaterialCard getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCard>(create);
  static MaterialCard? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get shadowColor => $_getN(2);
  @$pb.TagNumber(4)
  set shadowColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasShadowColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearShadowColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureShadowColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get surfaceTintColor => $_getN(3);
  @$pb.TagNumber(5)
  set surfaceTintColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSurfaceTintColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearSurfaceTintColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.double get elevation => $_getN(4);
  @$pb.TagNumber(6)
  set elevation($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasElevation() => $_has(4);
  @$pb.TagNumber(6)
  void clearElevation() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get borderOnForeground => $_getBF(5);
  @$pb.TagNumber(8)
  set borderOnForeground($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasBorderOnForeground() => $_has(5);
  @$pb.TagNumber(8)
  void clearBorderOnForeground() => clearField(8);

  @$pb.TagNumber(11)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(11)
  set child(WidgetExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(11)
  void clearChild() => clearField(11);
  @$pb.TagNumber(11)
  WidgetExpression ensureChild() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.bool get semanticContainer => $_getBF(7);
  @$pb.TagNumber(12)
  set semanticContainer($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasSemanticContainer() => $_has(7);
  @$pb.TagNumber(12)
  void clearSemanticContainer() => clearField(12);
}

/// package:flutter/src/material/checkbox.dart
class MaterialCheckbox extends $pb.GeneratedMessage {
  factory MaterialCheckbox({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $core.bool? tristate,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? checkColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? isError,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (checkColor != null) {
      $result.checkColor = checkColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isError != null) {
      $result.isError = isError;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  MaterialCheckbox._() : super();
  factory MaterialCheckbox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckbox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckbox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOB(4, _omitFieldNames ? '' : 'tristate')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'checkColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOB(20, _omitFieldNames ? '' : 'isError')
    ..aOS(21, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckbox clone() => MaterialCheckbox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckbox copyWith(void Function(MaterialCheckbox) updates) => super.copyWith((message) => updates(message as MaterialCheckbox)) as MaterialCheckbox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckbox create() => MaterialCheckbox._();
  MaterialCheckbox createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckbox> createRepeated() => $pb.PbList<MaterialCheckbox>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckbox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckbox>(create);
  static MaterialCheckbox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get tristate => $_getBF(2);
  @$pb.TagNumber(4)
  set tristate($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTristate() => $_has(2);
  @$pb.TagNumber(4)
  void clearTristate() => clearField(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get activeColor => $_getN(3);
  @$pb.TagNumber(7)
  set activeColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasActiveColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearActiveColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureActiveColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get checkColor => $_getN(4);
  @$pb.TagNumber(9)
  set checkColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasCheckColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearCheckColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureCheckColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(10)
  set focusColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearFocusColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(11)
  set hoverColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHoverColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(13)
  $core.double get splashRadius => $_getN(7);
  @$pb.TagNumber(13)
  set splashRadius($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasSplashRadius() => $_has(7);
  @$pb.TagNumber(13)
  void clearSplashRadius() => clearField(13);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(20)
  $core.bool get isError => $_getBF(9);
  @$pb.TagNumber(20)
  set isError($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(20)
  $core.bool hasIsError() => $_has(9);
  @$pb.TagNumber(20)
  void clearIsError() => clearField(20);

  @$pb.TagNumber(21)
  $core.String get semanticLabel => $_getSZ(10);
  @$pb.TagNumber(21)
  set semanticLabel($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(21)
  $core.bool hasSemanticLabel() => $_has(10);
  @$pb.TagNumber(21)
  void clearSemanticLabel() => clearField(21);
}

/// package:flutter/src/material/checkbox.dart
class MaterialCheckboxNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialCheckboxNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $core.bool? tristate,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? checkColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? isError,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (checkColor != null) {
      $result.checkColor = checkColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isError != null) {
      $result.isError = isError;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  MaterialCheckboxNamedAdaptive._() : super();
  factory MaterialCheckboxNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckboxNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckboxNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOB(4, _omitFieldNames ? '' : 'tristate')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'checkColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOB(20, _omitFieldNames ? '' : 'isError')
    ..aOS(21, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckboxNamedAdaptive clone() => MaterialCheckboxNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckboxNamedAdaptive copyWith(void Function(MaterialCheckboxNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialCheckboxNamedAdaptive)) as MaterialCheckboxNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxNamedAdaptive create() => MaterialCheckboxNamedAdaptive._();
  MaterialCheckboxNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckboxNamedAdaptive> createRepeated() => $pb.PbList<MaterialCheckboxNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckboxNamedAdaptive>(create);
  static MaterialCheckboxNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get tristate => $_getBF(2);
  @$pb.TagNumber(4)
  set tristate($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTristate() => $_has(2);
  @$pb.TagNumber(4)
  void clearTristate() => clearField(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get activeColor => $_getN(3);
  @$pb.TagNumber(7)
  set activeColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasActiveColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearActiveColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureActiveColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get checkColor => $_getN(4);
  @$pb.TagNumber(9)
  set checkColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasCheckColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearCheckColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureCheckColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(10)
  set focusColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearFocusColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(11)
  set hoverColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHoverColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(13)
  $core.double get splashRadius => $_getN(7);
  @$pb.TagNumber(13)
  set splashRadius($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasSplashRadius() => $_has(7);
  @$pb.TagNumber(13)
  void clearSplashRadius() => clearField(13);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(20)
  $core.bool get isError => $_getBF(9);
  @$pb.TagNumber(20)
  set isError($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(20)
  $core.bool hasIsError() => $_has(9);
  @$pb.TagNumber(20)
  void clearIsError() => clearField(20);

  @$pb.TagNumber(21)
  $core.String get semanticLabel => $_getSZ(10);
  @$pb.TagNumber(21)
  set semanticLabel($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(21)
  $core.bool hasSemanticLabel() => $_has(10);
  @$pb.TagNumber(21)
  void clearSemanticLabel() => clearField(21);
}

/// package:flutter/src/material/checkbox_list_tile.dart
class MaterialCheckboxListTile extends $pb.GeneratedMessage {
  factory MaterialCheckboxListTile({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? checkColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? isError,
    $core.bool? enabled,
    $1.DartColorExpression? tileColor,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    $core.bool? isThreeLine,
    $core.bool? dense,
    WidgetExpression? secondary,
    $core.bool? selected,
    $core.bool? tristate,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $core.String? checkboxSemanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (checkColor != null) {
      $result.checkColor = checkColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isError != null) {
      $result.isError = isError;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (isThreeLine != null) {
      $result.isThreeLine = isThreeLine;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (secondary != null) {
      $result.secondary = secondary;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (checkboxSemanticLabel != null) {
      $result.checkboxSemanticLabel = checkboxSemanticLabel;
    }
    return $result;
  }
  MaterialCheckboxListTile._() : super();
  factory MaterialCheckboxListTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckboxListTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckboxListTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'checkColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(15, _omitFieldNames ? '' : 'autofocus')
    ..aOB(18, _omitFieldNames ? '' : 'isError')
    ..aOB(19, _omitFieldNames ? '' : 'enabled')
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(21, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(22, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOB(23, _omitFieldNames ? '' : 'isThreeLine')
    ..aOB(24, _omitFieldNames ? '' : 'dense')
    ..aOM<WidgetExpression>(25, _omitFieldNames ? '' : 'secondary', subBuilder: WidgetExpression.create)
    ..aOB(26, _omitFieldNames ? '' : 'selected')
    ..aOB(29, _omitFieldNames ? '' : 'tristate')
    ..aOM<$1.DartColorExpression>(31, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(33, _omitFieldNames ? '' : 'enableFeedback')
    ..aOS(34, _omitFieldNames ? '' : 'checkboxSemanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckboxListTile clone() => MaterialCheckboxListTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckboxListTile copyWith(void Function(MaterialCheckboxListTile) updates) => super.copyWith((message) => updates(message as MaterialCheckboxListTile)) as MaterialCheckboxListTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxListTile create() => MaterialCheckboxListTile._();
  MaterialCheckboxListTile createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckboxListTile> createRepeated() => $pb.PbList<MaterialCheckboxListTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxListTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckboxListTile>(create);
  static MaterialCheckboxListTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(6)
  set activeColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(6)
  void clearActiveColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(8)
  $1.DartColorExpression get checkColor => $_getN(3);
  @$pb.TagNumber(8)
  set checkColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasCheckColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearCheckColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureCheckColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get hoverColor => $_getN(4);
  @$pb.TagNumber(9)
  set hoverColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasHoverColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearHoverColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureHoverColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $core.double get splashRadius => $_getN(5);
  @$pb.TagNumber(11)
  set splashRadius($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasSplashRadius() => $_has(5);
  @$pb.TagNumber(11)
  void clearSplashRadius() => clearField(11);

  @$pb.TagNumber(15)
  $core.bool get autofocus => $_getBF(6);
  @$pb.TagNumber(15)
  set autofocus($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(15)
  $core.bool hasAutofocus() => $_has(6);
  @$pb.TagNumber(15)
  void clearAutofocus() => clearField(15);

  @$pb.TagNumber(18)
  $core.bool get isError => $_getBF(7);
  @$pb.TagNumber(18)
  set isError($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsError() => $_has(7);
  @$pb.TagNumber(18)
  void clearIsError() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enabled => $_getBF(8);
  @$pb.TagNumber(19)
  set enabled($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnabled() => $_has(8);
  @$pb.TagNumber(19)
  void clearEnabled() => clearField(19);

  @$pb.TagNumber(20)
  $1.DartColorExpression get tileColor => $_getN(9);
  @$pb.TagNumber(20)
  set tileColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasTileColor() => $_has(9);
  @$pb.TagNumber(20)
  void clearTileColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureTileColor() => $_ensure(9);

  @$pb.TagNumber(21)
  WidgetExpression get title => $_getN(10);
  @$pb.TagNumber(21)
  set title(WidgetExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasTitle() => $_has(10);
  @$pb.TagNumber(21)
  void clearTitle() => clearField(21);
  @$pb.TagNumber(21)
  WidgetExpression ensureTitle() => $_ensure(10);

  @$pb.TagNumber(22)
  WidgetExpression get subtitle => $_getN(11);
  @$pb.TagNumber(22)
  set subtitle(WidgetExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasSubtitle() => $_has(11);
  @$pb.TagNumber(22)
  void clearSubtitle() => clearField(22);
  @$pb.TagNumber(22)
  WidgetExpression ensureSubtitle() => $_ensure(11);

  @$pb.TagNumber(23)
  $core.bool get isThreeLine => $_getBF(12);
  @$pb.TagNumber(23)
  set isThreeLine($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(23)
  $core.bool hasIsThreeLine() => $_has(12);
  @$pb.TagNumber(23)
  void clearIsThreeLine() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get dense => $_getBF(13);
  @$pb.TagNumber(24)
  set dense($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(24)
  $core.bool hasDense() => $_has(13);
  @$pb.TagNumber(24)
  void clearDense() => clearField(24);

  @$pb.TagNumber(25)
  WidgetExpression get secondary => $_getN(14);
  @$pb.TagNumber(25)
  set secondary(WidgetExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSecondary() => $_has(14);
  @$pb.TagNumber(25)
  void clearSecondary() => clearField(25);
  @$pb.TagNumber(25)
  WidgetExpression ensureSecondary() => $_ensure(14);

  @$pb.TagNumber(26)
  $core.bool get selected => $_getBF(15);
  @$pb.TagNumber(26)
  set selected($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(26)
  $core.bool hasSelected() => $_has(15);
  @$pb.TagNumber(26)
  void clearSelected() => clearField(26);

  @$pb.TagNumber(29)
  $core.bool get tristate => $_getBF(16);
  @$pb.TagNumber(29)
  set tristate($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(29)
  $core.bool hasTristate() => $_has(16);
  @$pb.TagNumber(29)
  void clearTristate() => clearField(29);

  @$pb.TagNumber(31)
  $1.DartColorExpression get selectedTileColor => $_getN(17);
  @$pb.TagNumber(31)
  set selectedTileColor($1.DartColorExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasSelectedTileColor() => $_has(17);
  @$pb.TagNumber(31)
  void clearSelectedTileColor() => clearField(31);
  @$pb.TagNumber(31)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(17);

  @$pb.TagNumber(33)
  $core.bool get enableFeedback => $_getBF(18);
  @$pb.TagNumber(33)
  set enableFeedback($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(33)
  $core.bool hasEnableFeedback() => $_has(18);
  @$pb.TagNumber(33)
  void clearEnableFeedback() => clearField(33);

  @$pb.TagNumber(34)
  $core.String get checkboxSemanticLabel => $_getSZ(19);
  @$pb.TagNumber(34)
  set checkboxSemanticLabel($core.String v) { $_setString(19, v); }
  @$pb.TagNumber(34)
  $core.bool hasCheckboxSemanticLabel() => $_has(19);
  @$pb.TagNumber(34)
  void clearCheckboxSemanticLabel() => clearField(34);
}

/// package:flutter/src/material/checkbox_list_tile.dart
class MaterialCheckboxListTileNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialCheckboxListTileNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? checkColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? isError,
    $core.bool? enabled,
    $1.DartColorExpression? tileColor,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    $core.bool? isThreeLine,
    $core.bool? dense,
    WidgetExpression? secondary,
    $core.bool? selected,
    $core.bool? tristate,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $core.String? checkboxSemanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (checkColor != null) {
      $result.checkColor = checkColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isError != null) {
      $result.isError = isError;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (isThreeLine != null) {
      $result.isThreeLine = isThreeLine;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (secondary != null) {
      $result.secondary = secondary;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (checkboxSemanticLabel != null) {
      $result.checkboxSemanticLabel = checkboxSemanticLabel;
    }
    return $result;
  }
  MaterialCheckboxListTileNamedAdaptive._() : super();
  factory MaterialCheckboxListTileNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckboxListTileNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckboxListTileNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'checkColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(15, _omitFieldNames ? '' : 'autofocus')
    ..aOB(18, _omitFieldNames ? '' : 'isError')
    ..aOB(19, _omitFieldNames ? '' : 'enabled')
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(21, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(22, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOB(23, _omitFieldNames ? '' : 'isThreeLine')
    ..aOB(24, _omitFieldNames ? '' : 'dense')
    ..aOM<WidgetExpression>(25, _omitFieldNames ? '' : 'secondary', subBuilder: WidgetExpression.create)
    ..aOB(26, _omitFieldNames ? '' : 'selected')
    ..aOB(29, _omitFieldNames ? '' : 'tristate')
    ..aOM<$1.DartColorExpression>(31, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(33, _omitFieldNames ? '' : 'enableFeedback')
    ..aOS(34, _omitFieldNames ? '' : 'checkboxSemanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckboxListTileNamedAdaptive clone() => MaterialCheckboxListTileNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckboxListTileNamedAdaptive copyWith(void Function(MaterialCheckboxListTileNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialCheckboxListTileNamedAdaptive)) as MaterialCheckboxListTileNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxListTileNamedAdaptive create() => MaterialCheckboxListTileNamedAdaptive._();
  MaterialCheckboxListTileNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckboxListTileNamedAdaptive> createRepeated() => $pb.PbList<MaterialCheckboxListTileNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxListTileNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckboxListTileNamedAdaptive>(create);
  static MaterialCheckboxListTileNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(6)
  set activeColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(6)
  void clearActiveColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(8)
  $1.DartColorExpression get checkColor => $_getN(3);
  @$pb.TagNumber(8)
  set checkColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasCheckColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearCheckColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureCheckColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get hoverColor => $_getN(4);
  @$pb.TagNumber(9)
  set hoverColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasHoverColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearHoverColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureHoverColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $core.double get splashRadius => $_getN(5);
  @$pb.TagNumber(11)
  set splashRadius($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasSplashRadius() => $_has(5);
  @$pb.TagNumber(11)
  void clearSplashRadius() => clearField(11);

  @$pb.TagNumber(15)
  $core.bool get autofocus => $_getBF(6);
  @$pb.TagNumber(15)
  set autofocus($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(15)
  $core.bool hasAutofocus() => $_has(6);
  @$pb.TagNumber(15)
  void clearAutofocus() => clearField(15);

  @$pb.TagNumber(18)
  $core.bool get isError => $_getBF(7);
  @$pb.TagNumber(18)
  set isError($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsError() => $_has(7);
  @$pb.TagNumber(18)
  void clearIsError() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enabled => $_getBF(8);
  @$pb.TagNumber(19)
  set enabled($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnabled() => $_has(8);
  @$pb.TagNumber(19)
  void clearEnabled() => clearField(19);

  @$pb.TagNumber(20)
  $1.DartColorExpression get tileColor => $_getN(9);
  @$pb.TagNumber(20)
  set tileColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasTileColor() => $_has(9);
  @$pb.TagNumber(20)
  void clearTileColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureTileColor() => $_ensure(9);

  @$pb.TagNumber(21)
  WidgetExpression get title => $_getN(10);
  @$pb.TagNumber(21)
  set title(WidgetExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasTitle() => $_has(10);
  @$pb.TagNumber(21)
  void clearTitle() => clearField(21);
  @$pb.TagNumber(21)
  WidgetExpression ensureTitle() => $_ensure(10);

  @$pb.TagNumber(22)
  WidgetExpression get subtitle => $_getN(11);
  @$pb.TagNumber(22)
  set subtitle(WidgetExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasSubtitle() => $_has(11);
  @$pb.TagNumber(22)
  void clearSubtitle() => clearField(22);
  @$pb.TagNumber(22)
  WidgetExpression ensureSubtitle() => $_ensure(11);

  @$pb.TagNumber(23)
  $core.bool get isThreeLine => $_getBF(12);
  @$pb.TagNumber(23)
  set isThreeLine($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(23)
  $core.bool hasIsThreeLine() => $_has(12);
  @$pb.TagNumber(23)
  void clearIsThreeLine() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get dense => $_getBF(13);
  @$pb.TagNumber(24)
  set dense($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(24)
  $core.bool hasDense() => $_has(13);
  @$pb.TagNumber(24)
  void clearDense() => clearField(24);

  @$pb.TagNumber(25)
  WidgetExpression get secondary => $_getN(14);
  @$pb.TagNumber(25)
  set secondary(WidgetExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSecondary() => $_has(14);
  @$pb.TagNumber(25)
  void clearSecondary() => clearField(25);
  @$pb.TagNumber(25)
  WidgetExpression ensureSecondary() => $_ensure(14);

  @$pb.TagNumber(26)
  $core.bool get selected => $_getBF(15);
  @$pb.TagNumber(26)
  set selected($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(26)
  $core.bool hasSelected() => $_has(15);
  @$pb.TagNumber(26)
  void clearSelected() => clearField(26);

  @$pb.TagNumber(29)
  $core.bool get tristate => $_getBF(16);
  @$pb.TagNumber(29)
  set tristate($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(29)
  $core.bool hasTristate() => $_has(16);
  @$pb.TagNumber(29)
  void clearTristate() => clearField(29);

  @$pb.TagNumber(31)
  $1.DartColorExpression get selectedTileColor => $_getN(17);
  @$pb.TagNumber(31)
  set selectedTileColor($1.DartColorExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasSelectedTileColor() => $_has(17);
  @$pb.TagNumber(31)
  void clearSelectedTileColor() => clearField(31);
  @$pb.TagNumber(31)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(17);

  @$pb.TagNumber(33)
  $core.bool get enableFeedback => $_getBF(18);
  @$pb.TagNumber(33)
  set enableFeedback($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(33)
  $core.bool hasEnableFeedback() => $_has(18);
  @$pb.TagNumber(33)
  void clearEnableFeedback() => clearField(33);

  @$pb.TagNumber(34)
  $core.String get checkboxSemanticLabel => $_getSZ(19);
  @$pb.TagNumber(34)
  set checkboxSemanticLabel($core.String v) { $_setString(19, v); }
  @$pb.TagNumber(34)
  $core.bool hasCheckboxSemanticLabel() => $_has(19);
  @$pb.TagNumber(34)
  void clearCheckboxSemanticLabel() => clearField(34);
}

/// package:flutter/src/material/chip.dart
class MaterialChip extends $pb.GeneratedMessage {
  factory MaterialChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    WidgetExpression? deleteIcon,
    $1.DartColorExpression? deleteIconColor,
    $core.String? deleteButtonTooltipMessage,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (deleteIcon != null) {
      $result.deleteIcon = deleteIcon;
    }
    if (deleteIconColor != null) {
      $result.deleteIconColor = deleteIconColor;
    }
    if (deleteButtonTooltipMessage != null) {
      $result.deleteButtonTooltipMessage = deleteButtonTooltipMessage;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    return $result;
  }
  MaterialChip._() : super();
  factory MaterialChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'deleteIcon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'deleteIconColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(10, _omitFieldNames ? '' : 'deleteButtonTooltipMessage')
    ..aOB(15, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(23, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialChip clone() => MaterialChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialChip copyWith(void Function(MaterialChip) updates) => super.copyWith((message) => updates(message as MaterialChip)) as MaterialChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialChip create() => MaterialChip._();
  MaterialChip createEmptyInstance() => create();
  static $pb.PbList<MaterialChip> createRepeated() => $pb.PbList<MaterialChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialChip>(create);
  static MaterialChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(7)
  WidgetExpression get deleteIcon => $_getN(3);
  @$pb.TagNumber(7)
  set deleteIcon(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasDeleteIcon() => $_has(3);
  @$pb.TagNumber(7)
  void clearDeleteIcon() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureDeleteIcon() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get deleteIconColor => $_getN(4);
  @$pb.TagNumber(9)
  set deleteIconColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasDeleteIconColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearDeleteIconColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureDeleteIconColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.String get deleteButtonTooltipMessage => $_getSZ(5);
  @$pb.TagNumber(10)
  set deleteButtonTooltipMessage($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasDeleteButtonTooltipMessage() => $_has(5);
  @$pb.TagNumber(10)
  void clearDeleteButtonTooltipMessage() => clearField(10);

  @$pb.TagNumber(15)
  $core.bool get autofocus => $_getBF(6);
  @$pb.TagNumber(15)
  set autofocus($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(15)
  $core.bool hasAutofocus() => $_has(6);
  @$pb.TagNumber(15)
  void clearAutofocus() => clearField(15);

  @$pb.TagNumber(17)
  $1.DartColorExpression get backgroundColor => $_getN(7);
  @$pb.TagNumber(17)
  set backgroundColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasBackgroundColor() => $_has(7);
  @$pb.TagNumber(17)
  void clearBackgroundColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(7);

  @$pb.TagNumber(21)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(21)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(21)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(21)
  void clearElevation() => clearField(21);

  @$pb.TagNumber(22)
  $1.DartColorExpression get shadowColor => $_getN(9);
  @$pb.TagNumber(22)
  set shadowColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasShadowColor() => $_has(9);
  @$pb.TagNumber(22)
  void clearShadowColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureShadowColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $1.DartColorExpression get surfaceTintColor => $_getN(10);
  @$pb.TagNumber(23)
  set surfaceTintColor($1.DartColorExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSurfaceTintColor() => $_has(10);
  @$pb.TagNumber(23)
  void clearSurfaceTintColor() => clearField(23);
  @$pb.TagNumber(23)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(10);
}

/// package:flutter/src/material/chip.dart
class MaterialRawChip extends $pb.GeneratedMessage {
  factory MaterialRawChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    WidgetExpression? deleteIcon,
    $1.DartColorExpression? deleteIconColor,
    $core.String? deleteButtonTooltipMessage,
    $core.double? pressElevation,
    $core.bool? tapEnabled,
    $core.bool? selected,
    $core.bool? isEnabled,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? selectedColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (deleteIcon != null) {
      $result.deleteIcon = deleteIcon;
    }
    if (deleteIconColor != null) {
      $result.deleteIconColor = deleteIconColor;
    }
    if (deleteButtonTooltipMessage != null) {
      $result.deleteButtonTooltipMessage = deleteButtonTooltipMessage;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (tapEnabled != null) {
      $result.tapEnabled = tapEnabled;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (isEnabled != null) {
      $result.isEnabled = isEnabled;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialRawChip._() : super();
  factory MaterialRawChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialRawChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialRawChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'deleteIcon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'deleteIconColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(13, _omitFieldNames ? '' : 'deleteButtonTooltipMessage')
    ..a<$core.double>(16, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOB(17, _omitFieldNames ? '' : 'tapEnabled')
    ..aOB(18, _omitFieldNames ? '' : 'selected')
    ..aOB(19, _omitFieldNames ? '' : 'isEnabled')
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(22, _omitFieldNames ? '' : 'tooltip')
    ..aOB(27, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(29, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(31, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(32, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(33, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(35, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(36, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(37, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialRawChip clone() => MaterialRawChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialRawChip copyWith(void Function(MaterialRawChip) updates) => super.copyWith((message) => updates(message as MaterialRawChip)) as MaterialRawChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialRawChip create() => MaterialRawChip._();
  MaterialRawChip createEmptyInstance() => create();
  static $pb.PbList<MaterialRawChip> createRepeated() => $pb.PbList<MaterialRawChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialRawChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialRawChip>(create);
  static MaterialRawChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(4)
  set avatar(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(4)
  void clearAvatar() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(5)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(5)
  set label(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(5)
  void clearLabel() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(10)
  WidgetExpression get deleteIcon => $_getN(3);
  @$pb.TagNumber(10)
  set deleteIcon(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasDeleteIcon() => $_has(3);
  @$pb.TagNumber(10)
  void clearDeleteIcon() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureDeleteIcon() => $_ensure(3);

  @$pb.TagNumber(12)
  $1.DartColorExpression get deleteIconColor => $_getN(4);
  @$pb.TagNumber(12)
  set deleteIconColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasDeleteIconColor() => $_has(4);
  @$pb.TagNumber(12)
  void clearDeleteIconColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureDeleteIconColor() => $_ensure(4);

  @$pb.TagNumber(13)
  $core.String get deleteButtonTooltipMessage => $_getSZ(5);
  @$pb.TagNumber(13)
  set deleteButtonTooltipMessage($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(13)
  $core.bool hasDeleteButtonTooltipMessage() => $_has(5);
  @$pb.TagNumber(13)
  void clearDeleteButtonTooltipMessage() => clearField(13);

  @$pb.TagNumber(16)
  $core.double get pressElevation => $_getN(6);
  @$pb.TagNumber(16)
  set pressElevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(16)
  $core.bool hasPressElevation() => $_has(6);
  @$pb.TagNumber(16)
  void clearPressElevation() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get tapEnabled => $_getBF(7);
  @$pb.TagNumber(17)
  set tapEnabled($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(17)
  $core.bool hasTapEnabled() => $_has(7);
  @$pb.TagNumber(17)
  void clearTapEnabled() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get selected => $_getBF(8);
  @$pb.TagNumber(18)
  set selected($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(18)
  $core.bool hasSelected() => $_has(8);
  @$pb.TagNumber(18)
  void clearSelected() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get isEnabled => $_getBF(9);
  @$pb.TagNumber(19)
  set isEnabled($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(19)
  $core.bool hasIsEnabled() => $_has(9);
  @$pb.TagNumber(19)
  void clearIsEnabled() => clearField(19);

  @$pb.TagNumber(20)
  $1.DartColorExpression get disabledColor => $_getN(10);
  @$pb.TagNumber(20)
  set disabledColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasDisabledColor() => $_has(10);
  @$pb.TagNumber(20)
  void clearDisabledColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(10);

  @$pb.TagNumber(21)
  $1.DartColorExpression get selectedColor => $_getN(11);
  @$pb.TagNumber(21)
  set selectedColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasSelectedColor() => $_has(11);
  @$pb.TagNumber(21)
  void clearSelectedColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(11);

  @$pb.TagNumber(22)
  $core.String get tooltip => $_getSZ(12);
  @$pb.TagNumber(22)
  set tooltip($core.String v) { $_setString(12, v); }
  @$pb.TagNumber(22)
  $core.bool hasTooltip() => $_has(12);
  @$pb.TagNumber(22)
  void clearTooltip() => clearField(22);

  @$pb.TagNumber(27)
  $core.bool get autofocus => $_getBF(13);
  @$pb.TagNumber(27)
  set autofocus($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(27)
  $core.bool hasAutofocus() => $_has(13);
  @$pb.TagNumber(27)
  void clearAutofocus() => clearField(27);

  @$pb.TagNumber(29)
  $1.DartColorExpression get backgroundColor => $_getN(14);
  @$pb.TagNumber(29)
  set backgroundColor($1.DartColorExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasBackgroundColor() => $_has(14);
  @$pb.TagNumber(29)
  void clearBackgroundColor() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(14);

  @$pb.TagNumber(31)
  $core.double get elevation => $_getN(15);
  @$pb.TagNumber(31)
  set elevation($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(31)
  $core.bool hasElevation() => $_has(15);
  @$pb.TagNumber(31)
  void clearElevation() => clearField(31);

  @$pb.TagNumber(32)
  $1.DartColorExpression get shadowColor => $_getN(16);
  @$pb.TagNumber(32)
  set shadowColor($1.DartColorExpression v) { setField(32, v); }
  @$pb.TagNumber(32)
  $core.bool hasShadowColor() => $_has(16);
  @$pb.TagNumber(32)
  void clearShadowColor() => clearField(32);
  @$pb.TagNumber(32)
  $1.DartColorExpression ensureShadowColor() => $_ensure(16);

  @$pb.TagNumber(33)
  $1.DartColorExpression get surfaceTintColor => $_getN(17);
  @$pb.TagNumber(33)
  set surfaceTintColor($1.DartColorExpression v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasSurfaceTintColor() => $_has(17);
  @$pb.TagNumber(33)
  void clearSurfaceTintColor() => clearField(33);
  @$pb.TagNumber(33)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(17);

  @$pb.TagNumber(35)
  $1.DartColorExpression get selectedShadowColor => $_getN(18);
  @$pb.TagNumber(35)
  set selectedShadowColor($1.DartColorExpression v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasSelectedShadowColor() => $_has(18);
  @$pb.TagNumber(35)
  void clearSelectedShadowColor() => clearField(35);
  @$pb.TagNumber(35)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(18);

  @$pb.TagNumber(36)
  $core.bool get showCheckmark => $_getBF(19);
  @$pb.TagNumber(36)
  set showCheckmark($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(36)
  $core.bool hasShowCheckmark() => $_has(19);
  @$pb.TagNumber(36)
  void clearShowCheckmark() => clearField(36);

  @$pb.TagNumber(37)
  $1.DartColorExpression get checkmarkColor => $_getN(20);
  @$pb.TagNumber(37)
  set checkmarkColor($1.DartColorExpression v) { setField(37, v); }
  @$pb.TagNumber(37)
  $core.bool hasCheckmarkColor() => $_has(20);
  @$pb.TagNumber(37)
  void clearCheckmarkColor() => clearField(37);
  @$pb.TagNumber(37)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(20);
}

/// package:flutter/src/material/choice_chip.dart
class MaterialChoiceChip extends $pb.GeneratedMessage {
  factory MaterialChoiceChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.double? pressElevation,
    $core.bool? selected,
    $1.DartColorExpression? selectedColor,
    $1.DartColorExpression? disabledColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialChoiceChip._() : super();
  factory MaterialChoiceChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialChoiceChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialChoiceChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOB(9, _omitFieldNames ? '' : 'selected')
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'tooltip')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(24, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(27, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(29, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialChoiceChip clone() => MaterialChoiceChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialChoiceChip copyWith(void Function(MaterialChoiceChip) updates) => super.copyWith((message) => updates(message as MaterialChoiceChip)) as MaterialChoiceChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialChoiceChip create() => MaterialChoiceChip._();
  MaterialChoiceChip createEmptyInstance() => create();
  static $pb.PbList<MaterialChoiceChip> createRepeated() => $pb.PbList<MaterialChoiceChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialChoiceChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialChoiceChip>(create);
  static MaterialChoiceChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.double get pressElevation => $_getN(3);
  @$pb.TagNumber(8)
  set pressElevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasPressElevation() => $_has(3);
  @$pb.TagNumber(8)
  void clearPressElevation() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get selected => $_getBF(4);
  @$pb.TagNumber(9)
  set selected($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasSelected() => $_has(4);
  @$pb.TagNumber(9)
  void clearSelected() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get selectedColor => $_getN(5);
  @$pb.TagNumber(10)
  set selectedColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasSelectedColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearSelectedColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get disabledColor => $_getN(6);
  @$pb.TagNumber(11)
  set disabledColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDisabledColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearDisabledColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.String get tooltip => $_getSZ(7);
  @$pb.TagNumber(12)
  set tooltip($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTooltip() => $_has(7);
  @$pb.TagNumber(12)
  void clearTooltip() => clearField(12);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(9);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(9);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $core.double get elevation => $_getN(10);
  @$pb.TagNumber(23)
  set elevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(23)
  $core.bool hasElevation() => $_has(10);
  @$pb.TagNumber(23)
  void clearElevation() => clearField(23);

  @$pb.TagNumber(24)
  $1.DartColorExpression get shadowColor => $_getN(11);
  @$pb.TagNumber(24)
  set shadowColor($1.DartColorExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasShadowColor() => $_has(11);
  @$pb.TagNumber(24)
  void clearShadowColor() => clearField(24);
  @$pb.TagNumber(24)
  $1.DartColorExpression ensureShadowColor() => $_ensure(11);

  @$pb.TagNumber(25)
  $1.DartColorExpression get surfaceTintColor => $_getN(12);
  @$pb.TagNumber(25)
  set surfaceTintColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSurfaceTintColor() => $_has(12);
  @$pb.TagNumber(25)
  void clearSurfaceTintColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(12);

  @$pb.TagNumber(27)
  $1.DartColorExpression get selectedShadowColor => $_getN(13);
  @$pb.TagNumber(27)
  set selectedShadowColor($1.DartColorExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSelectedShadowColor() => $_has(13);
  @$pb.TagNumber(27)
  void clearSelectedShadowColor() => clearField(27);
  @$pb.TagNumber(27)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(13);

  @$pb.TagNumber(28)
  $core.bool get showCheckmark => $_getBF(14);
  @$pb.TagNumber(28)
  set showCheckmark($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(28)
  $core.bool hasShowCheckmark() => $_has(14);
  @$pb.TagNumber(28)
  void clearShowCheckmark() => clearField(28);

  @$pb.TagNumber(29)
  $1.DartColorExpression get checkmarkColor => $_getN(15);
  @$pb.TagNumber(29)
  set checkmarkColor($1.DartColorExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCheckmarkColor() => $_has(15);
  @$pb.TagNumber(29)
  void clearCheckmarkColor() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(15);
}

/// package:flutter/src/material/choice_chip.dart
class MaterialChoiceChipNamedElevated extends $pb.GeneratedMessage {
  factory MaterialChoiceChipNamedElevated({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.double? pressElevation,
    $core.bool? selected,
    $1.DartColorExpression? selectedColor,
    $1.DartColorExpression? disabledColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialChoiceChipNamedElevated._() : super();
  factory MaterialChoiceChipNamedElevated.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialChoiceChipNamedElevated.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialChoiceChipNamedElevated', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOB(9, _omitFieldNames ? '' : 'selected')
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'tooltip')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(24, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(27, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(29, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialChoiceChipNamedElevated clone() => MaterialChoiceChipNamedElevated()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialChoiceChipNamedElevated copyWith(void Function(MaterialChoiceChipNamedElevated) updates) => super.copyWith((message) => updates(message as MaterialChoiceChipNamedElevated)) as MaterialChoiceChipNamedElevated;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialChoiceChipNamedElevated create() => MaterialChoiceChipNamedElevated._();
  MaterialChoiceChipNamedElevated createEmptyInstance() => create();
  static $pb.PbList<MaterialChoiceChipNamedElevated> createRepeated() => $pb.PbList<MaterialChoiceChipNamedElevated>();
  @$core.pragma('dart2js:noInline')
  static MaterialChoiceChipNamedElevated getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialChoiceChipNamedElevated>(create);
  static MaterialChoiceChipNamedElevated? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.double get pressElevation => $_getN(3);
  @$pb.TagNumber(8)
  set pressElevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasPressElevation() => $_has(3);
  @$pb.TagNumber(8)
  void clearPressElevation() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get selected => $_getBF(4);
  @$pb.TagNumber(9)
  set selected($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasSelected() => $_has(4);
  @$pb.TagNumber(9)
  void clearSelected() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get selectedColor => $_getN(5);
  @$pb.TagNumber(10)
  set selectedColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasSelectedColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearSelectedColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get disabledColor => $_getN(6);
  @$pb.TagNumber(11)
  set disabledColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDisabledColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearDisabledColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.String get tooltip => $_getSZ(7);
  @$pb.TagNumber(12)
  set tooltip($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTooltip() => $_has(7);
  @$pb.TagNumber(12)
  void clearTooltip() => clearField(12);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(9);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(9);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $core.double get elevation => $_getN(10);
  @$pb.TagNumber(23)
  set elevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(23)
  $core.bool hasElevation() => $_has(10);
  @$pb.TagNumber(23)
  void clearElevation() => clearField(23);

  @$pb.TagNumber(24)
  $1.DartColorExpression get shadowColor => $_getN(11);
  @$pb.TagNumber(24)
  set shadowColor($1.DartColorExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasShadowColor() => $_has(11);
  @$pb.TagNumber(24)
  void clearShadowColor() => clearField(24);
  @$pb.TagNumber(24)
  $1.DartColorExpression ensureShadowColor() => $_ensure(11);

  @$pb.TagNumber(25)
  $1.DartColorExpression get surfaceTintColor => $_getN(12);
  @$pb.TagNumber(25)
  set surfaceTintColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSurfaceTintColor() => $_has(12);
  @$pb.TagNumber(25)
  void clearSurfaceTintColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(12);

  @$pb.TagNumber(27)
  $1.DartColorExpression get selectedShadowColor => $_getN(13);
  @$pb.TagNumber(27)
  set selectedShadowColor($1.DartColorExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSelectedShadowColor() => $_has(13);
  @$pb.TagNumber(27)
  void clearSelectedShadowColor() => clearField(27);
  @$pb.TagNumber(27)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(13);

  @$pb.TagNumber(28)
  $core.bool get showCheckmark => $_getBF(14);
  @$pb.TagNumber(28)
  set showCheckmark($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(28)
  $core.bool hasShowCheckmark() => $_has(14);
  @$pb.TagNumber(28)
  void clearShowCheckmark() => clearField(28);

  @$pb.TagNumber(29)
  $1.DartColorExpression get checkmarkColor => $_getN(15);
  @$pb.TagNumber(29)
  set checkmarkColor($1.DartColorExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCheckmarkColor() => $_has(15);
  @$pb.TagNumber(29)
  void clearCheckmarkColor() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(15);
}

/// package:flutter/src/material/circle_avatar.dart
class MaterialCircleAvatar extends $pb.GeneratedMessage {
  factory MaterialCircleAvatar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? foregroundColor,
    $core.double? radius,
    $core.double? minRadius,
    $core.double? maxRadius,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (radius != null) {
      $result.radius = radius;
    }
    if (minRadius != null) {
      $result.minRadius = minRadius;
    }
    if (maxRadius != null) {
      $result.maxRadius = maxRadius;
    }
    return $result;
  }
  MaterialCircleAvatar._() : super();
  factory MaterialCircleAvatar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCircleAvatar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCircleAvatar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'radius', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'minRadius', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'maxRadius', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCircleAvatar clone() => MaterialCircleAvatar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCircleAvatar copyWith(void Function(MaterialCircleAvatar) updates) => super.copyWith((message) => updates(message as MaterialCircleAvatar)) as MaterialCircleAvatar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCircleAvatar create() => MaterialCircleAvatar._();
  MaterialCircleAvatar createEmptyInstance() => create();
  static $pb.PbList<MaterialCircleAvatar> createRepeated() => $pb.PbList<MaterialCircleAvatar>();
  @$core.pragma('dart2js:noInline')
  static MaterialCircleAvatar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCircleAvatar>(create);
  static MaterialCircleAvatar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(9)
  $1.DartColorExpression get foregroundColor => $_getN(3);
  @$pb.TagNumber(9)
  set foregroundColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasForegroundColor() => $_has(3);
  @$pb.TagNumber(9)
  void clearForegroundColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(3);

  @$pb.TagNumber(10)
  $core.double get radius => $_getN(4);
  @$pb.TagNumber(10)
  set radius($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(10)
  $core.bool hasRadius() => $_has(4);
  @$pb.TagNumber(10)
  void clearRadius() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get minRadius => $_getN(5);
  @$pb.TagNumber(11)
  set minRadius($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasMinRadius() => $_has(5);
  @$pb.TagNumber(11)
  void clearMinRadius() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get maxRadius => $_getN(6);
  @$pb.TagNumber(12)
  set maxRadius($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasMaxRadius() => $_has(6);
  @$pb.TagNumber(12)
  void clearMaxRadius() => clearField(12);
}

/// package:flutter/src/material/data_table.dart
class MaterialTableRowInkWell extends $pb.GeneratedMessage {
  factory MaterialTableRowInkWell({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialTableRowInkWell._() : super();
  factory MaterialTableRowInkWell.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTableRowInkWell.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTableRowInkWell', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTableRowInkWell clone() => MaterialTableRowInkWell()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTableRowInkWell copyWith(void Function(MaterialTableRowInkWell) updates) => super.copyWith((message) => updates(message as MaterialTableRowInkWell)) as MaterialTableRowInkWell;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTableRowInkWell create() => MaterialTableRowInkWell._();
  MaterialTableRowInkWell createEmptyInstance() => create();
  static $pb.PbList<MaterialTableRowInkWell> createRepeated() => $pb.PbList<MaterialTableRowInkWell>();
  @$core.pragma('dart2js:noInline')
  static MaterialTableRowInkWell getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTableRowInkWell>(create);
  static MaterialTableRowInkWell? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/desktop_text_selection_toolbar_button.dart
class MaterialDesktopTextSelectionToolbarButton extends $pb.GeneratedMessage {
  factory MaterialDesktopTextSelectionToolbarButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDesktopTextSelectionToolbarButton._() : super();
  factory MaterialDesktopTextSelectionToolbarButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDesktopTextSelectionToolbarButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDesktopTextSelectionToolbarButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDesktopTextSelectionToolbarButton clone() => MaterialDesktopTextSelectionToolbarButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDesktopTextSelectionToolbarButton copyWith(void Function(MaterialDesktopTextSelectionToolbarButton) updates) => super.copyWith((message) => updates(message as MaterialDesktopTextSelectionToolbarButton)) as MaterialDesktopTextSelectionToolbarButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDesktopTextSelectionToolbarButton create() => MaterialDesktopTextSelectionToolbarButton._();
  MaterialDesktopTextSelectionToolbarButton createEmptyInstance() => create();
  static $pb.PbList<MaterialDesktopTextSelectionToolbarButton> createRepeated() => $pb.PbList<MaterialDesktopTextSelectionToolbarButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialDesktopTextSelectionToolbarButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDesktopTextSelectionToolbarButton>(create);
  static MaterialDesktopTextSelectionToolbarButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/dialog.dart
class MaterialAlertDialog extends $pb.GeneratedMessage {
  factory MaterialAlertDialog({
    $1.FlutterKeyExpression? key,
    WidgetExpression? icon,
    $1.DartColorExpression? iconColor,
    WidgetExpression? title,
    WidgetExpression? content,
    $core.Iterable<WidgetExpression>? actions,
    $core.double? actionsOverflowButtonSpacing,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.String? semanticLabel,
    $core.bool? scrollable,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (iconColor != null) {
      $result.iconColor = iconColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (content != null) {
      $result.content = content;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (actionsOverflowButtonSpacing != null) {
      $result.actionsOverflowButtonSpacing = actionsOverflowButtonSpacing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    if (scrollable != null) {
      $result.scrollable = scrollable;
    }
    return $result;
  }
  MaterialAlertDialog._() : super();
  factory MaterialAlertDialog.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialAlertDialog.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialAlertDialog', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'iconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'content', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(12, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'actionsOverflowButtonSpacing', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(20, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(23, _omitFieldNames ? '' : 'semanticLabel')
    ..aOB(28, _omitFieldNames ? '' : 'scrollable')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialAlertDialog clone() => MaterialAlertDialog()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialAlertDialog copyWith(void Function(MaterialAlertDialog) updates) => super.copyWith((message) => updates(message as MaterialAlertDialog)) as MaterialAlertDialog;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialAlertDialog create() => MaterialAlertDialog._();
  MaterialAlertDialog createEmptyInstance() => create();
  static $pb.PbList<MaterialAlertDialog> createRepeated() => $pb.PbList<MaterialAlertDialog>();
  @$core.pragma('dart2js:noInline')
  static MaterialAlertDialog getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialAlertDialog>(create);
  static MaterialAlertDialog? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get icon => $_getN(1);
  @$pb.TagNumber(3)
  set icon(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasIcon() => $_has(1);
  @$pb.TagNumber(3)
  void clearIcon() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureIcon() => $_ensure(1);

  @$pb.TagNumber(5)
  $1.DartColorExpression get iconColor => $_getN(2);
  @$pb.TagNumber(5)
  set iconColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasIconColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearIconColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureIconColor() => $_ensure(2);

  @$pb.TagNumber(6)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(6)
  set title(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(6)
  void clearTitle() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(9)
  WidgetExpression get content => $_getN(4);
  @$pb.TagNumber(9)
  set content(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasContent() => $_has(4);
  @$pb.TagNumber(9)
  void clearContent() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureContent() => $_ensure(4);

  @$pb.TagNumber(12)
  $core.List<WidgetExpression> get actions => $_getList(5);

  @$pb.TagNumber(17)
  $core.double get actionsOverflowButtonSpacing => $_getN(6);
  @$pb.TagNumber(17)
  set actionsOverflowButtonSpacing($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(17)
  $core.bool hasActionsOverflowButtonSpacing() => $_has(6);
  @$pb.TagNumber(17)
  void clearActionsOverflowButtonSpacing() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(7);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(7);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(7);

  @$pb.TagNumber(20)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(20)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(20)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(20)
  void clearElevation() => clearField(20);

  @$pb.TagNumber(21)
  $1.DartColorExpression get shadowColor => $_getN(9);
  @$pb.TagNumber(21)
  set shadowColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasShadowColor() => $_has(9);
  @$pb.TagNumber(21)
  void clearShadowColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureShadowColor() => $_ensure(9);

  @$pb.TagNumber(22)
  $1.DartColorExpression get surfaceTintColor => $_getN(10);
  @$pb.TagNumber(22)
  set surfaceTintColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasSurfaceTintColor() => $_has(10);
  @$pb.TagNumber(22)
  void clearSurfaceTintColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(10);

  @$pb.TagNumber(23)
  $core.String get semanticLabel => $_getSZ(11);
  @$pb.TagNumber(23)
  set semanticLabel($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(23)
  $core.bool hasSemanticLabel() => $_has(11);
  @$pb.TagNumber(23)
  void clearSemanticLabel() => clearField(23);

  @$pb.TagNumber(28)
  $core.bool get scrollable => $_getBF(12);
  @$pb.TagNumber(28)
  set scrollable($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(28)
  $core.bool hasScrollable() => $_has(12);
  @$pb.TagNumber(28)
  void clearScrollable() => clearField(28);
}

/// package:flutter/src/material/dialog.dart
class MaterialAlertDialogNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialAlertDialogNamedAdaptive({
    $1.FlutterKeyExpression? key,
    WidgetExpression? icon,
    $1.DartColorExpression? iconColor,
    WidgetExpression? title,
    WidgetExpression? content,
    $core.Iterable<WidgetExpression>? actions,
    $core.double? actionsOverflowButtonSpacing,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.String? semanticLabel,
    $core.bool? scrollable,
    $1.DartDurationExpression? insetAnimationDuration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (iconColor != null) {
      $result.iconColor = iconColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (content != null) {
      $result.content = content;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (actionsOverflowButtonSpacing != null) {
      $result.actionsOverflowButtonSpacing = actionsOverflowButtonSpacing;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    if (scrollable != null) {
      $result.scrollable = scrollable;
    }
    if (insetAnimationDuration != null) {
      $result.insetAnimationDuration = insetAnimationDuration;
    }
    return $result;
  }
  MaterialAlertDialogNamedAdaptive._() : super();
  factory MaterialAlertDialogNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialAlertDialogNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialAlertDialogNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'iconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'content', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(12, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'actionsOverflowButtonSpacing', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(20, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(23, _omitFieldNames ? '' : 'semanticLabel')
    ..aOB(28, _omitFieldNames ? '' : 'scrollable')
    ..aOM<$1.DartDurationExpression>(31, _omitFieldNames ? '' : 'insetAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialAlertDialogNamedAdaptive clone() => MaterialAlertDialogNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialAlertDialogNamedAdaptive copyWith(void Function(MaterialAlertDialogNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialAlertDialogNamedAdaptive)) as MaterialAlertDialogNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialAlertDialogNamedAdaptive create() => MaterialAlertDialogNamedAdaptive._();
  MaterialAlertDialogNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialAlertDialogNamedAdaptive> createRepeated() => $pb.PbList<MaterialAlertDialogNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialAlertDialogNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialAlertDialogNamedAdaptive>(create);
  static MaterialAlertDialogNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get icon => $_getN(1);
  @$pb.TagNumber(3)
  set icon(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasIcon() => $_has(1);
  @$pb.TagNumber(3)
  void clearIcon() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureIcon() => $_ensure(1);

  @$pb.TagNumber(5)
  $1.DartColorExpression get iconColor => $_getN(2);
  @$pb.TagNumber(5)
  set iconColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasIconColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearIconColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureIconColor() => $_ensure(2);

  @$pb.TagNumber(6)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(6)
  set title(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(6)
  void clearTitle() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(9)
  WidgetExpression get content => $_getN(4);
  @$pb.TagNumber(9)
  set content(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasContent() => $_has(4);
  @$pb.TagNumber(9)
  void clearContent() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureContent() => $_ensure(4);

  @$pb.TagNumber(12)
  $core.List<WidgetExpression> get actions => $_getList(5);

  @$pb.TagNumber(17)
  $core.double get actionsOverflowButtonSpacing => $_getN(6);
  @$pb.TagNumber(17)
  set actionsOverflowButtonSpacing($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(17)
  $core.bool hasActionsOverflowButtonSpacing() => $_has(6);
  @$pb.TagNumber(17)
  void clearActionsOverflowButtonSpacing() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(7);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(7);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(7);

  @$pb.TagNumber(20)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(20)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(20)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(20)
  void clearElevation() => clearField(20);

  @$pb.TagNumber(21)
  $1.DartColorExpression get shadowColor => $_getN(9);
  @$pb.TagNumber(21)
  set shadowColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasShadowColor() => $_has(9);
  @$pb.TagNumber(21)
  void clearShadowColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureShadowColor() => $_ensure(9);

  @$pb.TagNumber(22)
  $1.DartColorExpression get surfaceTintColor => $_getN(10);
  @$pb.TagNumber(22)
  set surfaceTintColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasSurfaceTintColor() => $_has(10);
  @$pb.TagNumber(22)
  void clearSurfaceTintColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(10);

  @$pb.TagNumber(23)
  $core.String get semanticLabel => $_getSZ(11);
  @$pb.TagNumber(23)
  set semanticLabel($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(23)
  $core.bool hasSemanticLabel() => $_has(11);
  @$pb.TagNumber(23)
  void clearSemanticLabel() => clearField(23);

  @$pb.TagNumber(28)
  $core.bool get scrollable => $_getBF(12);
  @$pb.TagNumber(28)
  set scrollable($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(28)
  $core.bool hasScrollable() => $_has(12);
  @$pb.TagNumber(28)
  void clearScrollable() => clearField(28);

  @$pb.TagNumber(31)
  $1.DartDurationExpression get insetAnimationDuration => $_getN(13);
  @$pb.TagNumber(31)
  set insetAnimationDuration($1.DartDurationExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasInsetAnimationDuration() => $_has(13);
  @$pb.TagNumber(31)
  void clearInsetAnimationDuration() => clearField(31);
  @$pb.TagNumber(31)
  $1.DartDurationExpression ensureInsetAnimationDuration() => $_ensure(13);
}

/// package:flutter/src/material/dialog.dart
class MaterialDialog extends $pb.GeneratedMessage {
  factory MaterialDialog({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartDurationExpression? insetAnimationDuration,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (insetAnimationDuration != null) {
      $result.insetAnimationDuration = insetAnimationDuration;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDialog._() : super();
  factory MaterialDialog.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDialog.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDialog', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(7, _omitFieldNames ? '' : 'insetAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDialog clone() => MaterialDialog()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDialog copyWith(void Function(MaterialDialog) updates) => super.copyWith((message) => updates(message as MaterialDialog)) as MaterialDialog;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDialog create() => MaterialDialog._();
  MaterialDialog createEmptyInstance() => create();
  static $pb.PbList<MaterialDialog> createRepeated() => $pb.PbList<MaterialDialog>();
  @$core.pragma('dart2js:noInline')
  static MaterialDialog getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDialog>(create);
  static MaterialDialog? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get elevation => $_getN(2);
  @$pb.TagNumber(4)
  set elevation($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasElevation() => $_has(2);
  @$pb.TagNumber(4)
  void clearElevation() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get shadowColor => $_getN(3);
  @$pb.TagNumber(5)
  set shadowColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasShadowColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearShadowColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureShadowColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get surfaceTintColor => $_getN(4);
  @$pb.TagNumber(6)
  set surfaceTintColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSurfaceTintColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearSurfaceTintColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $1.DartDurationExpression get insetAnimationDuration => $_getN(5);
  @$pb.TagNumber(7)
  set insetAnimationDuration($1.DartDurationExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInsetAnimationDuration() => $_has(5);
  @$pb.TagNumber(7)
  void clearInsetAnimationDuration() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartDurationExpression ensureInsetAnimationDuration() => $_ensure(5);

  @$pb.TagNumber(13)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(13)
  set child(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(13)
  void clearChild() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureChild() => $_ensure(6);
}

/// package:flutter/src/material/dialog.dart
class MaterialDialogNamedFullscreen extends $pb.GeneratedMessage {
  factory MaterialDialogNamedFullscreen({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $1.DartDurationExpression? insetAnimationDuration,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (insetAnimationDuration != null) {
      $result.insetAnimationDuration = insetAnimationDuration;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDialogNamedFullscreen._() : super();
  factory MaterialDialogNamedFullscreen.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDialogNamedFullscreen.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDialogNamedFullscreen', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(4, _omitFieldNames ? '' : 'insetAnimationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDialogNamedFullscreen clone() => MaterialDialogNamedFullscreen()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDialogNamedFullscreen copyWith(void Function(MaterialDialogNamedFullscreen) updates) => super.copyWith((message) => updates(message as MaterialDialogNamedFullscreen)) as MaterialDialogNamedFullscreen;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDialogNamedFullscreen create() => MaterialDialogNamedFullscreen._();
  MaterialDialogNamedFullscreen createEmptyInstance() => create();
  static $pb.PbList<MaterialDialogNamedFullscreen> createRepeated() => $pb.PbList<MaterialDialogNamedFullscreen>();
  @$core.pragma('dart2js:noInline')
  static MaterialDialogNamedFullscreen getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDialogNamedFullscreen>(create);
  static MaterialDialogNamedFullscreen? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartDurationExpression get insetAnimationDuration => $_getN(2);
  @$pb.TagNumber(4)
  set insetAnimationDuration($1.DartDurationExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasInsetAnimationDuration() => $_has(2);
  @$pb.TagNumber(4)
  void clearInsetAnimationDuration() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartDurationExpression ensureInsetAnimationDuration() => $_ensure(2);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/material/dialog.dart
class MaterialSimpleDialog extends $pb.GeneratedMessage {
  factory MaterialSimpleDialog({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    $core.Iterable<WidgetExpression>? children,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  MaterialSimpleDialog._() : super();
  factory MaterialSimpleDialog.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSimpleDialog.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSimpleDialog', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSimpleDialog clone() => MaterialSimpleDialog()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSimpleDialog copyWith(void Function(MaterialSimpleDialog) updates) => super.copyWith((message) => updates(message as MaterialSimpleDialog)) as MaterialSimpleDialog;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSimpleDialog create() => MaterialSimpleDialog._();
  MaterialSimpleDialog createEmptyInstance() => create();
  static $pb.PbList<MaterialSimpleDialog> createRepeated() => $pb.PbList<MaterialSimpleDialog>();
  @$core.pragma('dart2js:noInline')
  static MaterialSimpleDialog getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSimpleDialog>(create);
  static MaterialSimpleDialog? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get children => $_getList(2);

  @$pb.TagNumber(8)
  $1.DartColorExpression get backgroundColor => $_getN(3);
  @$pb.TagNumber(8)
  set backgroundColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasBackgroundColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearBackgroundColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(4);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(4);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get shadowColor => $_getN(5);
  @$pb.TagNumber(10)
  set shadowColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasShadowColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearShadowColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureShadowColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get surfaceTintColor => $_getN(6);
  @$pb.TagNumber(11)
  set surfaceTintColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasSurfaceTintColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearSurfaceTintColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.String get semanticLabel => $_getSZ(7);
  @$pb.TagNumber(12)
  set semanticLabel($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasSemanticLabel() => $_has(7);
  @$pb.TagNumber(12)
  void clearSemanticLabel() => clearField(12);
}

/// package:flutter/src/material/dialog.dart
class MaterialSimpleDialogOption extends $pb.GeneratedMessage {
  factory MaterialSimpleDialogOption({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialSimpleDialogOption._() : super();
  factory MaterialSimpleDialogOption.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSimpleDialogOption.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSimpleDialogOption', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSimpleDialogOption clone() => MaterialSimpleDialogOption()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSimpleDialogOption copyWith(void Function(MaterialSimpleDialogOption) updates) => super.copyWith((message) => updates(message as MaterialSimpleDialogOption)) as MaterialSimpleDialogOption;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSimpleDialogOption create() => MaterialSimpleDialogOption._();
  MaterialSimpleDialogOption createEmptyInstance() => create();
  static $pb.PbList<MaterialSimpleDialogOption> createRepeated() => $pb.PbList<MaterialSimpleDialogOption>();
  @$core.pragma('dart2js:noInline')
  static MaterialSimpleDialogOption getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSimpleDialogOption>(create);
  static MaterialSimpleDialogOption? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/divider.dart
class MaterialDivider extends $pb.GeneratedMessage {
  factory MaterialDivider({
    $1.FlutterKeyExpression? key,
    $core.double? height,
    $core.double? thickness,
    $core.double? indent,
    $core.double? endIndent,
    $1.DartColorExpression? color,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (height != null) {
      $result.height = height;
    }
    if (thickness != null) {
      $result.thickness = thickness;
    }
    if (indent != null) {
      $result.indent = indent;
    }
    if (endIndent != null) {
      $result.endIndent = endIndent;
    }
    if (color != null) {
      $result.color = color;
    }
    return $result;
  }
  MaterialDivider._() : super();
  factory MaterialDivider.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDivider.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDivider', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'thickness', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'indent', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'endIndent', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDivider clone() => MaterialDivider()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDivider copyWith(void Function(MaterialDivider) updates) => super.copyWith((message) => updates(message as MaterialDivider)) as MaterialDivider;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDivider create() => MaterialDivider._();
  MaterialDivider createEmptyInstance() => create();
  static $pb.PbList<MaterialDivider> createRepeated() => $pb.PbList<MaterialDivider>();
  @$core.pragma('dart2js:noInline')
  static MaterialDivider getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDivider>(create);
  static MaterialDivider? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get height => $_getN(1);
  @$pb.TagNumber(3)
  set height($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasHeight() => $_has(1);
  @$pb.TagNumber(3)
  void clearHeight() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get thickness => $_getN(2);
  @$pb.TagNumber(4)
  set thickness($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasThickness() => $_has(2);
  @$pb.TagNumber(4)
  void clearThickness() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get indent => $_getN(3);
  @$pb.TagNumber(5)
  set indent($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasIndent() => $_has(3);
  @$pb.TagNumber(5)
  void clearIndent() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get endIndent => $_getN(4);
  @$pb.TagNumber(6)
  set endIndent($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasEndIndent() => $_has(4);
  @$pb.TagNumber(6)
  void clearEndIndent() => clearField(6);

  @$pb.TagNumber(7)
  $1.DartColorExpression get color => $_getN(5);
  @$pb.TagNumber(7)
  set color($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureColor() => $_ensure(5);
}

/// package:flutter/src/material/divider.dart
class MaterialVerticalDivider extends $pb.GeneratedMessage {
  factory MaterialVerticalDivider({
    $1.FlutterKeyExpression? key,
    $core.double? width,
    $core.double? thickness,
    $core.double? indent,
    $core.double? endIndent,
    $1.DartColorExpression? color,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (width != null) {
      $result.width = width;
    }
    if (thickness != null) {
      $result.thickness = thickness;
    }
    if (indent != null) {
      $result.indent = indent;
    }
    if (endIndent != null) {
      $result.endIndent = endIndent;
    }
    if (color != null) {
      $result.color = color;
    }
    return $result;
  }
  MaterialVerticalDivider._() : super();
  factory MaterialVerticalDivider.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialVerticalDivider.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialVerticalDivider', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'thickness', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'indent', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'endIndent', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialVerticalDivider clone() => MaterialVerticalDivider()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialVerticalDivider copyWith(void Function(MaterialVerticalDivider) updates) => super.copyWith((message) => updates(message as MaterialVerticalDivider)) as MaterialVerticalDivider;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialVerticalDivider create() => MaterialVerticalDivider._();
  MaterialVerticalDivider createEmptyInstance() => create();
  static $pb.PbList<MaterialVerticalDivider> createRepeated() => $pb.PbList<MaterialVerticalDivider>();
  @$core.pragma('dart2js:noInline')
  static MaterialVerticalDivider getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialVerticalDivider>(create);
  static MaterialVerticalDivider? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get width => $_getN(1);
  @$pb.TagNumber(3)
  set width($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasWidth() => $_has(1);
  @$pb.TagNumber(3)
  void clearWidth() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get thickness => $_getN(2);
  @$pb.TagNumber(4)
  set thickness($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasThickness() => $_has(2);
  @$pb.TagNumber(4)
  void clearThickness() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get indent => $_getN(3);
  @$pb.TagNumber(5)
  set indent($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasIndent() => $_has(3);
  @$pb.TagNumber(5)
  void clearIndent() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get endIndent => $_getN(4);
  @$pb.TagNumber(6)
  set endIndent($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasEndIndent() => $_has(4);
  @$pb.TagNumber(6)
  void clearEndIndent() => clearField(6);

  @$pb.TagNumber(7)
  $1.DartColorExpression get color => $_getN(5);
  @$pb.TagNumber(7)
  set color($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureColor() => $_ensure(5);
}

/// package:flutter/src/material/drawer.dart
class MaterialDrawer extends $pb.GeneratedMessage {
  factory MaterialDrawer({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.double? width,
    WidgetExpression? child,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (width != null) {
      $result.width = width;
    }
    if (child != null) {
      $result.child = child;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  MaterialDrawer._() : super();
  factory MaterialDrawer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDrawer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDrawer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(10, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDrawer clone() => MaterialDrawer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDrawer copyWith(void Function(MaterialDrawer) updates) => super.copyWith((message) => updates(message as MaterialDrawer)) as MaterialDrawer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDrawer create() => MaterialDrawer._();
  MaterialDrawer createEmptyInstance() => create();
  static $pb.PbList<MaterialDrawer> createRepeated() => $pb.PbList<MaterialDrawer>();
  @$core.pragma('dart2js:noInline')
  static MaterialDrawer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDrawer>(create);
  static MaterialDrawer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get elevation => $_getN(2);
  @$pb.TagNumber(4)
  set elevation($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasElevation() => $_has(2);
  @$pb.TagNumber(4)
  void clearElevation() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get shadowColor => $_getN(3);
  @$pb.TagNumber(5)
  set shadowColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasShadowColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearShadowColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureShadowColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get surfaceTintColor => $_getN(4);
  @$pb.TagNumber(6)
  set surfaceTintColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSurfaceTintColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearSurfaceTintColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(5);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(5);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(6);

  @$pb.TagNumber(10)
  $core.String get semanticLabel => $_getSZ(7);
  @$pb.TagNumber(10)
  set semanticLabel($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasSemanticLabel() => $_has(7);
  @$pb.TagNumber(10)
  void clearSemanticLabel() => clearField(10);
}

/// package:flutter/src/material/drawer_header.dart
class MaterialDrawerHeader extends $pb.GeneratedMessage {
  factory MaterialDrawerHeader({
    $1.FlutterKeyExpression? key,
    $1.DartDurationExpression? duration,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDrawerHeader._() : super();
  factory MaterialDrawerHeader.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDrawerHeader.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDrawerHeader', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDrawerHeader clone() => MaterialDrawerHeader()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDrawerHeader copyWith(void Function(MaterialDrawerHeader) updates) => super.copyWith((message) => updates(message as MaterialDrawerHeader)) as MaterialDrawerHeader;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDrawerHeader create() => MaterialDrawerHeader._();
  MaterialDrawerHeader createEmptyInstance() => create();
  static $pb.PbList<MaterialDrawerHeader> createRepeated() => $pb.PbList<MaterialDrawerHeader>();
  @$core.pragma('dart2js:noInline')
  static MaterialDrawerHeader getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDrawerHeader>(create);
  static MaterialDrawerHeader? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get duration => $_getN(1);
  @$pb.TagNumber(6)
  set duration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDuration() => $_has(1);
  @$pb.TagNumber(6)
  void clearDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureDuration() => $_ensure(1);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/dropdown.dart
class MaterialDropdownButton extends $pb.GeneratedMessage {
  factory MaterialDropdownButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? hint,
    WidgetExpression? disabledHint,
    $core.int? elevation,
    WidgetExpression? underline,
    WidgetExpression? icon,
    $1.DartColorExpression? iconDisabledColor,
    $1.DartColorExpression? iconEnabledColor,
    $core.double? iconSize,
    $core.bool? isDense,
    $core.bool? isExpanded,
    $core.double? itemHeight,
    $1.DartColorExpression? focusColor,
    $core.bool? autofocus,
    $1.DartColorExpression? dropdownColor,
    $core.double? menuMaxHeight,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (hint != null) {
      $result.hint = hint;
    }
    if (disabledHint != null) {
      $result.disabledHint = disabledHint;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (underline != null) {
      $result.underline = underline;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (iconDisabledColor != null) {
      $result.iconDisabledColor = iconDisabledColor;
    }
    if (iconEnabledColor != null) {
      $result.iconEnabledColor = iconEnabledColor;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (isDense != null) {
      $result.isDense = isDense;
    }
    if (isExpanded != null) {
      $result.isExpanded = isExpanded;
    }
    if (itemHeight != null) {
      $result.itemHeight = itemHeight;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (dropdownColor != null) {
      $result.dropdownColor = dropdownColor;
    }
    if (menuMaxHeight != null) {
      $result.menuMaxHeight = menuMaxHeight;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialDropdownButton._() : super();
  factory MaterialDropdownButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDropdownButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDropdownButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'hint', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'disabledHint', subBuilder: WidgetExpression.create)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'underline', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'iconDisabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'iconEnabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(16, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..aOB(17, _omitFieldNames ? '' : 'isDense')
    ..aOB(18, _omitFieldNames ? '' : 'isExpanded')
    ..a<$core.double>(19, _omitFieldNames ? '' : 'itemHeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(22, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(23, _omitFieldNames ? '' : 'dropdownColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(24, _omitFieldNames ? '' : 'menuMaxHeight', $pb.PbFieldType.OD)
    ..aOB(25, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDropdownButton clone() => MaterialDropdownButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDropdownButton copyWith(void Function(MaterialDropdownButton) updates) => super.copyWith((message) => updates(message as MaterialDropdownButton)) as MaterialDropdownButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButton create() => MaterialDropdownButton._();
  MaterialDropdownButton createEmptyInstance() => create();
  static $pb.PbList<MaterialDropdownButton> createRepeated() => $pb.PbList<MaterialDropdownButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDropdownButton>(create);
  static MaterialDropdownButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  WidgetExpression get hint => $_getN(1);
  @$pb.TagNumber(6)
  set hint(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasHint() => $_has(1);
  @$pb.TagNumber(6)
  void clearHint() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureHint() => $_ensure(1);

  @$pb.TagNumber(7)
  WidgetExpression get disabledHint => $_getN(2);
  @$pb.TagNumber(7)
  set disabledHint(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasDisabledHint() => $_has(2);
  @$pb.TagNumber(7)
  void clearDisabledHint() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureDisabledHint() => $_ensure(2);

  @$pb.TagNumber(10)
  $core.int get elevation => $_getIZ(3);
  @$pb.TagNumber(10)
  set elevation($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(10)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(10)
  void clearElevation() => clearField(10);

  @$pb.TagNumber(12)
  WidgetExpression get underline => $_getN(4);
  @$pb.TagNumber(12)
  set underline(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasUnderline() => $_has(4);
  @$pb.TagNumber(12)
  void clearUnderline() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureUnderline() => $_ensure(4);

  @$pb.TagNumber(13)
  WidgetExpression get icon => $_getN(5);
  @$pb.TagNumber(13)
  set icon(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasIcon() => $_has(5);
  @$pb.TagNumber(13)
  void clearIcon() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureIcon() => $_ensure(5);

  @$pb.TagNumber(14)
  $1.DartColorExpression get iconDisabledColor => $_getN(6);
  @$pb.TagNumber(14)
  set iconDisabledColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasIconDisabledColor() => $_has(6);
  @$pb.TagNumber(14)
  void clearIconDisabledColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureIconDisabledColor() => $_ensure(6);

  @$pb.TagNumber(15)
  $1.DartColorExpression get iconEnabledColor => $_getN(7);
  @$pb.TagNumber(15)
  set iconEnabledColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasIconEnabledColor() => $_has(7);
  @$pb.TagNumber(15)
  void clearIconEnabledColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureIconEnabledColor() => $_ensure(7);

  @$pb.TagNumber(16)
  $core.double get iconSize => $_getN(8);
  @$pb.TagNumber(16)
  set iconSize($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(16)
  $core.bool hasIconSize() => $_has(8);
  @$pb.TagNumber(16)
  void clearIconSize() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get isDense => $_getBF(9);
  @$pb.TagNumber(17)
  set isDense($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasIsDense() => $_has(9);
  @$pb.TagNumber(17)
  void clearIsDense() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get isExpanded => $_getBF(10);
  @$pb.TagNumber(18)
  set isExpanded($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsExpanded() => $_has(10);
  @$pb.TagNumber(18)
  void clearIsExpanded() => clearField(18);

  @$pb.TagNumber(19)
  $core.double get itemHeight => $_getN(11);
  @$pb.TagNumber(19)
  set itemHeight($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasItemHeight() => $_has(11);
  @$pb.TagNumber(19)
  void clearItemHeight() => clearField(19);

  @$pb.TagNumber(20)
  $1.DartColorExpression get focusColor => $_getN(12);
  @$pb.TagNumber(20)
  set focusColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasFocusColor() => $_has(12);
  @$pb.TagNumber(20)
  void clearFocusColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureFocusColor() => $_ensure(12);

  @$pb.TagNumber(22)
  $core.bool get autofocus => $_getBF(13);
  @$pb.TagNumber(22)
  set autofocus($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(22)
  $core.bool hasAutofocus() => $_has(13);
  @$pb.TagNumber(22)
  void clearAutofocus() => clearField(22);

  @$pb.TagNumber(23)
  $1.DartColorExpression get dropdownColor => $_getN(14);
  @$pb.TagNumber(23)
  set dropdownColor($1.DartColorExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasDropdownColor() => $_has(14);
  @$pb.TagNumber(23)
  void clearDropdownColor() => clearField(23);
  @$pb.TagNumber(23)
  $1.DartColorExpression ensureDropdownColor() => $_ensure(14);

  @$pb.TagNumber(24)
  $core.double get menuMaxHeight => $_getN(15);
  @$pb.TagNumber(24)
  set menuMaxHeight($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(24)
  $core.bool hasMenuMaxHeight() => $_has(15);
  @$pb.TagNumber(24)
  void clearMenuMaxHeight() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get enableFeedback => $_getBF(16);
  @$pb.TagNumber(25)
  set enableFeedback($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(25)
  $core.bool hasEnableFeedback() => $_has(16);
  @$pb.TagNumber(25)
  void clearEnableFeedback() => clearField(25);
}

/// package:flutter/src/material/dropdown.dart
class MaterialDropdownButtonFormField extends $pb.GeneratedMessage {
  factory MaterialDropdownButtonFormField({
    $1.FlutterKeyExpression? key,
    WidgetExpression? hint,
    WidgetExpression? disabledHint,
    $core.int? elevation,
    WidgetExpression? icon,
    $1.DartColorExpression? iconDisabledColor,
    $1.DartColorExpression? iconEnabledColor,
    $core.double? iconSize,
    $core.bool? isDense,
    $core.bool? isExpanded,
    $core.double? itemHeight,
    $1.DartColorExpression? focusColor,
    $core.bool? autofocus,
    $1.DartColorExpression? dropdownColor,
    $core.double? menuMaxHeight,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (hint != null) {
      $result.hint = hint;
    }
    if (disabledHint != null) {
      $result.disabledHint = disabledHint;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (iconDisabledColor != null) {
      $result.iconDisabledColor = iconDisabledColor;
    }
    if (iconEnabledColor != null) {
      $result.iconEnabledColor = iconEnabledColor;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (isDense != null) {
      $result.isDense = isDense;
    }
    if (isExpanded != null) {
      $result.isExpanded = isExpanded;
    }
    if (itemHeight != null) {
      $result.itemHeight = itemHeight;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (dropdownColor != null) {
      $result.dropdownColor = dropdownColor;
    }
    if (menuMaxHeight != null) {
      $result.menuMaxHeight = menuMaxHeight;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialDropdownButtonFormField._() : super();
  factory MaterialDropdownButtonFormField.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDropdownButtonFormField.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDropdownButtonFormField', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'hint', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'disabledHint', subBuilder: WidgetExpression.create)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'iconDisabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'iconEnabledColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..aOB(16, _omitFieldNames ? '' : 'isDense')
    ..aOB(17, _omitFieldNames ? '' : 'isExpanded')
    ..a<$core.double>(18, _omitFieldNames ? '' : 'itemHeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(21, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'dropdownColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(27, _omitFieldNames ? '' : 'menuMaxHeight', $pb.PbFieldType.OD)
    ..aOB(28, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDropdownButtonFormField clone() => MaterialDropdownButtonFormField()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDropdownButtonFormField copyWith(void Function(MaterialDropdownButtonFormField) updates) => super.copyWith((message) => updates(message as MaterialDropdownButtonFormField)) as MaterialDropdownButtonFormField;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButtonFormField create() => MaterialDropdownButtonFormField._();
  MaterialDropdownButtonFormField createEmptyInstance() => create();
  static $pb.PbList<MaterialDropdownButtonFormField> createRepeated() => $pb.PbList<MaterialDropdownButtonFormField>();
  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButtonFormField getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDropdownButtonFormField>(create);
  static MaterialDropdownButtonFormField? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  WidgetExpression get hint => $_getN(1);
  @$pb.TagNumber(6)
  set hint(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasHint() => $_has(1);
  @$pb.TagNumber(6)
  void clearHint() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureHint() => $_ensure(1);

  @$pb.TagNumber(7)
  WidgetExpression get disabledHint => $_getN(2);
  @$pb.TagNumber(7)
  set disabledHint(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasDisabledHint() => $_has(2);
  @$pb.TagNumber(7)
  void clearDisabledHint() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureDisabledHint() => $_ensure(2);

  @$pb.TagNumber(10)
  $core.int get elevation => $_getIZ(3);
  @$pb.TagNumber(10)
  set elevation($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(10)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(10)
  void clearElevation() => clearField(10);

  @$pb.TagNumber(12)
  WidgetExpression get icon => $_getN(4);
  @$pb.TagNumber(12)
  set icon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasIcon() => $_has(4);
  @$pb.TagNumber(12)
  void clearIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureIcon() => $_ensure(4);

  @$pb.TagNumber(13)
  $1.DartColorExpression get iconDisabledColor => $_getN(5);
  @$pb.TagNumber(13)
  set iconDisabledColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasIconDisabledColor() => $_has(5);
  @$pb.TagNumber(13)
  void clearIconDisabledColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureIconDisabledColor() => $_ensure(5);

  @$pb.TagNumber(14)
  $1.DartColorExpression get iconEnabledColor => $_getN(6);
  @$pb.TagNumber(14)
  set iconEnabledColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasIconEnabledColor() => $_has(6);
  @$pb.TagNumber(14)
  void clearIconEnabledColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureIconEnabledColor() => $_ensure(6);

  @$pb.TagNumber(15)
  $core.double get iconSize => $_getN(7);
  @$pb.TagNumber(15)
  set iconSize($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(15)
  $core.bool hasIconSize() => $_has(7);
  @$pb.TagNumber(15)
  void clearIconSize() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get isDense => $_getBF(8);
  @$pb.TagNumber(16)
  set isDense($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(16)
  $core.bool hasIsDense() => $_has(8);
  @$pb.TagNumber(16)
  void clearIsDense() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get isExpanded => $_getBF(9);
  @$pb.TagNumber(17)
  set isExpanded($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasIsExpanded() => $_has(9);
  @$pb.TagNumber(17)
  void clearIsExpanded() => clearField(17);

  @$pb.TagNumber(18)
  $core.double get itemHeight => $_getN(10);
  @$pb.TagNumber(18)
  set itemHeight($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasItemHeight() => $_has(10);
  @$pb.TagNumber(18)
  void clearItemHeight() => clearField(18);

  @$pb.TagNumber(19)
  $1.DartColorExpression get focusColor => $_getN(11);
  @$pb.TagNumber(19)
  set focusColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasFocusColor() => $_has(11);
  @$pb.TagNumber(19)
  void clearFocusColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureFocusColor() => $_ensure(11);

  @$pb.TagNumber(21)
  $core.bool get autofocus => $_getBF(12);
  @$pb.TagNumber(21)
  set autofocus($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(21)
  $core.bool hasAutofocus() => $_has(12);
  @$pb.TagNumber(21)
  void clearAutofocus() => clearField(21);

  @$pb.TagNumber(22)
  $1.DartColorExpression get dropdownColor => $_getN(13);
  @$pb.TagNumber(22)
  set dropdownColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasDropdownColor() => $_has(13);
  @$pb.TagNumber(22)
  void clearDropdownColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureDropdownColor() => $_ensure(13);

  @$pb.TagNumber(27)
  $core.double get menuMaxHeight => $_getN(14);
  @$pb.TagNumber(27)
  set menuMaxHeight($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(27)
  $core.bool hasMenuMaxHeight() => $_has(14);
  @$pb.TagNumber(27)
  void clearMenuMaxHeight() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get enableFeedback => $_getBF(15);
  @$pb.TagNumber(28)
  set enableFeedback($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(28)
  $core.bool hasEnableFeedback() => $_has(15);
  @$pb.TagNumber(28)
  void clearEnableFeedback() => clearField(28);
}

/// package:flutter/src/material/dropdown.dart
class MaterialDropdownButtonHideUnderline extends $pb.GeneratedMessage {
  factory MaterialDropdownButtonHideUnderline({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDropdownButtonHideUnderline._() : super();
  factory MaterialDropdownButtonHideUnderline.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDropdownButtonHideUnderline.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDropdownButtonHideUnderline', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDropdownButtonHideUnderline clone() => MaterialDropdownButtonHideUnderline()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDropdownButtonHideUnderline copyWith(void Function(MaterialDropdownButtonHideUnderline) updates) => super.copyWith((message) => updates(message as MaterialDropdownButtonHideUnderline)) as MaterialDropdownButtonHideUnderline;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButtonHideUnderline create() => MaterialDropdownButtonHideUnderline._();
  MaterialDropdownButtonHideUnderline createEmptyInstance() => create();
  static $pb.PbList<MaterialDropdownButtonHideUnderline> createRepeated() => $pb.PbList<MaterialDropdownButtonHideUnderline>();
  @$core.pragma('dart2js:noInline')
  static MaterialDropdownButtonHideUnderline getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDropdownButtonHideUnderline>(create);
  static MaterialDropdownButtonHideUnderline? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/dropdown.dart
class MaterialDropdownMenuItem extends $pb.GeneratedMessage {
  factory MaterialDropdownMenuItem({
    $1.FlutterKeyExpression? key,
    $core.bool? enabled,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialDropdownMenuItem._() : super();
  factory MaterialDropdownMenuItem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDropdownMenuItem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDropdownMenuItem', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'enabled')
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDropdownMenuItem clone() => MaterialDropdownMenuItem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDropdownMenuItem copyWith(void Function(MaterialDropdownMenuItem) updates) => super.copyWith((message) => updates(message as MaterialDropdownMenuItem)) as MaterialDropdownMenuItem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDropdownMenuItem create() => MaterialDropdownMenuItem._();
  MaterialDropdownMenuItem createEmptyInstance() => create();
  static $pb.PbList<MaterialDropdownMenuItem> createRepeated() => $pb.PbList<MaterialDropdownMenuItem>();
  @$core.pragma('dart2js:noInline')
  static MaterialDropdownMenuItem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDropdownMenuItem>(create);
  static MaterialDropdownMenuItem? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.bool get enabled => $_getBF(1);
  @$pb.TagNumber(5)
  set enabled($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnabled() => $_has(1);
  @$pb.TagNumber(5)
  void clearEnabled() => clearField(5);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/elevated_button.dart
class MaterialElevatedButton extends $pb.GeneratedMessage {
  factory MaterialElevatedButton({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialElevatedButton._() : super();
  factory MaterialElevatedButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialElevatedButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialElevatedButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialElevatedButton clone() => MaterialElevatedButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialElevatedButton copyWith(void Function(MaterialElevatedButton) updates) => super.copyWith((message) => updates(message as MaterialElevatedButton)) as MaterialElevatedButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialElevatedButton create() => MaterialElevatedButton._();
  MaterialElevatedButton createEmptyInstance() => create();
  static $pb.PbList<MaterialElevatedButton> createRepeated() => $pb.PbList<MaterialElevatedButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialElevatedButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialElevatedButton>(create);
  static MaterialElevatedButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(12)
  set child(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(12)
  void clearChild() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/elevated_button.dart
class MaterialElevatedButtonNamedIcon extends $pb.GeneratedMessage {
  factory MaterialElevatedButtonNamedIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? icon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialElevatedButtonNamedIcon._() : super();
  factory MaterialElevatedButtonNamedIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialElevatedButtonNamedIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialElevatedButtonNamedIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialElevatedButtonNamedIcon clone() => MaterialElevatedButtonNamedIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialElevatedButtonNamedIcon copyWith(void Function(MaterialElevatedButtonNamedIcon) updates) => super.copyWith((message) => updates(message as MaterialElevatedButtonNamedIcon)) as MaterialElevatedButtonNamedIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialElevatedButtonNamedIcon create() => MaterialElevatedButtonNamedIcon._();
  MaterialElevatedButtonNamedIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialElevatedButtonNamedIcon> createRepeated() => $pb.PbList<MaterialElevatedButtonNamedIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialElevatedButtonNamedIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialElevatedButtonNamedIcon>(create);
  static MaterialElevatedButtonNamedIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(12)
  set icon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(12)
  void clearIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(13)
  WidgetExpression get label => $_getN(3);
  @$pb.TagNumber(13)
  set label(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(13)
  void clearLabel() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureLabel() => $_ensure(3);
}

/// package:flutter/src/material/expand_icon.dart
class MaterialExpandIcon extends $pb.GeneratedMessage {
  factory MaterialExpandIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? isExpanded,
    $core.double? size,
    $1.DartColorExpression? color,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? expandedColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (isExpanded != null) {
      $result.isExpanded = isExpanded;
    }
    if (size != null) {
      $result.size = size;
    }
    if (color != null) {
      $result.color = color;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (expandedColor != null) {
      $result.expandedColor = expandedColor;
    }
    return $result;
  }
  MaterialExpandIcon._() : super();
  factory MaterialExpandIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialExpandIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialExpandIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'isExpanded')
    ..a<$core.double>(4, _omitFieldNames ? '' : 'size', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'expandedColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialExpandIcon clone() => MaterialExpandIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialExpandIcon copyWith(void Function(MaterialExpandIcon) updates) => super.copyWith((message) => updates(message as MaterialExpandIcon)) as MaterialExpandIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialExpandIcon create() => MaterialExpandIcon._();
  MaterialExpandIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialExpandIcon> createRepeated() => $pb.PbList<MaterialExpandIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialExpandIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialExpandIcon>(create);
  static MaterialExpandIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get isExpanded => $_getBF(1);
  @$pb.TagNumber(3)
  set isExpanded($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsExpanded() => $_has(1);
  @$pb.TagNumber(3)
  void clearIsExpanded() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get size => $_getN(2);
  @$pb.TagNumber(4)
  set size($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasSize() => $_has(2);
  @$pb.TagNumber(4)
  void clearSize() => clearField(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(7)
  set color($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(8)
  $1.DartColorExpression get disabledColor => $_getN(4);
  @$pb.TagNumber(8)
  set disabledColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasDisabledColor() => $_has(4);
  @$pb.TagNumber(8)
  void clearDisabledColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(4);

  @$pb.TagNumber(9)
  $1.DartColorExpression get expandedColor => $_getN(5);
  @$pb.TagNumber(9)
  set expandedColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasExpandedColor() => $_has(5);
  @$pb.TagNumber(9)
  void clearExpandedColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureExpandedColor() => $_ensure(5);
}

/// package:flutter/src/material/expansion_panel.dart
class MaterialExpansionPanelList extends $pb.GeneratedMessage {
  factory MaterialExpansionPanelList({
    $1.FlutterKeyExpression? key,
    $1.DartDurationExpression? animationDuration,
    $1.DartColorExpression? dividerColor,
    $core.double? elevation,
    $1.DartColorExpression? expandIconColor,
    $core.double? materialGapSize,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (expandIconColor != null) {
      $result.expandIconColor = expandIconColor;
    }
    if (materialGapSize != null) {
      $result.materialGapSize = materialGapSize;
    }
    return $result;
  }
  MaterialExpansionPanelList._() : super();
  factory MaterialExpansionPanelList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialExpansionPanelList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialExpansionPanelList', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartDurationExpression>(5, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'expandIconColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'materialGapSize', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialExpansionPanelList clone() => MaterialExpansionPanelList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialExpansionPanelList copyWith(void Function(MaterialExpansionPanelList) updates) => super.copyWith((message) => updates(message as MaterialExpansionPanelList)) as MaterialExpansionPanelList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialExpansionPanelList create() => MaterialExpansionPanelList._();
  MaterialExpansionPanelList createEmptyInstance() => create();
  static $pb.PbList<MaterialExpansionPanelList> createRepeated() => $pb.PbList<MaterialExpansionPanelList>();
  @$core.pragma('dart2js:noInline')
  static MaterialExpansionPanelList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialExpansionPanelList>(create);
  static MaterialExpansionPanelList? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $1.DartDurationExpression get animationDuration => $_getN(1);
  @$pb.TagNumber(5)
  set animationDuration($1.DartDurationExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAnimationDuration() => $_has(1);
  @$pb.TagNumber(5)
  void clearAnimationDuration() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(1);

  @$pb.TagNumber(7)
  $1.DartColorExpression get dividerColor => $_getN(2);
  @$pb.TagNumber(7)
  set dividerColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasDividerColor() => $_has(2);
  @$pb.TagNumber(7)
  void clearDividerColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureDividerColor() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.double get elevation => $_getN(3);
  @$pb.TagNumber(8)
  set elevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(8)
  void clearElevation() => clearField(8);

  @$pb.TagNumber(9)
  $1.DartColorExpression get expandIconColor => $_getN(4);
  @$pb.TagNumber(9)
  set expandIconColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasExpandIconColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearExpandIconColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureExpandIconColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.double get materialGapSize => $_getN(5);
  @$pb.TagNumber(10)
  set materialGapSize($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaterialGapSize() => $_has(5);
  @$pb.TagNumber(10)
  void clearMaterialGapSize() => clearField(10);
}

/// package:flutter/src/material/expansion_panel.dart
class MaterialExpansionPanelListNamedRadio extends $pb.GeneratedMessage {
  factory MaterialExpansionPanelListNamedRadio({
    $1.FlutterKeyExpression? key,
    $1.DartDurationExpression? animationDuration,
    $1.DartColorExpression? dividerColor,
    $core.double? elevation,
    $1.DartColorExpression? expandIconColor,
    $core.double? materialGapSize,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (expandIconColor != null) {
      $result.expandIconColor = expandIconColor;
    }
    if (materialGapSize != null) {
      $result.materialGapSize = materialGapSize;
    }
    return $result;
  }
  MaterialExpansionPanelListNamedRadio._() : super();
  factory MaterialExpansionPanelListNamedRadio.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialExpansionPanelListNamedRadio.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialExpansionPanelListNamedRadio', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartDurationExpression>(5, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'expandIconColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'materialGapSize', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialExpansionPanelListNamedRadio clone() => MaterialExpansionPanelListNamedRadio()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialExpansionPanelListNamedRadio copyWith(void Function(MaterialExpansionPanelListNamedRadio) updates) => super.copyWith((message) => updates(message as MaterialExpansionPanelListNamedRadio)) as MaterialExpansionPanelListNamedRadio;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialExpansionPanelListNamedRadio create() => MaterialExpansionPanelListNamedRadio._();
  MaterialExpansionPanelListNamedRadio createEmptyInstance() => create();
  static $pb.PbList<MaterialExpansionPanelListNamedRadio> createRepeated() => $pb.PbList<MaterialExpansionPanelListNamedRadio>();
  @$core.pragma('dart2js:noInline')
  static MaterialExpansionPanelListNamedRadio getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialExpansionPanelListNamedRadio>(create);
  static MaterialExpansionPanelListNamedRadio? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $1.DartDurationExpression get animationDuration => $_getN(1);
  @$pb.TagNumber(5)
  set animationDuration($1.DartDurationExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAnimationDuration() => $_has(1);
  @$pb.TagNumber(5)
  void clearAnimationDuration() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(1);

  @$pb.TagNumber(8)
  $1.DartColorExpression get dividerColor => $_getN(2);
  @$pb.TagNumber(8)
  set dividerColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasDividerColor() => $_has(2);
  @$pb.TagNumber(8)
  void clearDividerColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureDividerColor() => $_ensure(2);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(3);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get expandIconColor => $_getN(4);
  @$pb.TagNumber(10)
  set expandIconColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasExpandIconColor() => $_has(4);
  @$pb.TagNumber(10)
  void clearExpandIconColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureExpandIconColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $core.double get materialGapSize => $_getN(5);
  @$pb.TagNumber(11)
  set materialGapSize($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasMaterialGapSize() => $_has(5);
  @$pb.TagNumber(11)
  void clearMaterialGapSize() => clearField(11);
}

/// package:flutter/src/material/expansion_tile.dart
class MaterialExpansionTile extends $pb.GeneratedMessage {
  factory MaterialExpansionTile({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? trailing,
    $core.bool? initiallyExpanded,
    $core.bool? maintainState,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? collapsedBackgroundColor,
    $1.DartColorExpression? textColor,
    $1.DartColorExpression? collapsedTextColor,
    $1.DartColorExpression? iconColor,
    $1.DartColorExpression? collapsedIconColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (initiallyExpanded != null) {
      $result.initiallyExpanded = initiallyExpanded;
    }
    if (maintainState != null) {
      $result.maintainState = maintainState;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (collapsedBackgroundColor != null) {
      $result.collapsedBackgroundColor = collapsedBackgroundColor;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (collapsedTextColor != null) {
      $result.collapsedTextColor = collapsedTextColor;
    }
    if (iconColor != null) {
      $result.iconColor = iconColor;
    }
    if (collapsedIconColor != null) {
      $result.collapsedIconColor = collapsedIconColor;
    }
    return $result;
  }
  MaterialExpansionTile._() : super();
  factory MaterialExpansionTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialExpansionTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialExpansionTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'initiallyExpanded')
    ..aOB(10, _omitFieldNames ? '' : 'maintainState')
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'collapsedBackgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(18, _omitFieldNames ? '' : 'collapsedTextColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'iconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'collapsedIconColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialExpansionTile clone() => MaterialExpansionTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialExpansionTile copyWith(void Function(MaterialExpansionTile) updates) => super.copyWith((message) => updates(message as MaterialExpansionTile)) as MaterialExpansionTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialExpansionTile create() => MaterialExpansionTile._();
  MaterialExpansionTile createEmptyInstance() => create();
  static $pb.PbList<MaterialExpansionTile> createRepeated() => $pb.PbList<MaterialExpansionTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialExpansionTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialExpansionTile>(create);
  static MaterialExpansionTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get title => $_getN(2);
  @$pb.TagNumber(4)
  set title(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTitle() => $_has(2);
  @$pb.TagNumber(4)
  void clearTitle() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureTitle() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get subtitle => $_getN(3);
  @$pb.TagNumber(5)
  set subtitle(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSubtitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearSubtitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureSubtitle() => $_ensure(3);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get children => $_getList(4);

  @$pb.TagNumber(8)
  WidgetExpression get trailing => $_getN(5);
  @$pb.TagNumber(8)
  set trailing(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasTrailing() => $_has(5);
  @$pb.TagNumber(8)
  void clearTrailing() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureTrailing() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.bool get initiallyExpanded => $_getBF(6);
  @$pb.TagNumber(9)
  set initiallyExpanded($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasInitiallyExpanded() => $_has(6);
  @$pb.TagNumber(9)
  void clearInitiallyExpanded() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get maintainState => $_getBF(7);
  @$pb.TagNumber(10)
  set maintainState($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaintainState() => $_has(7);
  @$pb.TagNumber(10)
  void clearMaintainState() => clearField(10);

  @$pb.TagNumber(15)
  $1.DartColorExpression get backgroundColor => $_getN(8);
  @$pb.TagNumber(15)
  set backgroundColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasBackgroundColor() => $_has(8);
  @$pb.TagNumber(15)
  void clearBackgroundColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(8);

  @$pb.TagNumber(16)
  $1.DartColorExpression get collapsedBackgroundColor => $_getN(9);
  @$pb.TagNumber(16)
  set collapsedBackgroundColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasCollapsedBackgroundColor() => $_has(9);
  @$pb.TagNumber(16)
  void clearCollapsedBackgroundColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureCollapsedBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(17)
  $1.DartColorExpression get textColor => $_getN(10);
  @$pb.TagNumber(17)
  set textColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasTextColor() => $_has(10);
  @$pb.TagNumber(17)
  void clearTextColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureTextColor() => $_ensure(10);

  @$pb.TagNumber(18)
  $1.DartColorExpression get collapsedTextColor => $_getN(11);
  @$pb.TagNumber(18)
  set collapsedTextColor($1.DartColorExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasCollapsedTextColor() => $_has(11);
  @$pb.TagNumber(18)
  void clearCollapsedTextColor() => clearField(18);
  @$pb.TagNumber(18)
  $1.DartColorExpression ensureCollapsedTextColor() => $_ensure(11);

  @$pb.TagNumber(19)
  $1.DartColorExpression get iconColor => $_getN(12);
  @$pb.TagNumber(19)
  set iconColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasIconColor() => $_has(12);
  @$pb.TagNumber(19)
  void clearIconColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureIconColor() => $_ensure(12);

  @$pb.TagNumber(20)
  $1.DartColorExpression get collapsedIconColor => $_getN(13);
  @$pb.TagNumber(20)
  set collapsedIconColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasCollapsedIconColor() => $_has(13);
  @$pb.TagNumber(20)
  void clearCollapsedIconColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureCollapsedIconColor() => $_ensure(13);
}

/// package:flutter/src/material/filled_button.dart
class MaterialFilledButton extends $pb.GeneratedMessage {
  factory MaterialFilledButton({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialFilledButton._() : super();
  factory MaterialFilledButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilledButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilledButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilledButton clone() => MaterialFilledButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilledButton copyWith(void Function(MaterialFilledButton) updates) => super.copyWith((message) => updates(message as MaterialFilledButton)) as MaterialFilledButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilledButton create() => MaterialFilledButton._();
  MaterialFilledButton createEmptyInstance() => create();
  static $pb.PbList<MaterialFilledButton> createRepeated() => $pb.PbList<MaterialFilledButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilledButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilledButton>(create);
  static MaterialFilledButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(12)
  set child(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(12)
  void clearChild() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/filled_button.dart
class MaterialFilledButtonNamedIcon extends $pb.GeneratedMessage {
  factory MaterialFilledButtonNamedIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? icon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialFilledButtonNamedIcon._() : super();
  factory MaterialFilledButtonNamedIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilledButtonNamedIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilledButtonNamedIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedIcon clone() => MaterialFilledButtonNamedIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedIcon copyWith(void Function(MaterialFilledButtonNamedIcon) updates) => super.copyWith((message) => updates(message as MaterialFilledButtonNamedIcon)) as MaterialFilledButtonNamedIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedIcon create() => MaterialFilledButtonNamedIcon._();
  MaterialFilledButtonNamedIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialFilledButtonNamedIcon> createRepeated() => $pb.PbList<MaterialFilledButtonNamedIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilledButtonNamedIcon>(create);
  static MaterialFilledButtonNamedIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(12)
  set icon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(12)
  void clearIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(13)
  WidgetExpression get label => $_getN(3);
  @$pb.TagNumber(13)
  set label(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(13)
  void clearLabel() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureLabel() => $_ensure(3);
}

/// package:flutter/src/material/filled_button.dart
class MaterialFilledButtonNamedTonal extends $pb.GeneratedMessage {
  factory MaterialFilledButtonNamedTonal({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialFilledButtonNamedTonal._() : super();
  factory MaterialFilledButtonNamedTonal.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilledButtonNamedTonal.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilledButtonNamedTonal', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedTonal clone() => MaterialFilledButtonNamedTonal()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedTonal copyWith(void Function(MaterialFilledButtonNamedTonal) updates) => super.copyWith((message) => updates(message as MaterialFilledButtonNamedTonal)) as MaterialFilledButtonNamedTonal;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedTonal create() => MaterialFilledButtonNamedTonal._();
  MaterialFilledButtonNamedTonal createEmptyInstance() => create();
  static $pb.PbList<MaterialFilledButtonNamedTonal> createRepeated() => $pb.PbList<MaterialFilledButtonNamedTonal>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedTonal getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilledButtonNamedTonal>(create);
  static MaterialFilledButtonNamedTonal? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(12)
  set child(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(12)
  void clearChild() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/filled_button.dart
class MaterialFilledButtonNamedTonalIcon extends $pb.GeneratedMessage {
  factory MaterialFilledButtonNamedTonalIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? icon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialFilledButtonNamedTonalIcon._() : super();
  factory MaterialFilledButtonNamedTonalIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilledButtonNamedTonalIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilledButtonNamedTonalIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedTonalIcon clone() => MaterialFilledButtonNamedTonalIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilledButtonNamedTonalIcon copyWith(void Function(MaterialFilledButtonNamedTonalIcon) updates) => super.copyWith((message) => updates(message as MaterialFilledButtonNamedTonalIcon)) as MaterialFilledButtonNamedTonalIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedTonalIcon create() => MaterialFilledButtonNamedTonalIcon._();
  MaterialFilledButtonNamedTonalIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialFilledButtonNamedTonalIcon> createRepeated() => $pb.PbList<MaterialFilledButtonNamedTonalIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilledButtonNamedTonalIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilledButtonNamedTonalIcon>(create);
  static MaterialFilledButtonNamedTonalIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(12)
  set icon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(12)
  void clearIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(13)
  WidgetExpression get label => $_getN(3);
  @$pb.TagNumber(13)
  set label(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(13)
  void clearLabel() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureLabel() => $_ensure(3);
}

/// package:flutter/src/material/filter_chip.dart
class MaterialFilterChip extends $pb.GeneratedMessage {
  factory MaterialFilterChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.bool? selected,
    $core.double? pressElevation,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? selectedColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialFilterChip._() : super();
  factory MaterialFilterChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilterChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilterChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'selected')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'tooltip')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(24, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(27, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(29, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilterChip clone() => MaterialFilterChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilterChip copyWith(void Function(MaterialFilterChip) updates) => super.copyWith((message) => updates(message as MaterialFilterChip)) as MaterialFilterChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilterChip create() => MaterialFilterChip._();
  MaterialFilterChip createEmptyInstance() => create();
  static $pb.PbList<MaterialFilterChip> createRepeated() => $pb.PbList<MaterialFilterChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilterChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilterChip>(create);
  static MaterialFilterChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(7)
  $core.bool get selected => $_getBF(3);
  @$pb.TagNumber(7)
  set selected($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasSelected() => $_has(3);
  @$pb.TagNumber(7)
  void clearSelected() => clearField(7);

  @$pb.TagNumber(9)
  $core.double get pressElevation => $_getN(4);
  @$pb.TagNumber(9)
  set pressElevation($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasPressElevation() => $_has(4);
  @$pb.TagNumber(9)
  void clearPressElevation() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get disabledColor => $_getN(5);
  @$pb.TagNumber(10)
  set disabledColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasDisabledColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearDisabledColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get selectedColor => $_getN(6);
  @$pb.TagNumber(11)
  set selectedColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasSelectedColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearSelectedColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.String get tooltip => $_getSZ(7);
  @$pb.TagNumber(12)
  set tooltip($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTooltip() => $_has(7);
  @$pb.TagNumber(12)
  void clearTooltip() => clearField(12);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(9);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(9);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $core.double get elevation => $_getN(10);
  @$pb.TagNumber(23)
  set elevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(23)
  $core.bool hasElevation() => $_has(10);
  @$pb.TagNumber(23)
  void clearElevation() => clearField(23);

  @$pb.TagNumber(24)
  $1.DartColorExpression get shadowColor => $_getN(11);
  @$pb.TagNumber(24)
  set shadowColor($1.DartColorExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasShadowColor() => $_has(11);
  @$pb.TagNumber(24)
  void clearShadowColor() => clearField(24);
  @$pb.TagNumber(24)
  $1.DartColorExpression ensureShadowColor() => $_ensure(11);

  @$pb.TagNumber(25)
  $1.DartColorExpression get surfaceTintColor => $_getN(12);
  @$pb.TagNumber(25)
  set surfaceTintColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSurfaceTintColor() => $_has(12);
  @$pb.TagNumber(25)
  void clearSurfaceTintColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(12);

  @$pb.TagNumber(27)
  $1.DartColorExpression get selectedShadowColor => $_getN(13);
  @$pb.TagNumber(27)
  set selectedShadowColor($1.DartColorExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSelectedShadowColor() => $_has(13);
  @$pb.TagNumber(27)
  void clearSelectedShadowColor() => clearField(27);
  @$pb.TagNumber(27)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(13);

  @$pb.TagNumber(28)
  $core.bool get showCheckmark => $_getBF(14);
  @$pb.TagNumber(28)
  set showCheckmark($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(28)
  $core.bool hasShowCheckmark() => $_has(14);
  @$pb.TagNumber(28)
  void clearShowCheckmark() => clearField(28);

  @$pb.TagNumber(29)
  $1.DartColorExpression get checkmarkColor => $_getN(15);
  @$pb.TagNumber(29)
  set checkmarkColor($1.DartColorExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCheckmarkColor() => $_has(15);
  @$pb.TagNumber(29)
  void clearCheckmarkColor() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(15);
}

/// package:flutter/src/material/filter_chip.dart
class MaterialFilterChipNamedElevated extends $pb.GeneratedMessage {
  factory MaterialFilterChipNamedElevated({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.bool? selected,
    $core.double? pressElevation,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? selectedColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialFilterChipNamedElevated._() : super();
  factory MaterialFilterChipNamedElevated.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFilterChipNamedElevated.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFilterChipNamedElevated', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'selected')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'tooltip')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(24, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(27, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(29, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFilterChipNamedElevated clone() => MaterialFilterChipNamedElevated()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFilterChipNamedElevated copyWith(void Function(MaterialFilterChipNamedElevated) updates) => super.copyWith((message) => updates(message as MaterialFilterChipNamedElevated)) as MaterialFilterChipNamedElevated;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFilterChipNamedElevated create() => MaterialFilterChipNamedElevated._();
  MaterialFilterChipNamedElevated createEmptyInstance() => create();
  static $pb.PbList<MaterialFilterChipNamedElevated> createRepeated() => $pb.PbList<MaterialFilterChipNamedElevated>();
  @$core.pragma('dart2js:noInline')
  static MaterialFilterChipNamedElevated getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFilterChipNamedElevated>(create);
  static MaterialFilterChipNamedElevated? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(7)
  $core.bool get selected => $_getBF(3);
  @$pb.TagNumber(7)
  set selected($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasSelected() => $_has(3);
  @$pb.TagNumber(7)
  void clearSelected() => clearField(7);

  @$pb.TagNumber(9)
  $core.double get pressElevation => $_getN(4);
  @$pb.TagNumber(9)
  set pressElevation($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasPressElevation() => $_has(4);
  @$pb.TagNumber(9)
  void clearPressElevation() => clearField(9);

  @$pb.TagNumber(10)
  $1.DartColorExpression get disabledColor => $_getN(5);
  @$pb.TagNumber(10)
  set disabledColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasDisabledColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearDisabledColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get selectedColor => $_getN(6);
  @$pb.TagNumber(11)
  set selectedColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasSelectedColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearSelectedColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $core.String get tooltip => $_getSZ(7);
  @$pb.TagNumber(12)
  set tooltip($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTooltip() => $_has(7);
  @$pb.TagNumber(12)
  void clearTooltip() => clearField(12);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(8);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(8);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(19)
  $1.DartColorExpression get backgroundColor => $_getN(9);
  @$pb.TagNumber(19)
  set backgroundColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasBackgroundColor() => $_has(9);
  @$pb.TagNumber(19)
  void clearBackgroundColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(9);

  @$pb.TagNumber(23)
  $core.double get elevation => $_getN(10);
  @$pb.TagNumber(23)
  set elevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(23)
  $core.bool hasElevation() => $_has(10);
  @$pb.TagNumber(23)
  void clearElevation() => clearField(23);

  @$pb.TagNumber(24)
  $1.DartColorExpression get shadowColor => $_getN(11);
  @$pb.TagNumber(24)
  set shadowColor($1.DartColorExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasShadowColor() => $_has(11);
  @$pb.TagNumber(24)
  void clearShadowColor() => clearField(24);
  @$pb.TagNumber(24)
  $1.DartColorExpression ensureShadowColor() => $_ensure(11);

  @$pb.TagNumber(25)
  $1.DartColorExpression get surfaceTintColor => $_getN(12);
  @$pb.TagNumber(25)
  set surfaceTintColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasSurfaceTintColor() => $_has(12);
  @$pb.TagNumber(25)
  void clearSurfaceTintColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(12);

  @$pb.TagNumber(27)
  $1.DartColorExpression get selectedShadowColor => $_getN(13);
  @$pb.TagNumber(27)
  set selectedShadowColor($1.DartColorExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSelectedShadowColor() => $_has(13);
  @$pb.TagNumber(27)
  void clearSelectedShadowColor() => clearField(27);
  @$pb.TagNumber(27)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(13);

  @$pb.TagNumber(28)
  $core.bool get showCheckmark => $_getBF(14);
  @$pb.TagNumber(28)
  set showCheckmark($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(28)
  $core.bool hasShowCheckmark() => $_has(14);
  @$pb.TagNumber(28)
  void clearShowCheckmark() => clearField(28);

  @$pb.TagNumber(29)
  $1.DartColorExpression get checkmarkColor => $_getN(15);
  @$pb.TagNumber(29)
  set checkmarkColor($1.DartColorExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCheckmarkColor() => $_has(15);
  @$pb.TagNumber(29)
  void clearCheckmarkColor() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(15);
}

/// package:flutter/src/material/flexible_space_bar.dart
class MaterialFlexibleSpaceBar extends $pb.GeneratedMessage {
  factory MaterialFlexibleSpaceBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? title,
    WidgetExpression? background,
    $core.bool? centerTitle,
    $core.double? expandedTitleScale,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (background != null) {
      $result.background = background;
    }
    if (centerTitle != null) {
      $result.centerTitle = centerTitle;
    }
    if (expandedTitleScale != null) {
      $result.expandedTitleScale = expandedTitleScale;
    }
    return $result;
  }
  MaterialFlexibleSpaceBar._() : super();
  factory MaterialFlexibleSpaceBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFlexibleSpaceBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFlexibleSpaceBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'background', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'centerTitle')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'expandedTitleScale', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFlexibleSpaceBar clone() => MaterialFlexibleSpaceBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFlexibleSpaceBar copyWith(void Function(MaterialFlexibleSpaceBar) updates) => super.copyWith((message) => updates(message as MaterialFlexibleSpaceBar)) as MaterialFlexibleSpaceBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFlexibleSpaceBar create() => MaterialFlexibleSpaceBar._();
  MaterialFlexibleSpaceBar createEmptyInstance() => create();
  static $pb.PbList<MaterialFlexibleSpaceBar> createRepeated() => $pb.PbList<MaterialFlexibleSpaceBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialFlexibleSpaceBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFlexibleSpaceBar>(create);
  static MaterialFlexibleSpaceBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get title => $_getN(1);
  @$pb.TagNumber(3)
  set title(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureTitle() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get background => $_getN(2);
  @$pb.TagNumber(4)
  set background(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackground() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackground() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureBackground() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get centerTitle => $_getBF(3);
  @$pb.TagNumber(5)
  set centerTitle($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCenterTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearCenterTitle() => clearField(5);

  @$pb.TagNumber(9)
  $core.double get expandedTitleScale => $_getN(4);
  @$pb.TagNumber(9)
  set expandedTitleScale($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasExpandedTitleScale() => $_has(4);
  @$pb.TagNumber(9)
  void clearExpandedTitleScale() => clearField(9);
}

/// package:flutter/src/material/flexible_space_bar.dart
class MaterialFlexibleSpaceBarSettings extends $pb.GeneratedMessage {
  factory MaterialFlexibleSpaceBarSettings({
    $1.FlutterKeyExpression? key,
    $core.double? toolbarOpacity,
    $core.double? minExtent,
    $core.double? maxExtent,
    $core.double? currentExtent,
    WidgetExpression? child,
    $core.bool? isScrolledUnder,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (toolbarOpacity != null) {
      $result.toolbarOpacity = toolbarOpacity;
    }
    if (minExtent != null) {
      $result.minExtent = minExtent;
    }
    if (maxExtent != null) {
      $result.maxExtent = maxExtent;
    }
    if (currentExtent != null) {
      $result.currentExtent = currentExtent;
    }
    if (child != null) {
      $result.child = child;
    }
    if (isScrolledUnder != null) {
      $result.isScrolledUnder = isScrolledUnder;
    }
    return $result;
  }
  MaterialFlexibleSpaceBarSettings._() : super();
  factory MaterialFlexibleSpaceBarSettings.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFlexibleSpaceBarSettings.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFlexibleSpaceBarSettings', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'toolbarOpacity', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'minExtent', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'maxExtent', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'currentExtent', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'isScrolledUnder')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFlexibleSpaceBarSettings clone() => MaterialFlexibleSpaceBarSettings()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFlexibleSpaceBarSettings copyWith(void Function(MaterialFlexibleSpaceBarSettings) updates) => super.copyWith((message) => updates(message as MaterialFlexibleSpaceBarSettings)) as MaterialFlexibleSpaceBarSettings;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFlexibleSpaceBarSettings create() => MaterialFlexibleSpaceBarSettings._();
  MaterialFlexibleSpaceBarSettings createEmptyInstance() => create();
  static $pb.PbList<MaterialFlexibleSpaceBarSettings> createRepeated() => $pb.PbList<MaterialFlexibleSpaceBarSettings>();
  @$core.pragma('dart2js:noInline')
  static MaterialFlexibleSpaceBarSettings getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFlexibleSpaceBarSettings>(create);
  static MaterialFlexibleSpaceBarSettings? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get toolbarOpacity => $_getN(1);
  @$pb.TagNumber(3)
  set toolbarOpacity($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasToolbarOpacity() => $_has(1);
  @$pb.TagNumber(3)
  void clearToolbarOpacity() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get minExtent => $_getN(2);
  @$pb.TagNumber(4)
  set minExtent($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasMinExtent() => $_has(2);
  @$pb.TagNumber(4)
  void clearMinExtent() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get maxExtent => $_getN(3);
  @$pb.TagNumber(5)
  set maxExtent($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasMaxExtent() => $_has(3);
  @$pb.TagNumber(5)
  void clearMaxExtent() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get currentExtent => $_getN(4);
  @$pb.TagNumber(6)
  set currentExtent($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasCurrentExtent() => $_has(4);
  @$pb.TagNumber(6)
  void clearCurrentExtent() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(5);

  @$pb.TagNumber(8)
  $core.bool get isScrolledUnder => $_getBF(6);
  @$pb.TagNumber(8)
  set isScrolledUnder($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasIsScrolledUnder() => $_has(6);
  @$pb.TagNumber(8)
  void clearIsScrolledUnder() => clearField(8);
}

/// package:flutter/src/material/floating_action_button.dart
class MaterialFloatingActionButton extends $pb.GeneratedMessage {
  factory MaterialFloatingActionButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.String? tooltip,
    $1.DartColorExpression? foregroundColor,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? splashColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $core.bool? mini,
    $core.bool? autofocus,
    $core.bool? isExtended,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (mini != null) {
      $result.mini = mini;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isExtended != null) {
      $result.isExtended = isExtended;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialFloatingActionButton._() : super();
  factory MaterialFloatingActionButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFloatingActionButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFloatingActionButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'tooltip')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOB(18, _omitFieldNames ? '' : 'mini')
    ..aOB(22, _omitFieldNames ? '' : 'autofocus')
    ..aOB(24, _omitFieldNames ? '' : 'isExtended')
    ..aOB(25, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButton clone() => MaterialFloatingActionButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButton copyWith(void Function(MaterialFloatingActionButton) updates) => super.copyWith((message) => updates(message as MaterialFloatingActionButton)) as MaterialFloatingActionButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButton create() => MaterialFloatingActionButton._();
  MaterialFloatingActionButton createEmptyInstance() => create();
  static $pb.PbList<MaterialFloatingActionButton> createRepeated() => $pb.PbList<MaterialFloatingActionButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFloatingActionButton>(create);
  static MaterialFloatingActionButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.String get tooltip => $_getSZ(2);
  @$pb.TagNumber(4)
  set tooltip($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTooltip() => $_has(2);
  @$pb.TagNumber(4)
  void clearTooltip() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get foregroundColor => $_getN(3);
  @$pb.TagNumber(5)
  set foregroundColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasForegroundColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearForegroundColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(6)
  set backgroundColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearBackgroundColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(7)
  set focusColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearFocusColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(8)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(8)
  set hoverColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(8)
  void clearHoverColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(9)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(9)
  set splashColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(9)
  void clearSplashColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(11)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(11)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(11)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(11)
  void clearElevation() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get focusElevation => $_getN(9);
  @$pb.TagNumber(12)
  set focusElevation($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(12)
  $core.bool hasFocusElevation() => $_has(9);
  @$pb.TagNumber(12)
  void clearFocusElevation() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get hoverElevation => $_getN(10);
  @$pb.TagNumber(13)
  set hoverElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasHoverElevation() => $_has(10);
  @$pb.TagNumber(13)
  void clearHoverElevation() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get highlightElevation => $_getN(11);
  @$pb.TagNumber(14)
  set highlightElevation($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(14)
  $core.bool hasHighlightElevation() => $_has(11);
  @$pb.TagNumber(14)
  void clearHighlightElevation() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get disabledElevation => $_getN(12);
  @$pb.TagNumber(15)
  set disabledElevation($core.double v) { $_setDouble(12, v); }
  @$pb.TagNumber(15)
  $core.bool hasDisabledElevation() => $_has(12);
  @$pb.TagNumber(15)
  void clearDisabledElevation() => clearField(15);

  @$pb.TagNumber(18)
  $core.bool get mini => $_getBF(13);
  @$pb.TagNumber(18)
  set mini($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(18)
  $core.bool hasMini() => $_has(13);
  @$pb.TagNumber(18)
  void clearMini() => clearField(18);

  @$pb.TagNumber(22)
  $core.bool get autofocus => $_getBF(14);
  @$pb.TagNumber(22)
  set autofocus($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(22)
  $core.bool hasAutofocus() => $_has(14);
  @$pb.TagNumber(22)
  void clearAutofocus() => clearField(22);

  @$pb.TagNumber(24)
  $core.bool get isExtended => $_getBF(15);
  @$pb.TagNumber(24)
  set isExtended($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(24)
  $core.bool hasIsExtended() => $_has(15);
  @$pb.TagNumber(24)
  void clearIsExtended() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get enableFeedback => $_getBF(16);
  @$pb.TagNumber(25)
  set enableFeedback($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(25)
  $core.bool hasEnableFeedback() => $_has(16);
  @$pb.TagNumber(25)
  void clearEnableFeedback() => clearField(25);
}

/// package:flutter/src/material/floating_action_button.dart
class MaterialFloatingActionButtonNamedSmall extends $pb.GeneratedMessage {
  factory MaterialFloatingActionButtonNamedSmall({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.String? tooltip,
    $1.DartColorExpression? foregroundColor,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? splashColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $core.bool? autofocus,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialFloatingActionButtonNamedSmall._() : super();
  factory MaterialFloatingActionButtonNamedSmall.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFloatingActionButtonNamedSmall.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFloatingActionButtonNamedSmall', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'tooltip')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOB(21, _omitFieldNames ? '' : 'autofocus')
    ..aOB(23, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedSmall clone() => MaterialFloatingActionButtonNamedSmall()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedSmall copyWith(void Function(MaterialFloatingActionButtonNamedSmall) updates) => super.copyWith((message) => updates(message as MaterialFloatingActionButtonNamedSmall)) as MaterialFloatingActionButtonNamedSmall;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedSmall create() => MaterialFloatingActionButtonNamedSmall._();
  MaterialFloatingActionButtonNamedSmall createEmptyInstance() => create();
  static $pb.PbList<MaterialFloatingActionButtonNamedSmall> createRepeated() => $pb.PbList<MaterialFloatingActionButtonNamedSmall>();
  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedSmall getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFloatingActionButtonNamedSmall>(create);
  static MaterialFloatingActionButtonNamedSmall? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.String get tooltip => $_getSZ(2);
  @$pb.TagNumber(4)
  set tooltip($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTooltip() => $_has(2);
  @$pb.TagNumber(4)
  void clearTooltip() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get foregroundColor => $_getN(3);
  @$pb.TagNumber(5)
  set foregroundColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasForegroundColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearForegroundColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(6)
  set backgroundColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearBackgroundColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(7)
  set focusColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearFocusColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(8)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(8)
  set hoverColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(8)
  void clearHoverColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(9)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(9)
  set splashColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(9)
  void clearSplashColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(11)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(11)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(11)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(11)
  void clearElevation() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get focusElevation => $_getN(9);
  @$pb.TagNumber(12)
  set focusElevation($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(12)
  $core.bool hasFocusElevation() => $_has(9);
  @$pb.TagNumber(12)
  void clearFocusElevation() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get hoverElevation => $_getN(10);
  @$pb.TagNumber(13)
  set hoverElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasHoverElevation() => $_has(10);
  @$pb.TagNumber(13)
  void clearHoverElevation() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get highlightElevation => $_getN(11);
  @$pb.TagNumber(14)
  set highlightElevation($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(14)
  $core.bool hasHighlightElevation() => $_has(11);
  @$pb.TagNumber(14)
  void clearHighlightElevation() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get disabledElevation => $_getN(12);
  @$pb.TagNumber(15)
  set disabledElevation($core.double v) { $_setDouble(12, v); }
  @$pb.TagNumber(15)
  $core.bool hasDisabledElevation() => $_has(12);
  @$pb.TagNumber(15)
  void clearDisabledElevation() => clearField(15);

  @$pb.TagNumber(21)
  $core.bool get autofocus => $_getBF(13);
  @$pb.TagNumber(21)
  set autofocus($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(21)
  $core.bool hasAutofocus() => $_has(13);
  @$pb.TagNumber(21)
  void clearAutofocus() => clearField(21);

  @$pb.TagNumber(23)
  $core.bool get enableFeedback => $_getBF(14);
  @$pb.TagNumber(23)
  set enableFeedback($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(23)
  $core.bool hasEnableFeedback() => $_has(14);
  @$pb.TagNumber(23)
  void clearEnableFeedback() => clearField(23);
}

/// package:flutter/src/material/floating_action_button.dart
class MaterialFloatingActionButtonNamedLarge extends $pb.GeneratedMessage {
  factory MaterialFloatingActionButtonNamedLarge({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.String? tooltip,
    $1.DartColorExpression? foregroundColor,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? splashColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $core.bool? autofocus,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialFloatingActionButtonNamedLarge._() : super();
  factory MaterialFloatingActionButtonNamedLarge.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFloatingActionButtonNamedLarge.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFloatingActionButtonNamedLarge', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'tooltip')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOB(21, _omitFieldNames ? '' : 'autofocus')
    ..aOB(23, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedLarge clone() => MaterialFloatingActionButtonNamedLarge()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedLarge copyWith(void Function(MaterialFloatingActionButtonNamedLarge) updates) => super.copyWith((message) => updates(message as MaterialFloatingActionButtonNamedLarge)) as MaterialFloatingActionButtonNamedLarge;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedLarge create() => MaterialFloatingActionButtonNamedLarge._();
  MaterialFloatingActionButtonNamedLarge createEmptyInstance() => create();
  static $pb.PbList<MaterialFloatingActionButtonNamedLarge> createRepeated() => $pb.PbList<MaterialFloatingActionButtonNamedLarge>();
  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedLarge getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFloatingActionButtonNamedLarge>(create);
  static MaterialFloatingActionButtonNamedLarge? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.String get tooltip => $_getSZ(2);
  @$pb.TagNumber(4)
  set tooltip($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTooltip() => $_has(2);
  @$pb.TagNumber(4)
  void clearTooltip() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get foregroundColor => $_getN(3);
  @$pb.TagNumber(5)
  set foregroundColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasForegroundColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearForegroundColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(6)
  set backgroundColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearBackgroundColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(7)
  set focusColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearFocusColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(8)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(8)
  set hoverColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(8)
  void clearHoverColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(9)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(9)
  set splashColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(9)
  void clearSplashColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(11)
  $core.double get elevation => $_getN(8);
  @$pb.TagNumber(11)
  set elevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(11)
  $core.bool hasElevation() => $_has(8);
  @$pb.TagNumber(11)
  void clearElevation() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get focusElevation => $_getN(9);
  @$pb.TagNumber(12)
  set focusElevation($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(12)
  $core.bool hasFocusElevation() => $_has(9);
  @$pb.TagNumber(12)
  void clearFocusElevation() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get hoverElevation => $_getN(10);
  @$pb.TagNumber(13)
  set hoverElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasHoverElevation() => $_has(10);
  @$pb.TagNumber(13)
  void clearHoverElevation() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get highlightElevation => $_getN(11);
  @$pb.TagNumber(14)
  set highlightElevation($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(14)
  $core.bool hasHighlightElevation() => $_has(11);
  @$pb.TagNumber(14)
  void clearHighlightElevation() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get disabledElevation => $_getN(12);
  @$pb.TagNumber(15)
  set disabledElevation($core.double v) { $_setDouble(12, v); }
  @$pb.TagNumber(15)
  $core.bool hasDisabledElevation() => $_has(12);
  @$pb.TagNumber(15)
  void clearDisabledElevation() => clearField(15);

  @$pb.TagNumber(21)
  $core.bool get autofocus => $_getBF(13);
  @$pb.TagNumber(21)
  set autofocus($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(21)
  $core.bool hasAutofocus() => $_has(13);
  @$pb.TagNumber(21)
  void clearAutofocus() => clearField(21);

  @$pb.TagNumber(23)
  $core.bool get enableFeedback => $_getBF(14);
  @$pb.TagNumber(23)
  set enableFeedback($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(23)
  $core.bool hasEnableFeedback() => $_has(14);
  @$pb.TagNumber(23)
  void clearEnableFeedback() => clearField(23);
}

/// package:flutter/src/material/floating_action_button.dart
class MaterialFloatingActionButtonNamedExtended extends $pb.GeneratedMessage {
  factory MaterialFloatingActionButtonNamedExtended({
    $1.FlutterKeyExpression? key,
    $core.String? tooltip,
    $1.DartColorExpression? foregroundColor,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $1.DartColorExpression? splashColor,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $core.bool? isExtended,
    $core.bool? autofocus,
    $core.double? extendedIconLabelSpacing,
    WidgetExpression? icon,
    WidgetExpression? label,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (foregroundColor != null) {
      $result.foregroundColor = foregroundColor;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (isExtended != null) {
      $result.isExtended = isExtended;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (extendedIconLabelSpacing != null) {
      $result.extendedIconLabelSpacing = extendedIconLabelSpacing;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialFloatingActionButtonNamedExtended._() : super();
  factory MaterialFloatingActionButtonNamedExtended.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFloatingActionButtonNamedExtended.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFloatingActionButtonNamedExtended', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'tooltip')
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'foregroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOB(18, _omitFieldNames ? '' : 'isExtended')
    ..aOB(22, _omitFieldNames ? '' : 'autofocus')
    ..a<$core.double>(23, _omitFieldNames ? '' : 'extendedIconLabelSpacing', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(26, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(27, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedExtended clone() => MaterialFloatingActionButtonNamedExtended()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFloatingActionButtonNamedExtended copyWith(void Function(MaterialFloatingActionButtonNamedExtended) updates) => super.copyWith((message) => updates(message as MaterialFloatingActionButtonNamedExtended)) as MaterialFloatingActionButtonNamedExtended;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedExtended create() => MaterialFloatingActionButtonNamedExtended._();
  MaterialFloatingActionButtonNamedExtended createEmptyInstance() => create();
  static $pb.PbList<MaterialFloatingActionButtonNamedExtended> createRepeated() => $pb.PbList<MaterialFloatingActionButtonNamedExtended>();
  @$core.pragma('dart2js:noInline')
  static MaterialFloatingActionButtonNamedExtended getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFloatingActionButtonNamedExtended>(create);
  static MaterialFloatingActionButtonNamedExtended? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get tooltip => $_getSZ(1);
  @$pb.TagNumber(3)
  set tooltip($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasTooltip() => $_has(1);
  @$pb.TagNumber(3)
  void clearTooltip() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get foregroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set foregroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasForegroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearForegroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureForegroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get backgroundColor => $_getN(3);
  @$pb.TagNumber(5)
  set backgroundColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasBackgroundColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearBackgroundColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(6)
  set focusColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearFocusColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(7)
  set hoverColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(7)
  void clearHoverColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(9)
  $core.double get elevation => $_getN(6);
  @$pb.TagNumber(9)
  set elevation($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasElevation() => $_has(6);
  @$pb.TagNumber(9)
  void clearElevation() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get focusElevation => $_getN(7);
  @$pb.TagNumber(10)
  set focusElevation($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasFocusElevation() => $_has(7);
  @$pb.TagNumber(10)
  void clearFocusElevation() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get hoverElevation => $_getN(8);
  @$pb.TagNumber(11)
  set hoverElevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(11)
  $core.bool hasHoverElevation() => $_has(8);
  @$pb.TagNumber(11)
  void clearHoverElevation() => clearField(11);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(9);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(9);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(9);

  @$pb.TagNumber(13)
  $core.double get highlightElevation => $_getN(10);
  @$pb.TagNumber(13)
  set highlightElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(13)
  $core.bool hasHighlightElevation() => $_has(10);
  @$pb.TagNumber(13)
  void clearHighlightElevation() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get disabledElevation => $_getN(11);
  @$pb.TagNumber(14)
  set disabledElevation($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(14)
  $core.bool hasDisabledElevation() => $_has(11);
  @$pb.TagNumber(14)
  void clearDisabledElevation() => clearField(14);

  @$pb.TagNumber(18)
  $core.bool get isExtended => $_getBF(12);
  @$pb.TagNumber(18)
  set isExtended($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsExtended() => $_has(12);
  @$pb.TagNumber(18)
  void clearIsExtended() => clearField(18);

  @$pb.TagNumber(22)
  $core.bool get autofocus => $_getBF(13);
  @$pb.TagNumber(22)
  set autofocus($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(22)
  $core.bool hasAutofocus() => $_has(13);
  @$pb.TagNumber(22)
  void clearAutofocus() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get extendedIconLabelSpacing => $_getN(14);
  @$pb.TagNumber(23)
  set extendedIconLabelSpacing($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(23)
  $core.bool hasExtendedIconLabelSpacing() => $_has(14);
  @$pb.TagNumber(23)
  void clearExtendedIconLabelSpacing() => clearField(23);

  @$pb.TagNumber(26)
  WidgetExpression get icon => $_getN(15);
  @$pb.TagNumber(26)
  set icon(WidgetExpression v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasIcon() => $_has(15);
  @$pb.TagNumber(26)
  void clearIcon() => clearField(26);
  @$pb.TagNumber(26)
  WidgetExpression ensureIcon() => $_ensure(15);

  @$pb.TagNumber(27)
  WidgetExpression get label => $_getN(16);
  @$pb.TagNumber(27)
  set label(WidgetExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasLabel() => $_has(16);
  @$pb.TagNumber(27)
  void clearLabel() => clearField(27);
  @$pb.TagNumber(27)
  WidgetExpression ensureLabel() => $_ensure(16);

  @$pb.TagNumber(28)
  $core.bool get enableFeedback => $_getBF(17);
  @$pb.TagNumber(28)
  set enableFeedback($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(28)
  $core.bool hasEnableFeedback() => $_has(17);
  @$pb.TagNumber(28)
  void clearEnableFeedback() => clearField(28);
}

/// package:flutter/src/material/flutter_logo.dart
class MaterialFlutterLogo extends $pb.GeneratedMessage {
  factory MaterialFlutterLogo({
    $1.FlutterKeyExpression? key,
    $core.double? size,
    $1.DartColorExpression? textColor,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (size != null) {
      $result.size = size;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  MaterialFlutterLogo._() : super();
  factory MaterialFlutterLogo.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialFlutterLogo.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialFlutterLogo', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'size', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialFlutterLogo clone() => MaterialFlutterLogo()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialFlutterLogo copyWith(void Function(MaterialFlutterLogo) updates) => super.copyWith((message) => updates(message as MaterialFlutterLogo)) as MaterialFlutterLogo;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialFlutterLogo create() => MaterialFlutterLogo._();
  MaterialFlutterLogo createEmptyInstance() => create();
  static $pb.PbList<MaterialFlutterLogo> createRepeated() => $pb.PbList<MaterialFlutterLogo>();
  @$core.pragma('dart2js:noInline')
  static MaterialFlutterLogo getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialFlutterLogo>(create);
  static MaterialFlutterLogo? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get size => $_getN(1);
  @$pb.TagNumber(3)
  set size($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasSize() => $_has(1);
  @$pb.TagNumber(3)
  void clearSize() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get textColor => $_getN(2);
  @$pb.TagNumber(4)
  set textColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTextColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearTextColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureTextColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get duration => $_getN(3);
  @$pb.TagNumber(6)
  set duration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDuration() => $_has(3);
  @$pb.TagNumber(6)
  void clearDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureDuration() => $_ensure(3);
}

/// package:flutter/src/material/grid_tile.dart
class MaterialGridTile extends $pb.GeneratedMessage {
  factory MaterialGridTile({
    $1.FlutterKeyExpression? key,
    WidgetExpression? header,
    WidgetExpression? footer,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (header != null) {
      $result.header = header;
    }
    if (footer != null) {
      $result.footer = footer;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialGridTile._() : super();
  factory MaterialGridTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialGridTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialGridTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'header', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'footer', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialGridTile clone() => MaterialGridTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialGridTile copyWith(void Function(MaterialGridTile) updates) => super.copyWith((message) => updates(message as MaterialGridTile)) as MaterialGridTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialGridTile create() => MaterialGridTile._();
  MaterialGridTile createEmptyInstance() => create();
  static $pb.PbList<MaterialGridTile> createRepeated() => $pb.PbList<MaterialGridTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialGridTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialGridTile>(create);
  static MaterialGridTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get header => $_getN(1);
  @$pb.TagNumber(3)
  set header(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasHeader() => $_has(1);
  @$pb.TagNumber(3)
  void clearHeader() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureHeader() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get footer => $_getN(2);
  @$pb.TagNumber(4)
  set footer(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasFooter() => $_has(2);
  @$pb.TagNumber(4)
  void clearFooter() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureFooter() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/material/grid_tile_bar.dart
class MaterialGridTileBar extends $pb.GeneratedMessage {
  factory MaterialGridTileBar({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    WidgetExpression? leading,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    WidgetExpression? trailing,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    return $result;
  }
  MaterialGridTileBar._() : super();
  factory MaterialGridTileBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialGridTileBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialGridTileBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialGridTileBar clone() => MaterialGridTileBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialGridTileBar copyWith(void Function(MaterialGridTileBar) updates) => super.copyWith((message) => updates(message as MaterialGridTileBar)) as MaterialGridTileBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialGridTileBar create() => MaterialGridTileBar._();
  MaterialGridTileBar createEmptyInstance() => create();
  static $pb.PbList<MaterialGridTileBar> createRepeated() => $pb.PbList<MaterialGridTileBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialGridTileBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialGridTileBar>(create);
  static MaterialGridTileBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get leading => $_getN(2);
  @$pb.TagNumber(4)
  set leading(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLeading() => $_has(2);
  @$pb.TagNumber(4)
  void clearLeading() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLeading() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get title => $_getN(3);
  @$pb.TagNumber(5)
  set title(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearTitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTitle() => $_ensure(3);

  @$pb.TagNumber(6)
  WidgetExpression get subtitle => $_getN(4);
  @$pb.TagNumber(6)
  set subtitle(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSubtitle() => $_has(4);
  @$pb.TagNumber(6)
  void clearSubtitle() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureSubtitle() => $_ensure(4);

  @$pb.TagNumber(7)
  WidgetExpression get trailing => $_getN(5);
  @$pb.TagNumber(7)
  set trailing(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasTrailing() => $_has(5);
  @$pb.TagNumber(7)
  void clearTrailing() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureTrailing() => $_ensure(5);
}

/// package:flutter/src/material/icon_button.dart
class MaterialIconButton extends $pb.GeneratedMessage {
  factory MaterialIconButton({
    $1.FlutterKeyExpression? key,
    $core.double? iconSize,
    $core.double? splashRadius,
    $1.DartColorExpression? color,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $1.DartColorExpression? disabledColor,
    $core.bool? autofocus,
    $core.String? tooltip,
    $core.bool? enableFeedback,
    $core.bool? isSelected,
    WidgetExpression? selectedIcon,
    WidgetExpression? icon,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (color != null) {
      $result.color = color;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (isSelected != null) {
      $result.isSelected = isSelected;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    return $result;
  }
  MaterialIconButton._() : super();
  factory MaterialIconButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialIconButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialIconButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOS(18, _omitFieldNames ? '' : 'tooltip')
    ..aOB(19, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(22, _omitFieldNames ? '' : 'isSelected')
    ..aOM<WidgetExpression>(23, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(24, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialIconButton clone() => MaterialIconButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialIconButton copyWith(void Function(MaterialIconButton) updates) => super.copyWith((message) => updates(message as MaterialIconButton)) as MaterialIconButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialIconButton create() => MaterialIconButton._();
  MaterialIconButton createEmptyInstance() => create();
  static $pb.PbList<MaterialIconButton> createRepeated() => $pb.PbList<MaterialIconButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialIconButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialIconButton>(create);
  static MaterialIconButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get iconSize => $_getN(1);
  @$pb.TagNumber(3)
  set iconSize($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIconSize() => $_has(1);
  @$pb.TagNumber(3)
  void clearIconSize() => clearField(3);

  @$pb.TagNumber(7)
  $core.double get splashRadius => $_getN(2);
  @$pb.TagNumber(7)
  set splashRadius($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasSplashRadius() => $_has(2);
  @$pb.TagNumber(7)
  void clearSplashRadius() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(8)
  set color($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(10)
  set hoverColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearHoverColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get highlightColor => $_getN(6);
  @$pb.TagNumber(11)
  set highlightColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHighlightColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHighlightColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get disabledColor => $_getN(8);
  @$pb.TagNumber(13)
  set disabledColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDisabledColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearDisabledColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get tooltip => $_getSZ(10);
  @$pb.TagNumber(18)
  set tooltip($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasTooltip() => $_has(10);
  @$pb.TagNumber(18)
  void clearTooltip() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enableFeedback => $_getBF(11);
  @$pb.TagNumber(19)
  set enableFeedback($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnableFeedback() => $_has(11);
  @$pb.TagNumber(19)
  void clearEnableFeedback() => clearField(19);

  @$pb.TagNumber(22)
  $core.bool get isSelected => $_getBF(12);
  @$pb.TagNumber(22)
  set isSelected($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(22)
  $core.bool hasIsSelected() => $_has(12);
  @$pb.TagNumber(22)
  void clearIsSelected() => clearField(22);

  @$pb.TagNumber(23)
  WidgetExpression get selectedIcon => $_getN(13);
  @$pb.TagNumber(23)
  set selectedIcon(WidgetExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSelectedIcon() => $_has(13);
  @$pb.TagNumber(23)
  void clearSelectedIcon() => clearField(23);
  @$pb.TagNumber(23)
  WidgetExpression ensureSelectedIcon() => $_ensure(13);

  @$pb.TagNumber(24)
  WidgetExpression get icon => $_getN(14);
  @$pb.TagNumber(24)
  set icon(WidgetExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasIcon() => $_has(14);
  @$pb.TagNumber(24)
  void clearIcon() => clearField(24);
  @$pb.TagNumber(24)
  WidgetExpression ensureIcon() => $_ensure(14);
}

/// package:flutter/src/material/icon_button.dart
class MaterialIconButtonNamedFilled extends $pb.GeneratedMessage {
  factory MaterialIconButtonNamedFilled({
    $1.FlutterKeyExpression? key,
    $core.double? iconSize,
    $core.double? splashRadius,
    $1.DartColorExpression? color,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $1.DartColorExpression? disabledColor,
    $core.bool? autofocus,
    $core.String? tooltip,
    $core.bool? enableFeedback,
    $core.bool? isSelected,
    WidgetExpression? selectedIcon,
    WidgetExpression? icon,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (color != null) {
      $result.color = color;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (isSelected != null) {
      $result.isSelected = isSelected;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    return $result;
  }
  MaterialIconButtonNamedFilled._() : super();
  factory MaterialIconButtonNamedFilled.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialIconButtonNamedFilled.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialIconButtonNamedFilled', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOS(18, _omitFieldNames ? '' : 'tooltip')
    ..aOB(19, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(22, _omitFieldNames ? '' : 'isSelected')
    ..aOM<WidgetExpression>(23, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(24, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedFilled clone() => MaterialIconButtonNamedFilled()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedFilled copyWith(void Function(MaterialIconButtonNamedFilled) updates) => super.copyWith((message) => updates(message as MaterialIconButtonNamedFilled)) as MaterialIconButtonNamedFilled;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedFilled create() => MaterialIconButtonNamedFilled._();
  MaterialIconButtonNamedFilled createEmptyInstance() => create();
  static $pb.PbList<MaterialIconButtonNamedFilled> createRepeated() => $pb.PbList<MaterialIconButtonNamedFilled>();
  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedFilled getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialIconButtonNamedFilled>(create);
  static MaterialIconButtonNamedFilled? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get iconSize => $_getN(1);
  @$pb.TagNumber(3)
  set iconSize($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIconSize() => $_has(1);
  @$pb.TagNumber(3)
  void clearIconSize() => clearField(3);

  @$pb.TagNumber(7)
  $core.double get splashRadius => $_getN(2);
  @$pb.TagNumber(7)
  set splashRadius($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasSplashRadius() => $_has(2);
  @$pb.TagNumber(7)
  void clearSplashRadius() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(8)
  set color($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(10)
  set hoverColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearHoverColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get highlightColor => $_getN(6);
  @$pb.TagNumber(11)
  set highlightColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHighlightColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHighlightColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get disabledColor => $_getN(8);
  @$pb.TagNumber(13)
  set disabledColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDisabledColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearDisabledColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get tooltip => $_getSZ(10);
  @$pb.TagNumber(18)
  set tooltip($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasTooltip() => $_has(10);
  @$pb.TagNumber(18)
  void clearTooltip() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enableFeedback => $_getBF(11);
  @$pb.TagNumber(19)
  set enableFeedback($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnableFeedback() => $_has(11);
  @$pb.TagNumber(19)
  void clearEnableFeedback() => clearField(19);

  @$pb.TagNumber(22)
  $core.bool get isSelected => $_getBF(12);
  @$pb.TagNumber(22)
  set isSelected($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(22)
  $core.bool hasIsSelected() => $_has(12);
  @$pb.TagNumber(22)
  void clearIsSelected() => clearField(22);

  @$pb.TagNumber(23)
  WidgetExpression get selectedIcon => $_getN(13);
  @$pb.TagNumber(23)
  set selectedIcon(WidgetExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSelectedIcon() => $_has(13);
  @$pb.TagNumber(23)
  void clearSelectedIcon() => clearField(23);
  @$pb.TagNumber(23)
  WidgetExpression ensureSelectedIcon() => $_ensure(13);

  @$pb.TagNumber(24)
  WidgetExpression get icon => $_getN(14);
  @$pb.TagNumber(24)
  set icon(WidgetExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasIcon() => $_has(14);
  @$pb.TagNumber(24)
  void clearIcon() => clearField(24);
  @$pb.TagNumber(24)
  WidgetExpression ensureIcon() => $_ensure(14);
}

/// package:flutter/src/material/icon_button.dart
class MaterialIconButtonNamedFilledTonal extends $pb.GeneratedMessage {
  factory MaterialIconButtonNamedFilledTonal({
    $1.FlutterKeyExpression? key,
    $core.double? iconSize,
    $core.double? splashRadius,
    $1.DartColorExpression? color,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $1.DartColorExpression? disabledColor,
    $core.bool? autofocus,
    $core.String? tooltip,
    $core.bool? enableFeedback,
    $core.bool? isSelected,
    WidgetExpression? selectedIcon,
    WidgetExpression? icon,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (color != null) {
      $result.color = color;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (isSelected != null) {
      $result.isSelected = isSelected;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    return $result;
  }
  MaterialIconButtonNamedFilledTonal._() : super();
  factory MaterialIconButtonNamedFilledTonal.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialIconButtonNamedFilledTonal.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialIconButtonNamedFilledTonal', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOS(18, _omitFieldNames ? '' : 'tooltip')
    ..aOB(19, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(22, _omitFieldNames ? '' : 'isSelected')
    ..aOM<WidgetExpression>(23, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(24, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedFilledTonal clone() => MaterialIconButtonNamedFilledTonal()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedFilledTonal copyWith(void Function(MaterialIconButtonNamedFilledTonal) updates) => super.copyWith((message) => updates(message as MaterialIconButtonNamedFilledTonal)) as MaterialIconButtonNamedFilledTonal;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedFilledTonal create() => MaterialIconButtonNamedFilledTonal._();
  MaterialIconButtonNamedFilledTonal createEmptyInstance() => create();
  static $pb.PbList<MaterialIconButtonNamedFilledTonal> createRepeated() => $pb.PbList<MaterialIconButtonNamedFilledTonal>();
  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedFilledTonal getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialIconButtonNamedFilledTonal>(create);
  static MaterialIconButtonNamedFilledTonal? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get iconSize => $_getN(1);
  @$pb.TagNumber(3)
  set iconSize($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIconSize() => $_has(1);
  @$pb.TagNumber(3)
  void clearIconSize() => clearField(3);

  @$pb.TagNumber(7)
  $core.double get splashRadius => $_getN(2);
  @$pb.TagNumber(7)
  set splashRadius($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasSplashRadius() => $_has(2);
  @$pb.TagNumber(7)
  void clearSplashRadius() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(8)
  set color($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(10)
  set hoverColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearHoverColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get highlightColor => $_getN(6);
  @$pb.TagNumber(11)
  set highlightColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHighlightColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHighlightColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get disabledColor => $_getN(8);
  @$pb.TagNumber(13)
  set disabledColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDisabledColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearDisabledColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get tooltip => $_getSZ(10);
  @$pb.TagNumber(18)
  set tooltip($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasTooltip() => $_has(10);
  @$pb.TagNumber(18)
  void clearTooltip() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enableFeedback => $_getBF(11);
  @$pb.TagNumber(19)
  set enableFeedback($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnableFeedback() => $_has(11);
  @$pb.TagNumber(19)
  void clearEnableFeedback() => clearField(19);

  @$pb.TagNumber(22)
  $core.bool get isSelected => $_getBF(12);
  @$pb.TagNumber(22)
  set isSelected($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(22)
  $core.bool hasIsSelected() => $_has(12);
  @$pb.TagNumber(22)
  void clearIsSelected() => clearField(22);

  @$pb.TagNumber(23)
  WidgetExpression get selectedIcon => $_getN(13);
  @$pb.TagNumber(23)
  set selectedIcon(WidgetExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSelectedIcon() => $_has(13);
  @$pb.TagNumber(23)
  void clearSelectedIcon() => clearField(23);
  @$pb.TagNumber(23)
  WidgetExpression ensureSelectedIcon() => $_ensure(13);

  @$pb.TagNumber(24)
  WidgetExpression get icon => $_getN(14);
  @$pb.TagNumber(24)
  set icon(WidgetExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasIcon() => $_has(14);
  @$pb.TagNumber(24)
  void clearIcon() => clearField(24);
  @$pb.TagNumber(24)
  WidgetExpression ensureIcon() => $_ensure(14);
}

/// package:flutter/src/material/icon_button.dart
class MaterialIconButtonNamedOutlined extends $pb.GeneratedMessage {
  factory MaterialIconButtonNamedOutlined({
    $1.FlutterKeyExpression? key,
    $core.double? iconSize,
    $core.double? splashRadius,
    $1.DartColorExpression? color,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $1.DartColorExpression? disabledColor,
    $core.bool? autofocus,
    $core.String? tooltip,
    $core.bool? enableFeedback,
    $core.bool? isSelected,
    WidgetExpression? selectedIcon,
    WidgetExpression? icon,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (iconSize != null) {
      $result.iconSize = iconSize;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (color != null) {
      $result.color = color;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (isSelected != null) {
      $result.isSelected = isSelected;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    return $result;
  }
  MaterialIconButtonNamedOutlined._() : super();
  factory MaterialIconButtonNamedOutlined.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialIconButtonNamedOutlined.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialIconButtonNamedOutlined', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'iconSize', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOS(18, _omitFieldNames ? '' : 'tooltip')
    ..aOB(19, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(22, _omitFieldNames ? '' : 'isSelected')
    ..aOM<WidgetExpression>(23, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(24, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedOutlined clone() => MaterialIconButtonNamedOutlined()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialIconButtonNamedOutlined copyWith(void Function(MaterialIconButtonNamedOutlined) updates) => super.copyWith((message) => updates(message as MaterialIconButtonNamedOutlined)) as MaterialIconButtonNamedOutlined;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedOutlined create() => MaterialIconButtonNamedOutlined._();
  MaterialIconButtonNamedOutlined createEmptyInstance() => create();
  static $pb.PbList<MaterialIconButtonNamedOutlined> createRepeated() => $pb.PbList<MaterialIconButtonNamedOutlined>();
  @$core.pragma('dart2js:noInline')
  static MaterialIconButtonNamedOutlined getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialIconButtonNamedOutlined>(create);
  static MaterialIconButtonNamedOutlined? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get iconSize => $_getN(1);
  @$pb.TagNumber(3)
  set iconSize($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIconSize() => $_has(1);
  @$pb.TagNumber(3)
  void clearIconSize() => clearField(3);

  @$pb.TagNumber(7)
  $core.double get splashRadius => $_getN(2);
  @$pb.TagNumber(7)
  set splashRadius($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasSplashRadius() => $_has(2);
  @$pb.TagNumber(7)
  void clearSplashRadius() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(8)
  set color($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(9)
  set focusColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearFocusColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(10)
  set hoverColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(10)
  void clearHoverColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(11)
  $1.DartColorExpression get highlightColor => $_getN(6);
  @$pb.TagNumber(11)
  set highlightColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasHighlightColor() => $_has(6);
  @$pb.TagNumber(11)
  void clearHighlightColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(6);

  @$pb.TagNumber(12)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(12)
  set splashColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearSplashColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get disabledColor => $_getN(8);
  @$pb.TagNumber(13)
  set disabledColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDisabledColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearDisabledColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get tooltip => $_getSZ(10);
  @$pb.TagNumber(18)
  set tooltip($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasTooltip() => $_has(10);
  @$pb.TagNumber(18)
  void clearTooltip() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get enableFeedback => $_getBF(11);
  @$pb.TagNumber(19)
  set enableFeedback($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnableFeedback() => $_has(11);
  @$pb.TagNumber(19)
  void clearEnableFeedback() => clearField(19);

  @$pb.TagNumber(22)
  $core.bool get isSelected => $_getBF(12);
  @$pb.TagNumber(22)
  set isSelected($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(22)
  $core.bool hasIsSelected() => $_has(12);
  @$pb.TagNumber(22)
  void clearIsSelected() => clearField(22);

  @$pb.TagNumber(23)
  WidgetExpression get selectedIcon => $_getN(13);
  @$pb.TagNumber(23)
  set selectedIcon(WidgetExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasSelectedIcon() => $_has(13);
  @$pb.TagNumber(23)
  void clearSelectedIcon() => clearField(23);
  @$pb.TagNumber(23)
  WidgetExpression ensureSelectedIcon() => $_ensure(13);

  @$pb.TagNumber(24)
  WidgetExpression get icon => $_getN(14);
  @$pb.TagNumber(24)
  set icon(WidgetExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasIcon() => $_has(14);
  @$pb.TagNumber(24)
  void clearIcon() => clearField(24);
  @$pb.TagNumber(24)
  WidgetExpression ensureIcon() => $_ensure(14);
}

/// package:flutter/src/material/ink_decoration.dart
class MaterialInk extends $pb.GeneratedMessage {
  factory MaterialInk({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialInk._() : super();
  factory MaterialInk.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialInk.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialInk', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialInk clone() => MaterialInk()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialInk copyWith(void Function(MaterialInk) updates) => super.copyWith((message) => updates(message as MaterialInk)) as MaterialInk;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialInk create() => MaterialInk._();
  MaterialInk createEmptyInstance() => create();
  static $pb.PbList<MaterialInk> createRepeated() => $pb.PbList<MaterialInk>();
  @$core.pragma('dart2js:noInline')
  static MaterialInk getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialInk>(create);
  static MaterialInk? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(4)
  set color($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(4)
  void clearColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.double get width => $_getN(2);
  @$pb.TagNumber(6)
  set width($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasWidth() => $_has(2);
  @$pb.TagNumber(6)
  void clearWidth() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(7)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(7)
  void clearHeight() => clearField(7);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/material/ink_well.dart
class MaterialInkResponse extends $pb.GeneratedMessage {
  factory MaterialInkResponse({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? containedInkWell,
    $core.double? radius,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $core.bool? enableFeedback,
    $core.bool? excludeFromSemantics,
    $core.bool? canRequestFocus,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (containedInkWell != null) {
      $result.containedInkWell = containedInkWell;
    }
    if (radius != null) {
      $result.radius = radius;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  MaterialInkResponse._() : super();
  factory MaterialInkResponse.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialInkResponse.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialInkResponse', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'containedInkWell')
    ..a<$core.double>(19, _omitFieldNames ? '' : 'radius', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(23, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(24, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(26, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(29, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..aOB(31, _omitFieldNames ? '' : 'canRequestFocus')
    ..aOB(33, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialInkResponse clone() => MaterialInkResponse()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialInkResponse copyWith(void Function(MaterialInkResponse) updates) => super.copyWith((message) => updates(message as MaterialInkResponse)) as MaterialInkResponse;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialInkResponse create() => MaterialInkResponse._();
  MaterialInkResponse createEmptyInstance() => create();
  static $pb.PbList<MaterialInkResponse> createRepeated() => $pb.PbList<MaterialInkResponse>();
  @$core.pragma('dart2js:noInline')
  static MaterialInkResponse getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialInkResponse>(create);
  static MaterialInkResponse? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(17)
  $core.bool get containedInkWell => $_getBF(2);
  @$pb.TagNumber(17)
  set containedInkWell($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(17)
  $core.bool hasContainedInkWell() => $_has(2);
  @$pb.TagNumber(17)
  void clearContainedInkWell() => clearField(17);

  @$pb.TagNumber(19)
  $core.double get radius => $_getN(3);
  @$pb.TagNumber(19)
  set radius($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(19)
  $core.bool hasRadius() => $_has(3);
  @$pb.TagNumber(19)
  void clearRadius() => clearField(19);

  @$pb.TagNumber(22)
  $1.DartColorExpression get focusColor => $_getN(4);
  @$pb.TagNumber(22)
  set focusColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasFocusColor() => $_has(4);
  @$pb.TagNumber(22)
  void clearFocusColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureFocusColor() => $_ensure(4);

  @$pb.TagNumber(23)
  $1.DartColorExpression get hoverColor => $_getN(5);
  @$pb.TagNumber(23)
  set hoverColor($1.DartColorExpression v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasHoverColor() => $_has(5);
  @$pb.TagNumber(23)
  void clearHoverColor() => clearField(23);
  @$pb.TagNumber(23)
  $1.DartColorExpression ensureHoverColor() => $_ensure(5);

  @$pb.TagNumber(24)
  $1.DartColorExpression get highlightColor => $_getN(6);
  @$pb.TagNumber(24)
  set highlightColor($1.DartColorExpression v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasHighlightColor() => $_has(6);
  @$pb.TagNumber(24)
  void clearHighlightColor() => clearField(24);
  @$pb.TagNumber(24)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(6);

  @$pb.TagNumber(26)
  $1.DartColorExpression get splashColor => $_getN(7);
  @$pb.TagNumber(26)
  set splashColor($1.DartColorExpression v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasSplashColor() => $_has(7);
  @$pb.TagNumber(26)
  void clearSplashColor() => clearField(26);
  @$pb.TagNumber(26)
  $1.DartColorExpression ensureSplashColor() => $_ensure(7);

  @$pb.TagNumber(28)
  $core.bool get enableFeedback => $_getBF(8);
  @$pb.TagNumber(28)
  set enableFeedback($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(28)
  $core.bool hasEnableFeedback() => $_has(8);
  @$pb.TagNumber(28)
  void clearEnableFeedback() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get excludeFromSemantics => $_getBF(9);
  @$pb.TagNumber(29)
  set excludeFromSemantics($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(29)
  $core.bool hasExcludeFromSemantics() => $_has(9);
  @$pb.TagNumber(29)
  void clearExcludeFromSemantics() => clearField(29);

  @$pb.TagNumber(31)
  $core.bool get canRequestFocus => $_getBF(10);
  @$pb.TagNumber(31)
  set canRequestFocus($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(31)
  $core.bool hasCanRequestFocus() => $_has(10);
  @$pb.TagNumber(31)
  void clearCanRequestFocus() => clearField(31);

  @$pb.TagNumber(33)
  $core.bool get autofocus => $_getBF(11);
  @$pb.TagNumber(33)
  set autofocus($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(33)
  $core.bool hasAutofocus() => $_has(11);
  @$pb.TagNumber(33)
  void clearAutofocus() => clearField(33);
}

/// package:flutter/src/material/ink_well.dart
class MaterialInkWell extends $pb.GeneratedMessage {
  factory MaterialInkWell({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $core.double? radius,
    $core.bool? enableFeedback,
    $core.bool? excludeFromSemantics,
    $core.bool? canRequestFocus,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (radius != null) {
      $result.radius = radius;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  MaterialInkWell._() : super();
  factory MaterialInkWell.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialInkWell.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialInkWell', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(18, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(19, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'radius', $pb.PbFieldType.OD)
    ..aOB(26, _omitFieldNames ? '' : 'enableFeedback')
    ..aOB(27, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..aOB(29, _omitFieldNames ? '' : 'canRequestFocus')
    ..aOB(31, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialInkWell clone() => MaterialInkWell()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialInkWell copyWith(void Function(MaterialInkWell) updates) => super.copyWith((message) => updates(message as MaterialInkWell)) as MaterialInkWell;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialInkWell create() => MaterialInkWell._();
  MaterialInkWell createEmptyInstance() => create();
  static $pb.PbList<MaterialInkWell> createRepeated() => $pb.PbList<MaterialInkWell>();
  @$core.pragma('dart2js:noInline')
  static MaterialInkWell getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialInkWell>(create);
  static MaterialInkWell? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(17)
  $1.DartColorExpression get focusColor => $_getN(2);
  @$pb.TagNumber(17)
  set focusColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasFocusColor() => $_has(2);
  @$pb.TagNumber(17)
  void clearFocusColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureFocusColor() => $_ensure(2);

  @$pb.TagNumber(18)
  $1.DartColorExpression get hoverColor => $_getN(3);
  @$pb.TagNumber(18)
  set hoverColor($1.DartColorExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasHoverColor() => $_has(3);
  @$pb.TagNumber(18)
  void clearHoverColor() => clearField(18);
  @$pb.TagNumber(18)
  $1.DartColorExpression ensureHoverColor() => $_ensure(3);

  @$pb.TagNumber(19)
  $1.DartColorExpression get highlightColor => $_getN(4);
  @$pb.TagNumber(19)
  set highlightColor($1.DartColorExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasHighlightColor() => $_has(4);
  @$pb.TagNumber(19)
  void clearHighlightColor() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(4);

  @$pb.TagNumber(21)
  $1.DartColorExpression get splashColor => $_getN(5);
  @$pb.TagNumber(21)
  set splashColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasSplashColor() => $_has(5);
  @$pb.TagNumber(21)
  void clearSplashColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureSplashColor() => $_ensure(5);

  @$pb.TagNumber(23)
  $core.double get radius => $_getN(6);
  @$pb.TagNumber(23)
  set radius($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(23)
  $core.bool hasRadius() => $_has(6);
  @$pb.TagNumber(23)
  void clearRadius() => clearField(23);

  @$pb.TagNumber(26)
  $core.bool get enableFeedback => $_getBF(7);
  @$pb.TagNumber(26)
  set enableFeedback($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(26)
  $core.bool hasEnableFeedback() => $_has(7);
  @$pb.TagNumber(26)
  void clearEnableFeedback() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get excludeFromSemantics => $_getBF(8);
  @$pb.TagNumber(27)
  set excludeFromSemantics($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(27)
  $core.bool hasExcludeFromSemantics() => $_has(8);
  @$pb.TagNumber(27)
  void clearExcludeFromSemantics() => clearField(27);

  @$pb.TagNumber(29)
  $core.bool get canRequestFocus => $_getBF(9);
  @$pb.TagNumber(29)
  set canRequestFocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(29)
  $core.bool hasCanRequestFocus() => $_has(9);
  @$pb.TagNumber(29)
  void clearCanRequestFocus() => clearField(29);

  @$pb.TagNumber(31)
  $core.bool get autofocus => $_getBF(10);
  @$pb.TagNumber(31)
  set autofocus($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(31)
  $core.bool hasAutofocus() => $_has(10);
  @$pb.TagNumber(31)
  void clearAutofocus() => clearField(31);
}

/// package:flutter/src/material/input_chip.dart
class MaterialInputChip extends $pb.GeneratedMessage {
  factory MaterialInputChip({
    $1.FlutterKeyExpression? key,
    WidgetExpression? avatar,
    WidgetExpression? label,
    $core.bool? selected,
    $core.bool? isEnabled,
    WidgetExpression? deleteIcon,
    $1.DartColorExpression? deleteIconColor,
    $core.String? deleteButtonTooltipMessage,
    $core.double? pressElevation,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? selectedColor,
    $core.String? tooltip,
    $core.bool? autofocus,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? selectedShadowColor,
    $core.bool? showCheckmark,
    $1.DartColorExpression? checkmarkColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (avatar != null) {
      $result.avatar = avatar;
    }
    if (label != null) {
      $result.label = label;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (isEnabled != null) {
      $result.isEnabled = isEnabled;
    }
    if (deleteIcon != null) {
      $result.deleteIcon = deleteIcon;
    }
    if (deleteIconColor != null) {
      $result.deleteIconColor = deleteIconColor;
    }
    if (deleteButtonTooltipMessage != null) {
      $result.deleteButtonTooltipMessage = deleteButtonTooltipMessage;
    }
    if (pressElevation != null) {
      $result.pressElevation = pressElevation;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (selectedShadowColor != null) {
      $result.selectedShadowColor = selectedShadowColor;
    }
    if (showCheckmark != null) {
      $result.showCheckmark = showCheckmark;
    }
    if (checkmarkColor != null) {
      $result.checkmarkColor = checkmarkColor;
    }
    return $result;
  }
  MaterialInputChip._() : super();
  factory MaterialInputChip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialInputChip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialInputChip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'avatar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'selected')
    ..aOB(8, _omitFieldNames ? '' : 'isEnabled')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'deleteIcon', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'deleteIconColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(13, _omitFieldNames ? '' : 'deleteButtonTooltipMessage')
    ..a<$core.double>(15, _omitFieldNames ? '' : 'pressElevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOS(18, _omitFieldNames ? '' : 'tooltip')
    ..aOB(23, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(29, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(30, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(31, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(33, _omitFieldNames ? '' : 'selectedShadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(34, _omitFieldNames ? '' : 'showCheckmark')
    ..aOM<$1.DartColorExpression>(35, _omitFieldNames ? '' : 'checkmarkColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialInputChip clone() => MaterialInputChip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialInputChip copyWith(void Function(MaterialInputChip) updates) => super.copyWith((message) => updates(message as MaterialInputChip)) as MaterialInputChip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialInputChip create() => MaterialInputChip._();
  MaterialInputChip createEmptyInstance() => create();
  static $pb.PbList<MaterialInputChip> createRepeated() => $pb.PbList<MaterialInputChip>();
  @$core.pragma('dart2js:noInline')
  static MaterialInputChip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialInputChip>(create);
  static MaterialInputChip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get avatar => $_getN(1);
  @$pb.TagNumber(3)
  set avatar(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAvatar() => $_has(1);
  @$pb.TagNumber(3)
  void clearAvatar() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureAvatar() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get label => $_getN(2);
  @$pb.TagNumber(4)
  set label(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(2);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureLabel() => $_ensure(2);

  @$pb.TagNumber(7)
  $core.bool get selected => $_getBF(3);
  @$pb.TagNumber(7)
  set selected($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasSelected() => $_has(3);
  @$pb.TagNumber(7)
  void clearSelected() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get isEnabled => $_getBF(4);
  @$pb.TagNumber(8)
  set isEnabled($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasIsEnabled() => $_has(4);
  @$pb.TagNumber(8)
  void clearIsEnabled() => clearField(8);

  @$pb.TagNumber(10)
  WidgetExpression get deleteIcon => $_getN(5);
  @$pb.TagNumber(10)
  set deleteIcon(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasDeleteIcon() => $_has(5);
  @$pb.TagNumber(10)
  void clearDeleteIcon() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureDeleteIcon() => $_ensure(5);

  @$pb.TagNumber(12)
  $1.DartColorExpression get deleteIconColor => $_getN(6);
  @$pb.TagNumber(12)
  set deleteIconColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasDeleteIconColor() => $_has(6);
  @$pb.TagNumber(12)
  void clearDeleteIconColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureDeleteIconColor() => $_ensure(6);

  @$pb.TagNumber(13)
  $core.String get deleteButtonTooltipMessage => $_getSZ(7);
  @$pb.TagNumber(13)
  set deleteButtonTooltipMessage($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasDeleteButtonTooltipMessage() => $_has(7);
  @$pb.TagNumber(13)
  void clearDeleteButtonTooltipMessage() => clearField(13);

  @$pb.TagNumber(15)
  $core.double get pressElevation => $_getN(8);
  @$pb.TagNumber(15)
  set pressElevation($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(15)
  $core.bool hasPressElevation() => $_has(8);
  @$pb.TagNumber(15)
  void clearPressElevation() => clearField(15);

  @$pb.TagNumber(16)
  $1.DartColorExpression get disabledColor => $_getN(9);
  @$pb.TagNumber(16)
  set disabledColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasDisabledColor() => $_has(9);
  @$pb.TagNumber(16)
  void clearDisabledColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(9);

  @$pb.TagNumber(17)
  $1.DartColorExpression get selectedColor => $_getN(10);
  @$pb.TagNumber(17)
  set selectedColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasSelectedColor() => $_has(10);
  @$pb.TagNumber(17)
  void clearSelectedColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(10);

  @$pb.TagNumber(18)
  $core.String get tooltip => $_getSZ(11);
  @$pb.TagNumber(18)
  set tooltip($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(18)
  $core.bool hasTooltip() => $_has(11);
  @$pb.TagNumber(18)
  void clearTooltip() => clearField(18);

  @$pb.TagNumber(23)
  $core.bool get autofocus => $_getBF(12);
  @$pb.TagNumber(23)
  set autofocus($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(23)
  $core.bool hasAutofocus() => $_has(12);
  @$pb.TagNumber(23)
  void clearAutofocus() => clearField(23);

  @$pb.TagNumber(25)
  $1.DartColorExpression get backgroundColor => $_getN(13);
  @$pb.TagNumber(25)
  set backgroundColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasBackgroundColor() => $_has(13);
  @$pb.TagNumber(25)
  void clearBackgroundColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(13);

  @$pb.TagNumber(29)
  $core.double get elevation => $_getN(14);
  @$pb.TagNumber(29)
  set elevation($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(29)
  $core.bool hasElevation() => $_has(14);
  @$pb.TagNumber(29)
  void clearElevation() => clearField(29);

  @$pb.TagNumber(30)
  $1.DartColorExpression get shadowColor => $_getN(15);
  @$pb.TagNumber(30)
  set shadowColor($1.DartColorExpression v) { setField(30, v); }
  @$pb.TagNumber(30)
  $core.bool hasShadowColor() => $_has(15);
  @$pb.TagNumber(30)
  void clearShadowColor() => clearField(30);
  @$pb.TagNumber(30)
  $1.DartColorExpression ensureShadowColor() => $_ensure(15);

  @$pb.TagNumber(31)
  $1.DartColorExpression get surfaceTintColor => $_getN(16);
  @$pb.TagNumber(31)
  set surfaceTintColor($1.DartColorExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasSurfaceTintColor() => $_has(16);
  @$pb.TagNumber(31)
  void clearSurfaceTintColor() => clearField(31);
  @$pb.TagNumber(31)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(16);

  @$pb.TagNumber(33)
  $1.DartColorExpression get selectedShadowColor => $_getN(17);
  @$pb.TagNumber(33)
  set selectedShadowColor($1.DartColorExpression v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasSelectedShadowColor() => $_has(17);
  @$pb.TagNumber(33)
  void clearSelectedShadowColor() => clearField(33);
  @$pb.TagNumber(33)
  $1.DartColorExpression ensureSelectedShadowColor() => $_ensure(17);

  @$pb.TagNumber(34)
  $core.bool get showCheckmark => $_getBF(18);
  @$pb.TagNumber(34)
  set showCheckmark($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(34)
  $core.bool hasShowCheckmark() => $_has(18);
  @$pb.TagNumber(34)
  void clearShowCheckmark() => clearField(34);

  @$pb.TagNumber(35)
  $1.DartColorExpression get checkmarkColor => $_getN(19);
  @$pb.TagNumber(35)
  set checkmarkColor($1.DartColorExpression v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasCheckmarkColor() => $_has(19);
  @$pb.TagNumber(35)
  void clearCheckmarkColor() => clearField(35);
  @$pb.TagNumber(35)
  $1.DartColorExpression ensureCheckmarkColor() => $_ensure(19);
}

/// package:flutter/src/material/list_tile.dart
class MaterialListTile extends $pb.GeneratedMessage {
  factory MaterialListTile({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    WidgetExpression? trailing,
    $core.bool? isThreeLine,
    $core.bool? dense,
    $1.DartColorExpression? selectedColor,
    $1.DartColorExpression? iconColor,
    $1.DartColorExpression? textColor,
    $core.bool? enabled,
    $core.bool? selected,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? splashColor,
    $core.bool? autofocus,
    $1.DartColorExpression? tileColor,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $core.double? horizontalTitleGap,
    $core.double? minVerticalPadding,
    $core.double? minLeadingWidth,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (isThreeLine != null) {
      $result.isThreeLine = isThreeLine;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (iconColor != null) {
      $result.iconColor = iconColor;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (horizontalTitleGap != null) {
      $result.horizontalTitleGap = horizontalTitleGap;
    }
    if (minVerticalPadding != null) {
      $result.minVerticalPadding = minVerticalPadding;
    }
    if (minLeadingWidth != null) {
      $result.minLeadingWidth = minLeadingWidth;
    }
    return $result;
  }
  MaterialListTile._() : super();
  factory MaterialListTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialListTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialListTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'isThreeLine')
    ..aOB(8, _omitFieldNames ? '' : 'dense')
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'iconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(19, _omitFieldNames ? '' : 'enabled')
    ..aOB(24, _omitFieldNames ? '' : 'selected')
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(26, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(27, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(29, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(30, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(31, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(32, _omitFieldNames ? '' : 'enableFeedback')
    ..a<$core.double>(33, _omitFieldNames ? '' : 'horizontalTitleGap', $pb.PbFieldType.OD)
    ..a<$core.double>(34, _omitFieldNames ? '' : 'minVerticalPadding', $pb.PbFieldType.OD)
    ..a<$core.double>(35, _omitFieldNames ? '' : 'minLeadingWidth', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialListTile clone() => MaterialListTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialListTile copyWith(void Function(MaterialListTile) updates) => super.copyWith((message) => updates(message as MaterialListTile)) as MaterialListTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialListTile create() => MaterialListTile._();
  MaterialListTile createEmptyInstance() => create();
  static $pb.PbList<MaterialListTile> createRepeated() => $pb.PbList<MaterialListTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialListTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialListTile>(create);
  static MaterialListTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get title => $_getN(2);
  @$pb.TagNumber(4)
  set title(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTitle() => $_has(2);
  @$pb.TagNumber(4)
  void clearTitle() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureTitle() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get subtitle => $_getN(3);
  @$pb.TagNumber(5)
  set subtitle(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSubtitle() => $_has(3);
  @$pb.TagNumber(5)
  void clearSubtitle() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureSubtitle() => $_ensure(3);

  @$pb.TagNumber(6)
  WidgetExpression get trailing => $_getN(4);
  @$pb.TagNumber(6)
  set trailing(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasTrailing() => $_has(4);
  @$pb.TagNumber(6)
  void clearTrailing() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureTrailing() => $_ensure(4);

  @$pb.TagNumber(7)
  $core.bool get isThreeLine => $_getBF(5);
  @$pb.TagNumber(7)
  set isThreeLine($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasIsThreeLine() => $_has(5);
  @$pb.TagNumber(7)
  void clearIsThreeLine() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get dense => $_getBF(6);
  @$pb.TagNumber(8)
  set dense($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasDense() => $_has(6);
  @$pb.TagNumber(8)
  void clearDense() => clearField(8);

  @$pb.TagNumber(12)
  $1.DartColorExpression get selectedColor => $_getN(7);
  @$pb.TagNumber(12)
  set selectedColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSelectedColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearSelectedColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get iconColor => $_getN(8);
  @$pb.TagNumber(13)
  set iconColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasIconColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearIconColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureIconColor() => $_ensure(8);

  @$pb.TagNumber(14)
  $1.DartColorExpression get textColor => $_getN(9);
  @$pb.TagNumber(14)
  set textColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasTextColor() => $_has(9);
  @$pb.TagNumber(14)
  void clearTextColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureTextColor() => $_ensure(9);

  @$pb.TagNumber(19)
  $core.bool get enabled => $_getBF(10);
  @$pb.TagNumber(19)
  set enabled($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(19)
  $core.bool hasEnabled() => $_has(10);
  @$pb.TagNumber(19)
  void clearEnabled() => clearField(19);

  @$pb.TagNumber(24)
  $core.bool get selected => $_getBF(11);
  @$pb.TagNumber(24)
  set selected($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(24)
  $core.bool hasSelected() => $_has(11);
  @$pb.TagNumber(24)
  void clearSelected() => clearField(24);

  @$pb.TagNumber(25)
  $1.DartColorExpression get focusColor => $_getN(12);
  @$pb.TagNumber(25)
  set focusColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasFocusColor() => $_has(12);
  @$pb.TagNumber(25)
  void clearFocusColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureFocusColor() => $_ensure(12);

  @$pb.TagNumber(26)
  $1.DartColorExpression get hoverColor => $_getN(13);
  @$pb.TagNumber(26)
  set hoverColor($1.DartColorExpression v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasHoverColor() => $_has(13);
  @$pb.TagNumber(26)
  void clearHoverColor() => clearField(26);
  @$pb.TagNumber(26)
  $1.DartColorExpression ensureHoverColor() => $_ensure(13);

  @$pb.TagNumber(27)
  $1.DartColorExpression get splashColor => $_getN(14);
  @$pb.TagNumber(27)
  set splashColor($1.DartColorExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSplashColor() => $_has(14);
  @$pb.TagNumber(27)
  void clearSplashColor() => clearField(27);
  @$pb.TagNumber(27)
  $1.DartColorExpression ensureSplashColor() => $_ensure(14);

  @$pb.TagNumber(29)
  $core.bool get autofocus => $_getBF(15);
  @$pb.TagNumber(29)
  set autofocus($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(29)
  $core.bool hasAutofocus() => $_has(15);
  @$pb.TagNumber(29)
  void clearAutofocus() => clearField(29);

  @$pb.TagNumber(30)
  $1.DartColorExpression get tileColor => $_getN(16);
  @$pb.TagNumber(30)
  set tileColor($1.DartColorExpression v) { setField(30, v); }
  @$pb.TagNumber(30)
  $core.bool hasTileColor() => $_has(16);
  @$pb.TagNumber(30)
  void clearTileColor() => clearField(30);
  @$pb.TagNumber(30)
  $1.DartColorExpression ensureTileColor() => $_ensure(16);

  @$pb.TagNumber(31)
  $1.DartColorExpression get selectedTileColor => $_getN(17);
  @$pb.TagNumber(31)
  set selectedTileColor($1.DartColorExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasSelectedTileColor() => $_has(17);
  @$pb.TagNumber(31)
  void clearSelectedTileColor() => clearField(31);
  @$pb.TagNumber(31)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(17);

  @$pb.TagNumber(32)
  $core.bool get enableFeedback => $_getBF(18);
  @$pb.TagNumber(32)
  set enableFeedback($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(32)
  $core.bool hasEnableFeedback() => $_has(18);
  @$pb.TagNumber(32)
  void clearEnableFeedback() => clearField(32);

  @$pb.TagNumber(33)
  $core.double get horizontalTitleGap => $_getN(19);
  @$pb.TagNumber(33)
  set horizontalTitleGap($core.double v) { $_setDouble(19, v); }
  @$pb.TagNumber(33)
  $core.bool hasHorizontalTitleGap() => $_has(19);
  @$pb.TagNumber(33)
  void clearHorizontalTitleGap() => clearField(33);

  @$pb.TagNumber(34)
  $core.double get minVerticalPadding => $_getN(20);
  @$pb.TagNumber(34)
  set minVerticalPadding($core.double v) { $_setDouble(20, v); }
  @$pb.TagNumber(34)
  $core.bool hasMinVerticalPadding() => $_has(20);
  @$pb.TagNumber(34)
  void clearMinVerticalPadding() => clearField(34);

  @$pb.TagNumber(35)
  $core.double get minLeadingWidth => $_getN(21);
  @$pb.TagNumber(35)
  set minLeadingWidth($core.double v) { $_setDouble(21, v); }
  @$pb.TagNumber(35)
  $core.bool hasMinLeadingWidth() => $_has(21);
  @$pb.TagNumber(35)
  void clearMinLeadingWidth() => clearField(35);
}

/// package:flutter/src/material/list_tile_theme.dart
class MaterialListTileTheme extends $pb.GeneratedMessage {
  factory MaterialListTileTheme({
    $1.FlutterKeyExpression? key,
    $core.bool? dense,
    $1.DartColorExpression? selectedColor,
    $1.DartColorExpression? iconColor,
    $1.DartColorExpression? textColor,
    $1.DartColorExpression? tileColor,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $core.double? horizontalTitleGap,
    $core.double? minVerticalPadding,
    $core.double? minLeadingWidth,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (iconColor != null) {
      $result.iconColor = iconColor;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (horizontalTitleGap != null) {
      $result.horizontalTitleGap = horizontalTitleGap;
    }
    if (minVerticalPadding != null) {
      $result.minVerticalPadding = minVerticalPadding;
    }
    if (minLeadingWidth != null) {
      $result.minLeadingWidth = minLeadingWidth;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialListTileTheme._() : super();
  factory MaterialListTileTheme.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialListTileTheme.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialListTileTheme', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'dense')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'iconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(13, _omitFieldNames ? '' : 'enableFeedback')
    ..a<$core.double>(15, _omitFieldNames ? '' : 'horizontalTitleGap', $pb.PbFieldType.OD)
    ..a<$core.double>(16, _omitFieldNames ? '' : 'minVerticalPadding', $pb.PbFieldType.OD)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'minLeadingWidth', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(18, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialListTileTheme clone() => MaterialListTileTheme()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialListTileTheme copyWith(void Function(MaterialListTileTheme) updates) => super.copyWith((message) => updates(message as MaterialListTileTheme)) as MaterialListTileTheme;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialListTileTheme create() => MaterialListTileTheme._();
  MaterialListTileTheme createEmptyInstance() => create();
  static $pb.PbList<MaterialListTileTheme> createRepeated() => $pb.PbList<MaterialListTileTheme>();
  @$core.pragma('dart2js:noInline')
  static MaterialListTileTheme getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialListTileTheme>(create);
  static MaterialListTileTheme? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get dense => $_getBF(1);
  @$pb.TagNumber(4)
  set dense($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasDense() => $_has(1);
  @$pb.TagNumber(4)
  void clearDense() => clearField(4);

  @$pb.TagNumber(7)
  $1.DartColorExpression get selectedColor => $_getN(2);
  @$pb.TagNumber(7)
  set selectedColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasSelectedColor() => $_has(2);
  @$pb.TagNumber(7)
  void clearSelectedColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(2);

  @$pb.TagNumber(8)
  $1.DartColorExpression get iconColor => $_getN(3);
  @$pb.TagNumber(8)
  set iconColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasIconColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearIconColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureIconColor() => $_ensure(3);

  @$pb.TagNumber(9)
  $1.DartColorExpression get textColor => $_getN(4);
  @$pb.TagNumber(9)
  set textColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasTextColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearTextColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureTextColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $1.DartColorExpression get tileColor => $_getN(5);
  @$pb.TagNumber(11)
  set tileColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasTileColor() => $_has(5);
  @$pb.TagNumber(11)
  void clearTileColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureTileColor() => $_ensure(5);

  @$pb.TagNumber(12)
  $1.DartColorExpression get selectedTileColor => $_getN(6);
  @$pb.TagNumber(12)
  set selectedTileColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasSelectedTileColor() => $_has(6);
  @$pb.TagNumber(12)
  void clearSelectedTileColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(6);

  @$pb.TagNumber(13)
  $core.bool get enableFeedback => $_getBF(7);
  @$pb.TagNumber(13)
  set enableFeedback($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasEnableFeedback() => $_has(7);
  @$pb.TagNumber(13)
  void clearEnableFeedback() => clearField(13);

  @$pb.TagNumber(15)
  $core.double get horizontalTitleGap => $_getN(8);
  @$pb.TagNumber(15)
  set horizontalTitleGap($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(15)
  $core.bool hasHorizontalTitleGap() => $_has(8);
  @$pb.TagNumber(15)
  void clearHorizontalTitleGap() => clearField(15);

  @$pb.TagNumber(16)
  $core.double get minVerticalPadding => $_getN(9);
  @$pb.TagNumber(16)
  set minVerticalPadding($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(16)
  $core.bool hasMinVerticalPadding() => $_has(9);
  @$pb.TagNumber(16)
  void clearMinVerticalPadding() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get minLeadingWidth => $_getN(10);
  @$pb.TagNumber(17)
  set minLeadingWidth($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(17)
  $core.bool hasMinLeadingWidth() => $_has(10);
  @$pb.TagNumber(17)
  void clearMinLeadingWidth() => clearField(17);

  @$pb.TagNumber(18)
  WidgetExpression get child => $_getN(11);
  @$pb.TagNumber(18)
  set child(WidgetExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasChild() => $_has(11);
  @$pb.TagNumber(18)
  void clearChild() => clearField(18);
  @$pb.TagNumber(18)
  WidgetExpression ensureChild() => $_ensure(11);
}

/// package:flutter/src/material/magnifier.dart
class MaterialMagnifier extends $pb.GeneratedMessage {
  factory MaterialMagnifier({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? filmColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (filmColor != null) {
      $result.filmColor = filmColor;
    }
    return $result;
  }
  MaterialMagnifier._() : super();
  factory MaterialMagnifier.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMagnifier.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMagnifier', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'filmColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMagnifier clone() => MaterialMagnifier()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMagnifier copyWith(void Function(MaterialMagnifier) updates) => super.copyWith((message) => updates(message as MaterialMagnifier)) as MaterialMagnifier;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMagnifier create() => MaterialMagnifier._();
  MaterialMagnifier createEmptyInstance() => create();
  static $pb.PbList<MaterialMagnifier> createRepeated() => $pb.PbList<MaterialMagnifier>();
  @$core.pragma('dart2js:noInline')
  static MaterialMagnifier getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMagnifier>(create);
  static MaterialMagnifier? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $1.DartColorExpression get filmColor => $_getN(1);
  @$pb.TagNumber(5)
  set filmColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFilmColor() => $_has(1);
  @$pb.TagNumber(5)
  void clearFilmColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureFilmColor() => $_ensure(1);
}

/// package:flutter/src/material/material.dart
class MaterialMaterial extends $pb.GeneratedMessage {
  factory MaterialMaterial({
    $1.FlutterKeyExpression? key,
    $core.double? elevation,
    $1.DartColorExpression? color,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.bool? borderOnForeground,
    $1.DartDurationExpression? animationDuration,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (color != null) {
      $result.color = color;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (borderOnForeground != null) {
      $result.borderOnForeground = borderOnForeground;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMaterial._() : super();
  factory MaterialMaterial.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterial.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterial', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(11, _omitFieldNames ? '' : 'borderOnForeground')
    ..aOM<$1.DartDurationExpression>(13, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterial clone() => MaterialMaterial()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterial copyWith(void Function(MaterialMaterial) updates) => super.copyWith((message) => updates(message as MaterialMaterial)) as MaterialMaterial;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterial create() => MaterialMaterial._();
  MaterialMaterial createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterial> createRepeated() => $pb.PbList<MaterialMaterial>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterial getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterial>(create);
  static MaterialMaterial? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get elevation => $_getN(1);
  @$pb.TagNumber(4)
  set elevation($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasElevation() => $_has(1);
  @$pb.TagNumber(4)
  void clearElevation() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get shadowColor => $_getN(3);
  @$pb.TagNumber(6)
  set shadowColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasShadowColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearShadowColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureShadowColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get surfaceTintColor => $_getN(4);
  @$pb.TagNumber(7)
  set surfaceTintColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasSurfaceTintColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearSurfaceTintColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(4);

  @$pb.TagNumber(11)
  $core.bool get borderOnForeground => $_getBF(5);
  @$pb.TagNumber(11)
  set borderOnForeground($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasBorderOnForeground() => $_has(5);
  @$pb.TagNumber(11)
  void clearBorderOnForeground() => clearField(11);

  @$pb.TagNumber(13)
  $1.DartDurationExpression get animationDuration => $_getN(6);
  @$pb.TagNumber(13)
  set animationDuration($1.DartDurationExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasAnimationDuration() => $_has(6);
  @$pb.TagNumber(13)
  void clearAnimationDuration() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(6);

  @$pb.TagNumber(14)
  WidgetExpression get child => $_getN(7);
  @$pb.TagNumber(14)
  set child(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasChild() => $_has(7);
  @$pb.TagNumber(14)
  void clearChild() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureChild() => $_ensure(7);
}

/// package:flutter/src/material/material_button.dart
class MaterialMaterialButton extends $pb.GeneratedMessage {
  factory MaterialMaterialButton({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? textColor,
    $1.DartColorExpression? disabledTextColor,
    $1.DartColorExpression? color,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? splashColor,
    $core.double? elevation,
    $core.double? focusElevation,
    $core.double? hoverElevation,
    $core.double? highlightElevation,
    $core.double? disabledElevation,
    $core.bool? autofocus,
    $1.DartDurationExpression? animationDuration,
    $core.double? minWidth,
    $core.double? height,
    $core.bool? enableFeedback,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (textColor != null) {
      $result.textColor = textColor;
    }
    if (disabledTextColor != null) {
      $result.disabledTextColor = disabledTextColor;
    }
    if (color != null) {
      $result.color = color;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (focusElevation != null) {
      $result.focusElevation = focusElevation;
    }
    if (hoverElevation != null) {
      $result.hoverElevation = hoverElevation;
    }
    if (highlightElevation != null) {
      $result.highlightElevation = highlightElevation;
    }
    if (disabledElevation != null) {
      $result.disabledElevation = disabledElevation;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (minWidth != null) {
      $result.minWidth = minWidth;
    }
    if (height != null) {
      $result.height = height;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMaterialButton._() : super();
  factory MaterialMaterialButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMaterialButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMaterialButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'textColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'disabledTextColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(18, _omitFieldNames ? '' : 'focusElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(19, _omitFieldNames ? '' : 'hoverElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(20, _omitFieldNames ? '' : 'highlightElevation', $pb.PbFieldType.OD)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'disabledElevation', $pb.PbFieldType.OD)
    ..aOB(27, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartDurationExpression>(29, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..a<$core.double>(30, _omitFieldNames ? '' : 'minWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(31, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOB(32, _omitFieldNames ? '' : 'enableFeedback')
    ..aOM<WidgetExpression>(33, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMaterialButton clone() => MaterialMaterialButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMaterialButton copyWith(void Function(MaterialMaterialButton) updates) => super.copyWith((message) => updates(message as MaterialMaterialButton)) as MaterialMaterialButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMaterialButton create() => MaterialMaterialButton._();
  MaterialMaterialButton createEmptyInstance() => create();
  static $pb.PbList<MaterialMaterialButton> createRepeated() => $pb.PbList<MaterialMaterialButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialMaterialButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMaterialButton>(create);
  static MaterialMaterialButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $1.DartColorExpression get textColor => $_getN(1);
  @$pb.TagNumber(8)
  set textColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasTextColor() => $_has(1);
  @$pb.TagNumber(8)
  void clearTextColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureTextColor() => $_ensure(1);

  @$pb.TagNumber(9)
  $1.DartColorExpression get disabledTextColor => $_getN(2);
  @$pb.TagNumber(9)
  set disabledTextColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasDisabledTextColor() => $_has(2);
  @$pb.TagNumber(9)
  void clearDisabledTextColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureDisabledTextColor() => $_ensure(2);

  @$pb.TagNumber(10)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(10)
  set color($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(10)
  void clearColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(11)
  $1.DartColorExpression get disabledColor => $_getN(4);
  @$pb.TagNumber(11)
  set disabledColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDisabledColor() => $_has(4);
  @$pb.TagNumber(11)
  void clearDisabledColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(4);

  @$pb.TagNumber(12)
  $1.DartColorExpression get focusColor => $_getN(5);
  @$pb.TagNumber(12)
  set focusColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasFocusColor() => $_has(5);
  @$pb.TagNumber(12)
  void clearFocusColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureFocusColor() => $_ensure(5);

  @$pb.TagNumber(13)
  $1.DartColorExpression get hoverColor => $_getN(6);
  @$pb.TagNumber(13)
  set hoverColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasHoverColor() => $_has(6);
  @$pb.TagNumber(13)
  void clearHoverColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureHoverColor() => $_ensure(6);

  @$pb.TagNumber(14)
  $1.DartColorExpression get highlightColor => $_getN(7);
  @$pb.TagNumber(14)
  set highlightColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasHighlightColor() => $_has(7);
  @$pb.TagNumber(14)
  void clearHighlightColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(7);

  @$pb.TagNumber(15)
  $1.DartColorExpression get splashColor => $_getN(8);
  @$pb.TagNumber(15)
  set splashColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasSplashColor() => $_has(8);
  @$pb.TagNumber(15)
  void clearSplashColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureSplashColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.double get elevation => $_getN(9);
  @$pb.TagNumber(17)
  set elevation($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasElevation() => $_has(9);
  @$pb.TagNumber(17)
  void clearElevation() => clearField(17);

  @$pb.TagNumber(18)
  $core.double get focusElevation => $_getN(10);
  @$pb.TagNumber(18)
  set focusElevation($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasFocusElevation() => $_has(10);
  @$pb.TagNumber(18)
  void clearFocusElevation() => clearField(18);

  @$pb.TagNumber(19)
  $core.double get hoverElevation => $_getN(11);
  @$pb.TagNumber(19)
  set hoverElevation($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasHoverElevation() => $_has(11);
  @$pb.TagNumber(19)
  void clearHoverElevation() => clearField(19);

  @$pb.TagNumber(20)
  $core.double get highlightElevation => $_getN(12);
  @$pb.TagNumber(20)
  set highlightElevation($core.double v) { $_setDouble(12, v); }
  @$pb.TagNumber(20)
  $core.bool hasHighlightElevation() => $_has(12);
  @$pb.TagNumber(20)
  void clearHighlightElevation() => clearField(20);

  @$pb.TagNumber(21)
  $core.double get disabledElevation => $_getN(13);
  @$pb.TagNumber(21)
  set disabledElevation($core.double v) { $_setDouble(13, v); }
  @$pb.TagNumber(21)
  $core.bool hasDisabledElevation() => $_has(13);
  @$pb.TagNumber(21)
  void clearDisabledElevation() => clearField(21);

  @$pb.TagNumber(27)
  $core.bool get autofocus => $_getBF(14);
  @$pb.TagNumber(27)
  set autofocus($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(27)
  $core.bool hasAutofocus() => $_has(14);
  @$pb.TagNumber(27)
  void clearAutofocus() => clearField(27);

  @$pb.TagNumber(29)
  $1.DartDurationExpression get animationDuration => $_getN(15);
  @$pb.TagNumber(29)
  set animationDuration($1.DartDurationExpression v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasAnimationDuration() => $_has(15);
  @$pb.TagNumber(29)
  void clearAnimationDuration() => clearField(29);
  @$pb.TagNumber(29)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(15);

  @$pb.TagNumber(30)
  $core.double get minWidth => $_getN(16);
  @$pb.TagNumber(30)
  set minWidth($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(30)
  $core.bool hasMinWidth() => $_has(16);
  @$pb.TagNumber(30)
  void clearMinWidth() => clearField(30);

  @$pb.TagNumber(31)
  $core.double get height => $_getN(17);
  @$pb.TagNumber(31)
  set height($core.double v) { $_setDouble(17, v); }
  @$pb.TagNumber(31)
  $core.bool hasHeight() => $_has(17);
  @$pb.TagNumber(31)
  void clearHeight() => clearField(31);

  @$pb.TagNumber(32)
  $core.bool get enableFeedback => $_getBF(18);
  @$pb.TagNumber(32)
  set enableFeedback($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(32)
  $core.bool hasEnableFeedback() => $_has(18);
  @$pb.TagNumber(32)
  void clearEnableFeedback() => clearField(32);

  @$pb.TagNumber(33)
  WidgetExpression get child => $_getN(19);
  @$pb.TagNumber(33)
  set child(WidgetExpression v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasChild() => $_has(19);
  @$pb.TagNumber(33)
  void clearChild() => clearField(33);
  @$pb.TagNumber(33)
  WidgetExpression ensureChild() => $_ensure(19);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialCheckboxMenuButton extends $pb.GeneratedMessage {
  factory MaterialCheckboxMenuButton({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $core.bool? tristate,
    $core.bool? isError,
    WidgetExpression? trailingIcon,
    $core.bool? closeOnActivate,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (tristate != null) {
      $result.tristate = tristate;
    }
    if (isError != null) {
      $result.isError = isError;
    }
    if (trailingIcon != null) {
      $result.trailingIcon = trailingIcon;
    }
    if (closeOnActivate != null) {
      $result.closeOnActivate = closeOnActivate;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialCheckboxMenuButton._() : super();
  factory MaterialCheckboxMenuButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckboxMenuButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckboxMenuButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOB(4, _omitFieldNames ? '' : 'tristate')
    ..aOB(5, _omitFieldNames ? '' : 'isError')
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'trailingIcon', subBuilder: WidgetExpression.create)
    ..aOB(15, _omitFieldNames ? '' : 'closeOnActivate')
    ..aOM<WidgetExpression>(16, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckboxMenuButton clone() => MaterialCheckboxMenuButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckboxMenuButton copyWith(void Function(MaterialCheckboxMenuButton) updates) => super.copyWith((message) => updates(message as MaterialCheckboxMenuButton)) as MaterialCheckboxMenuButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxMenuButton create() => MaterialCheckboxMenuButton._();
  MaterialCheckboxMenuButton createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckboxMenuButton> createRepeated() => $pb.PbList<MaterialCheckboxMenuButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckboxMenuButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckboxMenuButton>(create);
  static MaterialCheckboxMenuButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get tristate => $_getBF(2);
  @$pb.TagNumber(4)
  set tristate($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTristate() => $_has(2);
  @$pb.TagNumber(4)
  void clearTristate() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get isError => $_getBF(3);
  @$pb.TagNumber(5)
  set isError($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsError() => $_has(3);
  @$pb.TagNumber(5)
  void clearIsError() => clearField(5);

  @$pb.TagNumber(14)
  WidgetExpression get trailingIcon => $_getN(4);
  @$pb.TagNumber(14)
  set trailingIcon(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasTrailingIcon() => $_has(4);
  @$pb.TagNumber(14)
  void clearTrailingIcon() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureTrailingIcon() => $_ensure(4);

  @$pb.TagNumber(15)
  $core.bool get closeOnActivate => $_getBF(5);
  @$pb.TagNumber(15)
  set closeOnActivate($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(15)
  $core.bool hasCloseOnActivate() => $_has(5);
  @$pb.TagNumber(15)
  void clearCloseOnActivate() => clearField(15);

  @$pb.TagNumber(16)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(16)
  set child(WidgetExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(16)
  void clearChild() => clearField(16);
  @$pb.TagNumber(16)
  WidgetExpression ensureChild() => $_ensure(6);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialMenuAcceleratorCallbackBinding extends $pb.GeneratedMessage {
  factory MaterialMenuAcceleratorCallbackBinding({
    $1.FlutterKeyExpression? key,
    $core.bool? hasSubmenu,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (hasSubmenu != null) {
      $result.hasSubmenu = hasSubmenu;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMenuAcceleratorCallbackBinding._() : super();
  factory MaterialMenuAcceleratorCallbackBinding.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMenuAcceleratorCallbackBinding.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMenuAcceleratorCallbackBinding', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'hasSubmenu')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMenuAcceleratorCallbackBinding clone() => MaterialMenuAcceleratorCallbackBinding()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMenuAcceleratorCallbackBinding copyWith(void Function(MaterialMenuAcceleratorCallbackBinding) updates) => super.copyWith((message) => updates(message as MaterialMenuAcceleratorCallbackBinding)) as MaterialMenuAcceleratorCallbackBinding;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMenuAcceleratorCallbackBinding create() => MaterialMenuAcceleratorCallbackBinding._();
  MaterialMenuAcceleratorCallbackBinding createEmptyInstance() => create();
  static $pb.PbList<MaterialMenuAcceleratorCallbackBinding> createRepeated() => $pb.PbList<MaterialMenuAcceleratorCallbackBinding>();
  @$core.pragma('dart2js:noInline')
  static MaterialMenuAcceleratorCallbackBinding getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMenuAcceleratorCallbackBinding>(create);
  static MaterialMenuAcceleratorCallbackBinding? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get hasSubmenu => $_getBF(1);
  @$pb.TagNumber(4)
  set hasSubmenu($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasHasSubmenu() => $_has(1);
  @$pb.TagNumber(4)
  void clearHasSubmenu() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialMenuAcceleratorLabel extends $pb.GeneratedMessage {
  factory MaterialMenuAcceleratorLabel({
    $core.String? label,
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (label != null) {
      $result.label = label;
    }
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  MaterialMenuAcceleratorLabel._() : super();
  factory MaterialMenuAcceleratorLabel.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMenuAcceleratorLabel.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMenuAcceleratorLabel', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'label')
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMenuAcceleratorLabel clone() => MaterialMenuAcceleratorLabel()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMenuAcceleratorLabel copyWith(void Function(MaterialMenuAcceleratorLabel) updates) => super.copyWith((message) => updates(message as MaterialMenuAcceleratorLabel)) as MaterialMenuAcceleratorLabel;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMenuAcceleratorLabel create() => MaterialMenuAcceleratorLabel._();
  MaterialMenuAcceleratorLabel createEmptyInstance() => create();
  static $pb.PbList<MaterialMenuAcceleratorLabel> createRepeated() => $pb.PbList<MaterialMenuAcceleratorLabel>();
  @$core.pragma('dart2js:noInline')
  static MaterialMenuAcceleratorLabel getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMenuAcceleratorLabel>(create);
  static MaterialMenuAcceleratorLabel? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get label => $_getSZ(0);
  @$pb.TagNumber(2)
  set label($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasLabel() => $_has(0);
  @$pb.TagNumber(2)
  void clearLabel() => clearField(2);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialMenuAnchor extends $pb.GeneratedMessage {
  factory MaterialMenuAnchor({
    $1.FlutterKeyExpression? key,
    $core.bool? anchorTapClosesMenu,
    $core.bool? crossAxisUnconstrained,
    $core.Iterable<WidgetExpression>? menuChildren,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (anchorTapClosesMenu != null) {
      $result.anchorTapClosesMenu = anchorTapClosesMenu;
    }
    if (crossAxisUnconstrained != null) {
      $result.crossAxisUnconstrained = crossAxisUnconstrained;
    }
    if (menuChildren != null) {
      $result.menuChildren.addAll(menuChildren);
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMenuAnchor._() : super();
  factory MaterialMenuAnchor.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMenuAnchor.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMenuAnchor', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'anchorTapClosesMenu')
    ..aOB(11, _omitFieldNames ? '' : 'crossAxisUnconstrained')
    ..pc<WidgetExpression>(12, _omitFieldNames ? '' : 'menuChildren', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMenuAnchor clone() => MaterialMenuAnchor()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMenuAnchor copyWith(void Function(MaterialMenuAnchor) updates) => super.copyWith((message) => updates(message as MaterialMenuAnchor)) as MaterialMenuAnchor;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMenuAnchor create() => MaterialMenuAnchor._();
  MaterialMenuAnchor createEmptyInstance() => create();
  static $pb.PbList<MaterialMenuAnchor> createRepeated() => $pb.PbList<MaterialMenuAnchor>();
  @$core.pragma('dart2js:noInline')
  static MaterialMenuAnchor getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMenuAnchor>(create);
  static MaterialMenuAnchor? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $core.bool get anchorTapClosesMenu => $_getBF(1);
  @$pb.TagNumber(8)
  set anchorTapClosesMenu($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(8)
  $core.bool hasAnchorTapClosesMenu() => $_has(1);
  @$pb.TagNumber(8)
  void clearAnchorTapClosesMenu() => clearField(8);

  @$pb.TagNumber(11)
  $core.bool get crossAxisUnconstrained => $_getBF(2);
  @$pb.TagNumber(11)
  set crossAxisUnconstrained($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(11)
  $core.bool hasCrossAxisUnconstrained() => $_has(2);
  @$pb.TagNumber(11)
  void clearCrossAxisUnconstrained() => clearField(11);

  @$pb.TagNumber(12)
  $core.List<WidgetExpression> get menuChildren => $_getList(3);

  @$pb.TagNumber(14)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(14)
  set child(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(14)
  void clearChild() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialMenuBar extends $pb.GeneratedMessage {
  factory MaterialMenuBar({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  MaterialMenuBar._() : super();
  factory MaterialMenuBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMenuBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMenuBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMenuBar clone() => MaterialMenuBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMenuBar copyWith(void Function(MaterialMenuBar) updates) => super.copyWith((message) => updates(message as MaterialMenuBar)) as MaterialMenuBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMenuBar create() => MaterialMenuBar._();
  MaterialMenuBar createEmptyInstance() => create();
  static $pb.PbList<MaterialMenuBar> createRepeated() => $pb.PbList<MaterialMenuBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialMenuBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMenuBar>(create);
  static MaterialMenuBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get children => $_getList(1);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialMenuItemButton extends $pb.GeneratedMessage {
  factory MaterialMenuItemButton({
    $1.FlutterKeyExpression? key,
    $core.bool? requestFocusOnHover,
    WidgetExpression? leadingIcon,
    WidgetExpression? trailingIcon,
    $core.bool? closeOnActivate,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (requestFocusOnHover != null) {
      $result.requestFocusOnHover = requestFocusOnHover;
    }
    if (leadingIcon != null) {
      $result.leadingIcon = leadingIcon;
    }
    if (trailingIcon != null) {
      $result.trailingIcon = trailingIcon;
    }
    if (closeOnActivate != null) {
      $result.closeOnActivate = closeOnActivate;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialMenuItemButton._() : super();
  factory MaterialMenuItemButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMenuItemButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMenuItemButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'requestFocusOnHover')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'leadingIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'trailingIcon', subBuilder: WidgetExpression.create)
    ..aOB(14, _omitFieldNames ? '' : 'closeOnActivate')
    ..aOM<WidgetExpression>(15, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMenuItemButton clone() => MaterialMenuItemButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMenuItemButton copyWith(void Function(MaterialMenuItemButton) updates) => super.copyWith((message) => updates(message as MaterialMenuItemButton)) as MaterialMenuItemButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMenuItemButton create() => MaterialMenuItemButton._();
  MaterialMenuItemButton createEmptyInstance() => create();
  static $pb.PbList<MaterialMenuItemButton> createRepeated() => $pb.PbList<MaterialMenuItemButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialMenuItemButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMenuItemButton>(create);
  static MaterialMenuItemButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.bool get requestFocusOnHover => $_getBF(1);
  @$pb.TagNumber(5)
  set requestFocusOnHover($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasRequestFocusOnHover() => $_has(1);
  @$pb.TagNumber(5)
  void clearRequestFocusOnHover() => clearField(5);

  @$pb.TagNumber(12)
  WidgetExpression get leadingIcon => $_getN(2);
  @$pb.TagNumber(12)
  set leadingIcon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasLeadingIcon() => $_has(2);
  @$pb.TagNumber(12)
  void clearLeadingIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureLeadingIcon() => $_ensure(2);

  @$pb.TagNumber(13)
  WidgetExpression get trailingIcon => $_getN(3);
  @$pb.TagNumber(13)
  set trailingIcon(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasTrailingIcon() => $_has(3);
  @$pb.TagNumber(13)
  void clearTrailingIcon() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureTrailingIcon() => $_ensure(3);

  @$pb.TagNumber(14)
  $core.bool get closeOnActivate => $_getBF(4);
  @$pb.TagNumber(14)
  set closeOnActivate($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(14)
  $core.bool hasCloseOnActivate() => $_has(4);
  @$pb.TagNumber(14)
  void clearCloseOnActivate() => clearField(14);

  @$pb.TagNumber(15)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(15)
  set child(WidgetExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(15)
  void clearChild() => clearField(15);
  @$pb.TagNumber(15)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/material/menu_anchor.dart
class MaterialSubmenuButton extends $pb.GeneratedMessage {
  factory MaterialSubmenuButton({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leadingIcon,
    WidgetExpression? trailingIcon,
    $core.Iterable<WidgetExpression>? menuChildren,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leadingIcon != null) {
      $result.leadingIcon = leadingIcon;
    }
    if (trailingIcon != null) {
      $result.trailingIcon = trailingIcon;
    }
    if (menuChildren != null) {
      $result.menuChildren.addAll(menuChildren);
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialSubmenuButton._() : super();
  factory MaterialSubmenuButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSubmenuButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSubmenuButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'leadingIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(15, _omitFieldNames ? '' : 'trailingIcon', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(16, _omitFieldNames ? '' : 'menuChildren', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(17, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSubmenuButton clone() => MaterialSubmenuButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSubmenuButton copyWith(void Function(MaterialSubmenuButton) updates) => super.copyWith((message) => updates(message as MaterialSubmenuButton)) as MaterialSubmenuButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSubmenuButton create() => MaterialSubmenuButton._();
  MaterialSubmenuButton createEmptyInstance() => create();
  static $pb.PbList<MaterialSubmenuButton> createRepeated() => $pb.PbList<MaterialSubmenuButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialSubmenuButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSubmenuButton>(create);
  static MaterialSubmenuButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(14)
  WidgetExpression get leadingIcon => $_getN(1);
  @$pb.TagNumber(14)
  set leadingIcon(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasLeadingIcon() => $_has(1);
  @$pb.TagNumber(14)
  void clearLeadingIcon() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureLeadingIcon() => $_ensure(1);

  @$pb.TagNumber(15)
  WidgetExpression get trailingIcon => $_getN(2);
  @$pb.TagNumber(15)
  set trailingIcon(WidgetExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasTrailingIcon() => $_has(2);
  @$pb.TagNumber(15)
  void clearTrailingIcon() => clearField(15);
  @$pb.TagNumber(15)
  WidgetExpression ensureTrailingIcon() => $_ensure(2);

  @$pb.TagNumber(16)
  $core.List<WidgetExpression> get menuChildren => $_getList(3);

  @$pb.TagNumber(17)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(17)
  set child(WidgetExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(17)
  void clearChild() => clearField(17);
  @$pb.TagNumber(17)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/material/mergeable_material.dart
class MaterialMergeableMaterial extends $pb.GeneratedMessage {
  factory MaterialMergeableMaterial({
    $1.FlutterKeyExpression? key,
    $core.double? elevation,
    $core.bool? hasDividers,
    $1.DartColorExpression? dividerColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (hasDividers != null) {
      $result.hasDividers = hasDividers;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    return $result;
  }
  MaterialMergeableMaterial._() : super();
  factory MaterialMergeableMaterial.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialMergeableMaterial.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialMergeableMaterial', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOB(5, _omitFieldNames ? '' : 'hasDividers')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialMergeableMaterial clone() => MaterialMergeableMaterial()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialMergeableMaterial copyWith(void Function(MaterialMergeableMaterial) updates) => super.copyWith((message) => updates(message as MaterialMergeableMaterial)) as MaterialMergeableMaterial;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialMergeableMaterial create() => MaterialMergeableMaterial._();
  MaterialMergeableMaterial createEmptyInstance() => create();
  static $pb.PbList<MaterialMergeableMaterial> createRepeated() => $pb.PbList<MaterialMergeableMaterial>();
  @$core.pragma('dart2js:noInline')
  static MaterialMergeableMaterial getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialMergeableMaterial>(create);
  static MaterialMergeableMaterial? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get elevation => $_getN(1);
  @$pb.TagNumber(4)
  set elevation($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasElevation() => $_has(1);
  @$pb.TagNumber(4)
  void clearElevation() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get hasDividers => $_getBF(2);
  @$pb.TagNumber(5)
  set hasDividers($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasHasDividers() => $_has(2);
  @$pb.TagNumber(5)
  void clearHasDividers() => clearField(5);

  @$pb.TagNumber(7)
  $1.DartColorExpression get dividerColor => $_getN(3);
  @$pb.TagNumber(7)
  set dividerColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasDividerColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearDividerColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureDividerColor() => $_ensure(3);
}

/// package:flutter/src/material/navigation_bar.dart
class MaterialNavigationBar extends $pb.GeneratedMessage {
  factory MaterialNavigationBar({
    $1.FlutterKeyExpression? key,
    $1.DartDurationExpression? animationDuration,
    $core.int? selectedIndex,
    $core.Iterable<WidgetExpression>? destinations,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $1.DartColorExpression? indicatorColor,
    $core.double? height,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    if (selectedIndex != null) {
      $result.selectedIndex = selectedIndex;
    }
    if (destinations != null) {
      $result.destinations.addAll(destinations);
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (indicatorColor != null) {
      $result.indicatorColor = indicatorColor;
    }
    if (height != null) {
      $result.height = height;
    }
    return $result;
  }
  MaterialNavigationBar._() : super();
  factory MaterialNavigationBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialNavigationBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialNavigationBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartDurationExpression>(3, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'selectedIndex', $pb.PbFieldType.O3)
    ..pc<WidgetExpression>(5, _omitFieldNames ? '' : 'destinations', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'indicatorColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialNavigationBar clone() => MaterialNavigationBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialNavigationBar copyWith(void Function(MaterialNavigationBar) updates) => super.copyWith((message) => updates(message as MaterialNavigationBar)) as MaterialNavigationBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialNavigationBar create() => MaterialNavigationBar._();
  MaterialNavigationBar createEmptyInstance() => create();
  static $pb.PbList<MaterialNavigationBar> createRepeated() => $pb.PbList<MaterialNavigationBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialNavigationBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialNavigationBar>(create);
  static MaterialNavigationBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartDurationExpression get animationDuration => $_getN(1);
  @$pb.TagNumber(3)
  set animationDuration($1.DartDurationExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAnimationDuration() => $_has(1);
  @$pb.TagNumber(3)
  void clearAnimationDuration() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.int get selectedIndex => $_getIZ(2);
  @$pb.TagNumber(4)
  set selectedIndex($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasSelectedIndex() => $_has(2);
  @$pb.TagNumber(4)
  void clearSelectedIndex() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<WidgetExpression> get destinations => $_getList(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get backgroundColor => $_getN(4);
  @$pb.TagNumber(7)
  set backgroundColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBackgroundColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearBackgroundColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $core.double get elevation => $_getN(5);
  @$pb.TagNumber(8)
  set elevation($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasElevation() => $_has(5);
  @$pb.TagNumber(8)
  void clearElevation() => clearField(8);

  @$pb.TagNumber(9)
  $1.DartColorExpression get shadowColor => $_getN(6);
  @$pb.TagNumber(9)
  set shadowColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasShadowColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearShadowColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureShadowColor() => $_ensure(6);

  @$pb.TagNumber(10)
  $1.DartColorExpression get surfaceTintColor => $_getN(7);
  @$pb.TagNumber(10)
  set surfaceTintColor($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasSurfaceTintColor() => $_has(7);
  @$pb.TagNumber(10)
  void clearSurfaceTintColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(7);

  @$pb.TagNumber(11)
  $1.DartColorExpression get indicatorColor => $_getN(8);
  @$pb.TagNumber(11)
  set indicatorColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasIndicatorColor() => $_has(8);
  @$pb.TagNumber(11)
  void clearIndicatorColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureIndicatorColor() => $_ensure(8);

  @$pb.TagNumber(13)
  $core.double get height => $_getN(9);
  @$pb.TagNumber(13)
  set height($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(13)
  $core.bool hasHeight() => $_has(9);
  @$pb.TagNumber(13)
  void clearHeight() => clearField(13);
}

/// package:flutter/src/material/navigation_bar.dart
class MaterialNavigationDestination extends $pb.GeneratedMessage {
  factory MaterialNavigationDestination({
    $1.FlutterKeyExpression? key,
    WidgetExpression? icon,
    WidgetExpression? selectedIcon,
    $core.String? label,
    $core.String? tooltip,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (label != null) {
      $result.label = label;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    return $result;
  }
  MaterialNavigationDestination._() : super();
  factory MaterialNavigationDestination.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialNavigationDestination.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialNavigationDestination', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOS(5, _omitFieldNames ? '' : 'label')
    ..aOS(6, _omitFieldNames ? '' : 'tooltip')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialNavigationDestination clone() => MaterialNavigationDestination()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialNavigationDestination copyWith(void Function(MaterialNavigationDestination) updates) => super.copyWith((message) => updates(message as MaterialNavigationDestination)) as MaterialNavigationDestination;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDestination create() => MaterialNavigationDestination._();
  MaterialNavigationDestination createEmptyInstance() => create();
  static $pb.PbList<MaterialNavigationDestination> createRepeated() => $pb.PbList<MaterialNavigationDestination>();
  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDestination getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialNavigationDestination>(create);
  static MaterialNavigationDestination? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get icon => $_getN(1);
  @$pb.TagNumber(3)
  set icon(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasIcon() => $_has(1);
  @$pb.TagNumber(3)
  void clearIcon() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureIcon() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get selectedIcon => $_getN(2);
  @$pb.TagNumber(4)
  set selectedIcon(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSelectedIcon() => $_has(2);
  @$pb.TagNumber(4)
  void clearSelectedIcon() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSelectedIcon() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.String get label => $_getSZ(3);
  @$pb.TagNumber(5)
  set label($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(5)
  void clearLabel() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get tooltip => $_getSZ(4);
  @$pb.TagNumber(6)
  set tooltip($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasTooltip() => $_has(4);
  @$pb.TagNumber(6)
  void clearTooltip() => clearField(6);
}

/// package:flutter/src/material/navigation_drawer.dart
class MaterialNavigationDrawer extends $pb.GeneratedMessage {
  factory MaterialNavigationDrawer({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? shadowColor,
    $1.DartColorExpression? surfaceTintColor,
    $core.double? elevation,
    $1.DartColorExpression? indicatorColor,
    $core.int? selectedIndex,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (surfaceTintColor != null) {
      $result.surfaceTintColor = surfaceTintColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (indicatorColor != null) {
      $result.indicatorColor = indicatorColor;
    }
    if (selectedIndex != null) {
      $result.selectedIndex = selectedIndex;
    }
    return $result;
  }
  MaterialNavigationDrawer._() : super();
  factory MaterialNavigationDrawer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialNavigationDrawer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialNavigationDrawer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'surfaceTintColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'indicatorColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'selectedIndex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialNavigationDrawer clone() => MaterialNavigationDrawer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialNavigationDrawer copyWith(void Function(MaterialNavigationDrawer) updates) => super.copyWith((message) => updates(message as MaterialNavigationDrawer)) as MaterialNavigationDrawer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDrawer create() => MaterialNavigationDrawer._();
  MaterialNavigationDrawer createEmptyInstance() => create();
  static $pb.PbList<MaterialNavigationDrawer> createRepeated() => $pb.PbList<MaterialNavigationDrawer>();
  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDrawer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialNavigationDrawer>(create);
  static MaterialNavigationDrawer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get shadowColor => $_getN(3);
  @$pb.TagNumber(5)
  set shadowColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasShadowColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearShadowColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureShadowColor() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartColorExpression get surfaceTintColor => $_getN(4);
  @$pb.TagNumber(6)
  set surfaceTintColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSurfaceTintColor() => $_has(4);
  @$pb.TagNumber(6)
  void clearSurfaceTintColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureSurfaceTintColor() => $_ensure(4);

  @$pb.TagNumber(7)
  $core.double get elevation => $_getN(5);
  @$pb.TagNumber(7)
  set elevation($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasElevation() => $_has(5);
  @$pb.TagNumber(7)
  void clearElevation() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get indicatorColor => $_getN(6);
  @$pb.TagNumber(8)
  set indicatorColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasIndicatorColor() => $_has(6);
  @$pb.TagNumber(8)
  void clearIndicatorColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureIndicatorColor() => $_ensure(6);

  @$pb.TagNumber(11)
  $core.int get selectedIndex => $_getIZ(7);
  @$pb.TagNumber(11)
  set selectedIndex($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(11)
  $core.bool hasSelectedIndex() => $_has(7);
  @$pb.TagNumber(11)
  void clearSelectedIndex() => clearField(11);
}

/// package:flutter/src/material/navigation_drawer.dart
class MaterialNavigationDrawerDestination extends $pb.GeneratedMessage {
  factory MaterialNavigationDrawerDestination({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    WidgetExpression? icon,
    WidgetExpression? selectedIcon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (selectedIcon != null) {
      $result.selectedIcon = selectedIcon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialNavigationDrawerDestination._() : super();
  factory MaterialNavigationDrawerDestination.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialNavigationDrawerDestination.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialNavigationDrawerDestination', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'selectedIcon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialNavigationDrawerDestination clone() => MaterialNavigationDrawerDestination()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialNavigationDrawerDestination copyWith(void Function(MaterialNavigationDrawerDestination) updates) => super.copyWith((message) => updates(message as MaterialNavigationDrawerDestination)) as MaterialNavigationDrawerDestination;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDrawerDestination create() => MaterialNavigationDrawerDestination._();
  MaterialNavigationDrawerDestination createEmptyInstance() => create();
  static $pb.PbList<MaterialNavigationDrawerDestination> createRepeated() => $pb.PbList<MaterialNavigationDrawerDestination>();
  @$core.pragma('dart2js:noInline')
  static MaterialNavigationDrawerDestination getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialNavigationDrawerDestination>(create);
  static MaterialNavigationDrawerDestination? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(4)
  set icon(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(4)
  void clearIcon() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get selectedIcon => $_getN(3);
  @$pb.TagNumber(5)
  set selectedIcon(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSelectedIcon() => $_has(3);
  @$pb.TagNumber(5)
  void clearSelectedIcon() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureSelectedIcon() => $_ensure(3);

  @$pb.TagNumber(6)
  WidgetExpression get label => $_getN(4);
  @$pb.TagNumber(6)
  set label(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasLabel() => $_has(4);
  @$pb.TagNumber(6)
  void clearLabel() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureLabel() => $_ensure(4);
}

/// package:flutter/src/material/outlined_button.dart
class MaterialOutlinedButton extends $pb.GeneratedMessage {
  factory MaterialOutlinedButton({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialOutlinedButton._() : super();
  factory MaterialOutlinedButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialOutlinedButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialOutlinedButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialOutlinedButton clone() => MaterialOutlinedButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialOutlinedButton copyWith(void Function(MaterialOutlinedButton) updates) => super.copyWith((message) => updates(message as MaterialOutlinedButton)) as MaterialOutlinedButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialOutlinedButton create() => MaterialOutlinedButton._();
  MaterialOutlinedButton createEmptyInstance() => create();
  static $pb.PbList<MaterialOutlinedButton> createRepeated() => $pb.PbList<MaterialOutlinedButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialOutlinedButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialOutlinedButton>(create);
  static MaterialOutlinedButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(12)
  set child(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(12)
  void clearChild() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/outlined_button.dart
class MaterialOutlinedButtonNamedIcon extends $pb.GeneratedMessage {
  factory MaterialOutlinedButtonNamedIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? icon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialOutlinedButtonNamedIcon._() : super();
  factory MaterialOutlinedButtonNamedIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialOutlinedButtonNamedIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialOutlinedButtonNamedIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(11, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialOutlinedButtonNamedIcon clone() => MaterialOutlinedButtonNamedIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialOutlinedButtonNamedIcon copyWith(void Function(MaterialOutlinedButtonNamedIcon) updates) => super.copyWith((message) => updates(message as MaterialOutlinedButtonNamedIcon)) as MaterialOutlinedButtonNamedIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialOutlinedButtonNamedIcon create() => MaterialOutlinedButtonNamedIcon._();
  MaterialOutlinedButtonNamedIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialOutlinedButtonNamedIcon> createRepeated() => $pb.PbList<MaterialOutlinedButtonNamedIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialOutlinedButtonNamedIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialOutlinedButtonNamedIcon>(create);
  static MaterialOutlinedButtonNamedIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(7)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(7)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(7)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(7)
  void clearAutofocus() => clearField(7);

  @$pb.TagNumber(10)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(10)
  set icon(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(10)
  void clearIcon() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(11)
  WidgetExpression get label => $_getN(3);
  @$pb.TagNumber(11)
  set label(WidgetExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(11)
  void clearLabel() => clearField(11);
  @$pb.TagNumber(11)
  WidgetExpression ensureLabel() => $_ensure(3);
}

/// package:flutter/src/material/popup_menu.dart
class MaterialCheckedPopupMenuItem extends $pb.GeneratedMessage {
  factory MaterialCheckedPopupMenuItem({
    $1.FlutterKeyExpression? key,
    $core.bool? checked,
    $core.bool? enabled,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (checked != null) {
      $result.checked = checked;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialCheckedPopupMenuItem._() : super();
  factory MaterialCheckedPopupMenuItem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCheckedPopupMenuItem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCheckedPopupMenuItem', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'checked')
    ..aOB(5, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(7, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCheckedPopupMenuItem clone() => MaterialCheckedPopupMenuItem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCheckedPopupMenuItem copyWith(void Function(MaterialCheckedPopupMenuItem) updates) => super.copyWith((message) => updates(message as MaterialCheckedPopupMenuItem)) as MaterialCheckedPopupMenuItem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCheckedPopupMenuItem create() => MaterialCheckedPopupMenuItem._();
  MaterialCheckedPopupMenuItem createEmptyInstance() => create();
  static $pb.PbList<MaterialCheckedPopupMenuItem> createRepeated() => $pb.PbList<MaterialCheckedPopupMenuItem>();
  @$core.pragma('dart2js:noInline')
  static MaterialCheckedPopupMenuItem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCheckedPopupMenuItem>(create);
  static MaterialCheckedPopupMenuItem? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get checked => $_getBF(1);
  @$pb.TagNumber(4)
  set checked($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasChecked() => $_has(1);
  @$pb.TagNumber(4)
  void clearChecked() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get enabled => $_getBF(2);
  @$pb.TagNumber(5)
  set enabled($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnabled() => $_has(2);
  @$pb.TagNumber(5)
  void clearEnabled() => clearField(5);

  @$pb.TagNumber(7)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(7)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(7)
  void clearHeight() => clearField(7);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/material/popup_menu.dart
class MaterialPopupMenuDivider extends $pb.GeneratedMessage {
  factory MaterialPopupMenuDivider({
    $1.FlutterKeyExpression? key,
    $core.double? height,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (height != null) {
      $result.height = height;
    }
    return $result;
  }
  MaterialPopupMenuDivider._() : super();
  factory MaterialPopupMenuDivider.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialPopupMenuDivider.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialPopupMenuDivider', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialPopupMenuDivider clone() => MaterialPopupMenuDivider()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialPopupMenuDivider copyWith(void Function(MaterialPopupMenuDivider) updates) => super.copyWith((message) => updates(message as MaterialPopupMenuDivider)) as MaterialPopupMenuDivider;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialPopupMenuDivider create() => MaterialPopupMenuDivider._();
  MaterialPopupMenuDivider createEmptyInstance() => create();
  static $pb.PbList<MaterialPopupMenuDivider> createRepeated() => $pb.PbList<MaterialPopupMenuDivider>();
  @$core.pragma('dart2js:noInline')
  static MaterialPopupMenuDivider getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialPopupMenuDivider>(create);
  static MaterialPopupMenuDivider? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get height => $_getN(1);
  @$pb.TagNumber(3)
  set height($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasHeight() => $_has(1);
  @$pb.TagNumber(3)
  void clearHeight() => clearField(3);
}

/// package:flutter/src/material/popup_menu.dart
class MaterialPopupMenuItem extends $pb.GeneratedMessage {
  factory MaterialPopupMenuItem({
    $1.FlutterKeyExpression? key,
    $core.bool? enabled,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialPopupMenuItem._() : super();
  factory MaterialPopupMenuItem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialPopupMenuItem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialPopupMenuItem', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(6, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(11, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialPopupMenuItem clone() => MaterialPopupMenuItem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialPopupMenuItem copyWith(void Function(MaterialPopupMenuItem) updates) => super.copyWith((message) => updates(message as MaterialPopupMenuItem)) as MaterialPopupMenuItem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialPopupMenuItem create() => MaterialPopupMenuItem._();
  MaterialPopupMenuItem createEmptyInstance() => create();
  static $pb.PbList<MaterialPopupMenuItem> createRepeated() => $pb.PbList<MaterialPopupMenuItem>();
  @$core.pragma('dart2js:noInline')
  static MaterialPopupMenuItem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialPopupMenuItem>(create);
  static MaterialPopupMenuItem? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.bool get enabled => $_getBF(1);
  @$pb.TagNumber(5)
  set enabled($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnabled() => $_has(1);
  @$pb.TagNumber(5)
  void clearEnabled() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get height => $_getN(2);
  @$pb.TagNumber(6)
  set height($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasHeight() => $_has(2);
  @$pb.TagNumber(6)
  void clearHeight() => clearField(6);

  @$pb.TagNumber(11)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(11)
  set child(WidgetExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(11)
  void clearChild() => clearField(11);
  @$pb.TagNumber(11)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/material/progress_indicator.dart
class MaterialCircularProgressIndicator extends $pb.GeneratedMessage {
  factory MaterialCircularProgressIndicator({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? color,
    $core.double? strokeWidth,
    $core.double? strokeAlign,
    $core.String? semanticsLabel,
    $core.String? semanticsValue,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (color != null) {
      $result.color = color;
    }
    if (strokeWidth != null) {
      $result.strokeWidth = strokeWidth;
    }
    if (strokeAlign != null) {
      $result.strokeAlign = strokeAlign;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (semanticsValue != null) {
      $result.semanticsValue = semanticsValue;
    }
    return $result;
  }
  MaterialCircularProgressIndicator._() : super();
  factory MaterialCircularProgressIndicator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCircularProgressIndicator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCircularProgressIndicator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'strokeWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'strokeAlign', $pb.PbFieldType.OD)
    ..aOS(9, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOS(10, _omitFieldNames ? '' : 'semanticsValue')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCircularProgressIndicator clone() => MaterialCircularProgressIndicator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCircularProgressIndicator copyWith(void Function(MaterialCircularProgressIndicator) updates) => super.copyWith((message) => updates(message as MaterialCircularProgressIndicator)) as MaterialCircularProgressIndicator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCircularProgressIndicator create() => MaterialCircularProgressIndicator._();
  MaterialCircularProgressIndicator createEmptyInstance() => create();
  static $pb.PbList<MaterialCircularProgressIndicator> createRepeated() => $pb.PbList<MaterialCircularProgressIndicator>();
  @$core.pragma('dart2js:noInline')
  static MaterialCircularProgressIndicator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCircularProgressIndicator>(create);
  static MaterialCircularProgressIndicator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $core.double get strokeWidth => $_getN(4);
  @$pb.TagNumber(7)
  set strokeWidth($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasStrokeWidth() => $_has(4);
  @$pb.TagNumber(7)
  void clearStrokeWidth() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get strokeAlign => $_getN(5);
  @$pb.TagNumber(8)
  set strokeAlign($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasStrokeAlign() => $_has(5);
  @$pb.TagNumber(8)
  void clearStrokeAlign() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get semanticsLabel => $_getSZ(6);
  @$pb.TagNumber(9)
  set semanticsLabel($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasSemanticsLabel() => $_has(6);
  @$pb.TagNumber(9)
  void clearSemanticsLabel() => clearField(9);

  @$pb.TagNumber(10)
  $core.String get semanticsValue => $_getSZ(7);
  @$pb.TagNumber(10)
  set semanticsValue($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasSemanticsValue() => $_has(7);
  @$pb.TagNumber(10)
  void clearSemanticsValue() => clearField(10);
}

/// package:flutter/src/material/progress_indicator.dart
class MaterialCircularProgressIndicatorNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialCircularProgressIndicatorNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $1.DartColorExpression? backgroundColor,
    $core.double? strokeWidth,
    $core.String? semanticsLabel,
    $core.String? semanticsValue,
    $core.double? strokeAlign,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (strokeWidth != null) {
      $result.strokeWidth = strokeWidth;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (semanticsValue != null) {
      $result.semanticsValue = semanticsValue;
    }
    if (strokeAlign != null) {
      $result.strokeAlign = strokeAlign;
    }
    return $result;
  }
  MaterialCircularProgressIndicatorNamedAdaptive._() : super();
  factory MaterialCircularProgressIndicatorNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialCircularProgressIndicatorNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialCircularProgressIndicatorNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'strokeWidth', $pb.PbFieldType.OD)
    ..aOS(7, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOS(8, _omitFieldNames ? '' : 'semanticsValue')
    ..a<$core.double>(10, _omitFieldNames ? '' : 'strokeAlign', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialCircularProgressIndicatorNamedAdaptive clone() => MaterialCircularProgressIndicatorNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialCircularProgressIndicatorNamedAdaptive copyWith(void Function(MaterialCircularProgressIndicatorNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialCircularProgressIndicatorNamedAdaptive)) as MaterialCircularProgressIndicatorNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialCircularProgressIndicatorNamedAdaptive create() => MaterialCircularProgressIndicatorNamedAdaptive._();
  MaterialCircularProgressIndicatorNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialCircularProgressIndicatorNamedAdaptive> createRepeated() => $pb.PbList<MaterialCircularProgressIndicatorNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialCircularProgressIndicatorNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialCircularProgressIndicatorNamedAdaptive>(create);
  static MaterialCircularProgressIndicatorNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $core.double get strokeWidth => $_getN(3);
  @$pb.TagNumber(6)
  set strokeWidth($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasStrokeWidth() => $_has(3);
  @$pb.TagNumber(6)
  void clearStrokeWidth() => clearField(6);

  @$pb.TagNumber(7)
  $core.String get semanticsLabel => $_getSZ(4);
  @$pb.TagNumber(7)
  set semanticsLabel($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasSemanticsLabel() => $_has(4);
  @$pb.TagNumber(7)
  void clearSemanticsLabel() => clearField(7);

  @$pb.TagNumber(8)
  $core.String get semanticsValue => $_getSZ(5);
  @$pb.TagNumber(8)
  set semanticsValue($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasSemanticsValue() => $_has(5);
  @$pb.TagNumber(8)
  void clearSemanticsValue() => clearField(8);

  @$pb.TagNumber(10)
  $core.double get strokeAlign => $_getN(6);
  @$pb.TagNumber(10)
  set strokeAlign($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(10)
  $core.bool hasStrokeAlign() => $_has(6);
  @$pb.TagNumber(10)
  void clearStrokeAlign() => clearField(10);
}

/// package:flutter/src/material/progress_indicator.dart
class MaterialLinearProgressIndicator extends $pb.GeneratedMessage {
  factory MaterialLinearProgressIndicator({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? color,
    $core.double? minHeight,
    $core.String? semanticsLabel,
    $core.String? semanticsValue,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (color != null) {
      $result.color = color;
    }
    if (minHeight != null) {
      $result.minHeight = minHeight;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (semanticsValue != null) {
      $result.semanticsValue = semanticsValue;
    }
    return $result;
  }
  MaterialLinearProgressIndicator._() : super();
  factory MaterialLinearProgressIndicator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialLinearProgressIndicator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialLinearProgressIndicator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'minHeight', $pb.PbFieldType.OD)
    ..aOS(8, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOS(9, _omitFieldNames ? '' : 'semanticsValue')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialLinearProgressIndicator clone() => MaterialLinearProgressIndicator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialLinearProgressIndicator copyWith(void Function(MaterialLinearProgressIndicator) updates) => super.copyWith((message) => updates(message as MaterialLinearProgressIndicator)) as MaterialLinearProgressIndicator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialLinearProgressIndicator create() => MaterialLinearProgressIndicator._();
  MaterialLinearProgressIndicator createEmptyInstance() => create();
  static $pb.PbList<MaterialLinearProgressIndicator> createRepeated() => $pb.PbList<MaterialLinearProgressIndicator>();
  @$core.pragma('dart2js:noInline')
  static MaterialLinearProgressIndicator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialLinearProgressIndicator>(create);
  static MaterialLinearProgressIndicator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $core.double get minHeight => $_getN(4);
  @$pb.TagNumber(7)
  set minHeight($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasMinHeight() => $_has(4);
  @$pb.TagNumber(7)
  void clearMinHeight() => clearField(7);

  @$pb.TagNumber(8)
  $core.String get semanticsLabel => $_getSZ(5);
  @$pb.TagNumber(8)
  set semanticsLabel($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasSemanticsLabel() => $_has(5);
  @$pb.TagNumber(8)
  void clearSemanticsLabel() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get semanticsValue => $_getSZ(6);
  @$pb.TagNumber(9)
  set semanticsValue($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasSemanticsValue() => $_has(6);
  @$pb.TagNumber(9)
  void clearSemanticsValue() => clearField(9);
}

/// package:flutter/src/material/progress_indicator.dart
class MaterialRefreshProgressIndicator extends $pb.GeneratedMessage {
  factory MaterialRefreshProgressIndicator({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? color,
    $core.double? strokeWidth,
    $core.double? strokeAlign,
    $core.String? semanticsLabel,
    $core.String? semanticsValue,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (color != null) {
      $result.color = color;
    }
    if (strokeWidth != null) {
      $result.strokeWidth = strokeWidth;
    }
    if (strokeAlign != null) {
      $result.strokeAlign = strokeAlign;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (semanticsValue != null) {
      $result.semanticsValue = semanticsValue;
    }
    return $result;
  }
  MaterialRefreshProgressIndicator._() : super();
  factory MaterialRefreshProgressIndicator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialRefreshProgressIndicator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialRefreshProgressIndicator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'strokeWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'strokeAlign', $pb.PbFieldType.OD)
    ..aOS(9, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOS(10, _omitFieldNames ? '' : 'semanticsValue')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialRefreshProgressIndicator clone() => MaterialRefreshProgressIndicator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialRefreshProgressIndicator copyWith(void Function(MaterialRefreshProgressIndicator) updates) => super.copyWith((message) => updates(message as MaterialRefreshProgressIndicator)) as MaterialRefreshProgressIndicator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialRefreshProgressIndicator create() => MaterialRefreshProgressIndicator._();
  MaterialRefreshProgressIndicator createEmptyInstance() => create();
  static $pb.PbList<MaterialRefreshProgressIndicator> createRepeated() => $pb.PbList<MaterialRefreshProgressIndicator>();
  @$core.pragma('dart2js:noInline')
  static MaterialRefreshProgressIndicator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialRefreshProgressIndicator>(create);
  static MaterialRefreshProgressIndicator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $core.double get strokeWidth => $_getN(4);
  @$pb.TagNumber(7)
  set strokeWidth($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasStrokeWidth() => $_has(4);
  @$pb.TagNumber(7)
  void clearStrokeWidth() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get strokeAlign => $_getN(5);
  @$pb.TagNumber(8)
  set strokeAlign($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasStrokeAlign() => $_has(5);
  @$pb.TagNumber(8)
  void clearStrokeAlign() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get semanticsLabel => $_getSZ(6);
  @$pb.TagNumber(9)
  set semanticsLabel($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(9)
  $core.bool hasSemanticsLabel() => $_has(6);
  @$pb.TagNumber(9)
  void clearSemanticsLabel() => clearField(9);

  @$pb.TagNumber(10)
  $core.String get semanticsValue => $_getSZ(7);
  @$pb.TagNumber(10)
  set semanticsValue($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(10)
  $core.bool hasSemanticsValue() => $_has(7);
  @$pb.TagNumber(10)
  void clearSemanticsValue() => clearField(10);
}

/// package:flutter/src/material/scaffold.dart
class MaterialScaffold extends $pb.GeneratedMessage {
  factory MaterialScaffold({
    $1.FlutterKeyExpression? key,
    WidgetExpression? body,
    WidgetExpression? floatingActionButton,
    $core.Iterable<WidgetExpression>? persistentFooterButtons,
    WidgetExpression? drawer,
    WidgetExpression? endDrawer,
    WidgetExpression? bottomNavigationBar,
    WidgetExpression? bottomSheet,
    $1.DartColorExpression? backgroundColor,
    $core.bool? resizeToAvoidBottomInset,
    $core.bool? primary,
    $core.bool? extendBody,
    $core.bool? extendBodyBehindAppBar,
    $1.DartColorExpression? drawerScrimColor,
    $core.double? drawerEdgeDragWidth,
    $core.bool? drawerEnableOpenDragGesture,
    $core.bool? endDrawerEnableOpenDragGesture,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (body != null) {
      $result.body = body;
    }
    if (floatingActionButton != null) {
      $result.floatingActionButton = floatingActionButton;
    }
    if (persistentFooterButtons != null) {
      $result.persistentFooterButtons.addAll(persistentFooterButtons);
    }
    if (drawer != null) {
      $result.drawer = drawer;
    }
    if (endDrawer != null) {
      $result.endDrawer = endDrawer;
    }
    if (bottomNavigationBar != null) {
      $result.bottomNavigationBar = bottomNavigationBar;
    }
    if (bottomSheet != null) {
      $result.bottomSheet = bottomSheet;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (resizeToAvoidBottomInset != null) {
      $result.resizeToAvoidBottomInset = resizeToAvoidBottomInset;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (extendBody != null) {
      $result.extendBody = extendBody;
    }
    if (extendBodyBehindAppBar != null) {
      $result.extendBodyBehindAppBar = extendBodyBehindAppBar;
    }
    if (drawerScrimColor != null) {
      $result.drawerScrimColor = drawerScrimColor;
    }
    if (drawerEdgeDragWidth != null) {
      $result.drawerEdgeDragWidth = drawerEdgeDragWidth;
    }
    if (drawerEnableOpenDragGesture != null) {
      $result.drawerEnableOpenDragGesture = drawerEnableOpenDragGesture;
    }
    if (endDrawerEnableOpenDragGesture != null) {
      $result.endDrawerEnableOpenDragGesture = endDrawerEnableOpenDragGesture;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  MaterialScaffold._() : super();
  factory MaterialScaffold.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialScaffold.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialScaffold', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'body', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'floatingActionButton', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(8, _omitFieldNames ? '' : 'persistentFooterButtons', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'drawer', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'endDrawer', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'bottomNavigationBar', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(15, _omitFieldNames ? '' : 'bottomSheet', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'resizeToAvoidBottomInset')
    ..aOB(18, _omitFieldNames ? '' : 'primary')
    ..aOB(20, _omitFieldNames ? '' : 'extendBody')
    ..aOB(21, _omitFieldNames ? '' : 'extendBodyBehindAppBar')
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'drawerScrimColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'drawerEdgeDragWidth', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'drawerEnableOpenDragGesture')
    ..aOB(25, _omitFieldNames ? '' : 'endDrawerEnableOpenDragGesture')
    ..aOS(26, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialScaffold clone() => MaterialScaffold()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialScaffold copyWith(void Function(MaterialScaffold) updates) => super.copyWith((message) => updates(message as MaterialScaffold)) as MaterialScaffold;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialScaffold create() => MaterialScaffold._();
  MaterialScaffold createEmptyInstance() => create();
  static $pb.PbList<MaterialScaffold> createRepeated() => $pb.PbList<MaterialScaffold>();
  @$core.pragma('dart2js:noInline')
  static MaterialScaffold getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialScaffold>(create);
  static MaterialScaffold? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get body => $_getN(1);
  @$pb.TagNumber(4)
  set body(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBody() => $_has(1);
  @$pb.TagNumber(4)
  void clearBody() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureBody() => $_ensure(1);

  @$pb.TagNumber(5)
  WidgetExpression get floatingActionButton => $_getN(2);
  @$pb.TagNumber(5)
  set floatingActionButton(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasFloatingActionButton() => $_has(2);
  @$pb.TagNumber(5)
  void clearFloatingActionButton() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureFloatingActionButton() => $_ensure(2);

  @$pb.TagNumber(8)
  $core.List<WidgetExpression> get persistentFooterButtons => $_getList(3);

  @$pb.TagNumber(10)
  WidgetExpression get drawer => $_getN(4);
  @$pb.TagNumber(10)
  set drawer(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasDrawer() => $_has(4);
  @$pb.TagNumber(10)
  void clearDrawer() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureDrawer() => $_ensure(4);

  @$pb.TagNumber(12)
  WidgetExpression get endDrawer => $_getN(5);
  @$pb.TagNumber(12)
  set endDrawer(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasEndDrawer() => $_has(5);
  @$pb.TagNumber(12)
  void clearEndDrawer() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureEndDrawer() => $_ensure(5);

  @$pb.TagNumber(14)
  WidgetExpression get bottomNavigationBar => $_getN(6);
  @$pb.TagNumber(14)
  set bottomNavigationBar(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasBottomNavigationBar() => $_has(6);
  @$pb.TagNumber(14)
  void clearBottomNavigationBar() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureBottomNavigationBar() => $_ensure(6);

  @$pb.TagNumber(15)
  WidgetExpression get bottomSheet => $_getN(7);
  @$pb.TagNumber(15)
  set bottomSheet(WidgetExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasBottomSheet() => $_has(7);
  @$pb.TagNumber(15)
  void clearBottomSheet() => clearField(15);
  @$pb.TagNumber(15)
  WidgetExpression ensureBottomSheet() => $_ensure(7);

  @$pb.TagNumber(16)
  $1.DartColorExpression get backgroundColor => $_getN(8);
  @$pb.TagNumber(16)
  set backgroundColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasBackgroundColor() => $_has(8);
  @$pb.TagNumber(16)
  void clearBackgroundColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(8);

  @$pb.TagNumber(17)
  $core.bool get resizeToAvoidBottomInset => $_getBF(9);
  @$pb.TagNumber(17)
  set resizeToAvoidBottomInset($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasResizeToAvoidBottomInset() => $_has(9);
  @$pb.TagNumber(17)
  void clearResizeToAvoidBottomInset() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get primary => $_getBF(10);
  @$pb.TagNumber(18)
  set primary($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(18)
  $core.bool hasPrimary() => $_has(10);
  @$pb.TagNumber(18)
  void clearPrimary() => clearField(18);

  @$pb.TagNumber(20)
  $core.bool get extendBody => $_getBF(11);
  @$pb.TagNumber(20)
  set extendBody($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(20)
  $core.bool hasExtendBody() => $_has(11);
  @$pb.TagNumber(20)
  void clearExtendBody() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get extendBodyBehindAppBar => $_getBF(12);
  @$pb.TagNumber(21)
  set extendBodyBehindAppBar($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(21)
  $core.bool hasExtendBodyBehindAppBar() => $_has(12);
  @$pb.TagNumber(21)
  void clearExtendBodyBehindAppBar() => clearField(21);

  @$pb.TagNumber(22)
  $1.DartColorExpression get drawerScrimColor => $_getN(13);
  @$pb.TagNumber(22)
  set drawerScrimColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasDrawerScrimColor() => $_has(13);
  @$pb.TagNumber(22)
  void clearDrawerScrimColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureDrawerScrimColor() => $_ensure(13);

  @$pb.TagNumber(23)
  $core.double get drawerEdgeDragWidth => $_getN(14);
  @$pb.TagNumber(23)
  set drawerEdgeDragWidth($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(23)
  $core.bool hasDrawerEdgeDragWidth() => $_has(14);
  @$pb.TagNumber(23)
  void clearDrawerEdgeDragWidth() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get drawerEnableOpenDragGesture => $_getBF(15);
  @$pb.TagNumber(24)
  set drawerEnableOpenDragGesture($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(24)
  $core.bool hasDrawerEnableOpenDragGesture() => $_has(15);
  @$pb.TagNumber(24)
  void clearDrawerEnableOpenDragGesture() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get endDrawerEnableOpenDragGesture => $_getBF(16);
  @$pb.TagNumber(25)
  set endDrawerEnableOpenDragGesture($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(25)
  $core.bool hasEndDrawerEnableOpenDragGesture() => $_has(16);
  @$pb.TagNumber(25)
  void clearEndDrawerEnableOpenDragGesture() => clearField(25);

  @$pb.TagNumber(26)
  $core.String get restorationId => $_getSZ(17);
  @$pb.TagNumber(26)
  set restorationId($core.String v) { $_setString(17, v); }
  @$pb.TagNumber(26)
  $core.bool hasRestorationId() => $_has(17);
  @$pb.TagNumber(26)
  void clearRestorationId() => clearField(26);
}

/// package:flutter/src/material/scaffold.dart
class MaterialScaffoldMessenger extends $pb.GeneratedMessage {
  factory MaterialScaffoldMessenger({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialScaffoldMessenger._() : super();
  factory MaterialScaffoldMessenger.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialScaffoldMessenger.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialScaffoldMessenger', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialScaffoldMessenger clone() => MaterialScaffoldMessenger()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialScaffoldMessenger copyWith(void Function(MaterialScaffoldMessenger) updates) => super.copyWith((message) => updates(message as MaterialScaffoldMessenger)) as MaterialScaffoldMessenger;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialScaffoldMessenger create() => MaterialScaffoldMessenger._();
  MaterialScaffoldMessenger createEmptyInstance() => create();
  static $pb.PbList<MaterialScaffoldMessenger> createRepeated() => $pb.PbList<MaterialScaffoldMessenger>();
  @$core.pragma('dart2js:noInline')
  static MaterialScaffoldMessenger getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialScaffoldMessenger>(create);
  static MaterialScaffoldMessenger? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/scrollbar.dart
class MaterialScrollbar extends $pb.GeneratedMessage {
  factory MaterialScrollbar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? thumbVisibility,
    $core.bool? trackVisibility,
    $core.double? thickness,
    $core.bool? interactive,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (thumbVisibility != null) {
      $result.thumbVisibility = thumbVisibility;
    }
    if (trackVisibility != null) {
      $result.trackVisibility = trackVisibility;
    }
    if (thickness != null) {
      $result.thickness = thickness;
    }
    if (interactive != null) {
      $result.interactive = interactive;
    }
    return $result;
  }
  MaterialScrollbar._() : super();
  factory MaterialScrollbar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialScrollbar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialScrollbar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'thumbVisibility')
    ..aOB(6, _omitFieldNames ? '' : 'trackVisibility')
    ..a<$core.double>(7, _omitFieldNames ? '' : 'thickness', $pb.PbFieldType.OD)
    ..aOB(10, _omitFieldNames ? '' : 'interactive')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialScrollbar clone() => MaterialScrollbar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialScrollbar copyWith(void Function(MaterialScrollbar) updates) => super.copyWith((message) => updates(message as MaterialScrollbar)) as MaterialScrollbar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialScrollbar create() => MaterialScrollbar._();
  MaterialScrollbar createEmptyInstance() => create();
  static $pb.PbList<MaterialScrollbar> createRepeated() => $pb.PbList<MaterialScrollbar>();
  @$core.pragma('dart2js:noInline')
  static MaterialScrollbar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialScrollbar>(create);
  static MaterialScrollbar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.bool get thumbVisibility => $_getBF(2);
  @$pb.TagNumber(5)
  set thumbVisibility($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasThumbVisibility() => $_has(2);
  @$pb.TagNumber(5)
  void clearThumbVisibility() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get trackVisibility => $_getBF(3);
  @$pb.TagNumber(6)
  set trackVisibility($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasTrackVisibility() => $_has(3);
  @$pb.TagNumber(6)
  void clearTrackVisibility() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get thickness => $_getN(4);
  @$pb.TagNumber(7)
  set thickness($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasThickness() => $_has(4);
  @$pb.TagNumber(7)
  void clearThickness() => clearField(7);

  @$pb.TagNumber(10)
  $core.bool get interactive => $_getBF(5);
  @$pb.TagNumber(10)
  set interactive($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasInteractive() => $_has(5);
  @$pb.TagNumber(10)
  void clearInteractive() => clearField(10);
}

/// package:flutter/src/material/search_anchor.dart
class MaterialSearchBar extends $pb.GeneratedMessage {
  factory MaterialSearchBar({
    $1.FlutterKeyExpression? key,
    $core.String? hintText,
    WidgetExpression? leading,
    $core.Iterable<WidgetExpression>? trailing,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (hintText != null) {
      $result.hintText = hintText;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (trailing != null) {
      $result.trailing.addAll(trailing);
    }
    return $result;
  }
  MaterialSearchBar._() : super();
  factory MaterialSearchBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSearchBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSearchBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(5, _omitFieldNames ? '' : 'hintText')
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'trailing', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSearchBar clone() => MaterialSearchBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSearchBar copyWith(void Function(MaterialSearchBar) updates) => super.copyWith((message) => updates(message as MaterialSearchBar)) as MaterialSearchBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSearchBar create() => MaterialSearchBar._();
  MaterialSearchBar createEmptyInstance() => create();
  static $pb.PbList<MaterialSearchBar> createRepeated() => $pb.PbList<MaterialSearchBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialSearchBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSearchBar>(create);
  static MaterialSearchBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.String get hintText => $_getSZ(1);
  @$pb.TagNumber(5)
  set hintText($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasHintText() => $_has(1);
  @$pb.TagNumber(5)
  void clearHintText() => clearField(5);

  @$pb.TagNumber(6)
  WidgetExpression get leading => $_getN(2);
  @$pb.TagNumber(6)
  set leading(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasLeading() => $_has(2);
  @$pb.TagNumber(6)
  void clearLeading() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureLeading() => $_ensure(2);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get trailing => $_getList(3);
}

/// package:flutter/src/material/selectable_text.dart
class MaterialSelectableText extends $pb.GeneratedMessage {
  factory MaterialSelectableText({
    $core.String? data,
    $1.FlutterKeyExpression? key,
    $core.double? textScaleFactor,
    $core.bool? showCursor,
    $core.bool? autofocus,
    $core.int? minLines,
    $core.int? maxLines,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.String? semanticsLabel,
  }) {
    final $result = create();
    if (data != null) {
      $result.data = data;
    }
    if (key != null) {
      $result.key = key;
    }
    if (textScaleFactor != null) {
      $result.textScaleFactor = textScaleFactor;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    return $result;
  }
  MaterialSelectableText._() : super();
  factory MaterialSelectableText.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSelectableText.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSelectableText', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'data')
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'textScaleFactor', $pb.PbFieldType.OD)
    ..aOB(10, _omitFieldNames ? '' : 'showCursor')
    ..aOB(11, _omitFieldNames ? '' : 'autofocus')
    ..a<$core.int>(12, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..a<$core.int>(13, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(15, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(21, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..aOS(25, _omitFieldNames ? '' : 'semanticsLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSelectableText clone() => MaterialSelectableText()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSelectableText copyWith(void Function(MaterialSelectableText) updates) => super.copyWith((message) => updates(message as MaterialSelectableText)) as MaterialSelectableText;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSelectableText create() => MaterialSelectableText._();
  MaterialSelectableText createEmptyInstance() => create();
  static $pb.PbList<MaterialSelectableText> createRepeated() => $pb.PbList<MaterialSelectableText>();
  @$core.pragma('dart2js:noInline')
  static MaterialSelectableText getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSelectableText>(create);
  static MaterialSelectableText? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get data => $_getSZ(0);
  @$pb.TagNumber(2)
  set data($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasData() => $_has(0);
  @$pb.TagNumber(2)
  void clearData() => clearField(2);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);

  @$pb.TagNumber(9)
  $core.double get textScaleFactor => $_getN(2);
  @$pb.TagNumber(9)
  set textScaleFactor($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(9)
  $core.bool hasTextScaleFactor() => $_has(2);
  @$pb.TagNumber(9)
  void clearTextScaleFactor() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get showCursor => $_getBF(3);
  @$pb.TagNumber(10)
  set showCursor($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(10)
  $core.bool hasShowCursor() => $_has(3);
  @$pb.TagNumber(10)
  void clearShowCursor() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get autofocus => $_getBF(4);
  @$pb.TagNumber(11)
  set autofocus($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(11)
  $core.bool hasAutofocus() => $_has(4);
  @$pb.TagNumber(11)
  void clearAutofocus() => clearField(11);

  @$pb.TagNumber(12)
  $core.int get minLines => $_getIZ(5);
  @$pb.TagNumber(12)
  set minLines($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(12)
  $core.bool hasMinLines() => $_has(5);
  @$pb.TagNumber(12)
  void clearMinLines() => clearField(12);

  @$pb.TagNumber(13)
  $core.int get maxLines => $_getIZ(6);
  @$pb.TagNumber(13)
  set maxLines($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(13)
  $core.bool hasMaxLines() => $_has(6);
  @$pb.TagNumber(13)
  void clearMaxLines() => clearField(13);

  @$pb.TagNumber(14)
  $core.double get cursorWidth => $_getN(7);
  @$pb.TagNumber(14)
  set cursorWidth($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(14)
  $core.bool hasCursorWidth() => $_has(7);
  @$pb.TagNumber(14)
  void clearCursorWidth() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get cursorHeight => $_getN(8);
  @$pb.TagNumber(15)
  set cursorHeight($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(15)
  $core.bool hasCursorHeight() => $_has(8);
  @$pb.TagNumber(15)
  void clearCursorHeight() => clearField(15);

  @$pb.TagNumber(17)
  $1.DartColorExpression get cursorColor => $_getN(9);
  @$pb.TagNumber(17)
  set cursorColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasCursorColor() => $_has(9);
  @$pb.TagNumber(17)
  void clearCursorColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureCursorColor() => $_ensure(9);

  @$pb.TagNumber(21)
  $core.bool get enableInteractiveSelection => $_getBF(10);
  @$pb.TagNumber(21)
  set enableInteractiveSelection($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(21)
  $core.bool hasEnableInteractiveSelection() => $_has(10);
  @$pb.TagNumber(21)
  void clearEnableInteractiveSelection() => clearField(21);

  @$pb.TagNumber(25)
  $core.String get semanticsLabel => $_getSZ(11);
  @$pb.TagNumber(25)
  set semanticsLabel($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(25)
  $core.bool hasSemanticsLabel() => $_has(11);
  @$pb.TagNumber(25)
  void clearSemanticsLabel() => clearField(25);
}

/// package:flutter/src/material/selection_area.dart
class MaterialSelectionArea extends $pb.GeneratedMessage {
  factory MaterialSelectionArea({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialSelectionArea._() : super();
  factory MaterialSelectionArea.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSelectionArea.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSelectionArea', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSelectionArea clone() => MaterialSelectionArea()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSelectionArea copyWith(void Function(MaterialSelectionArea) updates) => super.copyWith((message) => updates(message as MaterialSelectionArea)) as MaterialSelectionArea;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSelectionArea create() => MaterialSelectionArea._();
  MaterialSelectionArea createEmptyInstance() => create();
  static $pb.PbList<MaterialSelectionArea> createRepeated() => $pb.PbList<MaterialSelectionArea>();
  @$core.pragma('dart2js:noInline')
  static MaterialSelectionArea getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSelectionArea>(create);
  static MaterialSelectionArea? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/material/slider.dart
class MaterialSlider extends $pb.GeneratedMessage {
  factory MaterialSlider({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $core.double? secondaryTrackValue,
    $core.double? min,
    $core.double? max,
    $core.int? divisions,
    $core.String? label,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? inactiveColor,
    $1.DartColorExpression? secondaryActiveColor,
    $1.DartColorExpression? thumbColor,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (secondaryTrackValue != null) {
      $result.secondaryTrackValue = secondaryTrackValue;
    }
    if (min != null) {
      $result.min = min;
    }
    if (max != null) {
      $result.max = max;
    }
    if (divisions != null) {
      $result.divisions = divisions;
    }
    if (label != null) {
      $result.label = label;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (inactiveColor != null) {
      $result.inactiveColor = inactiveColor;
    }
    if (secondaryActiveColor != null) {
      $result.secondaryActiveColor = secondaryActiveColor;
    }
    if (thumbColor != null) {
      $result.thumbColor = thumbColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  MaterialSlider._() : super();
  factory MaterialSlider.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSlider.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSlider', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'secondaryTrackValue', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'min', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'max', $pb.PbFieldType.OD)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'divisions', $pb.PbFieldType.O3)
    ..aOS(11, _omitFieldNames ? '' : 'label')
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'inactiveColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'secondaryActiveColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'thumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(20, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSlider clone() => MaterialSlider()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSlider copyWith(void Function(MaterialSlider) updates) => super.copyWith((message) => updates(message as MaterialSlider)) as MaterialSlider;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSlider create() => MaterialSlider._();
  MaterialSlider createEmptyInstance() => create();
  static $pb.PbList<MaterialSlider> createRepeated() => $pb.PbList<MaterialSlider>();
  @$core.pragma('dart2js:noInline')
  static MaterialSlider getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSlider>(create);
  static MaterialSlider? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get secondaryTrackValue => $_getN(2);
  @$pb.TagNumber(4)
  set secondaryTrackValue($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasSecondaryTrackValue() => $_has(2);
  @$pb.TagNumber(4)
  void clearSecondaryTrackValue() => clearField(4);

  @$pb.TagNumber(8)
  $core.double get min => $_getN(3);
  @$pb.TagNumber(8)
  set min($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasMin() => $_has(3);
  @$pb.TagNumber(8)
  void clearMin() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get max => $_getN(4);
  @$pb.TagNumber(9)
  set max($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasMax() => $_has(4);
  @$pb.TagNumber(9)
  void clearMax() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get divisions => $_getIZ(5);
  @$pb.TagNumber(10)
  set divisions($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasDivisions() => $_has(5);
  @$pb.TagNumber(10)
  void clearDivisions() => clearField(10);

  @$pb.TagNumber(11)
  $core.String get label => $_getSZ(6);
  @$pb.TagNumber(11)
  set label($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasLabel() => $_has(6);
  @$pb.TagNumber(11)
  void clearLabel() => clearField(11);

  @$pb.TagNumber(12)
  $1.DartColorExpression get activeColor => $_getN(7);
  @$pb.TagNumber(12)
  set activeColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasActiveColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearActiveColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureActiveColor() => $_ensure(7);

  @$pb.TagNumber(13)
  $1.DartColorExpression get inactiveColor => $_getN(8);
  @$pb.TagNumber(13)
  set inactiveColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasInactiveColor() => $_has(8);
  @$pb.TagNumber(13)
  void clearInactiveColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureInactiveColor() => $_ensure(8);

  @$pb.TagNumber(14)
  $1.DartColorExpression get secondaryActiveColor => $_getN(9);
  @$pb.TagNumber(14)
  set secondaryActiveColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasSecondaryActiveColor() => $_has(9);
  @$pb.TagNumber(14)
  void clearSecondaryActiveColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureSecondaryActiveColor() => $_ensure(9);

  @$pb.TagNumber(15)
  $1.DartColorExpression get thumbColor => $_getN(10);
  @$pb.TagNumber(15)
  set thumbColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasThumbColor() => $_has(10);
  @$pb.TagNumber(15)
  void clearThumbColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureThumbColor() => $_ensure(10);

  @$pb.TagNumber(20)
  $core.bool get autofocus => $_getBF(11);
  @$pb.TagNumber(20)
  set autofocus($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(20)
  $core.bool hasAutofocus() => $_has(11);
  @$pb.TagNumber(20)
  void clearAutofocus() => clearField(20);
}

/// package:flutter/src/material/slider.dart
class MaterialSliderNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialSliderNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.double? value,
    $core.double? secondaryTrackValue,
    $core.double? min,
    $core.double? max,
    $core.int? divisions,
    $core.String? label,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? inactiveColor,
    $1.DartColorExpression? secondaryActiveColor,
    $1.DartColorExpression? thumbColor,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (secondaryTrackValue != null) {
      $result.secondaryTrackValue = secondaryTrackValue;
    }
    if (min != null) {
      $result.min = min;
    }
    if (max != null) {
      $result.max = max;
    }
    if (divisions != null) {
      $result.divisions = divisions;
    }
    if (label != null) {
      $result.label = label;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (inactiveColor != null) {
      $result.inactiveColor = inactiveColor;
    }
    if (secondaryActiveColor != null) {
      $result.secondaryActiveColor = secondaryActiveColor;
    }
    if (thumbColor != null) {
      $result.thumbColor = thumbColor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  MaterialSliderNamedAdaptive._() : super();
  factory MaterialSliderNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSliderNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSliderNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'value', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'secondaryTrackValue', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'min', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'max', $pb.PbFieldType.OD)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'divisions', $pb.PbFieldType.O3)
    ..aOS(11, _omitFieldNames ? '' : 'label')
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'inactiveColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'secondaryActiveColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'thumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(20, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSliderNamedAdaptive clone() => MaterialSliderNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSliderNamedAdaptive copyWith(void Function(MaterialSliderNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialSliderNamedAdaptive)) as MaterialSliderNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSliderNamedAdaptive create() => MaterialSliderNamedAdaptive._();
  MaterialSliderNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialSliderNamedAdaptive> createRepeated() => $pb.PbList<MaterialSliderNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialSliderNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSliderNamedAdaptive>(create);
  static MaterialSliderNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get value => $_getN(1);
  @$pb.TagNumber(3)
  set value($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get secondaryTrackValue => $_getN(2);
  @$pb.TagNumber(4)
  set secondaryTrackValue($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasSecondaryTrackValue() => $_has(2);
  @$pb.TagNumber(4)
  void clearSecondaryTrackValue() => clearField(4);

  @$pb.TagNumber(8)
  $core.double get min => $_getN(3);
  @$pb.TagNumber(8)
  set min($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasMin() => $_has(3);
  @$pb.TagNumber(8)
  void clearMin() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get max => $_getN(4);
  @$pb.TagNumber(9)
  set max($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasMax() => $_has(4);
  @$pb.TagNumber(9)
  void clearMax() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get divisions => $_getIZ(5);
  @$pb.TagNumber(10)
  set divisions($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasDivisions() => $_has(5);
  @$pb.TagNumber(10)
  void clearDivisions() => clearField(10);

  @$pb.TagNumber(11)
  $core.String get label => $_getSZ(6);
  @$pb.TagNumber(11)
  set label($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasLabel() => $_has(6);
  @$pb.TagNumber(11)
  void clearLabel() => clearField(11);

  @$pb.TagNumber(13)
  $1.DartColorExpression get activeColor => $_getN(7);
  @$pb.TagNumber(13)
  set activeColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasActiveColor() => $_has(7);
  @$pb.TagNumber(13)
  void clearActiveColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureActiveColor() => $_ensure(7);

  @$pb.TagNumber(14)
  $1.DartColorExpression get inactiveColor => $_getN(8);
  @$pb.TagNumber(14)
  set inactiveColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasInactiveColor() => $_has(8);
  @$pb.TagNumber(14)
  void clearInactiveColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureInactiveColor() => $_ensure(8);

  @$pb.TagNumber(15)
  $1.DartColorExpression get secondaryActiveColor => $_getN(9);
  @$pb.TagNumber(15)
  set secondaryActiveColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasSecondaryActiveColor() => $_has(9);
  @$pb.TagNumber(15)
  void clearSecondaryActiveColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureSecondaryActiveColor() => $_ensure(9);

  @$pb.TagNumber(16)
  $1.DartColorExpression get thumbColor => $_getN(10);
  @$pb.TagNumber(16)
  set thumbColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasThumbColor() => $_has(10);
  @$pb.TagNumber(16)
  void clearThumbColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureThumbColor() => $_ensure(10);

  @$pb.TagNumber(20)
  $core.bool get autofocus => $_getBF(11);
  @$pb.TagNumber(20)
  set autofocus($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(20)
  $core.bool hasAutofocus() => $_has(11);
  @$pb.TagNumber(20)
  void clearAutofocus() => clearField(20);
}

/// package:flutter/src/material/snack_bar.dart
class MaterialSnackBar extends $pb.GeneratedMessage {
  factory MaterialSnackBar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? content,
    $1.DartColorExpression? backgroundColor,
    $core.double? elevation,
    $core.double? width,
    $core.double? actionOverflowThreshold,
    $core.bool? showCloseIcon,
    $1.DartColorExpression? closeIconColor,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (content != null) {
      $result.content = content;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (width != null) {
      $result.width = width;
    }
    if (actionOverflowThreshold != null) {
      $result.actionOverflowThreshold = actionOverflowThreshold;
    }
    if (showCloseIcon != null) {
      $result.showCloseIcon = showCloseIcon;
    }
    if (closeIconColor != null) {
      $result.closeIconColor = closeIconColor;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  MaterialSnackBar._() : super();
  factory MaterialSnackBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSnackBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSnackBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'content', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'actionOverflowThreshold', $pb.PbFieldType.OD)
    ..aOB(13, _omitFieldNames ? '' : 'showCloseIcon')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'closeIconColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(15, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSnackBar clone() => MaterialSnackBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSnackBar copyWith(void Function(MaterialSnackBar) updates) => super.copyWith((message) => updates(message as MaterialSnackBar)) as MaterialSnackBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSnackBar create() => MaterialSnackBar._();
  MaterialSnackBar createEmptyInstance() => create();
  static $pb.PbList<MaterialSnackBar> createRepeated() => $pb.PbList<MaterialSnackBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialSnackBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSnackBar>(create);
  static MaterialSnackBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get content => $_getN(1);
  @$pb.TagNumber(3)
  set content(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasContent() => $_has(1);
  @$pb.TagNumber(3)
  void clearContent() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureContent() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get backgroundColor => $_getN(2);
  @$pb.TagNumber(4)
  set backgroundColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackgroundColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackgroundColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.double get elevation => $_getN(3);
  @$pb.TagNumber(5)
  set elevation($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasElevation() => $_has(3);
  @$pb.TagNumber(5)
  void clearElevation() => clearField(5);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(4);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(4);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(12)
  $core.double get actionOverflowThreshold => $_getN(5);
  @$pb.TagNumber(12)
  set actionOverflowThreshold($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(12)
  $core.bool hasActionOverflowThreshold() => $_has(5);
  @$pb.TagNumber(12)
  void clearActionOverflowThreshold() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get showCloseIcon => $_getBF(6);
  @$pb.TagNumber(13)
  set showCloseIcon($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(13)
  $core.bool hasShowCloseIcon() => $_has(6);
  @$pb.TagNumber(13)
  void clearShowCloseIcon() => clearField(13);

  @$pb.TagNumber(14)
  $1.DartColorExpression get closeIconColor => $_getN(7);
  @$pb.TagNumber(14)
  set closeIconColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasCloseIconColor() => $_has(7);
  @$pb.TagNumber(14)
  void clearCloseIconColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureCloseIconColor() => $_ensure(7);

  @$pb.TagNumber(15)
  $1.DartDurationExpression get duration => $_getN(8);
  @$pb.TagNumber(15)
  set duration($1.DartDurationExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasDuration() => $_has(8);
  @$pb.TagNumber(15)
  void clearDuration() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartDurationExpression ensureDuration() => $_ensure(8);
}

/// package:flutter/src/material/switch.dart
class MaterialSwitch extends $pb.GeneratedMessage {
  factory MaterialSwitch({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? activeTrackColor,
    $1.DartColorExpression? inactiveThumbColor,
    $1.DartColorExpression? inactiveTrackColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (activeTrackColor != null) {
      $result.activeTrackColor = activeTrackColor;
    }
    if (inactiveThumbColor != null) {
      $result.inactiveThumbColor = inactiveThumbColor;
    }
    if (inactiveTrackColor != null) {
      $result.inactiveTrackColor = inactiveTrackColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    return $result;
  }
  MaterialSwitch._() : super();
  factory MaterialSwitch.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSwitch.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSwitch', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'inactiveThumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'inactiveTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(24, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(27, _omitFieldNames ? '' : 'autofocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSwitch clone() => MaterialSwitch()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSwitch copyWith(void Function(MaterialSwitch) updates) => super.copyWith((message) => updates(message as MaterialSwitch)) as MaterialSwitch;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSwitch create() => MaterialSwitch._();
  MaterialSwitch createEmptyInstance() => create();
  static $pb.PbList<MaterialSwitch> createRepeated() => $pb.PbList<MaterialSwitch>();
  @$core.pragma('dart2js:noInline')
  static MaterialSwitch getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSwitch>(create);
  static MaterialSwitch? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(5)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(5)
  set activeColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearActiveColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeTrackColor => $_getN(3);
  @$pb.TagNumber(6)
  set activeTrackColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveTrackColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearActiveTrackColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveTrackColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get inactiveThumbColor => $_getN(4);
  @$pb.TagNumber(7)
  set inactiveThumbColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInactiveThumbColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearInactiveThumbColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureInactiveThumbColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get inactiveTrackColor => $_getN(5);
  @$pb.TagNumber(8)
  set inactiveTrackColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasInactiveTrackColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearInactiveTrackColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureInactiveTrackColor() => $_ensure(5);

  @$pb.TagNumber(21)
  $1.DartColorExpression get focusColor => $_getN(6);
  @$pb.TagNumber(21)
  set focusColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasFocusColor() => $_has(6);
  @$pb.TagNumber(21)
  void clearFocusColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureFocusColor() => $_ensure(6);

  @$pb.TagNumber(22)
  $1.DartColorExpression get hoverColor => $_getN(7);
  @$pb.TagNumber(22)
  set hoverColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasHoverColor() => $_has(7);
  @$pb.TagNumber(22)
  void clearHoverColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureHoverColor() => $_ensure(7);

  @$pb.TagNumber(24)
  $core.double get splashRadius => $_getN(8);
  @$pb.TagNumber(24)
  set splashRadius($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(24)
  $core.bool hasSplashRadius() => $_has(8);
  @$pb.TagNumber(24)
  void clearSplashRadius() => clearField(24);

  @$pb.TagNumber(27)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(27)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(27)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(27)
  void clearAutofocus() => clearField(27);
}

/// package:flutter/src/material/switch.dart
class MaterialSwitchNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialSwitchNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? activeTrackColor,
    $1.DartColorExpression? inactiveThumbColor,
    $1.DartColorExpression? inactiveTrackColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? hoverColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? applyCupertinoTheme,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (activeTrackColor != null) {
      $result.activeTrackColor = activeTrackColor;
    }
    if (inactiveThumbColor != null) {
      $result.inactiveThumbColor = inactiveThumbColor;
    }
    if (inactiveTrackColor != null) {
      $result.inactiveTrackColor = inactiveTrackColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (applyCupertinoTheme != null) {
      $result.applyCupertinoTheme = applyCupertinoTheme;
    }
    return $result;
  }
  MaterialSwitchNamedAdaptive._() : super();
  factory MaterialSwitchNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSwitchNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSwitchNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'inactiveThumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'inactiveTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(24, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(27, _omitFieldNames ? '' : 'autofocus')
    ..aOB(28, _omitFieldNames ? '' : 'applyCupertinoTheme')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSwitchNamedAdaptive clone() => MaterialSwitchNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSwitchNamedAdaptive copyWith(void Function(MaterialSwitchNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialSwitchNamedAdaptive)) as MaterialSwitchNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSwitchNamedAdaptive create() => MaterialSwitchNamedAdaptive._();
  MaterialSwitchNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialSwitchNamedAdaptive> createRepeated() => $pb.PbList<MaterialSwitchNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialSwitchNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSwitchNamedAdaptive>(create);
  static MaterialSwitchNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(5)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(5)
  set activeColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearActiveColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeTrackColor => $_getN(3);
  @$pb.TagNumber(6)
  set activeTrackColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveTrackColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearActiveTrackColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveTrackColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get inactiveThumbColor => $_getN(4);
  @$pb.TagNumber(7)
  set inactiveThumbColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInactiveThumbColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearInactiveThumbColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureInactiveThumbColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get inactiveTrackColor => $_getN(5);
  @$pb.TagNumber(8)
  set inactiveTrackColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasInactiveTrackColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearInactiveTrackColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureInactiveTrackColor() => $_ensure(5);

  @$pb.TagNumber(21)
  $1.DartColorExpression get focusColor => $_getN(6);
  @$pb.TagNumber(21)
  set focusColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasFocusColor() => $_has(6);
  @$pb.TagNumber(21)
  void clearFocusColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureFocusColor() => $_ensure(6);

  @$pb.TagNumber(22)
  $1.DartColorExpression get hoverColor => $_getN(7);
  @$pb.TagNumber(22)
  set hoverColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasHoverColor() => $_has(7);
  @$pb.TagNumber(22)
  void clearHoverColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureHoverColor() => $_ensure(7);

  @$pb.TagNumber(24)
  $core.double get splashRadius => $_getN(8);
  @$pb.TagNumber(24)
  set splashRadius($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(24)
  $core.bool hasSplashRadius() => $_has(8);
  @$pb.TagNumber(24)
  void clearSplashRadius() => clearField(24);

  @$pb.TagNumber(27)
  $core.bool get autofocus => $_getBF(9);
  @$pb.TagNumber(27)
  set autofocus($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(27)
  $core.bool hasAutofocus() => $_has(9);
  @$pb.TagNumber(27)
  void clearAutofocus() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get applyCupertinoTheme => $_getBF(10);
  @$pb.TagNumber(28)
  set applyCupertinoTheme($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(28)
  $core.bool hasApplyCupertinoTheme() => $_has(10);
  @$pb.TagNumber(28)
  void clearApplyCupertinoTheme() => clearField(28);
}

/// package:flutter/src/material/switch_list_tile.dart
class MaterialSwitchListTile extends $pb.GeneratedMessage {
  factory MaterialSwitchListTile({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? activeTrackColor,
    $1.DartColorExpression? inactiveThumbColor,
    $1.DartColorExpression? inactiveTrackColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $1.DartColorExpression? tileColor,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    $core.bool? isThreeLine,
    $core.bool? dense,
    WidgetExpression? secondary,
    $core.bool? selected,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $1.DartColorExpression? hoverColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (activeTrackColor != null) {
      $result.activeTrackColor = activeTrackColor;
    }
    if (inactiveThumbColor != null) {
      $result.inactiveThumbColor = inactiveThumbColor;
    }
    if (inactiveTrackColor != null) {
      $result.inactiveTrackColor = inactiveTrackColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (isThreeLine != null) {
      $result.isThreeLine = isThreeLine;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (secondary != null) {
      $result.secondary = secondary;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    return $result;
  }
  MaterialSwitchListTile._() : super();
  factory MaterialSwitchListTile.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSwitchListTile.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSwitchListTile', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'inactiveThumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'inactiveTrackColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'autofocus')
    ..aOM<$1.DartColorExpression>(25, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(26, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(27, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOB(28, _omitFieldNames ? '' : 'isThreeLine')
    ..aOB(29, _omitFieldNames ? '' : 'dense')
    ..aOM<WidgetExpression>(31, _omitFieldNames ? '' : 'secondary', subBuilder: WidgetExpression.create)
    ..aOB(32, _omitFieldNames ? '' : 'selected')
    ..aOM<$1.DartColorExpression>(35, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(37, _omitFieldNames ? '' : 'enableFeedback')
    ..aOM<$1.DartColorExpression>(38, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSwitchListTile clone() => MaterialSwitchListTile()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSwitchListTile copyWith(void Function(MaterialSwitchListTile) updates) => super.copyWith((message) => updates(message as MaterialSwitchListTile)) as MaterialSwitchListTile;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSwitchListTile create() => MaterialSwitchListTile._();
  MaterialSwitchListTile createEmptyInstance() => create();
  static $pb.PbList<MaterialSwitchListTile> createRepeated() => $pb.PbList<MaterialSwitchListTile>();
  @$core.pragma('dart2js:noInline')
  static MaterialSwitchListTile getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSwitchListTile>(create);
  static MaterialSwitchListTile? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(5)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(5)
  set activeColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearActiveColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeTrackColor => $_getN(3);
  @$pb.TagNumber(6)
  set activeTrackColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveTrackColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearActiveTrackColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveTrackColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get inactiveThumbColor => $_getN(4);
  @$pb.TagNumber(7)
  set inactiveThumbColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInactiveThumbColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearInactiveThumbColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureInactiveThumbColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get inactiveTrackColor => $_getN(5);
  @$pb.TagNumber(8)
  set inactiveTrackColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasInactiveTrackColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearInactiveTrackColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureInactiveTrackColor() => $_ensure(5);

  @$pb.TagNumber(21)
  $core.double get splashRadius => $_getN(6);
  @$pb.TagNumber(21)
  set splashRadius($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(21)
  $core.bool hasSplashRadius() => $_has(6);
  @$pb.TagNumber(21)
  void clearSplashRadius() => clearField(21);

  @$pb.TagNumber(24)
  $core.bool get autofocus => $_getBF(7);
  @$pb.TagNumber(24)
  set autofocus($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(24)
  $core.bool hasAutofocus() => $_has(7);
  @$pb.TagNumber(24)
  void clearAutofocus() => clearField(24);

  @$pb.TagNumber(25)
  $1.DartColorExpression get tileColor => $_getN(8);
  @$pb.TagNumber(25)
  set tileColor($1.DartColorExpression v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasTileColor() => $_has(8);
  @$pb.TagNumber(25)
  void clearTileColor() => clearField(25);
  @$pb.TagNumber(25)
  $1.DartColorExpression ensureTileColor() => $_ensure(8);

  @$pb.TagNumber(26)
  WidgetExpression get title => $_getN(9);
  @$pb.TagNumber(26)
  set title(WidgetExpression v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasTitle() => $_has(9);
  @$pb.TagNumber(26)
  void clearTitle() => clearField(26);
  @$pb.TagNumber(26)
  WidgetExpression ensureTitle() => $_ensure(9);

  @$pb.TagNumber(27)
  WidgetExpression get subtitle => $_getN(10);
  @$pb.TagNumber(27)
  set subtitle(WidgetExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasSubtitle() => $_has(10);
  @$pb.TagNumber(27)
  void clearSubtitle() => clearField(27);
  @$pb.TagNumber(27)
  WidgetExpression ensureSubtitle() => $_ensure(10);

  @$pb.TagNumber(28)
  $core.bool get isThreeLine => $_getBF(11);
  @$pb.TagNumber(28)
  set isThreeLine($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(28)
  $core.bool hasIsThreeLine() => $_has(11);
  @$pb.TagNumber(28)
  void clearIsThreeLine() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get dense => $_getBF(12);
  @$pb.TagNumber(29)
  set dense($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(29)
  $core.bool hasDense() => $_has(12);
  @$pb.TagNumber(29)
  void clearDense() => clearField(29);

  @$pb.TagNumber(31)
  WidgetExpression get secondary => $_getN(13);
  @$pb.TagNumber(31)
  set secondary(WidgetExpression v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasSecondary() => $_has(13);
  @$pb.TagNumber(31)
  void clearSecondary() => clearField(31);
  @$pb.TagNumber(31)
  WidgetExpression ensureSecondary() => $_ensure(13);

  @$pb.TagNumber(32)
  $core.bool get selected => $_getBF(14);
  @$pb.TagNumber(32)
  set selected($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(32)
  $core.bool hasSelected() => $_has(14);
  @$pb.TagNumber(32)
  void clearSelected() => clearField(32);

  @$pb.TagNumber(35)
  $1.DartColorExpression get selectedTileColor => $_getN(15);
  @$pb.TagNumber(35)
  set selectedTileColor($1.DartColorExpression v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasSelectedTileColor() => $_has(15);
  @$pb.TagNumber(35)
  void clearSelectedTileColor() => clearField(35);
  @$pb.TagNumber(35)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(15);

  @$pb.TagNumber(37)
  $core.bool get enableFeedback => $_getBF(16);
  @$pb.TagNumber(37)
  set enableFeedback($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(37)
  $core.bool hasEnableFeedback() => $_has(16);
  @$pb.TagNumber(37)
  void clearEnableFeedback() => clearField(37);

  @$pb.TagNumber(38)
  $1.DartColorExpression get hoverColor => $_getN(17);
  @$pb.TagNumber(38)
  set hoverColor($1.DartColorExpression v) { setField(38, v); }
  @$pb.TagNumber(38)
  $core.bool hasHoverColor() => $_has(17);
  @$pb.TagNumber(38)
  void clearHoverColor() => clearField(38);
  @$pb.TagNumber(38)
  $1.DartColorExpression ensureHoverColor() => $_ensure(17);
}

/// package:flutter/src/material/switch_list_tile.dart
class MaterialSwitchListTileNamedAdaptive extends $pb.GeneratedMessage {
  factory MaterialSwitchListTileNamedAdaptive({
    $1.FlutterKeyExpression? key,
    $core.bool? value,
    $1.DartColorExpression? activeColor,
    $1.DartColorExpression? activeTrackColor,
    $1.DartColorExpression? inactiveThumbColor,
    $1.DartColorExpression? inactiveTrackColor,
    $core.double? splashRadius,
    $core.bool? autofocus,
    $core.bool? applyCupertinoTheme,
    $1.DartColorExpression? tileColor,
    WidgetExpression? title,
    WidgetExpression? subtitle,
    $core.bool? isThreeLine,
    $core.bool? dense,
    WidgetExpression? secondary,
    $core.bool? selected,
    $1.DartColorExpression? selectedTileColor,
    $core.bool? enableFeedback,
    $1.DartColorExpression? hoverColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    if (activeColor != null) {
      $result.activeColor = activeColor;
    }
    if (activeTrackColor != null) {
      $result.activeTrackColor = activeTrackColor;
    }
    if (inactiveThumbColor != null) {
      $result.inactiveThumbColor = inactiveThumbColor;
    }
    if (inactiveTrackColor != null) {
      $result.inactiveTrackColor = inactiveTrackColor;
    }
    if (splashRadius != null) {
      $result.splashRadius = splashRadius;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (applyCupertinoTheme != null) {
      $result.applyCupertinoTheme = applyCupertinoTheme;
    }
    if (tileColor != null) {
      $result.tileColor = tileColor;
    }
    if (title != null) {
      $result.title = title;
    }
    if (subtitle != null) {
      $result.subtitle = subtitle;
    }
    if (isThreeLine != null) {
      $result.isThreeLine = isThreeLine;
    }
    if (dense != null) {
      $result.dense = dense;
    }
    if (secondary != null) {
      $result.secondary = secondary;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (selectedTileColor != null) {
      $result.selectedTileColor = selectedTileColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    return $result;
  }
  MaterialSwitchListTileNamedAdaptive._() : super();
  factory MaterialSwitchListTileNamedAdaptive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialSwitchListTileNamedAdaptive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialSwitchListTileNamedAdaptive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'value')
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'activeColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'activeTrackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'inactiveThumbColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'inactiveTrackColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(21, _omitFieldNames ? '' : 'splashRadius', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'autofocus')
    ..aOB(25, _omitFieldNames ? '' : 'applyCupertinoTheme')
    ..aOM<$1.DartColorExpression>(26, _omitFieldNames ? '' : 'tileColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(27, _omitFieldNames ? '' : 'title', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(28, _omitFieldNames ? '' : 'subtitle', subBuilder: WidgetExpression.create)
    ..aOB(29, _omitFieldNames ? '' : 'isThreeLine')
    ..aOB(30, _omitFieldNames ? '' : 'dense')
    ..aOM<WidgetExpression>(32, _omitFieldNames ? '' : 'secondary', subBuilder: WidgetExpression.create)
    ..aOB(33, _omitFieldNames ? '' : 'selected')
    ..aOM<$1.DartColorExpression>(36, _omitFieldNames ? '' : 'selectedTileColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(38, _omitFieldNames ? '' : 'enableFeedback')
    ..aOM<$1.DartColorExpression>(39, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialSwitchListTileNamedAdaptive clone() => MaterialSwitchListTileNamedAdaptive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialSwitchListTileNamedAdaptive copyWith(void Function(MaterialSwitchListTileNamedAdaptive) updates) => super.copyWith((message) => updates(message as MaterialSwitchListTileNamedAdaptive)) as MaterialSwitchListTileNamedAdaptive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialSwitchListTileNamedAdaptive create() => MaterialSwitchListTileNamedAdaptive._();
  MaterialSwitchListTileNamedAdaptive createEmptyInstance() => create();
  static $pb.PbList<MaterialSwitchListTileNamedAdaptive> createRepeated() => $pb.PbList<MaterialSwitchListTileNamedAdaptive>();
  @$core.pragma('dart2js:noInline')
  static MaterialSwitchListTileNamedAdaptive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialSwitchListTileNamedAdaptive>(create);
  static MaterialSwitchListTileNamedAdaptive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get value => $_getBF(1);
  @$pb.TagNumber(3)
  set value($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(3)
  void clearValue() => clearField(3);

  @$pb.TagNumber(5)
  $1.DartColorExpression get activeColor => $_getN(2);
  @$pb.TagNumber(5)
  set activeColor($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasActiveColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearActiveColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureActiveColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get activeTrackColor => $_getN(3);
  @$pb.TagNumber(6)
  set activeTrackColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasActiveTrackColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearActiveTrackColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureActiveTrackColor() => $_ensure(3);

  @$pb.TagNumber(7)
  $1.DartColorExpression get inactiveThumbColor => $_getN(4);
  @$pb.TagNumber(7)
  set inactiveThumbColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasInactiveThumbColor() => $_has(4);
  @$pb.TagNumber(7)
  void clearInactiveThumbColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureInactiveThumbColor() => $_ensure(4);

  @$pb.TagNumber(8)
  $1.DartColorExpression get inactiveTrackColor => $_getN(5);
  @$pb.TagNumber(8)
  set inactiveTrackColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasInactiveTrackColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearInactiveTrackColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureInactiveTrackColor() => $_ensure(5);

  @$pb.TagNumber(21)
  $core.double get splashRadius => $_getN(6);
  @$pb.TagNumber(21)
  set splashRadius($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(21)
  $core.bool hasSplashRadius() => $_has(6);
  @$pb.TagNumber(21)
  void clearSplashRadius() => clearField(21);

  @$pb.TagNumber(24)
  $core.bool get autofocus => $_getBF(7);
  @$pb.TagNumber(24)
  set autofocus($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(24)
  $core.bool hasAutofocus() => $_has(7);
  @$pb.TagNumber(24)
  void clearAutofocus() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get applyCupertinoTheme => $_getBF(8);
  @$pb.TagNumber(25)
  set applyCupertinoTheme($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(25)
  $core.bool hasApplyCupertinoTheme() => $_has(8);
  @$pb.TagNumber(25)
  void clearApplyCupertinoTheme() => clearField(25);

  @$pb.TagNumber(26)
  $1.DartColorExpression get tileColor => $_getN(9);
  @$pb.TagNumber(26)
  set tileColor($1.DartColorExpression v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasTileColor() => $_has(9);
  @$pb.TagNumber(26)
  void clearTileColor() => clearField(26);
  @$pb.TagNumber(26)
  $1.DartColorExpression ensureTileColor() => $_ensure(9);

  @$pb.TagNumber(27)
  WidgetExpression get title => $_getN(10);
  @$pb.TagNumber(27)
  set title(WidgetExpression v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasTitle() => $_has(10);
  @$pb.TagNumber(27)
  void clearTitle() => clearField(27);
  @$pb.TagNumber(27)
  WidgetExpression ensureTitle() => $_ensure(10);

  @$pb.TagNumber(28)
  WidgetExpression get subtitle => $_getN(11);
  @$pb.TagNumber(28)
  set subtitle(WidgetExpression v) { setField(28, v); }
  @$pb.TagNumber(28)
  $core.bool hasSubtitle() => $_has(11);
  @$pb.TagNumber(28)
  void clearSubtitle() => clearField(28);
  @$pb.TagNumber(28)
  WidgetExpression ensureSubtitle() => $_ensure(11);

  @$pb.TagNumber(29)
  $core.bool get isThreeLine => $_getBF(12);
  @$pb.TagNumber(29)
  set isThreeLine($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(29)
  $core.bool hasIsThreeLine() => $_has(12);
  @$pb.TagNumber(29)
  void clearIsThreeLine() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get dense => $_getBF(13);
  @$pb.TagNumber(30)
  set dense($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(30)
  $core.bool hasDense() => $_has(13);
  @$pb.TagNumber(30)
  void clearDense() => clearField(30);

  @$pb.TagNumber(32)
  WidgetExpression get secondary => $_getN(14);
  @$pb.TagNumber(32)
  set secondary(WidgetExpression v) { setField(32, v); }
  @$pb.TagNumber(32)
  $core.bool hasSecondary() => $_has(14);
  @$pb.TagNumber(32)
  void clearSecondary() => clearField(32);
  @$pb.TagNumber(32)
  WidgetExpression ensureSecondary() => $_ensure(14);

  @$pb.TagNumber(33)
  $core.bool get selected => $_getBF(15);
  @$pb.TagNumber(33)
  set selected($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(33)
  $core.bool hasSelected() => $_has(15);
  @$pb.TagNumber(33)
  void clearSelected() => clearField(33);

  @$pb.TagNumber(36)
  $1.DartColorExpression get selectedTileColor => $_getN(16);
  @$pb.TagNumber(36)
  set selectedTileColor($1.DartColorExpression v) { setField(36, v); }
  @$pb.TagNumber(36)
  $core.bool hasSelectedTileColor() => $_has(16);
  @$pb.TagNumber(36)
  void clearSelectedTileColor() => clearField(36);
  @$pb.TagNumber(36)
  $1.DartColorExpression ensureSelectedTileColor() => $_ensure(16);

  @$pb.TagNumber(38)
  $core.bool get enableFeedback => $_getBF(17);
  @$pb.TagNumber(38)
  set enableFeedback($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(38)
  $core.bool hasEnableFeedback() => $_has(17);
  @$pb.TagNumber(38)
  void clearEnableFeedback() => clearField(38);

  @$pb.TagNumber(39)
  $1.DartColorExpression get hoverColor => $_getN(18);
  @$pb.TagNumber(39)
  set hoverColor($1.DartColorExpression v) { setField(39, v); }
  @$pb.TagNumber(39)
  $core.bool hasHoverColor() => $_has(18);
  @$pb.TagNumber(39)
  void clearHoverColor() => clearField(39);
  @$pb.TagNumber(39)
  $1.DartColorExpression ensureHoverColor() => $_ensure(18);
}

/// package:flutter/src/material/tab_controller.dart
class MaterialDefaultTabController extends $pb.GeneratedMessage {
  factory MaterialDefaultTabController({
    $1.FlutterKeyExpression? key,
    $core.int? length,
    $core.int? initialIndex,
    WidgetExpression? child,
    $1.DartDurationExpression? animationDuration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (length != null) {
      $result.length = length;
    }
    if (initialIndex != null) {
      $result.initialIndex = initialIndex;
    }
    if (child != null) {
      $result.child = child;
    }
    if (animationDuration != null) {
      $result.animationDuration = animationDuration;
    }
    return $result;
  }
  MaterialDefaultTabController._() : super();
  factory MaterialDefaultTabController.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialDefaultTabController.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialDefaultTabController', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'length', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'initialIndex', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'animationDuration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialDefaultTabController clone() => MaterialDefaultTabController()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialDefaultTabController copyWith(void Function(MaterialDefaultTabController) updates) => super.copyWith((message) => updates(message as MaterialDefaultTabController)) as MaterialDefaultTabController;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialDefaultTabController create() => MaterialDefaultTabController._();
  MaterialDefaultTabController createEmptyInstance() => create();
  static $pb.PbList<MaterialDefaultTabController> createRepeated() => $pb.PbList<MaterialDefaultTabController>();
  @$core.pragma('dart2js:noInline')
  static MaterialDefaultTabController getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialDefaultTabController>(create);
  static MaterialDefaultTabController? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get length => $_getIZ(1);
  @$pb.TagNumber(3)
  set length($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasLength() => $_has(1);
  @$pb.TagNumber(3)
  void clearLength() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get initialIndex => $_getIZ(2);
  @$pb.TagNumber(4)
  set initialIndex($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasInitialIndex() => $_has(2);
  @$pb.TagNumber(4)
  void clearInitialIndex() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get animationDuration => $_getN(4);
  @$pb.TagNumber(6)
  set animationDuration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasAnimationDuration() => $_has(4);
  @$pb.TagNumber(6)
  void clearAnimationDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureAnimationDuration() => $_ensure(4);
}

/// package:flutter/src/material/tabs.dart
class MaterialTab extends $pb.GeneratedMessage {
  factory MaterialTab({
    $1.FlutterKeyExpression? key,
    $core.String? text,
    WidgetExpression? icon,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (text != null) {
      $result.text = text;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialTab._() : super();
  factory MaterialTab.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTab.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTab', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'text')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTab clone() => MaterialTab()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTab copyWith(void Function(MaterialTab) updates) => super.copyWith((message) => updates(message as MaterialTab)) as MaterialTab;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTab create() => MaterialTab._();
  MaterialTab createEmptyInstance() => create();
  static $pb.PbList<MaterialTab> createRepeated() => $pb.PbList<MaterialTab>();
  @$core.pragma('dart2js:noInline')
  static MaterialTab getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTab>(create);
  static MaterialTab? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get text => $_getSZ(1);
  @$pb.TagNumber(3)
  set text($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasText() => $_has(1);
  @$pb.TagNumber(3)
  void clearText() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(4)
  set icon(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(4)
  void clearIcon() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(6)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(6)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(6)
  void clearHeight() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/material/tabs.dart
class MaterialTabBar extends $pb.GeneratedMessage {
  factory MaterialTabBar({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? tabs,
    $core.bool? isScrollable,
    $1.DartColorExpression? indicatorColor,
    $core.bool? automaticIndicatorColorAdjustment,
    $core.double? indicatorWeight,
    $1.DartColorExpression? dividerColor,
    $1.DartColorExpression? labelColor,
    $1.DartColorExpression? unselectedLabelColor,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (tabs != null) {
      $result.tabs.addAll(tabs);
    }
    if (isScrollable != null) {
      $result.isScrollable = isScrollable;
    }
    if (indicatorColor != null) {
      $result.indicatorColor = indicatorColor;
    }
    if (automaticIndicatorColorAdjustment != null) {
      $result.automaticIndicatorColorAdjustment = automaticIndicatorColorAdjustment;
    }
    if (indicatorWeight != null) {
      $result.indicatorWeight = indicatorWeight;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    if (labelColor != null) {
      $result.labelColor = labelColor;
    }
    if (unselectedLabelColor != null) {
      $result.unselectedLabelColor = unselectedLabelColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialTabBar._() : super();
  factory MaterialTabBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTabBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTabBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'tabs', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'isScrollable')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'indicatorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'automaticIndicatorColorAdjustment')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'indicatorWeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'labelColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'unselectedLabelColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(22, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTabBar clone() => MaterialTabBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTabBar copyWith(void Function(MaterialTabBar) updates) => super.copyWith((message) => updates(message as MaterialTabBar)) as MaterialTabBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTabBar create() => MaterialTabBar._();
  MaterialTabBar createEmptyInstance() => create();
  static $pb.PbList<MaterialTabBar> createRepeated() => $pb.PbList<MaterialTabBar>();
  @$core.pragma('dart2js:noInline')
  static MaterialTabBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTabBar>(create);
  static MaterialTabBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get tabs => $_getList(1);

  @$pb.TagNumber(5)
  $core.bool get isScrollable => $_getBF(2);
  @$pb.TagNumber(5)
  set isScrollable($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsScrollable() => $_has(2);
  @$pb.TagNumber(5)
  void clearIsScrollable() => clearField(5);

  @$pb.TagNumber(7)
  $1.DartColorExpression get indicatorColor => $_getN(3);
  @$pb.TagNumber(7)
  set indicatorColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasIndicatorColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearIndicatorColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureIndicatorColor() => $_ensure(3);

  @$pb.TagNumber(8)
  $core.bool get automaticIndicatorColorAdjustment => $_getBF(4);
  @$pb.TagNumber(8)
  set automaticIndicatorColorAdjustment($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasAutomaticIndicatorColorAdjustment() => $_has(4);
  @$pb.TagNumber(8)
  void clearAutomaticIndicatorColorAdjustment() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get indicatorWeight => $_getN(5);
  @$pb.TagNumber(9)
  set indicatorWeight($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(9)
  $core.bool hasIndicatorWeight() => $_has(5);
  @$pb.TagNumber(9)
  void clearIndicatorWeight() => clearField(9);

  @$pb.TagNumber(13)
  $1.DartColorExpression get dividerColor => $_getN(6);
  @$pb.TagNumber(13)
  set dividerColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDividerColor() => $_has(6);
  @$pb.TagNumber(13)
  void clearDividerColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDividerColor() => $_ensure(6);

  @$pb.TagNumber(14)
  $1.DartColorExpression get labelColor => $_getN(7);
  @$pb.TagNumber(14)
  set labelColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasLabelColor() => $_has(7);
  @$pb.TagNumber(14)
  void clearLabelColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureLabelColor() => $_ensure(7);

  @$pb.TagNumber(17)
  $1.DartColorExpression get unselectedLabelColor => $_getN(8);
  @$pb.TagNumber(17)
  set unselectedLabelColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasUnselectedLabelColor() => $_has(8);
  @$pb.TagNumber(17)
  void clearUnselectedLabelColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureUnselectedLabelColor() => $_ensure(8);

  @$pb.TagNumber(22)
  $core.bool get enableFeedback => $_getBF(9);
  @$pb.TagNumber(22)
  set enableFeedback($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(22)
  $core.bool hasEnableFeedback() => $_has(9);
  @$pb.TagNumber(22)
  void clearEnableFeedback() => clearField(22);
}

/// package:flutter/src/material/tabs.dart
class MaterialTabBarNamedSecondary extends $pb.GeneratedMessage {
  factory MaterialTabBarNamedSecondary({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? tabs,
    $core.bool? isScrollable,
    $1.DartColorExpression? indicatorColor,
    $core.bool? automaticIndicatorColorAdjustment,
    $core.double? indicatorWeight,
    $1.DartColorExpression? dividerColor,
    $1.DartColorExpression? labelColor,
    $1.DartColorExpression? unselectedLabelColor,
    $core.bool? enableFeedback,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (tabs != null) {
      $result.tabs.addAll(tabs);
    }
    if (isScrollable != null) {
      $result.isScrollable = isScrollable;
    }
    if (indicatorColor != null) {
      $result.indicatorColor = indicatorColor;
    }
    if (automaticIndicatorColorAdjustment != null) {
      $result.automaticIndicatorColorAdjustment = automaticIndicatorColorAdjustment;
    }
    if (indicatorWeight != null) {
      $result.indicatorWeight = indicatorWeight;
    }
    if (dividerColor != null) {
      $result.dividerColor = dividerColor;
    }
    if (labelColor != null) {
      $result.labelColor = labelColor;
    }
    if (unselectedLabelColor != null) {
      $result.unselectedLabelColor = unselectedLabelColor;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    return $result;
  }
  MaterialTabBarNamedSecondary._() : super();
  factory MaterialTabBarNamedSecondary.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTabBarNamedSecondary.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTabBarNamedSecondary', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'tabs', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'isScrollable')
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'indicatorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'automaticIndicatorColorAdjustment')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'indicatorWeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'dividerColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'labelColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'unselectedLabelColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(22, _omitFieldNames ? '' : 'enableFeedback')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTabBarNamedSecondary clone() => MaterialTabBarNamedSecondary()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTabBarNamedSecondary copyWith(void Function(MaterialTabBarNamedSecondary) updates) => super.copyWith((message) => updates(message as MaterialTabBarNamedSecondary)) as MaterialTabBarNamedSecondary;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTabBarNamedSecondary create() => MaterialTabBarNamedSecondary._();
  MaterialTabBarNamedSecondary createEmptyInstance() => create();
  static $pb.PbList<MaterialTabBarNamedSecondary> createRepeated() => $pb.PbList<MaterialTabBarNamedSecondary>();
  @$core.pragma('dart2js:noInline')
  static MaterialTabBarNamedSecondary getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTabBarNamedSecondary>(create);
  static MaterialTabBarNamedSecondary? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get tabs => $_getList(1);

  @$pb.TagNumber(5)
  $core.bool get isScrollable => $_getBF(2);
  @$pb.TagNumber(5)
  set isScrollable($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsScrollable() => $_has(2);
  @$pb.TagNumber(5)
  void clearIsScrollable() => clearField(5);

  @$pb.TagNumber(7)
  $1.DartColorExpression get indicatorColor => $_getN(3);
  @$pb.TagNumber(7)
  set indicatorColor($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasIndicatorColor() => $_has(3);
  @$pb.TagNumber(7)
  void clearIndicatorColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureIndicatorColor() => $_ensure(3);

  @$pb.TagNumber(8)
  $core.bool get automaticIndicatorColorAdjustment => $_getBF(4);
  @$pb.TagNumber(8)
  set automaticIndicatorColorAdjustment($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasAutomaticIndicatorColorAdjustment() => $_has(4);
  @$pb.TagNumber(8)
  void clearAutomaticIndicatorColorAdjustment() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get indicatorWeight => $_getN(5);
  @$pb.TagNumber(9)
  set indicatorWeight($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(9)
  $core.bool hasIndicatorWeight() => $_has(5);
  @$pb.TagNumber(9)
  void clearIndicatorWeight() => clearField(9);

  @$pb.TagNumber(13)
  $1.DartColorExpression get dividerColor => $_getN(6);
  @$pb.TagNumber(13)
  set dividerColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasDividerColor() => $_has(6);
  @$pb.TagNumber(13)
  void clearDividerColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureDividerColor() => $_ensure(6);

  @$pb.TagNumber(14)
  $1.DartColorExpression get labelColor => $_getN(7);
  @$pb.TagNumber(14)
  set labelColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasLabelColor() => $_has(7);
  @$pb.TagNumber(14)
  void clearLabelColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureLabelColor() => $_ensure(7);

  @$pb.TagNumber(17)
  $1.DartColorExpression get unselectedLabelColor => $_getN(8);
  @$pb.TagNumber(17)
  set unselectedLabelColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasUnselectedLabelColor() => $_has(8);
  @$pb.TagNumber(17)
  void clearUnselectedLabelColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureUnselectedLabelColor() => $_ensure(8);

  @$pb.TagNumber(22)
  $core.bool get enableFeedback => $_getBF(9);
  @$pb.TagNumber(22)
  set enableFeedback($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(22)
  $core.bool hasEnableFeedback() => $_has(9);
  @$pb.TagNumber(22)
  void clearEnableFeedback() => clearField(22);
}

/// package:flutter/src/material/tabs.dart
class MaterialTabBarView extends $pb.GeneratedMessage {
  factory MaterialTabBarView({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    $core.double? viewportFraction,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (viewportFraction != null) {
      $result.viewportFraction = viewportFraction;
    }
    return $result;
  }
  MaterialTabBarView._() : super();
  factory MaterialTabBarView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTabBarView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTabBarView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'viewportFraction', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTabBarView clone() => MaterialTabBarView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTabBarView copyWith(void Function(MaterialTabBarView) updates) => super.copyWith((message) => updates(message as MaterialTabBarView)) as MaterialTabBarView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTabBarView create() => MaterialTabBarView._();
  MaterialTabBarView createEmptyInstance() => create();
  static $pb.PbList<MaterialTabBarView> createRepeated() => $pb.PbList<MaterialTabBarView>();
  @$core.pragma('dart2js:noInline')
  static MaterialTabBarView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTabBarView>(create);
  static MaterialTabBarView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(7)
  $core.double get viewportFraction => $_getN(2);
  @$pb.TagNumber(7)
  set viewportFraction($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasViewportFraction() => $_has(2);
  @$pb.TagNumber(7)
  void clearViewportFraction() => clearField(7);
}

/// package:flutter/src/material/tabs.dart
class MaterialTabPageSelector extends $pb.GeneratedMessage {
  factory MaterialTabPageSelector({
    $1.FlutterKeyExpression? key,
    $core.double? indicatorSize,
    $1.DartColorExpression? color,
    $1.DartColorExpression? selectedColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (indicatorSize != null) {
      $result.indicatorSize = indicatorSize;
    }
    if (color != null) {
      $result.color = color;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    return $result;
  }
  MaterialTabPageSelector._() : super();
  factory MaterialTabPageSelector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTabPageSelector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTabPageSelector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'indicatorSize', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(6, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTabPageSelector clone() => MaterialTabPageSelector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTabPageSelector copyWith(void Function(MaterialTabPageSelector) updates) => super.copyWith((message) => updates(message as MaterialTabPageSelector)) as MaterialTabPageSelector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTabPageSelector create() => MaterialTabPageSelector._();
  MaterialTabPageSelector createEmptyInstance() => create();
  static $pb.PbList<MaterialTabPageSelector> createRepeated() => $pb.PbList<MaterialTabPageSelector>();
  @$core.pragma('dart2js:noInline')
  static MaterialTabPageSelector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTabPageSelector>(create);
  static MaterialTabPageSelector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get indicatorSize => $_getN(1);
  @$pb.TagNumber(4)
  set indicatorSize($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasIndicatorSize() => $_has(1);
  @$pb.TagNumber(4)
  void clearIndicatorSize() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $1.DartColorExpression get selectedColor => $_getN(3);
  @$pb.TagNumber(6)
  set selectedColor($1.DartColorExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSelectedColor() => $_has(3);
  @$pb.TagNumber(6)
  void clearSelectedColor() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(3);
}

/// package:flutter/src/material/tabs.dart
class MaterialTabPageSelectorIndicator extends $pb.GeneratedMessage {
  factory MaterialTabPageSelectorIndicator({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? backgroundColor,
    $1.DartColorExpression? borderColor,
    $core.double? size,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (backgroundColor != null) {
      $result.backgroundColor = backgroundColor;
    }
    if (borderColor != null) {
      $result.borderColor = borderColor;
    }
    if (size != null) {
      $result.size = size;
    }
    return $result;
  }
  MaterialTabPageSelectorIndicator._() : super();
  factory MaterialTabPageSelectorIndicator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTabPageSelectorIndicator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTabPageSelectorIndicator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'backgroundColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'borderColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'size', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTabPageSelectorIndicator clone() => MaterialTabPageSelectorIndicator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTabPageSelectorIndicator copyWith(void Function(MaterialTabPageSelectorIndicator) updates) => super.copyWith((message) => updates(message as MaterialTabPageSelectorIndicator)) as MaterialTabPageSelectorIndicator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTabPageSelectorIndicator create() => MaterialTabPageSelectorIndicator._();
  MaterialTabPageSelectorIndicator createEmptyInstance() => create();
  static $pb.PbList<MaterialTabPageSelectorIndicator> createRepeated() => $pb.PbList<MaterialTabPageSelectorIndicator>();
  @$core.pragma('dart2js:noInline')
  static MaterialTabPageSelectorIndicator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTabPageSelectorIndicator>(create);
  static MaterialTabPageSelectorIndicator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get backgroundColor => $_getN(1);
  @$pb.TagNumber(3)
  set backgroundColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBackgroundColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearBackgroundColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureBackgroundColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get borderColor => $_getN(2);
  @$pb.TagNumber(4)
  set borderColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBorderColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearBorderColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureBorderColor() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.double get size => $_getN(3);
  @$pb.TagNumber(5)
  set size($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasSize() => $_has(3);
  @$pb.TagNumber(5)
  void clearSize() => clearField(5);
}

/// package:flutter/src/material/text_button.dart
class MaterialTextButton extends $pb.GeneratedMessage {
  factory MaterialTextButton({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    $core.bool? isSemanticButton,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (isSemanticButton != null) {
      $result.isSemanticButton = isSemanticButton;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialTextButton._() : super();
  factory MaterialTextButton.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTextButton.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTextButton', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOB(12, _omitFieldNames ? '' : 'isSemanticButton')
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTextButton clone() => MaterialTextButton()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTextButton copyWith(void Function(MaterialTextButton) updates) => super.copyWith((message) => updates(message as MaterialTextButton)) as MaterialTextButton;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTextButton create() => MaterialTextButton._();
  MaterialTextButton createEmptyInstance() => create();
  static $pb.PbList<MaterialTextButton> createRepeated() => $pb.PbList<MaterialTextButton>();
  @$core.pragma('dart2js:noInline')
  static MaterialTextButton getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTextButton>(create);
  static MaterialTextButton? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  $core.bool get isSemanticButton => $_getBF(2);
  @$pb.TagNumber(12)
  set isSemanticButton($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(12)
  $core.bool hasIsSemanticButton() => $_has(2);
  @$pb.TagNumber(12)
  void clearIsSemanticButton() => clearField(12);

  @$pb.TagNumber(13)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(13)
  set child(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(13)
  void clearChild() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/material/text_button.dart
class MaterialTextButtonNamedIcon extends $pb.GeneratedMessage {
  factory MaterialTextButtonNamedIcon({
    $1.FlutterKeyExpression? key,
    $core.bool? autofocus,
    WidgetExpression? icon,
    WidgetExpression? label,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (icon != null) {
      $result.icon = icon;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  MaterialTextButtonNamedIcon._() : super();
  factory MaterialTextButtonNamedIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTextButtonNamedIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTextButtonNamedIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'autofocus')
    ..aOM<WidgetExpression>(12, _omitFieldNames ? '' : 'icon', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'label', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTextButtonNamedIcon clone() => MaterialTextButtonNamedIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTextButtonNamedIcon copyWith(void Function(MaterialTextButtonNamedIcon) updates) => super.copyWith((message) => updates(message as MaterialTextButtonNamedIcon)) as MaterialTextButtonNamedIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTextButtonNamedIcon create() => MaterialTextButtonNamedIcon._();
  MaterialTextButtonNamedIcon createEmptyInstance() => create();
  static $pb.PbList<MaterialTextButtonNamedIcon> createRepeated() => $pb.PbList<MaterialTextButtonNamedIcon>();
  @$core.pragma('dart2js:noInline')
  static MaterialTextButtonNamedIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTextButtonNamedIcon>(create);
  static MaterialTextButtonNamedIcon? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.bool get autofocus => $_getBF(1);
  @$pb.TagNumber(9)
  set autofocus($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasAutofocus() => $_has(1);
  @$pb.TagNumber(9)
  void clearAutofocus() => clearField(9);

  @$pb.TagNumber(12)
  WidgetExpression get icon => $_getN(2);
  @$pb.TagNumber(12)
  set icon(WidgetExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasIcon() => $_has(2);
  @$pb.TagNumber(12)
  void clearIcon() => clearField(12);
  @$pb.TagNumber(12)
  WidgetExpression ensureIcon() => $_ensure(2);

  @$pb.TagNumber(13)
  WidgetExpression get label => $_getN(3);
  @$pb.TagNumber(13)
  set label(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(13)
  void clearLabel() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureLabel() => $_ensure(3);
}

/// package:flutter/src/material/text_field.dart
class MaterialTextField extends $pb.GeneratedMessage {
  factory MaterialTextField({
    $1.FlutterKeyExpression? key,
    $core.bool? readOnly,
    $core.bool? showCursor,
    $core.bool? autofocus,
    $core.String? obscuringCharacter,
    $core.bool? obscureText,
    $core.bool? autocorrect,
    $core.bool? enableSuggestions,
    $core.int? maxLines,
    $core.int? minLines,
    $core.bool? expands,
    $core.int? maxLength,
    $core.bool? enabled,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $core.bool? cursorOpacityAnimates,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.Iterable<$core.String>? autofillHints,
    $core.String? restorationId,
    $core.bool? scribbleEnabled,
    $core.bool? enableIMEPersonalizedLearning,
    $core.bool? canRequestFocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (obscuringCharacter != null) {
      $result.obscuringCharacter = obscuringCharacter;
    }
    if (obscureText != null) {
      $result.obscureText = obscureText;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enableSuggestions != null) {
      $result.enableSuggestions = enableSuggestions;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (expands != null) {
      $result.expands = expands;
    }
    if (maxLength != null) {
      $result.maxLength = maxLength;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorOpacityAnimates != null) {
      $result.cursorOpacityAnimates = cursorOpacityAnimates;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (autofillHints != null) {
      $result.autofillHints.addAll(autofillHints);
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (scribbleEnabled != null) {
      $result.scribbleEnabled = scribbleEnabled;
    }
    if (enableIMEPersonalizedLearning != null) {
      $result.enableIMEPersonalizedLearning = enableIMEPersonalizedLearning;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    return $result;
  }
  MaterialTextField._() : super();
  factory MaterialTextField.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTextField.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTextField', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(15, _omitFieldNames ? '' : 'readOnly')
    ..aOB(16, _omitFieldNames ? '' : 'showCursor')
    ..aOB(17, _omitFieldNames ? '' : 'autofocus')
    ..aOS(18, _omitFieldNames ? '' : 'obscuringCharacter')
    ..aOB(19, _omitFieldNames ? '' : 'obscureText')
    ..aOB(20, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(23, _omitFieldNames ? '' : 'enableSuggestions')
    ..a<$core.int>(24, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.int>(25, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..aOB(26, _omitFieldNames ? '' : 'expands')
    ..a<$core.int>(27, _omitFieldNames ? '' : 'maxLength', $pb.PbFieldType.O3)
    ..aOB(34, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(35, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(36, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOB(38, _omitFieldNames ? '' : 'cursorOpacityAnimates')
    ..aOM<$1.DartColorExpression>(39, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(45, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..pPS(53, _omitFieldNames ? '' : 'autofillHints')
    ..aOS(56, _omitFieldNames ? '' : 'restorationId')
    ..aOB(57, _omitFieldNames ? '' : 'scribbleEnabled')
    ..aOB(58, _omitFieldNames ? '' : 'enableIMEPersonalizedLearning')
    ..aOB(60, _omitFieldNames ? '' : 'canRequestFocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTextField clone() => MaterialTextField()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTextField copyWith(void Function(MaterialTextField) updates) => super.copyWith((message) => updates(message as MaterialTextField)) as MaterialTextField;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTextField create() => MaterialTextField._();
  MaterialTextField createEmptyInstance() => create();
  static $pb.PbList<MaterialTextField> createRepeated() => $pb.PbList<MaterialTextField>();
  @$core.pragma('dart2js:noInline')
  static MaterialTextField getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTextField>(create);
  static MaterialTextField? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(15)
  $core.bool get readOnly => $_getBF(1);
  @$pb.TagNumber(15)
  set readOnly($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(15)
  $core.bool hasReadOnly() => $_has(1);
  @$pb.TagNumber(15)
  void clearReadOnly() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get showCursor => $_getBF(2);
  @$pb.TagNumber(16)
  set showCursor($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(16)
  $core.bool hasShowCursor() => $_has(2);
  @$pb.TagNumber(16)
  void clearShowCursor() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get autofocus => $_getBF(3);
  @$pb.TagNumber(17)
  set autofocus($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(17)
  $core.bool hasAutofocus() => $_has(3);
  @$pb.TagNumber(17)
  void clearAutofocus() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get obscuringCharacter => $_getSZ(4);
  @$pb.TagNumber(18)
  set obscuringCharacter($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(18)
  $core.bool hasObscuringCharacter() => $_has(4);
  @$pb.TagNumber(18)
  void clearObscuringCharacter() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get obscureText => $_getBF(5);
  @$pb.TagNumber(19)
  set obscureText($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(19)
  $core.bool hasObscureText() => $_has(5);
  @$pb.TagNumber(19)
  void clearObscureText() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get autocorrect => $_getBF(6);
  @$pb.TagNumber(20)
  set autocorrect($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(20)
  $core.bool hasAutocorrect() => $_has(6);
  @$pb.TagNumber(20)
  void clearAutocorrect() => clearField(20);

  @$pb.TagNumber(23)
  $core.bool get enableSuggestions => $_getBF(7);
  @$pb.TagNumber(23)
  set enableSuggestions($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(23)
  $core.bool hasEnableSuggestions() => $_has(7);
  @$pb.TagNumber(23)
  void clearEnableSuggestions() => clearField(23);

  @$pb.TagNumber(24)
  $core.int get maxLines => $_getIZ(8);
  @$pb.TagNumber(24)
  set maxLines($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(24)
  $core.bool hasMaxLines() => $_has(8);
  @$pb.TagNumber(24)
  void clearMaxLines() => clearField(24);

  @$pb.TagNumber(25)
  $core.int get minLines => $_getIZ(9);
  @$pb.TagNumber(25)
  set minLines($core.int v) { $_setSignedInt32(9, v); }
  @$pb.TagNumber(25)
  $core.bool hasMinLines() => $_has(9);
  @$pb.TagNumber(25)
  void clearMinLines() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get expands => $_getBF(10);
  @$pb.TagNumber(26)
  set expands($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(26)
  $core.bool hasExpands() => $_has(10);
  @$pb.TagNumber(26)
  void clearExpands() => clearField(26);

  @$pb.TagNumber(27)
  $core.int get maxLength => $_getIZ(11);
  @$pb.TagNumber(27)
  set maxLength($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(27)
  $core.bool hasMaxLength() => $_has(11);
  @$pb.TagNumber(27)
  void clearMaxLength() => clearField(27);

  @$pb.TagNumber(34)
  $core.bool get enabled => $_getBF(12);
  @$pb.TagNumber(34)
  set enabled($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(34)
  $core.bool hasEnabled() => $_has(12);
  @$pb.TagNumber(34)
  void clearEnabled() => clearField(34);

  @$pb.TagNumber(35)
  $core.double get cursorWidth => $_getN(13);
  @$pb.TagNumber(35)
  set cursorWidth($core.double v) { $_setDouble(13, v); }
  @$pb.TagNumber(35)
  $core.bool hasCursorWidth() => $_has(13);
  @$pb.TagNumber(35)
  void clearCursorWidth() => clearField(35);

  @$pb.TagNumber(36)
  $core.double get cursorHeight => $_getN(14);
  @$pb.TagNumber(36)
  set cursorHeight($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(36)
  $core.bool hasCursorHeight() => $_has(14);
  @$pb.TagNumber(36)
  void clearCursorHeight() => clearField(36);

  @$pb.TagNumber(38)
  $core.bool get cursorOpacityAnimates => $_getBF(15);
  @$pb.TagNumber(38)
  set cursorOpacityAnimates($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(38)
  $core.bool hasCursorOpacityAnimates() => $_has(15);
  @$pb.TagNumber(38)
  void clearCursorOpacityAnimates() => clearField(38);

  @$pb.TagNumber(39)
  $1.DartColorExpression get cursorColor => $_getN(16);
  @$pb.TagNumber(39)
  set cursorColor($1.DartColorExpression v) { setField(39, v); }
  @$pb.TagNumber(39)
  $core.bool hasCursorColor() => $_has(16);
  @$pb.TagNumber(39)
  void clearCursorColor() => clearField(39);
  @$pb.TagNumber(39)
  $1.DartColorExpression ensureCursorColor() => $_ensure(16);

  @$pb.TagNumber(45)
  $core.bool get enableInteractiveSelection => $_getBF(17);
  @$pb.TagNumber(45)
  set enableInteractiveSelection($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(45)
  $core.bool hasEnableInteractiveSelection() => $_has(17);
  @$pb.TagNumber(45)
  void clearEnableInteractiveSelection() => clearField(45);

  @$pb.TagNumber(53)
  $core.List<$core.String> get autofillHints => $_getList(18);

  @$pb.TagNumber(56)
  $core.String get restorationId => $_getSZ(19);
  @$pb.TagNumber(56)
  set restorationId($core.String v) { $_setString(19, v); }
  @$pb.TagNumber(56)
  $core.bool hasRestorationId() => $_has(19);
  @$pb.TagNumber(56)
  void clearRestorationId() => clearField(56);

  @$pb.TagNumber(57)
  $core.bool get scribbleEnabled => $_getBF(20);
  @$pb.TagNumber(57)
  set scribbleEnabled($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(57)
  $core.bool hasScribbleEnabled() => $_has(20);
  @$pb.TagNumber(57)
  void clearScribbleEnabled() => clearField(57);

  @$pb.TagNumber(58)
  $core.bool get enableIMEPersonalizedLearning => $_getBF(21);
  @$pb.TagNumber(58)
  set enableIMEPersonalizedLearning($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(58)
  $core.bool hasEnableIMEPersonalizedLearning() => $_has(21);
  @$pb.TagNumber(58)
  void clearEnableIMEPersonalizedLearning() => clearField(58);

  @$pb.TagNumber(60)
  $core.bool get canRequestFocus => $_getBF(22);
  @$pb.TagNumber(60)
  set canRequestFocus($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(60)
  $core.bool hasCanRequestFocus() => $_has(22);
  @$pb.TagNumber(60)
  void clearCanRequestFocus() => clearField(60);
}

/// package:flutter/src/material/text_form_field.dart
class MaterialTextFormField extends $pb.GeneratedMessage {
  factory MaterialTextFormField({
    $1.FlutterKeyExpression? key,
    $core.String? initialValue,
    $core.bool? autofocus,
    $core.bool? readOnly,
    $core.bool? showCursor,
    $core.String? obscuringCharacter,
    $core.bool? obscureText,
    $core.bool? autocorrect,
    $core.bool? enableSuggestions,
    $core.int? maxLines,
    $core.int? minLines,
    $core.bool? expands,
    $core.int? maxLength,
    $core.bool? enabled,
    $core.double? cursorWidth,
    $core.double? cursorHeight,
    $1.DartColorExpression? cursorColor,
    $core.bool? enableInteractiveSelection,
    $core.Iterable<$core.String>? autofillHints,
    $core.String? restorationId,
    $core.bool? enableIMEPersonalizedLearning,
    $core.bool? cursorOpacityAnimates,
    $core.bool? scribbleEnabled,
    $core.bool? canRequestFocus,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (initialValue != null) {
      $result.initialValue = initialValue;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (showCursor != null) {
      $result.showCursor = showCursor;
    }
    if (obscuringCharacter != null) {
      $result.obscuringCharacter = obscuringCharacter;
    }
    if (obscureText != null) {
      $result.obscureText = obscureText;
    }
    if (autocorrect != null) {
      $result.autocorrect = autocorrect;
    }
    if (enableSuggestions != null) {
      $result.enableSuggestions = enableSuggestions;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (minLines != null) {
      $result.minLines = minLines;
    }
    if (expands != null) {
      $result.expands = expands;
    }
    if (maxLength != null) {
      $result.maxLength = maxLength;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (cursorWidth != null) {
      $result.cursorWidth = cursorWidth;
    }
    if (cursorHeight != null) {
      $result.cursorHeight = cursorHeight;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (enableInteractiveSelection != null) {
      $result.enableInteractiveSelection = enableInteractiveSelection;
    }
    if (autofillHints != null) {
      $result.autofillHints.addAll(autofillHints);
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (enableIMEPersonalizedLearning != null) {
      $result.enableIMEPersonalizedLearning = enableIMEPersonalizedLearning;
    }
    if (cursorOpacityAnimates != null) {
      $result.cursorOpacityAnimates = cursorOpacityAnimates;
    }
    if (scribbleEnabled != null) {
      $result.scribbleEnabled = scribbleEnabled;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    return $result;
  }
  MaterialTextFormField._() : super();
  factory MaterialTextFormField.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTextFormField.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTextFormField', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'initialValue')
    ..aOB(15, _omitFieldNames ? '' : 'autofocus')
    ..aOB(16, _omitFieldNames ? '' : 'readOnly')
    ..aOB(17, _omitFieldNames ? '' : 'showCursor')
    ..aOS(18, _omitFieldNames ? '' : 'obscuringCharacter')
    ..aOB(19, _omitFieldNames ? '' : 'obscureText')
    ..aOB(20, _omitFieldNames ? '' : 'autocorrect')
    ..aOB(23, _omitFieldNames ? '' : 'enableSuggestions')
    ..a<$core.int>(25, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..a<$core.int>(26, _omitFieldNames ? '' : 'minLines', $pb.PbFieldType.O3)
    ..aOB(27, _omitFieldNames ? '' : 'expands')
    ..a<$core.int>(28, _omitFieldNames ? '' : 'maxLength', $pb.PbFieldType.O3)
    ..aOB(37, _omitFieldNames ? '' : 'enabled')
    ..a<$core.double>(38, _omitFieldNames ? '' : 'cursorWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(39, _omitFieldNames ? '' : 'cursorHeight', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(41, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(44, _omitFieldNames ? '' : 'enableInteractiveSelection')
    ..pPS(48, _omitFieldNames ? '' : 'autofillHints')
    ..aOS(51, _omitFieldNames ? '' : 'restorationId')
    ..aOB(52, _omitFieldNames ? '' : 'enableIMEPersonalizedLearning')
    ..aOB(59, _omitFieldNames ? '' : 'cursorOpacityAnimates')
    ..aOB(65, _omitFieldNames ? '' : 'scribbleEnabled')
    ..aOB(66, _omitFieldNames ? '' : 'canRequestFocus')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTextFormField clone() => MaterialTextFormField()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTextFormField copyWith(void Function(MaterialTextFormField) updates) => super.copyWith((message) => updates(message as MaterialTextFormField)) as MaterialTextFormField;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTextFormField create() => MaterialTextFormField._();
  MaterialTextFormField createEmptyInstance() => create();
  static $pb.PbList<MaterialTextFormField> createRepeated() => $pb.PbList<MaterialTextFormField>();
  @$core.pragma('dart2js:noInline')
  static MaterialTextFormField getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTextFormField>(create);
  static MaterialTextFormField? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.String get initialValue => $_getSZ(1);
  @$pb.TagNumber(4)
  set initialValue($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasInitialValue() => $_has(1);
  @$pb.TagNumber(4)
  void clearInitialValue() => clearField(4);

  @$pb.TagNumber(15)
  $core.bool get autofocus => $_getBF(2);
  @$pb.TagNumber(15)
  set autofocus($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(15)
  $core.bool hasAutofocus() => $_has(2);
  @$pb.TagNumber(15)
  void clearAutofocus() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get readOnly => $_getBF(3);
  @$pb.TagNumber(16)
  set readOnly($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(16)
  $core.bool hasReadOnly() => $_has(3);
  @$pb.TagNumber(16)
  void clearReadOnly() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get showCursor => $_getBF(4);
  @$pb.TagNumber(17)
  set showCursor($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(17)
  $core.bool hasShowCursor() => $_has(4);
  @$pb.TagNumber(17)
  void clearShowCursor() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get obscuringCharacter => $_getSZ(5);
  @$pb.TagNumber(18)
  set obscuringCharacter($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(18)
  $core.bool hasObscuringCharacter() => $_has(5);
  @$pb.TagNumber(18)
  void clearObscuringCharacter() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get obscureText => $_getBF(6);
  @$pb.TagNumber(19)
  set obscureText($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(19)
  $core.bool hasObscureText() => $_has(6);
  @$pb.TagNumber(19)
  void clearObscureText() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get autocorrect => $_getBF(7);
  @$pb.TagNumber(20)
  set autocorrect($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(20)
  $core.bool hasAutocorrect() => $_has(7);
  @$pb.TagNumber(20)
  void clearAutocorrect() => clearField(20);

  @$pb.TagNumber(23)
  $core.bool get enableSuggestions => $_getBF(8);
  @$pb.TagNumber(23)
  set enableSuggestions($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(23)
  $core.bool hasEnableSuggestions() => $_has(8);
  @$pb.TagNumber(23)
  void clearEnableSuggestions() => clearField(23);

  @$pb.TagNumber(25)
  $core.int get maxLines => $_getIZ(9);
  @$pb.TagNumber(25)
  set maxLines($core.int v) { $_setSignedInt32(9, v); }
  @$pb.TagNumber(25)
  $core.bool hasMaxLines() => $_has(9);
  @$pb.TagNumber(25)
  void clearMaxLines() => clearField(25);

  @$pb.TagNumber(26)
  $core.int get minLines => $_getIZ(10);
  @$pb.TagNumber(26)
  set minLines($core.int v) { $_setSignedInt32(10, v); }
  @$pb.TagNumber(26)
  $core.bool hasMinLines() => $_has(10);
  @$pb.TagNumber(26)
  void clearMinLines() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get expands => $_getBF(11);
  @$pb.TagNumber(27)
  set expands($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(27)
  $core.bool hasExpands() => $_has(11);
  @$pb.TagNumber(27)
  void clearExpands() => clearField(27);

  @$pb.TagNumber(28)
  $core.int get maxLength => $_getIZ(12);
  @$pb.TagNumber(28)
  set maxLength($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(28)
  $core.bool hasMaxLength() => $_has(12);
  @$pb.TagNumber(28)
  void clearMaxLength() => clearField(28);

  @$pb.TagNumber(37)
  $core.bool get enabled => $_getBF(13);
  @$pb.TagNumber(37)
  set enabled($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(37)
  $core.bool hasEnabled() => $_has(13);
  @$pb.TagNumber(37)
  void clearEnabled() => clearField(37);

  @$pb.TagNumber(38)
  $core.double get cursorWidth => $_getN(14);
  @$pb.TagNumber(38)
  set cursorWidth($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(38)
  $core.bool hasCursorWidth() => $_has(14);
  @$pb.TagNumber(38)
  void clearCursorWidth() => clearField(38);

  @$pb.TagNumber(39)
  $core.double get cursorHeight => $_getN(15);
  @$pb.TagNumber(39)
  set cursorHeight($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(39)
  $core.bool hasCursorHeight() => $_has(15);
  @$pb.TagNumber(39)
  void clearCursorHeight() => clearField(39);

  @$pb.TagNumber(41)
  $1.DartColorExpression get cursorColor => $_getN(16);
  @$pb.TagNumber(41)
  set cursorColor($1.DartColorExpression v) { setField(41, v); }
  @$pb.TagNumber(41)
  $core.bool hasCursorColor() => $_has(16);
  @$pb.TagNumber(41)
  void clearCursorColor() => clearField(41);
  @$pb.TagNumber(41)
  $1.DartColorExpression ensureCursorColor() => $_ensure(16);

  @$pb.TagNumber(44)
  $core.bool get enableInteractiveSelection => $_getBF(17);
  @$pb.TagNumber(44)
  set enableInteractiveSelection($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(44)
  $core.bool hasEnableInteractiveSelection() => $_has(17);
  @$pb.TagNumber(44)
  void clearEnableInteractiveSelection() => clearField(44);

  @$pb.TagNumber(48)
  $core.List<$core.String> get autofillHints => $_getList(18);

  @$pb.TagNumber(51)
  $core.String get restorationId => $_getSZ(19);
  @$pb.TagNumber(51)
  set restorationId($core.String v) { $_setString(19, v); }
  @$pb.TagNumber(51)
  $core.bool hasRestorationId() => $_has(19);
  @$pb.TagNumber(51)
  void clearRestorationId() => clearField(51);

  @$pb.TagNumber(52)
  $core.bool get enableIMEPersonalizedLearning => $_getBF(20);
  @$pb.TagNumber(52)
  set enableIMEPersonalizedLearning($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(52)
  $core.bool hasEnableIMEPersonalizedLearning() => $_has(20);
  @$pb.TagNumber(52)
  void clearEnableIMEPersonalizedLearning() => clearField(52);

  @$pb.TagNumber(59)
  $core.bool get cursorOpacityAnimates => $_getBF(21);
  @$pb.TagNumber(59)
  set cursorOpacityAnimates($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(59)
  $core.bool hasCursorOpacityAnimates() => $_has(21);
  @$pb.TagNumber(59)
  void clearCursorOpacityAnimates() => clearField(59);

  @$pb.TagNumber(65)
  $core.bool get scribbleEnabled => $_getBF(22);
  @$pb.TagNumber(65)
  set scribbleEnabled($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(65)
  $core.bool hasScribbleEnabled() => $_has(22);
  @$pb.TagNumber(65)
  void clearScribbleEnabled() => clearField(65);

  @$pb.TagNumber(66)
  $core.bool get canRequestFocus => $_getBF(23);
  @$pb.TagNumber(66)
  set canRequestFocus($core.bool v) { $_setBool(23, v); }
  @$pb.TagNumber(66)
  $core.bool hasCanRequestFocus() => $_has(23);
  @$pb.TagNumber(66)
  void clearCanRequestFocus() => clearField(66);
}

/// package:flutter/src/material/toggle_buttons.dart
class MaterialToggleButtons extends $pb.GeneratedMessage {
  factory MaterialToggleButtons({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    $core.Iterable<$core.bool>? isSelected,
    $1.DartColorExpression? color,
    $1.DartColorExpression? selectedColor,
    $1.DartColorExpression? disabledColor,
    $1.DartColorExpression? fillColor,
    $1.DartColorExpression? focusColor,
    $1.DartColorExpression? highlightColor,
    $1.DartColorExpression? hoverColor,
    $1.DartColorExpression? splashColor,
    $core.bool? renderBorder,
    $1.DartColorExpression? borderColor,
    $1.DartColorExpression? selectedBorderColor,
    $1.DartColorExpression? disabledBorderColor,
    $core.double? borderWidth,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (isSelected != null) {
      $result.isSelected.addAll(isSelected);
    }
    if (color != null) {
      $result.color = color;
    }
    if (selectedColor != null) {
      $result.selectedColor = selectedColor;
    }
    if (disabledColor != null) {
      $result.disabledColor = disabledColor;
    }
    if (fillColor != null) {
      $result.fillColor = fillColor;
    }
    if (focusColor != null) {
      $result.focusColor = focusColor;
    }
    if (highlightColor != null) {
      $result.highlightColor = highlightColor;
    }
    if (hoverColor != null) {
      $result.hoverColor = hoverColor;
    }
    if (splashColor != null) {
      $result.splashColor = splashColor;
    }
    if (renderBorder != null) {
      $result.renderBorder = renderBorder;
    }
    if (borderColor != null) {
      $result.borderColor = borderColor;
    }
    if (selectedBorderColor != null) {
      $result.selectedBorderColor = selectedBorderColor;
    }
    if (disabledBorderColor != null) {
      $result.disabledBorderColor = disabledBorderColor;
    }
    if (borderWidth != null) {
      $result.borderWidth = borderWidth;
    }
    return $result;
  }
  MaterialToggleButtons._() : super();
  factory MaterialToggleButtons.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialToggleButtons.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialToggleButtons', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..p<$core.bool>(4, _omitFieldNames ? '' : 'isSelected', $pb.PbFieldType.KB)
    ..aOM<$1.DartColorExpression>(10, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(11, _omitFieldNames ? '' : 'selectedColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'disabledColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(13, _omitFieldNames ? '' : 'fillColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'focusColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'highlightColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'hoverColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(17, _omitFieldNames ? '' : 'splashColor', subBuilder: $1.DartColorExpression.create)
    ..aOB(19, _omitFieldNames ? '' : 'renderBorder')
    ..aOM<$1.DartColorExpression>(20, _omitFieldNames ? '' : 'borderColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(21, _omitFieldNames ? '' : 'selectedBorderColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(22, _omitFieldNames ? '' : 'disabledBorderColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(24, _omitFieldNames ? '' : 'borderWidth', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialToggleButtons clone() => MaterialToggleButtons()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialToggleButtons copyWith(void Function(MaterialToggleButtons) updates) => super.copyWith((message) => updates(message as MaterialToggleButtons)) as MaterialToggleButtons;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialToggleButtons create() => MaterialToggleButtons._();
  MaterialToggleButtons createEmptyInstance() => create();
  static $pb.PbList<MaterialToggleButtons> createRepeated() => $pb.PbList<MaterialToggleButtons>();
  @$core.pragma('dart2js:noInline')
  static MaterialToggleButtons getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialToggleButtons>(create);
  static MaterialToggleButtons? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  $core.List<$core.bool> get isSelected => $_getList(2);

  @$pb.TagNumber(10)
  $1.DartColorExpression get color => $_getN(3);
  @$pb.TagNumber(10)
  set color($1.DartColorExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasColor() => $_has(3);
  @$pb.TagNumber(10)
  void clearColor() => clearField(10);
  @$pb.TagNumber(10)
  $1.DartColorExpression ensureColor() => $_ensure(3);

  @$pb.TagNumber(11)
  $1.DartColorExpression get selectedColor => $_getN(4);
  @$pb.TagNumber(11)
  set selectedColor($1.DartColorExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasSelectedColor() => $_has(4);
  @$pb.TagNumber(11)
  void clearSelectedColor() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartColorExpression ensureSelectedColor() => $_ensure(4);

  @$pb.TagNumber(12)
  $1.DartColorExpression get disabledColor => $_getN(5);
  @$pb.TagNumber(12)
  set disabledColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasDisabledColor() => $_has(5);
  @$pb.TagNumber(12)
  void clearDisabledColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureDisabledColor() => $_ensure(5);

  @$pb.TagNumber(13)
  $1.DartColorExpression get fillColor => $_getN(6);
  @$pb.TagNumber(13)
  set fillColor($1.DartColorExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasFillColor() => $_has(6);
  @$pb.TagNumber(13)
  void clearFillColor() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartColorExpression ensureFillColor() => $_ensure(6);

  @$pb.TagNumber(14)
  $1.DartColorExpression get focusColor => $_getN(7);
  @$pb.TagNumber(14)
  set focusColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasFocusColor() => $_has(7);
  @$pb.TagNumber(14)
  void clearFocusColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureFocusColor() => $_ensure(7);

  @$pb.TagNumber(15)
  $1.DartColorExpression get highlightColor => $_getN(8);
  @$pb.TagNumber(15)
  set highlightColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasHighlightColor() => $_has(8);
  @$pb.TagNumber(15)
  void clearHighlightColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureHighlightColor() => $_ensure(8);

  @$pb.TagNumber(16)
  $1.DartColorExpression get hoverColor => $_getN(9);
  @$pb.TagNumber(16)
  set hoverColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasHoverColor() => $_has(9);
  @$pb.TagNumber(16)
  void clearHoverColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureHoverColor() => $_ensure(9);

  @$pb.TagNumber(17)
  $1.DartColorExpression get splashColor => $_getN(10);
  @$pb.TagNumber(17)
  set splashColor($1.DartColorExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasSplashColor() => $_has(10);
  @$pb.TagNumber(17)
  void clearSplashColor() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartColorExpression ensureSplashColor() => $_ensure(10);

  @$pb.TagNumber(19)
  $core.bool get renderBorder => $_getBF(11);
  @$pb.TagNumber(19)
  set renderBorder($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(19)
  $core.bool hasRenderBorder() => $_has(11);
  @$pb.TagNumber(19)
  void clearRenderBorder() => clearField(19);

  @$pb.TagNumber(20)
  $1.DartColorExpression get borderColor => $_getN(12);
  @$pb.TagNumber(20)
  set borderColor($1.DartColorExpression v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasBorderColor() => $_has(12);
  @$pb.TagNumber(20)
  void clearBorderColor() => clearField(20);
  @$pb.TagNumber(20)
  $1.DartColorExpression ensureBorderColor() => $_ensure(12);

  @$pb.TagNumber(21)
  $1.DartColorExpression get selectedBorderColor => $_getN(13);
  @$pb.TagNumber(21)
  set selectedBorderColor($1.DartColorExpression v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasSelectedBorderColor() => $_has(13);
  @$pb.TagNumber(21)
  void clearSelectedBorderColor() => clearField(21);
  @$pb.TagNumber(21)
  $1.DartColorExpression ensureSelectedBorderColor() => $_ensure(13);

  @$pb.TagNumber(22)
  $1.DartColorExpression get disabledBorderColor => $_getN(14);
  @$pb.TagNumber(22)
  set disabledBorderColor($1.DartColorExpression v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasDisabledBorderColor() => $_has(14);
  @$pb.TagNumber(22)
  void clearDisabledBorderColor() => clearField(22);
  @$pb.TagNumber(22)
  $1.DartColorExpression ensureDisabledBorderColor() => $_ensure(14);

  @$pb.TagNumber(24)
  $core.double get borderWidth => $_getN(15);
  @$pb.TagNumber(24)
  set borderWidth($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(24)
  $core.bool hasBorderWidth() => $_has(15);
  @$pb.TagNumber(24)
  void clearBorderWidth() => clearField(24);
}

/// package:flutter/src/material/tooltip.dart
class MaterialTooltip extends $pb.GeneratedMessage {
  factory MaterialTooltip({
    $1.FlutterKeyExpression? key,
    $core.String? message,
    $core.double? height,
    $core.double? verticalOffset,
    $core.bool? preferBelow,
    $core.bool? excludeFromSemantics,
    $1.DartDurationExpression? waitDuration,
    $1.DartDurationExpression? showDuration,
    $core.bool? enableFeedback,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (message != null) {
      $result.message = message;
    }
    if (height != null) {
      $result.height = height;
    }
    if (verticalOffset != null) {
      $result.verticalOffset = verticalOffset;
    }
    if (preferBelow != null) {
      $result.preferBelow = preferBelow;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (waitDuration != null) {
      $result.waitDuration = waitDuration;
    }
    if (showDuration != null) {
      $result.showDuration = showDuration;
    }
    if (enableFeedback != null) {
      $result.enableFeedback = enableFeedback;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialTooltip._() : super();
  factory MaterialTooltip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTooltip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTooltip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'message')
    ..a<$core.double>(5, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'verticalOffset', $pb.PbFieldType.OD)
    ..aOB(9, _omitFieldNames ? '' : 'preferBelow')
    ..aOB(10, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..aOM<$1.DartDurationExpression>(14, _omitFieldNames ? '' : 'waitDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(15, _omitFieldNames ? '' : 'showDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(17, _omitFieldNames ? '' : 'enableFeedback')
    ..aOM<WidgetExpression>(19, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTooltip clone() => MaterialTooltip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTooltip copyWith(void Function(MaterialTooltip) updates) => super.copyWith((message) => updates(message as MaterialTooltip)) as MaterialTooltip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTooltip create() => MaterialTooltip._();
  MaterialTooltip createEmptyInstance() => create();
  static $pb.PbList<MaterialTooltip> createRepeated() => $pb.PbList<MaterialTooltip>();
  @$core.pragma('dart2js:noInline')
  static MaterialTooltip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTooltip>(create);
  static MaterialTooltip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get message => $_getSZ(1);
  @$pb.TagNumber(3)
  set message($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasMessage() => $_has(1);
  @$pb.TagNumber(3)
  void clearMessage() => clearField(3);

  @$pb.TagNumber(5)
  $core.double get height => $_getN(2);
  @$pb.TagNumber(5)
  set height($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasHeight() => $_has(2);
  @$pb.TagNumber(5)
  void clearHeight() => clearField(5);

  @$pb.TagNumber(8)
  $core.double get verticalOffset => $_getN(3);
  @$pb.TagNumber(8)
  set verticalOffset($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasVerticalOffset() => $_has(3);
  @$pb.TagNumber(8)
  void clearVerticalOffset() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get preferBelow => $_getBF(4);
  @$pb.TagNumber(9)
  set preferBelow($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasPreferBelow() => $_has(4);
  @$pb.TagNumber(9)
  void clearPreferBelow() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get excludeFromSemantics => $_getBF(5);
  @$pb.TagNumber(10)
  set excludeFromSemantics($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasExcludeFromSemantics() => $_has(5);
  @$pb.TagNumber(10)
  void clearExcludeFromSemantics() => clearField(10);

  @$pb.TagNumber(14)
  $1.DartDurationExpression get waitDuration => $_getN(6);
  @$pb.TagNumber(14)
  set waitDuration($1.DartDurationExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasWaitDuration() => $_has(6);
  @$pb.TagNumber(14)
  void clearWaitDuration() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartDurationExpression ensureWaitDuration() => $_ensure(6);

  @$pb.TagNumber(15)
  $1.DartDurationExpression get showDuration => $_getN(7);
  @$pb.TagNumber(15)
  set showDuration($1.DartDurationExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasShowDuration() => $_has(7);
  @$pb.TagNumber(15)
  void clearShowDuration() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartDurationExpression ensureShowDuration() => $_ensure(7);

  @$pb.TagNumber(17)
  $core.bool get enableFeedback => $_getBF(8);
  @$pb.TagNumber(17)
  set enableFeedback($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(17)
  $core.bool hasEnableFeedback() => $_has(8);
  @$pb.TagNumber(17)
  void clearEnableFeedback() => clearField(17);

  @$pb.TagNumber(19)
  WidgetExpression get child => $_getN(9);
  @$pb.TagNumber(19)
  set child(WidgetExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasChild() => $_has(9);
  @$pb.TagNumber(19)
  void clearChild() => clearField(19);
  @$pb.TagNumber(19)
  WidgetExpression ensureChild() => $_ensure(9);
}

/// package:flutter/src/material/tooltip_visibility.dart
class MaterialTooltipVisibility extends $pb.GeneratedMessage {
  factory MaterialTooltipVisibility({
    $1.FlutterKeyExpression? key,
    $core.bool? visible,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (visible != null) {
      $result.visible = visible;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  MaterialTooltipVisibility._() : super();
  factory MaterialTooltipVisibility.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialTooltipVisibility.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialTooltipVisibility', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'visible')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialTooltipVisibility clone() => MaterialTooltipVisibility()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialTooltipVisibility copyWith(void Function(MaterialTooltipVisibility) updates) => super.copyWith((message) => updates(message as MaterialTooltipVisibility)) as MaterialTooltipVisibility;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialTooltipVisibility create() => MaterialTooltipVisibility._();
  MaterialTooltipVisibility createEmptyInstance() => create();
  static $pb.PbList<MaterialTooltipVisibility> createRepeated() => $pb.PbList<MaterialTooltipVisibility>();
  @$core.pragma('dart2js:noInline')
  static MaterialTooltipVisibility getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialTooltipVisibility>(create);
  static MaterialTooltipVisibility? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get visible => $_getBF(1);
  @$pb.TagNumber(3)
  set visible($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasVisible() => $_has(1);
  @$pb.TagNumber(3)
  void clearVisible() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/material/user_accounts_drawer_header.dart
class MaterialUserAccountsDrawerHeader extends $pb.GeneratedMessage {
  factory MaterialUserAccountsDrawerHeader({
    $1.FlutterKeyExpression? key,
    WidgetExpression? currentAccountPicture,
    $core.Iterable<WidgetExpression>? otherAccountsPictures,
    WidgetExpression? accountName,
    WidgetExpression? accountEmail,
    $1.DartColorExpression? arrowColor,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (currentAccountPicture != null) {
      $result.currentAccountPicture = currentAccountPicture;
    }
    if (otherAccountsPictures != null) {
      $result.otherAccountsPictures.addAll(otherAccountsPictures);
    }
    if (accountName != null) {
      $result.accountName = accountName;
    }
    if (accountEmail != null) {
      $result.accountEmail = accountEmail;
    }
    if (arrowColor != null) {
      $result.arrowColor = arrowColor;
    }
    return $result;
  }
  MaterialUserAccountsDrawerHeader._() : super();
  factory MaterialUserAccountsDrawerHeader.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MaterialUserAccountsDrawerHeader.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MaterialUserAccountsDrawerHeader', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'currentAccountPicture', subBuilder: WidgetExpression.create)
    ..pc<WidgetExpression>(6, _omitFieldNames ? '' : 'otherAccountsPictures', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'accountName', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'accountEmail', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'arrowColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MaterialUserAccountsDrawerHeader clone() => MaterialUserAccountsDrawerHeader()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MaterialUserAccountsDrawerHeader copyWith(void Function(MaterialUserAccountsDrawerHeader) updates) => super.copyWith((message) => updates(message as MaterialUserAccountsDrawerHeader)) as MaterialUserAccountsDrawerHeader;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MaterialUserAccountsDrawerHeader create() => MaterialUserAccountsDrawerHeader._();
  MaterialUserAccountsDrawerHeader createEmptyInstance() => create();
  static $pb.PbList<MaterialUserAccountsDrawerHeader> createRepeated() => $pb.PbList<MaterialUserAccountsDrawerHeader>();
  @$core.pragma('dart2js:noInline')
  static MaterialUserAccountsDrawerHeader getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MaterialUserAccountsDrawerHeader>(create);
  static MaterialUserAccountsDrawerHeader? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get currentAccountPicture => $_getN(1);
  @$pb.TagNumber(5)
  set currentAccountPicture(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasCurrentAccountPicture() => $_has(1);
  @$pb.TagNumber(5)
  void clearCurrentAccountPicture() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureCurrentAccountPicture() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.List<WidgetExpression> get otherAccountsPictures => $_getList(2);

  @$pb.TagNumber(9)
  WidgetExpression get accountName => $_getN(3);
  @$pb.TagNumber(9)
  set accountName(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasAccountName() => $_has(3);
  @$pb.TagNumber(9)
  void clearAccountName() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureAccountName() => $_ensure(3);

  @$pb.TagNumber(10)
  WidgetExpression get accountEmail => $_getN(4);
  @$pb.TagNumber(10)
  set accountEmail(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasAccountEmail() => $_has(4);
  @$pb.TagNumber(10)
  void clearAccountEmail() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureAccountEmail() => $_ensure(4);

  @$pb.TagNumber(12)
  $1.DartColorExpression get arrowColor => $_getN(5);
  @$pb.TagNumber(12)
  set arrowColor($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasArrowColor() => $_has(5);
  @$pb.TagNumber(12)
  void clearArrowColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureArrowColor() => $_ensure(5);
}

/// package:flutter/src/widgets/_platform_selectable_region_context_menu_io.dart
class FlutterPlatformSelectableRegionContextMenu extends $pb.GeneratedMessage {
  factory FlutterPlatformSelectableRegionContextMenu({
    WidgetExpression? child,
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (child != null) {
      $result.child = child;
    }
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterPlatformSelectableRegionContextMenu._() : super();
  factory FlutterPlatformSelectableRegionContextMenu.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPlatformSelectableRegionContextMenu.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPlatformSelectableRegionContextMenu', createEmptyInstance: create)
    ..aOM<WidgetExpression>(2, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPlatformSelectableRegionContextMenu clone() => FlutterPlatformSelectableRegionContextMenu()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPlatformSelectableRegionContextMenu copyWith(void Function(FlutterPlatformSelectableRegionContextMenu) updates) => super.copyWith((message) => updates(message as FlutterPlatformSelectableRegionContextMenu)) as FlutterPlatformSelectableRegionContextMenu;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPlatformSelectableRegionContextMenu create() => FlutterPlatformSelectableRegionContextMenu._();
  FlutterPlatformSelectableRegionContextMenu createEmptyInstance() => create();
  static $pb.PbList<FlutterPlatformSelectableRegionContextMenu> createRepeated() => $pb.PbList<FlutterPlatformSelectableRegionContextMenu>();
  @$core.pragma('dart2js:noInline')
  static FlutterPlatformSelectableRegionContextMenu getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPlatformSelectableRegionContextMenu>(create);
  static FlutterPlatformSelectableRegionContextMenu? _defaultInstance;

  @$pb.TagNumber(2)
  WidgetExpression get child => $_getN(0);
  @$pb.TagNumber(2)
  set child(WidgetExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasChild() => $_has(0);
  @$pb.TagNumber(2)
  void clearChild() => clearField(2);
  @$pb.TagNumber(2)
  WidgetExpression ensureChild() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);
}

/// package:flutter/src/widgets/actions.dart
class FlutterFocusableActionDetector extends $pb.GeneratedMessage {
  factory FlutterFocusableActionDetector({
    $1.FlutterKeyExpression? key,
    $core.bool? enabled,
    $core.bool? autofocus,
    $core.bool? descendantsAreFocusable,
    $core.bool? descendantsAreTraversable,
    $core.bool? includeFocusSemantics,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (descendantsAreFocusable != null) {
      $result.descendantsAreFocusable = descendantsAreFocusable;
    }
    if (descendantsAreTraversable != null) {
      $result.descendantsAreTraversable = descendantsAreTraversable;
    }
    if (includeFocusSemantics != null) {
      $result.includeFocusSemantics = includeFocusSemantics;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterFocusableActionDetector._() : super();
  factory FlutterFocusableActionDetector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFocusableActionDetector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFocusableActionDetector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'enabled')
    ..aOB(5, _omitFieldNames ? '' : 'autofocus')
    ..aOB(6, _omitFieldNames ? '' : 'descendantsAreFocusable')
    ..aOB(7, _omitFieldNames ? '' : 'descendantsAreTraversable')
    ..aOB(14, _omitFieldNames ? '' : 'includeFocusSemantics')
    ..aOM<WidgetExpression>(15, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFocusableActionDetector clone() => FlutterFocusableActionDetector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFocusableActionDetector copyWith(void Function(FlutterFocusableActionDetector) updates) => super.copyWith((message) => updates(message as FlutterFocusableActionDetector)) as FlutterFocusableActionDetector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFocusableActionDetector create() => FlutterFocusableActionDetector._();
  FlutterFocusableActionDetector createEmptyInstance() => create();
  static $pb.PbList<FlutterFocusableActionDetector> createRepeated() => $pb.PbList<FlutterFocusableActionDetector>();
  @$core.pragma('dart2js:noInline')
  static FlutterFocusableActionDetector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFocusableActionDetector>(create);
  static FlutterFocusableActionDetector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get enabled => $_getBF(1);
  @$pb.TagNumber(3)
  set enabled($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasEnabled() => $_has(1);
  @$pb.TagNumber(3)
  void clearEnabled() => clearField(3);

  @$pb.TagNumber(5)
  $core.bool get autofocus => $_getBF(2);
  @$pb.TagNumber(5)
  set autofocus($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasAutofocus() => $_has(2);
  @$pb.TagNumber(5)
  void clearAutofocus() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get descendantsAreFocusable => $_getBF(3);
  @$pb.TagNumber(6)
  set descendantsAreFocusable($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasDescendantsAreFocusable() => $_has(3);
  @$pb.TagNumber(6)
  void clearDescendantsAreFocusable() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get descendantsAreTraversable => $_getBF(4);
  @$pb.TagNumber(7)
  set descendantsAreTraversable($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasDescendantsAreTraversable() => $_has(4);
  @$pb.TagNumber(7)
  void clearDescendantsAreTraversable() => clearField(7);

  @$pb.TagNumber(14)
  $core.bool get includeFocusSemantics => $_getBF(5);
  @$pb.TagNumber(14)
  set includeFocusSemantics($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(14)
  $core.bool hasIncludeFocusSemantics() => $_has(5);
  @$pb.TagNumber(14)
  void clearIncludeFocusSemantics() => clearField(14);

  @$pb.TagNumber(15)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(15)
  set child(WidgetExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(15)
  void clearChild() => clearField(15);
  @$pb.TagNumber(15)
  WidgetExpression ensureChild() => $_ensure(6);
}

/// package:flutter/src/widgets/animated_size.dart
class FlutterAnimatedSize extends $pb.GeneratedMessage {
  factory FlutterAnimatedSize({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartDurationExpression? duration,
    $1.DartDurationExpression? reverseDuration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    if (reverseDuration != null) {
      $result.reverseDuration = reverseDuration;
    }
    return $result;
  }
  FlutterAnimatedSize._() : super();
  factory FlutterAnimatedSize.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedSize.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedSize', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(7, _omitFieldNames ? '' : 'reverseDuration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedSize clone() => FlutterAnimatedSize()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedSize copyWith(void Function(FlutterAnimatedSize) updates) => super.copyWith((message) => updates(message as FlutterAnimatedSize)) as FlutterAnimatedSize;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedSize create() => FlutterAnimatedSize._();
  FlutterAnimatedSize createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedSize> createRepeated() => $pb.PbList<FlutterAnimatedSize>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedSize getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedSize>(create);
  static FlutterAnimatedSize? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get duration => $_getN(2);
  @$pb.TagNumber(6)
  set duration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDuration() => $_has(2);
  @$pb.TagNumber(6)
  void clearDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureDuration() => $_ensure(2);

  @$pb.TagNumber(7)
  $1.DartDurationExpression get reverseDuration => $_getN(3);
  @$pb.TagNumber(7)
  set reverseDuration($1.DartDurationExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasReverseDuration() => $_has(3);
  @$pb.TagNumber(7)
  void clearReverseDuration() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartDurationExpression ensureReverseDuration() => $_ensure(3);
}

/// package:flutter/src/widgets/animated_switcher.dart
class FlutterAnimatedSwitcher extends $pb.GeneratedMessage {
  factory FlutterAnimatedSwitcher({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $1.DartDurationExpression? duration,
    $1.DartDurationExpression? reverseDuration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    if (reverseDuration != null) {
      $result.reverseDuration = reverseDuration;
    }
    return $result;
  }
  FlutterAnimatedSwitcher._() : super();
  factory FlutterAnimatedSwitcher.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedSwitcher.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedSwitcher', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(4, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(5, _omitFieldNames ? '' : 'reverseDuration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedSwitcher clone() => FlutterAnimatedSwitcher()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedSwitcher copyWith(void Function(FlutterAnimatedSwitcher) updates) => super.copyWith((message) => updates(message as FlutterAnimatedSwitcher)) as FlutterAnimatedSwitcher;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedSwitcher create() => FlutterAnimatedSwitcher._();
  FlutterAnimatedSwitcher createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedSwitcher> createRepeated() => $pb.PbList<FlutterAnimatedSwitcher>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedSwitcher getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedSwitcher>(create);
  static FlutterAnimatedSwitcher? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartDurationExpression get duration => $_getN(2);
  @$pb.TagNumber(4)
  set duration($1.DartDurationExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasDuration() => $_has(2);
  @$pb.TagNumber(4)
  void clearDuration() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartDurationExpression ensureDuration() => $_ensure(2);

  @$pb.TagNumber(5)
  $1.DartDurationExpression get reverseDuration => $_getN(3);
  @$pb.TagNumber(5)
  set reverseDuration($1.DartDurationExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasReverseDuration() => $_has(3);
  @$pb.TagNumber(5)
  void clearReverseDuration() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartDurationExpression ensureReverseDuration() => $_ensure(3);
}

/// package:flutter/src/widgets/app.dart
class FlutterWidgetsApp extends $pb.GeneratedMessage {
  factory FlutterWidgetsApp({
    $1.FlutterKeyExpression? key,
    $core.String? initialRoute,
    WidgetExpression? home,
    $core.String? title,
    $1.DartColorExpression? color,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowWidgetInspector,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (initialRoute != null) {
      $result.initialRoute = initialRoute;
    }
    if (home != null) {
      $result.home = home;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowWidgetInspector != null) {
      $result.debugShowWidgetInspector = debugShowWidgetInspector;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  FlutterWidgetsApp._() : super();
  factory FlutterWidgetsApp.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterWidgetsApp.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterWidgetsApp', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(8, _omitFieldNames ? '' : 'initialRoute')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'home', subBuilder: WidgetExpression.create)
    ..aOS(13, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(22, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(23, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(24, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(25, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(26, _omitFieldNames ? '' : 'debugShowWidgetInspector')
    ..aOB(27, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(31, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterWidgetsApp clone() => FlutterWidgetsApp()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterWidgetsApp copyWith(void Function(FlutterWidgetsApp) updates) => super.copyWith((message) => updates(message as FlutterWidgetsApp)) as FlutterWidgetsApp;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterWidgetsApp create() => FlutterWidgetsApp._();
  FlutterWidgetsApp createEmptyInstance() => create();
  static $pb.PbList<FlutterWidgetsApp> createRepeated() => $pb.PbList<FlutterWidgetsApp>();
  @$core.pragma('dart2js:noInline')
  static FlutterWidgetsApp getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterWidgetsApp>(create);
  static FlutterWidgetsApp? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(8)
  $core.String get initialRoute => $_getSZ(1);
  @$pb.TagNumber(8)
  set initialRoute($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(8)
  $core.bool hasInitialRoute() => $_has(1);
  @$pb.TagNumber(8)
  void clearInitialRoute() => clearField(8);

  @$pb.TagNumber(10)
  WidgetExpression get home => $_getN(2);
  @$pb.TagNumber(10)
  set home(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasHome() => $_has(2);
  @$pb.TagNumber(10)
  void clearHome() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureHome() => $_ensure(2);

  @$pb.TagNumber(13)
  $core.String get title => $_getSZ(3);
  @$pb.TagNumber(13)
  set title($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(13)
  $core.bool hasTitle() => $_has(3);
  @$pb.TagNumber(13)
  void clearTitle() => clearField(13);

  @$pb.TagNumber(16)
  $1.DartColorExpression get color => $_getN(4);
  @$pb.TagNumber(16)
  set color($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasColor() => $_has(4);
  @$pb.TagNumber(16)
  void clearColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureColor() => $_ensure(4);

  @$pb.TagNumber(22)
  $core.bool get showPerformanceOverlay => $_getBF(5);
  @$pb.TagNumber(22)
  set showPerformanceOverlay($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(22)
  $core.bool hasShowPerformanceOverlay() => $_has(5);
  @$pb.TagNumber(22)
  void clearShowPerformanceOverlay() => clearField(22);

  @$pb.TagNumber(23)
  $core.bool get checkerboardRasterCacheImages => $_getBF(6);
  @$pb.TagNumber(23)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(23)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(6);
  @$pb.TagNumber(23)
  void clearCheckerboardRasterCacheImages() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get checkerboardOffscreenLayers => $_getBF(7);
  @$pb.TagNumber(24)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(24)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(7);
  @$pb.TagNumber(24)
  void clearCheckerboardOffscreenLayers() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get showSemanticsDebugger => $_getBF(8);
  @$pb.TagNumber(25)
  set showSemanticsDebugger($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(25)
  $core.bool hasShowSemanticsDebugger() => $_has(8);
  @$pb.TagNumber(25)
  void clearShowSemanticsDebugger() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get debugShowWidgetInspector => $_getBF(9);
  @$pb.TagNumber(26)
  set debugShowWidgetInspector($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(26)
  $core.bool hasDebugShowWidgetInspector() => $_has(9);
  @$pb.TagNumber(26)
  void clearDebugShowWidgetInspector() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get debugShowCheckedModeBanner => $_getBF(10);
  @$pb.TagNumber(27)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(27)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(10);
  @$pb.TagNumber(27)
  void clearDebugShowCheckedModeBanner() => clearField(27);

  @$pb.TagNumber(31)
  $core.String get restorationScopeId => $_getSZ(11);
  @$pb.TagNumber(31)
  set restorationScopeId($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(31)
  $core.bool hasRestorationScopeId() => $_has(11);
  @$pb.TagNumber(31)
  void clearRestorationScopeId() => clearField(31);
}

/// package:flutter/src/widgets/app.dart
class FlutterWidgetsAppNamedRouter extends $pb.GeneratedMessage {
  factory FlutterWidgetsAppNamedRouter({
    $1.FlutterKeyExpression? key,
    $core.String? title,
    $1.DartColorExpression? color,
    $core.bool? showPerformanceOverlay,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
    $core.bool? showSemanticsDebugger,
    $core.bool? debugShowWidgetInspector,
    $core.bool? debugShowCheckedModeBanner,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (showPerformanceOverlay != null) {
      $result.showPerformanceOverlay = showPerformanceOverlay;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    if (showSemanticsDebugger != null) {
      $result.showSemanticsDebugger = showSemanticsDebugger;
    }
    if (debugShowWidgetInspector != null) {
      $result.debugShowWidgetInspector = debugShowWidgetInspector;
    }
    if (debugShowCheckedModeBanner != null) {
      $result.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  FlutterWidgetsAppNamedRouter._() : super();
  factory FlutterWidgetsAppNamedRouter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterWidgetsAppNamedRouter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterWidgetsAppNamedRouter', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(9, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(18, _omitFieldNames ? '' : 'showPerformanceOverlay')
    ..aOB(19, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(20, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..aOB(21, _omitFieldNames ? '' : 'showSemanticsDebugger')
    ..aOB(22, _omitFieldNames ? '' : 'debugShowWidgetInspector')
    ..aOB(23, _omitFieldNames ? '' : 'debugShowCheckedModeBanner')
    ..aOS(27, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterWidgetsAppNamedRouter clone() => FlutterWidgetsAppNamedRouter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterWidgetsAppNamedRouter copyWith(void Function(FlutterWidgetsAppNamedRouter) updates) => super.copyWith((message) => updates(message as FlutterWidgetsAppNamedRouter)) as FlutterWidgetsAppNamedRouter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterWidgetsAppNamedRouter create() => FlutterWidgetsAppNamedRouter._();
  FlutterWidgetsAppNamedRouter createEmptyInstance() => create();
  static $pb.PbList<FlutterWidgetsAppNamedRouter> createRepeated() => $pb.PbList<FlutterWidgetsAppNamedRouter>();
  @$core.pragma('dart2js:noInline')
  static FlutterWidgetsAppNamedRouter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterWidgetsAppNamedRouter>(create);
  static FlutterWidgetsAppNamedRouter? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.String get title => $_getSZ(1);
  @$pb.TagNumber(9)
  set title($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(9)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(9)
  void clearTitle() => clearField(9);

  @$pb.TagNumber(12)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(12)
  set color($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(12)
  void clearColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(18)
  $core.bool get showPerformanceOverlay => $_getBF(3);
  @$pb.TagNumber(18)
  set showPerformanceOverlay($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(18)
  $core.bool hasShowPerformanceOverlay() => $_has(3);
  @$pb.TagNumber(18)
  void clearShowPerformanceOverlay() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get checkerboardRasterCacheImages => $_getBF(4);
  @$pb.TagNumber(19)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(19)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(4);
  @$pb.TagNumber(19)
  void clearCheckerboardRasterCacheImages() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get checkerboardOffscreenLayers => $_getBF(5);
  @$pb.TagNumber(20)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(20)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(5);
  @$pb.TagNumber(20)
  void clearCheckerboardOffscreenLayers() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get showSemanticsDebugger => $_getBF(6);
  @$pb.TagNumber(21)
  set showSemanticsDebugger($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(21)
  $core.bool hasShowSemanticsDebugger() => $_has(6);
  @$pb.TagNumber(21)
  void clearShowSemanticsDebugger() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get debugShowWidgetInspector => $_getBF(7);
  @$pb.TagNumber(22)
  set debugShowWidgetInspector($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(22)
  $core.bool hasDebugShowWidgetInspector() => $_has(7);
  @$pb.TagNumber(22)
  void clearDebugShowWidgetInspector() => clearField(22);

  @$pb.TagNumber(23)
  $core.bool get debugShowCheckedModeBanner => $_getBF(8);
  @$pb.TagNumber(23)
  set debugShowCheckedModeBanner($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(23)
  $core.bool hasDebugShowCheckedModeBanner() => $_has(8);
  @$pb.TagNumber(23)
  void clearDebugShowCheckedModeBanner() => clearField(23);

  @$pb.TagNumber(27)
  $core.String get restorationScopeId => $_getSZ(9);
  @$pb.TagNumber(27)
  set restorationScopeId($core.String v) { $_setString(9, v); }
  @$pb.TagNumber(27)
  $core.bool hasRestorationScopeId() => $_has(9);
  @$pb.TagNumber(27)
  void clearRestorationScopeId() => clearField(27);
}

/// package:flutter/src/widgets/autofill.dart
class FlutterAutofillGroup extends $pb.GeneratedMessage {
  factory FlutterAutofillGroup({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterAutofillGroup._() : super();
  factory FlutterAutofillGroup.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAutofillGroup.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAutofillGroup', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAutofillGroup clone() => FlutterAutofillGroup()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAutofillGroup copyWith(void Function(FlutterAutofillGroup) updates) => super.copyWith((message) => updates(message as FlutterAutofillGroup)) as FlutterAutofillGroup;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAutofillGroup create() => FlutterAutofillGroup._();
  FlutterAutofillGroup createEmptyInstance() => create();
  static $pb.PbList<FlutterAutofillGroup> createRepeated() => $pb.PbList<FlutterAutofillGroup>();
  @$core.pragma('dart2js:noInline')
  static FlutterAutofillGroup getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAutofillGroup>(create);
  static FlutterAutofillGroup? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/automatic_keep_alive.dart
class FlutterAutomaticKeepAlive extends $pb.GeneratedMessage {
  factory FlutterAutomaticKeepAlive({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterAutomaticKeepAlive._() : super();
  factory FlutterAutomaticKeepAlive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAutomaticKeepAlive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAutomaticKeepAlive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAutomaticKeepAlive clone() => FlutterAutomaticKeepAlive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAutomaticKeepAlive copyWith(void Function(FlutterAutomaticKeepAlive) updates) => super.copyWith((message) => updates(message as FlutterAutomaticKeepAlive)) as FlutterAutomaticKeepAlive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAutomaticKeepAlive create() => FlutterAutomaticKeepAlive._();
  FlutterAutomaticKeepAlive createEmptyInstance() => create();
  static $pb.PbList<FlutterAutomaticKeepAlive> createRepeated() => $pb.PbList<FlutterAutomaticKeepAlive>();
  @$core.pragma('dart2js:noInline')
  static FlutterAutomaticKeepAlive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAutomaticKeepAlive>(create);
  static FlutterAutomaticKeepAlive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/banner.dart
class FlutterCheckedModeBanner extends $pb.GeneratedMessage {
  factory FlutterCheckedModeBanner({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterCheckedModeBanner._() : super();
  factory FlutterCheckedModeBanner.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterCheckedModeBanner.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterCheckedModeBanner', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterCheckedModeBanner clone() => FlutterCheckedModeBanner()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterCheckedModeBanner copyWith(void Function(FlutterCheckedModeBanner) updates) => super.copyWith((message) => updates(message as FlutterCheckedModeBanner)) as FlutterCheckedModeBanner;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterCheckedModeBanner create() => FlutterCheckedModeBanner._();
  FlutterCheckedModeBanner createEmptyInstance() => create();
  static $pb.PbList<FlutterCheckedModeBanner> createRepeated() => $pb.PbList<FlutterCheckedModeBanner>();
  @$core.pragma('dart2js:noInline')
  static FlutterCheckedModeBanner getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterCheckedModeBanner>(create);
  static FlutterCheckedModeBanner? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterAbsorbPointer extends $pb.GeneratedMessage {
  factory FlutterAbsorbPointer({
    $1.FlutterKeyExpression? key,
    $core.bool? absorbing,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (absorbing != null) {
      $result.absorbing = absorbing;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterAbsorbPointer._() : super();
  factory FlutterAbsorbPointer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAbsorbPointer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAbsorbPointer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'absorbing')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAbsorbPointer clone() => FlutterAbsorbPointer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAbsorbPointer copyWith(void Function(FlutterAbsorbPointer) updates) => super.copyWith((message) => updates(message as FlutterAbsorbPointer)) as FlutterAbsorbPointer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAbsorbPointer create() => FlutterAbsorbPointer._();
  FlutterAbsorbPointer createEmptyInstance() => create();
  static $pb.PbList<FlutterAbsorbPointer> createRepeated() => $pb.PbList<FlutterAbsorbPointer>();
  @$core.pragma('dart2js:noInline')
  static FlutterAbsorbPointer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAbsorbPointer>(create);
  static FlutterAbsorbPointer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get absorbing => $_getBF(1);
  @$pb.TagNumber(3)
  set absorbing($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasAbsorbing() => $_has(1);
  @$pb.TagNumber(3)
  void clearAbsorbing() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterAlign extends $pb.GeneratedMessage {
  factory FlutterAlign({
    $1.FlutterKeyExpression? key,
    $core.double? widthFactor,
    $core.double? heightFactor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (widthFactor != null) {
      $result.widthFactor = widthFactor;
    }
    if (heightFactor != null) {
      $result.heightFactor = heightFactor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterAlign._() : super();
  factory FlutterAlign.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAlign.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAlign', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'widthFactor', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'heightFactor', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAlign clone() => FlutterAlign()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAlign copyWith(void Function(FlutterAlign) updates) => super.copyWith((message) => updates(message as FlutterAlign)) as FlutterAlign;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAlign create() => FlutterAlign._();
  FlutterAlign createEmptyInstance() => create();
  static $pb.PbList<FlutterAlign> createRepeated() => $pb.PbList<FlutterAlign>();
  @$core.pragma('dart2js:noInline')
  static FlutterAlign getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAlign>(create);
  static FlutterAlign? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get widthFactor => $_getN(1);
  @$pb.TagNumber(4)
  set widthFactor($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasWidthFactor() => $_has(1);
  @$pb.TagNumber(4)
  void clearWidthFactor() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get heightFactor => $_getN(2);
  @$pb.TagNumber(5)
  set heightFactor($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasHeightFactor() => $_has(2);
  @$pb.TagNumber(5)
  void clearHeightFactor() => clearField(5);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterAspectRatio extends $pb.GeneratedMessage {
  factory FlutterAspectRatio({
    $1.FlutterKeyExpression? key,
    $core.double? aspectRatio,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (aspectRatio != null) {
      $result.aspectRatio = aspectRatio;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterAspectRatio._() : super();
  factory FlutterAspectRatio.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAspectRatio.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAspectRatio', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'aspectRatio', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAspectRatio clone() => FlutterAspectRatio()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAspectRatio copyWith(void Function(FlutterAspectRatio) updates) => super.copyWith((message) => updates(message as FlutterAspectRatio)) as FlutterAspectRatio;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAspectRatio create() => FlutterAspectRatio._();
  FlutterAspectRatio createEmptyInstance() => create();
  static $pb.PbList<FlutterAspectRatio> createRepeated() => $pb.PbList<FlutterAspectRatio>();
  @$core.pragma('dart2js:noInline')
  static FlutterAspectRatio getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAspectRatio>(create);
  static FlutterAspectRatio? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get aspectRatio => $_getN(1);
  @$pb.TagNumber(3)
  set aspectRatio($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasAspectRatio() => $_has(1);
  @$pb.TagNumber(3)
  void clearAspectRatio() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterBlockSemantics extends $pb.GeneratedMessage {
  factory FlutterBlockSemantics({
    $1.FlutterKeyExpression? key,
    $core.bool? blocking,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (blocking != null) {
      $result.blocking = blocking;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterBlockSemantics._() : super();
  factory FlutterBlockSemantics.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterBlockSemantics.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterBlockSemantics', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'blocking')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterBlockSemantics clone() => FlutterBlockSemantics()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterBlockSemantics copyWith(void Function(FlutterBlockSemantics) updates) => super.copyWith((message) => updates(message as FlutterBlockSemantics)) as FlutterBlockSemantics;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterBlockSemantics create() => FlutterBlockSemantics._();
  FlutterBlockSemantics createEmptyInstance() => create();
  static $pb.PbList<FlutterBlockSemantics> createRepeated() => $pb.PbList<FlutterBlockSemantics>();
  @$core.pragma('dart2js:noInline')
  static FlutterBlockSemantics getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterBlockSemantics>(create);
  static FlutterBlockSemantics? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get blocking => $_getBF(1);
  @$pb.TagNumber(3)
  set blocking($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasBlocking() => $_has(1);
  @$pb.TagNumber(3)
  void clearBlocking() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterCenter extends $pb.GeneratedMessage {
  factory FlutterCenter({
    $1.FlutterKeyExpression? key,
    $core.double? widthFactor,
    $core.double? heightFactor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (widthFactor != null) {
      $result.widthFactor = widthFactor;
    }
    if (heightFactor != null) {
      $result.heightFactor = heightFactor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterCenter._() : super();
  factory FlutterCenter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterCenter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterCenter', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'widthFactor', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'heightFactor', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterCenter clone() => FlutterCenter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterCenter copyWith(void Function(FlutterCenter) updates) => super.copyWith((message) => updates(message as FlutterCenter)) as FlutterCenter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterCenter create() => FlutterCenter._();
  FlutterCenter createEmptyInstance() => create();
  static $pb.PbList<FlutterCenter> createRepeated() => $pb.PbList<FlutterCenter>();
  @$core.pragma('dart2js:noInline')
  static FlutterCenter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterCenter>(create);
  static FlutterCenter? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get widthFactor => $_getN(1);
  @$pb.TagNumber(3)
  set widthFactor($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasWidthFactor() => $_has(1);
  @$pb.TagNumber(3)
  void clearWidthFactor() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get heightFactor => $_getN(2);
  @$pb.TagNumber(4)
  set heightFactor($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeightFactor() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeightFactor() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterClipOval extends $pb.GeneratedMessage {
  factory FlutterClipOval({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterClipOval._() : super();
  factory FlutterClipOval.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterClipOval.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterClipOval', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterClipOval clone() => FlutterClipOval()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterClipOval copyWith(void Function(FlutterClipOval) updates) => super.copyWith((message) => updates(message as FlutterClipOval)) as FlutterClipOval;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterClipOval create() => FlutterClipOval._();
  FlutterClipOval createEmptyInstance() => create();
  static $pb.PbList<FlutterClipOval> createRepeated() => $pb.PbList<FlutterClipOval>();
  @$core.pragma('dart2js:noInline')
  static FlutterClipOval getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterClipOval>(create);
  static FlutterClipOval? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterClipPath extends $pb.GeneratedMessage {
  factory FlutterClipPath({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterClipPath._() : super();
  factory FlutterClipPath.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterClipPath.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterClipPath', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterClipPath clone() => FlutterClipPath()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterClipPath copyWith(void Function(FlutterClipPath) updates) => super.copyWith((message) => updates(message as FlutterClipPath)) as FlutterClipPath;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterClipPath create() => FlutterClipPath._();
  FlutterClipPath createEmptyInstance() => create();
  static $pb.PbList<FlutterClipPath> createRepeated() => $pb.PbList<FlutterClipPath>();
  @$core.pragma('dart2js:noInline')
  static FlutterClipPath getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterClipPath>(create);
  static FlutterClipPath? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterClipRRect extends $pb.GeneratedMessage {
  factory FlutterClipRRect({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterClipRRect._() : super();
  factory FlutterClipRRect.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterClipRRect.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterClipRRect', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterClipRRect clone() => FlutterClipRRect()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterClipRRect copyWith(void Function(FlutterClipRRect) updates) => super.copyWith((message) => updates(message as FlutterClipRRect)) as FlutterClipRRect;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterClipRRect create() => FlutterClipRRect._();
  FlutterClipRRect createEmptyInstance() => create();
  static $pb.PbList<FlutterClipRRect> createRepeated() => $pb.PbList<FlutterClipRRect>();
  @$core.pragma('dart2js:noInline')
  static FlutterClipRRect getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterClipRRect>(create);
  static FlutterClipRRect? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterClipRect extends $pb.GeneratedMessage {
  factory FlutterClipRect({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterClipRect._() : super();
  factory FlutterClipRect.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterClipRect.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterClipRect', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterClipRect clone() => FlutterClipRect()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterClipRect copyWith(void Function(FlutterClipRect) updates) => super.copyWith((message) => updates(message as FlutterClipRect)) as FlutterClipRect;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterClipRect create() => FlutterClipRect._();
  FlutterClipRect createEmptyInstance() => create();
  static $pb.PbList<FlutterClipRect> createRepeated() => $pb.PbList<FlutterClipRect>();
  @$core.pragma('dart2js:noInline')
  static FlutterClipRect getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterClipRect>(create);
  static FlutterClipRect? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterColoredBox extends $pb.GeneratedMessage {
  factory FlutterColoredBox({
    $1.DartColorExpression? color,
    WidgetExpression? child,
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (color != null) {
      $result.color = color;
    }
    if (child != null) {
      $result.child = child;
    }
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterColoredBox._() : super();
  factory FlutterColoredBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterColoredBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterColoredBox', createEmptyInstance: create)
    ..aOM<$1.DartColorExpression>(2, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.FlutterKeyExpression>(4, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterColoredBox clone() => FlutterColoredBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterColoredBox copyWith(void Function(FlutterColoredBox) updates) => super.copyWith((message) => updates(message as FlutterColoredBox)) as FlutterColoredBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterColoredBox create() => FlutterColoredBox._();
  FlutterColoredBox createEmptyInstance() => create();
  static $pb.PbList<FlutterColoredBox> createRepeated() => $pb.PbList<FlutterColoredBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterColoredBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterColoredBox>(create);
  static FlutterColoredBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.DartColorExpression get color => $_getN(0);
  @$pb.TagNumber(2)
  set color($1.DartColorExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasColor() => $_has(0);
  @$pb.TagNumber(2)
  void clearColor() => clearField(2);
  @$pb.TagNumber(2)
  $1.DartColorExpression ensureColor() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.FlutterKeyExpression get key => $_getN(2);
  @$pb.TagNumber(4)
  set key($1.FlutterKeyExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasKey() => $_has(2);
  @$pb.TagNumber(4)
  void clearKey() => clearField(4);
  @$pb.TagNumber(4)
  $1.FlutterKeyExpression ensureKey() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterColumn extends $pb.GeneratedMessage {
  factory FlutterColumn({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterColumn._() : super();
  factory FlutterColumn.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterColumn.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterColumn', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(9, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterColumn clone() => FlutterColumn()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterColumn copyWith(void Function(FlutterColumn) updates) => super.copyWith((message) => updates(message as FlutterColumn)) as FlutterColumn;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterColumn create() => FlutterColumn._();
  FlutterColumn createEmptyInstance() => create();
  static $pb.PbList<FlutterColumn> createRepeated() => $pb.PbList<FlutterColumn>();
  @$core.pragma('dart2js:noInline')
  static FlutterColumn getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterColumn>(create);
  static FlutterColumn? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.List<WidgetExpression> get children => $_getList(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterCustomPaint extends $pb.GeneratedMessage {
  factory FlutterCustomPaint({
    $1.FlutterKeyExpression? key,
    $core.bool? isComplex,
    $core.bool? willChange,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (isComplex != null) {
      $result.isComplex = isComplex;
    }
    if (willChange != null) {
      $result.willChange = willChange;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterCustomPaint._() : super();
  factory FlutterCustomPaint.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterCustomPaint.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterCustomPaint', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'isComplex')
    ..aOB(7, _omitFieldNames ? '' : 'willChange')
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterCustomPaint clone() => FlutterCustomPaint()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterCustomPaint copyWith(void Function(FlutterCustomPaint) updates) => super.copyWith((message) => updates(message as FlutterCustomPaint)) as FlutterCustomPaint;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterCustomPaint create() => FlutterCustomPaint._();
  FlutterCustomPaint createEmptyInstance() => create();
  static $pb.PbList<FlutterCustomPaint> createRepeated() => $pb.PbList<FlutterCustomPaint>();
  @$core.pragma('dart2js:noInline')
  static FlutterCustomPaint getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterCustomPaint>(create);
  static FlutterCustomPaint? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $core.bool get isComplex => $_getBF(1);
  @$pb.TagNumber(6)
  set isComplex($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(6)
  $core.bool hasIsComplex() => $_has(1);
  @$pb.TagNumber(6)
  void clearIsComplex() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get willChange => $_getBF(2);
  @$pb.TagNumber(7)
  set willChange($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasWillChange() => $_has(2);
  @$pb.TagNumber(7)
  void clearWillChange() => clearField(7);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterExcludeSemantics extends $pb.GeneratedMessage {
  factory FlutterExcludeSemantics({
    $1.FlutterKeyExpression? key,
    $core.bool? excluding,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (excluding != null) {
      $result.excluding = excluding;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterExcludeSemantics._() : super();
  factory FlutterExcludeSemantics.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterExcludeSemantics.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterExcludeSemantics', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'excluding')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterExcludeSemantics clone() => FlutterExcludeSemantics()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterExcludeSemantics copyWith(void Function(FlutterExcludeSemantics) updates) => super.copyWith((message) => updates(message as FlutterExcludeSemantics)) as FlutterExcludeSemantics;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterExcludeSemantics create() => FlutterExcludeSemantics._();
  FlutterExcludeSemantics createEmptyInstance() => create();
  static $pb.PbList<FlutterExcludeSemantics> createRepeated() => $pb.PbList<FlutterExcludeSemantics>();
  @$core.pragma('dart2js:noInline')
  static FlutterExcludeSemantics getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterExcludeSemantics>(create);
  static FlutterExcludeSemantics? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get excluding => $_getBF(1);
  @$pb.TagNumber(3)
  set excluding($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasExcluding() => $_has(1);
  @$pb.TagNumber(3)
  void clearExcluding() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterExpanded extends $pb.GeneratedMessage {
  factory FlutterExpanded({
    $1.FlutterKeyExpression? key,
    $core.int? flex,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (flex != null) {
      $result.flex = flex;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterExpanded._() : super();
  factory FlutterExpanded.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterExpanded.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterExpanded', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'flex', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterExpanded clone() => FlutterExpanded()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterExpanded copyWith(void Function(FlutterExpanded) updates) => super.copyWith((message) => updates(message as FlutterExpanded)) as FlutterExpanded;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterExpanded create() => FlutterExpanded._();
  FlutterExpanded createEmptyInstance() => create();
  static $pb.PbList<FlutterExpanded> createRepeated() => $pb.PbList<FlutterExpanded>();
  @$core.pragma('dart2js:noInline')
  static FlutterExpanded getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterExpanded>(create);
  static FlutterExpanded? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get flex => $_getIZ(1);
  @$pb.TagNumber(3)
  set flex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasFlex() => $_has(1);
  @$pb.TagNumber(3)
  void clearFlex() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterFittedBox extends $pb.GeneratedMessage {
  factory FlutterFittedBox({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterFittedBox._() : super();
  factory FlutterFittedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFittedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFittedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFittedBox clone() => FlutterFittedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFittedBox copyWith(void Function(FlutterFittedBox) updates) => super.copyWith((message) => updates(message as FlutterFittedBox)) as FlutterFittedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFittedBox create() => FlutterFittedBox._();
  FlutterFittedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterFittedBox> createRepeated() => $pb.PbList<FlutterFittedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterFittedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFittedBox>(create);
  static FlutterFittedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterFlexible extends $pb.GeneratedMessage {
  factory FlutterFlexible({
    $1.FlutterKeyExpression? key,
    $core.int? flex,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (flex != null) {
      $result.flex = flex;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterFlexible._() : super();
  factory FlutterFlexible.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFlexible.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFlexible', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'flex', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFlexible clone() => FlutterFlexible()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFlexible copyWith(void Function(FlutterFlexible) updates) => super.copyWith((message) => updates(message as FlutterFlexible)) as FlutterFlexible;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFlexible create() => FlutterFlexible._();
  FlutterFlexible createEmptyInstance() => create();
  static $pb.PbList<FlutterFlexible> createRepeated() => $pb.PbList<FlutterFlexible>();
  @$core.pragma('dart2js:noInline')
  static FlutterFlexible getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFlexible>(create);
  static FlutterFlexible? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get flex => $_getIZ(1);
  @$pb.TagNumber(3)
  set flex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasFlex() => $_has(1);
  @$pb.TagNumber(3)
  void clearFlex() => clearField(3);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterFractionallySizedBox extends $pb.GeneratedMessage {
  factory FlutterFractionallySizedBox({
    $1.FlutterKeyExpression? key,
    $core.double? widthFactor,
    $core.double? heightFactor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (widthFactor != null) {
      $result.widthFactor = widthFactor;
    }
    if (heightFactor != null) {
      $result.heightFactor = heightFactor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterFractionallySizedBox._() : super();
  factory FlutterFractionallySizedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFractionallySizedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFractionallySizedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'widthFactor', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'heightFactor', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFractionallySizedBox clone() => FlutterFractionallySizedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFractionallySizedBox copyWith(void Function(FlutterFractionallySizedBox) updates) => super.copyWith((message) => updates(message as FlutterFractionallySizedBox)) as FlutterFractionallySizedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFractionallySizedBox create() => FlutterFractionallySizedBox._();
  FlutterFractionallySizedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterFractionallySizedBox> createRepeated() => $pb.PbList<FlutterFractionallySizedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterFractionallySizedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFractionallySizedBox>(create);
  static FlutterFractionallySizedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get widthFactor => $_getN(1);
  @$pb.TagNumber(4)
  set widthFactor($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasWidthFactor() => $_has(1);
  @$pb.TagNumber(4)
  void clearWidthFactor() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get heightFactor => $_getN(2);
  @$pb.TagNumber(5)
  set heightFactor($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasHeightFactor() => $_has(2);
  @$pb.TagNumber(5)
  void clearHeightFactor() => clearField(5);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterIgnorePointer extends $pb.GeneratedMessage {
  factory FlutterIgnorePointer({
    $1.FlutterKeyExpression? key,
    $core.bool? ignoring,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (ignoring != null) {
      $result.ignoring = ignoring;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterIgnorePointer._() : super();
  factory FlutterIgnorePointer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIgnorePointer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIgnorePointer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'ignoring')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIgnorePointer clone() => FlutterIgnorePointer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIgnorePointer copyWith(void Function(FlutterIgnorePointer) updates) => super.copyWith((message) => updates(message as FlutterIgnorePointer)) as FlutterIgnorePointer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIgnorePointer create() => FlutterIgnorePointer._();
  FlutterIgnorePointer createEmptyInstance() => create();
  static $pb.PbList<FlutterIgnorePointer> createRepeated() => $pb.PbList<FlutterIgnorePointer>();
  @$core.pragma('dart2js:noInline')
  static FlutterIgnorePointer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIgnorePointer>(create);
  static FlutterIgnorePointer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get ignoring => $_getBF(1);
  @$pb.TagNumber(3)
  set ignoring($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIgnoring() => $_has(1);
  @$pb.TagNumber(3)
  void clearIgnoring() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterIndexedSemantics extends $pb.GeneratedMessage {
  factory FlutterIndexedSemantics({
    $1.FlutterKeyExpression? key,
    $core.int? index,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (index != null) {
      $result.index = index;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterIndexedSemantics._() : super();
  factory FlutterIndexedSemantics.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIndexedSemantics.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIndexedSemantics', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'index', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIndexedSemantics clone() => FlutterIndexedSemantics()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIndexedSemantics copyWith(void Function(FlutterIndexedSemantics) updates) => super.copyWith((message) => updates(message as FlutterIndexedSemantics)) as FlutterIndexedSemantics;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIndexedSemantics create() => FlutterIndexedSemantics._();
  FlutterIndexedSemantics createEmptyInstance() => create();
  static $pb.PbList<FlutterIndexedSemantics> createRepeated() => $pb.PbList<FlutterIndexedSemantics>();
  @$core.pragma('dart2js:noInline')
  static FlutterIndexedSemantics getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIndexedSemantics>(create);
  static FlutterIndexedSemantics? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get index => $_getIZ(1);
  @$pb.TagNumber(3)
  set index($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIndex() => $_has(1);
  @$pb.TagNumber(3)
  void clearIndex() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterIndexedStack extends $pb.GeneratedMessage {
  factory FlutterIndexedStack({
    $1.FlutterKeyExpression? key,
    $core.int? index,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (index != null) {
      $result.index = index;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterIndexedStack._() : super();
  factory FlutterIndexedStack.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIndexedStack.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIndexedStack', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'index', $pb.PbFieldType.O3)
    ..pc<WidgetExpression>(8, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIndexedStack clone() => FlutterIndexedStack()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIndexedStack copyWith(void Function(FlutterIndexedStack) updates) => super.copyWith((message) => updates(message as FlutterIndexedStack)) as FlutterIndexedStack;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIndexedStack create() => FlutterIndexedStack._();
  FlutterIndexedStack createEmptyInstance() => create();
  static $pb.PbList<FlutterIndexedStack> createRepeated() => $pb.PbList<FlutterIndexedStack>();
  @$core.pragma('dart2js:noInline')
  static FlutterIndexedStack getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIndexedStack>(create);
  static FlutterIndexedStack? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(7)
  $core.int get index => $_getIZ(1);
  @$pb.TagNumber(7)
  set index($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(7)
  $core.bool hasIndex() => $_has(1);
  @$pb.TagNumber(7)
  void clearIndex() => clearField(7);

  @$pb.TagNumber(8)
  $core.List<WidgetExpression> get children => $_getList(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterIntrinsicHeight extends $pb.GeneratedMessage {
  factory FlutterIntrinsicHeight({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterIntrinsicHeight._() : super();
  factory FlutterIntrinsicHeight.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIntrinsicHeight.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIntrinsicHeight', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIntrinsicHeight clone() => FlutterIntrinsicHeight()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIntrinsicHeight copyWith(void Function(FlutterIntrinsicHeight) updates) => super.copyWith((message) => updates(message as FlutterIntrinsicHeight)) as FlutterIntrinsicHeight;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIntrinsicHeight create() => FlutterIntrinsicHeight._();
  FlutterIntrinsicHeight createEmptyInstance() => create();
  static $pb.PbList<FlutterIntrinsicHeight> createRepeated() => $pb.PbList<FlutterIntrinsicHeight>();
  @$core.pragma('dart2js:noInline')
  static FlutterIntrinsicHeight getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIntrinsicHeight>(create);
  static FlutterIntrinsicHeight? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterIntrinsicWidth extends $pb.GeneratedMessage {
  factory FlutterIntrinsicWidth({
    $1.FlutterKeyExpression? key,
    $core.double? stepWidth,
    $core.double? stepHeight,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (stepWidth != null) {
      $result.stepWidth = stepWidth;
    }
    if (stepHeight != null) {
      $result.stepHeight = stepHeight;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterIntrinsicWidth._() : super();
  factory FlutterIntrinsicWidth.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIntrinsicWidth.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIntrinsicWidth', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'stepWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'stepHeight', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIntrinsicWidth clone() => FlutterIntrinsicWidth()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIntrinsicWidth copyWith(void Function(FlutterIntrinsicWidth) updates) => super.copyWith((message) => updates(message as FlutterIntrinsicWidth)) as FlutterIntrinsicWidth;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIntrinsicWidth create() => FlutterIntrinsicWidth._();
  FlutterIntrinsicWidth createEmptyInstance() => create();
  static $pb.PbList<FlutterIntrinsicWidth> createRepeated() => $pb.PbList<FlutterIntrinsicWidth>();
  @$core.pragma('dart2js:noInline')
  static FlutterIntrinsicWidth getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIntrinsicWidth>(create);
  static FlutterIntrinsicWidth? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get stepWidth => $_getN(1);
  @$pb.TagNumber(3)
  set stepWidth($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasStepWidth() => $_has(1);
  @$pb.TagNumber(3)
  void clearStepWidth() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get stepHeight => $_getN(2);
  @$pb.TagNumber(4)
  set stepHeight($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasStepHeight() => $_has(2);
  @$pb.TagNumber(4)
  void clearStepHeight() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterKeyedSubtree extends $pb.GeneratedMessage {
  factory FlutterKeyedSubtree({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterKeyedSubtree._() : super();
  factory FlutterKeyedSubtree.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterKeyedSubtree.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterKeyedSubtree', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterKeyedSubtree clone() => FlutterKeyedSubtree()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterKeyedSubtree copyWith(void Function(FlutterKeyedSubtree) updates) => super.copyWith((message) => updates(message as FlutterKeyedSubtree)) as FlutterKeyedSubtree;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterKeyedSubtree create() => FlutterKeyedSubtree._();
  FlutterKeyedSubtree createEmptyInstance() => create();
  static $pb.PbList<FlutterKeyedSubtree> createRepeated() => $pb.PbList<FlutterKeyedSubtree>();
  @$core.pragma('dart2js:noInline')
  static FlutterKeyedSubtree getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterKeyedSubtree>(create);
  static FlutterKeyedSubtree? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterKeyedSubtreeNamedWrap extends $pb.GeneratedMessage {
  factory FlutterKeyedSubtreeNamedWrap({
    WidgetExpression? child,
    $core.int? childIndex,
  }) {
    final $result = create();
    if (child != null) {
      $result.child = child;
    }
    if (childIndex != null) {
      $result.childIndex = childIndex;
    }
    return $result;
  }
  FlutterKeyedSubtreeNamedWrap._() : super();
  factory FlutterKeyedSubtreeNamedWrap.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterKeyedSubtreeNamedWrap.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterKeyedSubtreeNamedWrap', createEmptyInstance: create)
    ..aOM<WidgetExpression>(2, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'childIndex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterKeyedSubtreeNamedWrap clone() => FlutterKeyedSubtreeNamedWrap()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterKeyedSubtreeNamedWrap copyWith(void Function(FlutterKeyedSubtreeNamedWrap) updates) => super.copyWith((message) => updates(message as FlutterKeyedSubtreeNamedWrap)) as FlutterKeyedSubtreeNamedWrap;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterKeyedSubtreeNamedWrap create() => FlutterKeyedSubtreeNamedWrap._();
  FlutterKeyedSubtreeNamedWrap createEmptyInstance() => create();
  static $pb.PbList<FlutterKeyedSubtreeNamedWrap> createRepeated() => $pb.PbList<FlutterKeyedSubtreeNamedWrap>();
  @$core.pragma('dart2js:noInline')
  static FlutterKeyedSubtreeNamedWrap getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterKeyedSubtreeNamedWrap>(create);
  static FlutterKeyedSubtreeNamedWrap? _defaultInstance;

  @$pb.TagNumber(2)
  WidgetExpression get child => $_getN(0);
  @$pb.TagNumber(2)
  set child(WidgetExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasChild() => $_has(0);
  @$pb.TagNumber(2)
  void clearChild() => clearField(2);
  @$pb.TagNumber(2)
  WidgetExpression ensureChild() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get childIndex => $_getIZ(1);
  @$pb.TagNumber(3)
  set childIndex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasChildIndex() => $_has(1);
  @$pb.TagNumber(3)
  void clearChildIndex() => clearField(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterLimitedBox extends $pb.GeneratedMessage {
  factory FlutterLimitedBox({
    $1.FlutterKeyExpression? key,
    $core.double? maxWidth,
    $core.double? maxHeight,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (maxWidth != null) {
      $result.maxWidth = maxWidth;
    }
    if (maxHeight != null) {
      $result.maxHeight = maxHeight;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterLimitedBox._() : super();
  factory FlutterLimitedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterLimitedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterLimitedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'maxWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'maxHeight', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterLimitedBox clone() => FlutterLimitedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterLimitedBox copyWith(void Function(FlutterLimitedBox) updates) => super.copyWith((message) => updates(message as FlutterLimitedBox)) as FlutterLimitedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterLimitedBox create() => FlutterLimitedBox._();
  FlutterLimitedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterLimitedBox> createRepeated() => $pb.PbList<FlutterLimitedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterLimitedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterLimitedBox>(create);
  static FlutterLimitedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get maxWidth => $_getN(1);
  @$pb.TagNumber(3)
  set maxWidth($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasMaxWidth() => $_has(1);
  @$pb.TagNumber(3)
  void clearMaxWidth() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get maxHeight => $_getN(2);
  @$pb.TagNumber(4)
  set maxHeight($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasMaxHeight() => $_has(2);
  @$pb.TagNumber(4)
  void clearMaxHeight() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterListBody extends $pb.GeneratedMessage {
  factory FlutterListBody({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterListBody._() : super();
  factory FlutterListBody.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterListBody.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterListBody', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..pc<WidgetExpression>(5, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterListBody clone() => FlutterListBody()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterListBody copyWith(void Function(FlutterListBody) updates) => super.copyWith((message) => updates(message as FlutterListBody)) as FlutterListBody;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterListBody create() => FlutterListBody._();
  FlutterListBody createEmptyInstance() => create();
  static $pb.PbList<FlutterListBody> createRepeated() => $pb.PbList<FlutterListBody>();
  @$core.pragma('dart2js:noInline')
  static FlutterListBody getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterListBody>(create);
  static FlutterListBody? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<WidgetExpression> get children => $_getList(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterListener extends $pb.GeneratedMessage {
  factory FlutterListener({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterListener._() : super();
  factory FlutterListener.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterListener.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterListener', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(13, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterListener clone() => FlutterListener()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterListener copyWith(void Function(FlutterListener) updates) => super.copyWith((message) => updates(message as FlutterListener)) as FlutterListener;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterListener create() => FlutterListener._();
  FlutterListener createEmptyInstance() => create();
  static $pb.PbList<FlutterListener> createRepeated() => $pb.PbList<FlutterListener>();
  @$core.pragma('dart2js:noInline')
  static FlutterListener getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterListener>(create);
  static FlutterListener? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(13)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(13)
  set child(WidgetExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(13)
  void clearChild() => clearField(13);
  @$pb.TagNumber(13)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterMergeSemantics extends $pb.GeneratedMessage {
  factory FlutterMergeSemantics({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterMergeSemantics._() : super();
  factory FlutterMergeSemantics.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterMergeSemantics.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterMergeSemantics', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterMergeSemantics clone() => FlutterMergeSemantics()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterMergeSemantics copyWith(void Function(FlutterMergeSemantics) updates) => super.copyWith((message) => updates(message as FlutterMergeSemantics)) as FlutterMergeSemantics;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterMergeSemantics create() => FlutterMergeSemantics._();
  FlutterMergeSemantics createEmptyInstance() => create();
  static $pb.PbList<FlutterMergeSemantics> createRepeated() => $pb.PbList<FlutterMergeSemantics>();
  @$core.pragma('dart2js:noInline')
  static FlutterMergeSemantics getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterMergeSemantics>(create);
  static FlutterMergeSemantics? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterMetaData extends $pb.GeneratedMessage {
  factory FlutterMetaData({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterMetaData._() : super();
  factory FlutterMetaData.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterMetaData.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterMetaData', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterMetaData clone() => FlutterMetaData()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterMetaData copyWith(void Function(FlutterMetaData) updates) => super.copyWith((message) => updates(message as FlutterMetaData)) as FlutterMetaData;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterMetaData create() => FlutterMetaData._();
  FlutterMetaData createEmptyInstance() => create();
  static $pb.PbList<FlutterMetaData> createRepeated() => $pb.PbList<FlutterMetaData>();
  @$core.pragma('dart2js:noInline')
  static FlutterMetaData getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterMetaData>(create);
  static FlutterMetaData? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterMouseRegion extends $pb.GeneratedMessage {
  factory FlutterMouseRegion({
    $1.FlutterKeyExpression? key,
    $core.bool? opaque,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (opaque != null) {
      $result.opaque = opaque;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterMouseRegion._() : super();
  factory FlutterMouseRegion.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterMouseRegion.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterMouseRegion', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(7, _omitFieldNames ? '' : 'opaque')
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterMouseRegion clone() => FlutterMouseRegion()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterMouseRegion copyWith(void Function(FlutterMouseRegion) updates) => super.copyWith((message) => updates(message as FlutterMouseRegion)) as FlutterMouseRegion;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterMouseRegion create() => FlutterMouseRegion._();
  FlutterMouseRegion createEmptyInstance() => create();
  static $pb.PbList<FlutterMouseRegion> createRepeated() => $pb.PbList<FlutterMouseRegion>();
  @$core.pragma('dart2js:noInline')
  static FlutterMouseRegion getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterMouseRegion>(create);
  static FlutterMouseRegion? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(7)
  $core.bool get opaque => $_getBF(1);
  @$pb.TagNumber(7)
  set opaque($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(7)
  $core.bool hasOpaque() => $_has(1);
  @$pb.TagNumber(7)
  void clearOpaque() => clearField(7);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterOffstage extends $pb.GeneratedMessage {
  factory FlutterOffstage({
    $1.FlutterKeyExpression? key,
    $core.bool? offstage,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (offstage != null) {
      $result.offstage = offstage;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterOffstage._() : super();
  factory FlutterOffstage.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterOffstage.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterOffstage', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'offstage')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterOffstage clone() => FlutterOffstage()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterOffstage copyWith(void Function(FlutterOffstage) updates) => super.copyWith((message) => updates(message as FlutterOffstage)) as FlutterOffstage;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterOffstage create() => FlutterOffstage._();
  FlutterOffstage createEmptyInstance() => create();
  static $pb.PbList<FlutterOffstage> createRepeated() => $pb.PbList<FlutterOffstage>();
  @$core.pragma('dart2js:noInline')
  static FlutterOffstage getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterOffstage>(create);
  static FlutterOffstage? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get offstage => $_getBF(1);
  @$pb.TagNumber(3)
  set offstage($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasOffstage() => $_has(1);
  @$pb.TagNumber(3)
  void clearOffstage() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterOpacity extends $pb.GeneratedMessage {
  factory FlutterOpacity({
    $1.FlutterKeyExpression? key,
    $core.double? opacity,
    $core.bool? alwaysIncludeSemantics,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (opacity != null) {
      $result.opacity = opacity;
    }
    if (alwaysIncludeSemantics != null) {
      $result.alwaysIncludeSemantics = alwaysIncludeSemantics;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterOpacity._() : super();
  factory FlutterOpacity.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterOpacity.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterOpacity', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'opacity', $pb.PbFieldType.OD)
    ..aOB(4, _omitFieldNames ? '' : 'alwaysIncludeSemantics')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterOpacity clone() => FlutterOpacity()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterOpacity copyWith(void Function(FlutterOpacity) updates) => super.copyWith((message) => updates(message as FlutterOpacity)) as FlutterOpacity;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterOpacity create() => FlutterOpacity._();
  FlutterOpacity createEmptyInstance() => create();
  static $pb.PbList<FlutterOpacity> createRepeated() => $pb.PbList<FlutterOpacity>();
  @$core.pragma('dart2js:noInline')
  static FlutterOpacity getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterOpacity>(create);
  static FlutterOpacity? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get opacity => $_getN(1);
  @$pb.TagNumber(3)
  set opacity($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasOpacity() => $_has(1);
  @$pb.TagNumber(3)
  void clearOpacity() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get alwaysIncludeSemantics => $_getBF(2);
  @$pb.TagNumber(4)
  set alwaysIncludeSemantics($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAlwaysIncludeSemantics() => $_has(2);
  @$pb.TagNumber(4)
  void clearAlwaysIncludeSemantics() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterOverflowBox extends $pb.GeneratedMessage {
  factory FlutterOverflowBox({
    $1.FlutterKeyExpression? key,
    $core.double? minWidth,
    $core.double? maxWidth,
    $core.double? minHeight,
    $core.double? maxHeight,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (minWidth != null) {
      $result.minWidth = minWidth;
    }
    if (maxWidth != null) {
      $result.maxWidth = maxWidth;
    }
    if (minHeight != null) {
      $result.minHeight = minHeight;
    }
    if (maxHeight != null) {
      $result.maxHeight = maxHeight;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterOverflowBox._() : super();
  factory FlutterOverflowBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterOverflowBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterOverflowBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'minWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'maxWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'minHeight', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'maxHeight', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterOverflowBox clone() => FlutterOverflowBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterOverflowBox copyWith(void Function(FlutterOverflowBox) updates) => super.copyWith((message) => updates(message as FlutterOverflowBox)) as FlutterOverflowBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterOverflowBox create() => FlutterOverflowBox._();
  FlutterOverflowBox createEmptyInstance() => create();
  static $pb.PbList<FlutterOverflowBox> createRepeated() => $pb.PbList<FlutterOverflowBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterOverflowBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterOverflowBox>(create);
  static FlutterOverflowBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get minWidth => $_getN(1);
  @$pb.TagNumber(4)
  set minWidth($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasMinWidth() => $_has(1);
  @$pb.TagNumber(4)
  void clearMinWidth() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get maxWidth => $_getN(2);
  @$pb.TagNumber(5)
  set maxWidth($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasMaxWidth() => $_has(2);
  @$pb.TagNumber(5)
  void clearMaxWidth() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get minHeight => $_getN(3);
  @$pb.TagNumber(6)
  set minHeight($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasMinHeight() => $_has(3);
  @$pb.TagNumber(6)
  void clearMinHeight() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get maxHeight => $_getN(4);
  @$pb.TagNumber(7)
  set maxHeight($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasMaxHeight() => $_has(4);
  @$pb.TagNumber(7)
  void clearMaxHeight() => clearField(7);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/widgets/basic.dart
class FlutterPhysicalModel extends $pb.GeneratedMessage {
  factory FlutterPhysicalModel({
    $1.FlutterKeyExpression? key,
    $core.double? elevation,
    $1.DartColorExpression? color,
    $1.DartColorExpression? shadowColor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (elevation != null) {
      $result.elevation = elevation;
    }
    if (color != null) {
      $result.color = color;
    }
    if (shadowColor != null) {
      $result.shadowColor = shadowColor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPhysicalModel._() : super();
  factory FlutterPhysicalModel.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPhysicalModel.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPhysicalModel', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'elevation', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(7, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'shadowColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPhysicalModel clone() => FlutterPhysicalModel()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPhysicalModel copyWith(void Function(FlutterPhysicalModel) updates) => super.copyWith((message) => updates(message as FlutterPhysicalModel)) as FlutterPhysicalModel;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPhysicalModel create() => FlutterPhysicalModel._();
  FlutterPhysicalModel createEmptyInstance() => create();
  static $pb.PbList<FlutterPhysicalModel> createRepeated() => $pb.PbList<FlutterPhysicalModel>();
  @$core.pragma('dart2js:noInline')
  static FlutterPhysicalModel getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPhysicalModel>(create);
  static FlutterPhysicalModel? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $core.double get elevation => $_getN(1);
  @$pb.TagNumber(6)
  set elevation($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(6)
  $core.bool hasElevation() => $_has(1);
  @$pb.TagNumber(6)
  void clearElevation() => clearField(6);

  @$pb.TagNumber(7)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(7)
  set color($1.DartColorExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(7)
  void clearColor() => clearField(7);
  @$pb.TagNumber(7)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(8)
  $1.DartColorExpression get shadowColor => $_getN(3);
  @$pb.TagNumber(8)
  set shadowColor($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasShadowColor() => $_has(3);
  @$pb.TagNumber(8)
  void clearShadowColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureShadowColor() => $_ensure(3);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/widgets/basic.dart
class FlutterPositioned extends $pb.GeneratedMessage {
  factory FlutterPositioned({
    $1.FlutterKeyExpression? key,
    $core.double? left,
    $core.double? top,
    $core.double? right,
    $core.double? bottom,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (left != null) {
      $result.left = left;
    }
    if (top != null) {
      $result.top = top;
    }
    if (right != null) {
      $result.right = right;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPositioned._() : super();
  factory FlutterPositioned.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPositioned.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPositioned', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'left', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'top', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'right', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'bottom', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPositioned clone() => FlutterPositioned()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPositioned copyWith(void Function(FlutterPositioned) updates) => super.copyWith((message) => updates(message as FlutterPositioned)) as FlutterPositioned;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPositioned create() => FlutterPositioned._();
  FlutterPositioned createEmptyInstance() => create();
  static $pb.PbList<FlutterPositioned> createRepeated() => $pb.PbList<FlutterPositioned>();
  @$core.pragma('dart2js:noInline')
  static FlutterPositioned getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPositioned>(create);
  static FlutterPositioned? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get left => $_getN(1);
  @$pb.TagNumber(3)
  set left($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeft() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeft() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get top => $_getN(2);
  @$pb.TagNumber(4)
  set top($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTop() => $_has(2);
  @$pb.TagNumber(4)
  void clearTop() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get right => $_getN(3);
  @$pb.TagNumber(5)
  set right($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasRight() => $_has(3);
  @$pb.TagNumber(5)
  void clearRight() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get bottom => $_getN(4);
  @$pb.TagNumber(6)
  set bottom($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasBottom() => $_has(4);
  @$pb.TagNumber(6)
  void clearBottom() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get width => $_getN(5);
  @$pb.TagNumber(7)
  set width($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasWidth() => $_has(5);
  @$pb.TagNumber(7)
  void clearWidth() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get height => $_getN(6);
  @$pb.TagNumber(8)
  set height($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasHeight() => $_has(6);
  @$pb.TagNumber(8)
  void clearHeight() => clearField(8);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(7);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(7);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(7);
}

/// package:flutter/src/widgets/basic.dart
class FlutterPositionedNamedFill extends $pb.GeneratedMessage {
  factory FlutterPositionedNamedFill({
    $1.FlutterKeyExpression? key,
    $core.double? left,
    $core.double? top,
    $core.double? right,
    $core.double? bottom,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (left != null) {
      $result.left = left;
    }
    if (top != null) {
      $result.top = top;
    }
    if (right != null) {
      $result.right = right;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPositionedNamedFill._() : super();
  factory FlutterPositionedNamedFill.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPositionedNamedFill.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPositionedNamedFill', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'left', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'top', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'right', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'bottom', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPositionedNamedFill clone() => FlutterPositionedNamedFill()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPositionedNamedFill copyWith(void Function(FlutterPositionedNamedFill) updates) => super.copyWith((message) => updates(message as FlutterPositionedNamedFill)) as FlutterPositionedNamedFill;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPositionedNamedFill create() => FlutterPositionedNamedFill._();
  FlutterPositionedNamedFill createEmptyInstance() => create();
  static $pb.PbList<FlutterPositionedNamedFill> createRepeated() => $pb.PbList<FlutterPositionedNamedFill>();
  @$core.pragma('dart2js:noInline')
  static FlutterPositionedNamedFill getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPositionedNamedFill>(create);
  static FlutterPositionedNamedFill? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get left => $_getN(1);
  @$pb.TagNumber(3)
  set left($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeft() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeft() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get top => $_getN(2);
  @$pb.TagNumber(4)
  set top($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTop() => $_has(2);
  @$pb.TagNumber(4)
  void clearTop() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get right => $_getN(3);
  @$pb.TagNumber(5)
  set right($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasRight() => $_has(3);
  @$pb.TagNumber(5)
  void clearRight() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get bottom => $_getN(4);
  @$pb.TagNumber(6)
  set bottom($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasBottom() => $_has(4);
  @$pb.TagNumber(6)
  void clearBottom() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/widgets/basic.dart
class FlutterPositionedDirectional extends $pb.GeneratedMessage {
  factory FlutterPositionedDirectional({
    $1.FlutterKeyExpression? key,
    $core.double? start,
    $core.double? top,
    $core.double? end,
    $core.double? bottom,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (start != null) {
      $result.start = start;
    }
    if (top != null) {
      $result.top = top;
    }
    if (end != null) {
      $result.end = end;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPositionedDirectional._() : super();
  factory FlutterPositionedDirectional.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPositionedDirectional.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPositionedDirectional', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'start', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'top', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'end', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'bottom', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPositionedDirectional clone() => FlutterPositionedDirectional()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPositionedDirectional copyWith(void Function(FlutterPositionedDirectional) updates) => super.copyWith((message) => updates(message as FlutterPositionedDirectional)) as FlutterPositionedDirectional;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPositionedDirectional create() => FlutterPositionedDirectional._();
  FlutterPositionedDirectional createEmptyInstance() => create();
  static $pb.PbList<FlutterPositionedDirectional> createRepeated() => $pb.PbList<FlutterPositionedDirectional>();
  @$core.pragma('dart2js:noInline')
  static FlutterPositionedDirectional getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPositionedDirectional>(create);
  static FlutterPositionedDirectional? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get start => $_getN(1);
  @$pb.TagNumber(3)
  set start($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasStart() => $_has(1);
  @$pb.TagNumber(3)
  void clearStart() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get top => $_getN(2);
  @$pb.TagNumber(4)
  set top($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTop() => $_has(2);
  @$pb.TagNumber(4)
  void clearTop() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get end => $_getN(3);
  @$pb.TagNumber(5)
  set end($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnd() => $_has(3);
  @$pb.TagNumber(5)
  void clearEnd() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get bottom => $_getN(4);
  @$pb.TagNumber(6)
  set bottom($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasBottom() => $_has(4);
  @$pb.TagNumber(6)
  void clearBottom() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get width => $_getN(5);
  @$pb.TagNumber(7)
  set width($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasWidth() => $_has(5);
  @$pb.TagNumber(7)
  void clearWidth() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get height => $_getN(6);
  @$pb.TagNumber(8)
  set height($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasHeight() => $_has(6);
  @$pb.TagNumber(8)
  void clearHeight() => clearField(8);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(7);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(7);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(7);
}

/// package:flutter/src/widgets/basic.dart
class FlutterRawImage extends $pb.GeneratedMessage {
  factory FlutterRawImage({
    $1.FlutterKeyExpression? key,
    $core.String? debugImageLabel,
    $core.double? width,
    $core.double? height,
    $core.double? scale,
    $1.DartColorExpression? color,
    $core.bool? matchTextDirection,
    $core.bool? invertColors,
    $core.bool? isAntiAlias,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (debugImageLabel != null) {
      $result.debugImageLabel = debugImageLabel;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (scale != null) {
      $result.scale = scale;
    }
    if (color != null) {
      $result.color = color;
    }
    if (matchTextDirection != null) {
      $result.matchTextDirection = matchTextDirection;
    }
    if (invertColors != null) {
      $result.invertColors = invertColors;
    }
    if (isAntiAlias != null) {
      $result.isAntiAlias = isAntiAlias;
    }
    return $result;
  }
  FlutterRawImage._() : super();
  factory FlutterRawImage.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRawImage.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRawImage', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(4, _omitFieldNames ? '' : 'debugImageLabel')
    ..a<$core.double>(5, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'scale', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(8, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(15, _omitFieldNames ? '' : 'matchTextDirection')
    ..aOB(16, _omitFieldNames ? '' : 'invertColors')
    ..aOB(18, _omitFieldNames ? '' : 'isAntiAlias')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRawImage clone() => FlutterRawImage()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRawImage copyWith(void Function(FlutterRawImage) updates) => super.copyWith((message) => updates(message as FlutterRawImage)) as FlutterRawImage;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRawImage create() => FlutterRawImage._();
  FlutterRawImage createEmptyInstance() => create();
  static $pb.PbList<FlutterRawImage> createRepeated() => $pb.PbList<FlutterRawImage>();
  @$core.pragma('dart2js:noInline')
  static FlutterRawImage getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRawImage>(create);
  static FlutterRawImage? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.String get debugImageLabel => $_getSZ(1);
  @$pb.TagNumber(4)
  set debugImageLabel($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasDebugImageLabel() => $_has(1);
  @$pb.TagNumber(4)
  void clearDebugImageLabel() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get width => $_getN(2);
  @$pb.TagNumber(5)
  set width($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasWidth() => $_has(2);
  @$pb.TagNumber(5)
  void clearWidth() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(6)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(6)
  void clearHeight() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get scale => $_getN(4);
  @$pb.TagNumber(7)
  set scale($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasScale() => $_has(4);
  @$pb.TagNumber(7)
  void clearScale() => clearField(7);

  @$pb.TagNumber(8)
  $1.DartColorExpression get color => $_getN(5);
  @$pb.TagNumber(8)
  set color($1.DartColorExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasColor() => $_has(5);
  @$pb.TagNumber(8)
  void clearColor() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartColorExpression ensureColor() => $_ensure(5);

  @$pb.TagNumber(15)
  $core.bool get matchTextDirection => $_getBF(6);
  @$pb.TagNumber(15)
  set matchTextDirection($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(15)
  $core.bool hasMatchTextDirection() => $_has(6);
  @$pb.TagNumber(15)
  void clearMatchTextDirection() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get invertColors => $_getBF(7);
  @$pb.TagNumber(16)
  set invertColors($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(16)
  $core.bool hasInvertColors() => $_has(7);
  @$pb.TagNumber(16)
  void clearInvertColors() => clearField(16);

  @$pb.TagNumber(18)
  $core.bool get isAntiAlias => $_getBF(8);
  @$pb.TagNumber(18)
  set isAntiAlias($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsAntiAlias() => $_has(8);
  @$pb.TagNumber(18)
  void clearIsAntiAlias() => clearField(18);
}

/// package:flutter/src/widgets/basic.dart
class FlutterRepaintBoundary extends $pb.GeneratedMessage {
  factory FlutterRepaintBoundary({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterRepaintBoundary._() : super();
  factory FlutterRepaintBoundary.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRepaintBoundary.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRepaintBoundary', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRepaintBoundary clone() => FlutterRepaintBoundary()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRepaintBoundary copyWith(void Function(FlutterRepaintBoundary) updates) => super.copyWith((message) => updates(message as FlutterRepaintBoundary)) as FlutterRepaintBoundary;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRepaintBoundary create() => FlutterRepaintBoundary._();
  FlutterRepaintBoundary createEmptyInstance() => create();
  static $pb.PbList<FlutterRepaintBoundary> createRepeated() => $pb.PbList<FlutterRepaintBoundary>();
  @$core.pragma('dart2js:noInline')
  static FlutterRepaintBoundary getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRepaintBoundary>(create);
  static FlutterRepaintBoundary? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterRepaintBoundaryNamedWrap extends $pb.GeneratedMessage {
  factory FlutterRepaintBoundaryNamedWrap({
    WidgetExpression? child,
    $core.int? childIndex,
  }) {
    final $result = create();
    if (child != null) {
      $result.child = child;
    }
    if (childIndex != null) {
      $result.childIndex = childIndex;
    }
    return $result;
  }
  FlutterRepaintBoundaryNamedWrap._() : super();
  factory FlutterRepaintBoundaryNamedWrap.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRepaintBoundaryNamedWrap.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRepaintBoundaryNamedWrap', createEmptyInstance: create)
    ..aOM<WidgetExpression>(2, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'childIndex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRepaintBoundaryNamedWrap clone() => FlutterRepaintBoundaryNamedWrap()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRepaintBoundaryNamedWrap copyWith(void Function(FlutterRepaintBoundaryNamedWrap) updates) => super.copyWith((message) => updates(message as FlutterRepaintBoundaryNamedWrap)) as FlutterRepaintBoundaryNamedWrap;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRepaintBoundaryNamedWrap create() => FlutterRepaintBoundaryNamedWrap._();
  FlutterRepaintBoundaryNamedWrap createEmptyInstance() => create();
  static $pb.PbList<FlutterRepaintBoundaryNamedWrap> createRepeated() => $pb.PbList<FlutterRepaintBoundaryNamedWrap>();
  @$core.pragma('dart2js:noInline')
  static FlutterRepaintBoundaryNamedWrap getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRepaintBoundaryNamedWrap>(create);
  static FlutterRepaintBoundaryNamedWrap? _defaultInstance;

  @$pb.TagNumber(2)
  WidgetExpression get child => $_getN(0);
  @$pb.TagNumber(2)
  set child(WidgetExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasChild() => $_has(0);
  @$pb.TagNumber(2)
  void clearChild() => clearField(2);
  @$pb.TagNumber(2)
  WidgetExpression ensureChild() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get childIndex => $_getIZ(1);
  @$pb.TagNumber(3)
  set childIndex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasChildIndex() => $_has(1);
  @$pb.TagNumber(3)
  void clearChildIndex() => clearField(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterRotatedBox extends $pb.GeneratedMessage {
  factory FlutterRotatedBox({
    $1.FlutterKeyExpression? key,
    $core.int? quarterTurns,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (quarterTurns != null) {
      $result.quarterTurns = quarterTurns;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterRotatedBox._() : super();
  factory FlutterRotatedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRotatedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRotatedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'quarterTurns', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRotatedBox clone() => FlutterRotatedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRotatedBox copyWith(void Function(FlutterRotatedBox) updates) => super.copyWith((message) => updates(message as FlutterRotatedBox)) as FlutterRotatedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRotatedBox create() => FlutterRotatedBox._();
  FlutterRotatedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterRotatedBox> createRepeated() => $pb.PbList<FlutterRotatedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterRotatedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRotatedBox>(create);
  static FlutterRotatedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get quarterTurns => $_getIZ(1);
  @$pb.TagNumber(3)
  set quarterTurns($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasQuarterTurns() => $_has(1);
  @$pb.TagNumber(3)
  void clearQuarterTurns() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/basic.dart
class FlutterRow extends $pb.GeneratedMessage {
  factory FlutterRow({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterRow._() : super();
  factory FlutterRow.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRow.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRow', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(9, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRow clone() => FlutterRow()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRow copyWith(void Function(FlutterRow) updates) => super.copyWith((message) => updates(message as FlutterRow)) as FlutterRow;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRow create() => FlutterRow._();
  FlutterRow createEmptyInstance() => create();
  static $pb.PbList<FlutterRow> createRepeated() => $pb.PbList<FlutterRow>();
  @$core.pragma('dart2js:noInline')
  static FlutterRow getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRow>(create);
  static FlutterRow? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(9)
  $core.List<WidgetExpression> get children => $_getList(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSemantics extends $pb.GeneratedMessage {
  factory FlutterSemantics({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? container,
    $core.bool? explicitChildNodes,
    $core.bool? excludeSemantics,
    $core.bool? blockUserActions,
    $core.bool? enabled,
    $core.bool? checked,
    $core.bool? mixed,
    $core.bool? selected,
    $core.bool? toggled,
    $core.bool? button,
    $core.bool? slider,
    $core.bool? keyboardKey,
    $core.bool? link,
    $core.bool? header,
    $core.bool? textField,
    $core.bool? readOnly,
    $core.bool? focusable,
    $core.bool? focused,
    $core.bool? inMutuallyExclusiveGroup,
    $core.bool? obscured,
    $core.bool? multiline,
    $core.bool? scopesRoute,
    $core.bool? namesRoute,
    $core.bool? hidden,
    $core.bool? image,
    $core.bool? liveRegion,
    $core.int? maxValueLength,
    $core.int? currentValueLength,
    $core.String? label,
    $core.String? value,
    $core.String? increasedValue,
    $core.String? decreasedValue,
    $core.String? hint,
    $core.String? tooltip,
    $core.String? onTapHint,
    $core.String? onLongPressHint,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (container != null) {
      $result.container = container;
    }
    if (explicitChildNodes != null) {
      $result.explicitChildNodes = explicitChildNodes;
    }
    if (excludeSemantics != null) {
      $result.excludeSemantics = excludeSemantics;
    }
    if (blockUserActions != null) {
      $result.blockUserActions = blockUserActions;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (checked != null) {
      $result.checked = checked;
    }
    if (mixed != null) {
      $result.mixed = mixed;
    }
    if (selected != null) {
      $result.selected = selected;
    }
    if (toggled != null) {
      $result.toggled = toggled;
    }
    if (button != null) {
      $result.button = button;
    }
    if (slider != null) {
      $result.slider = slider;
    }
    if (keyboardKey != null) {
      $result.keyboardKey = keyboardKey;
    }
    if (link != null) {
      $result.link = link;
    }
    if (header != null) {
      $result.header = header;
    }
    if (textField != null) {
      $result.textField = textField;
    }
    if (readOnly != null) {
      $result.readOnly = readOnly;
    }
    if (focusable != null) {
      $result.focusable = focusable;
    }
    if (focused != null) {
      $result.focused = focused;
    }
    if (inMutuallyExclusiveGroup != null) {
      $result.inMutuallyExclusiveGroup = inMutuallyExclusiveGroup;
    }
    if (obscured != null) {
      $result.obscured = obscured;
    }
    if (multiline != null) {
      $result.multiline = multiline;
    }
    if (scopesRoute != null) {
      $result.scopesRoute = scopesRoute;
    }
    if (namesRoute != null) {
      $result.namesRoute = namesRoute;
    }
    if (hidden != null) {
      $result.hidden = hidden;
    }
    if (image != null) {
      $result.image = image;
    }
    if (liveRegion != null) {
      $result.liveRegion = liveRegion;
    }
    if (maxValueLength != null) {
      $result.maxValueLength = maxValueLength;
    }
    if (currentValueLength != null) {
      $result.currentValueLength = currentValueLength;
    }
    if (label != null) {
      $result.label = label;
    }
    if (value != null) {
      $result.value = value;
    }
    if (increasedValue != null) {
      $result.increasedValue = increasedValue;
    }
    if (decreasedValue != null) {
      $result.decreasedValue = decreasedValue;
    }
    if (hint != null) {
      $result.hint = hint;
    }
    if (tooltip != null) {
      $result.tooltip = tooltip;
    }
    if (onTapHint != null) {
      $result.onTapHint = onTapHint;
    }
    if (onLongPressHint != null) {
      $result.onLongPressHint = onLongPressHint;
    }
    return $result;
  }
  FlutterSemantics._() : super();
  factory FlutterSemantics.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSemantics.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSemantics', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'container')
    ..aOB(5, _omitFieldNames ? '' : 'explicitChildNodes')
    ..aOB(6, _omitFieldNames ? '' : 'excludeSemantics')
    ..aOB(7, _omitFieldNames ? '' : 'blockUserActions')
    ..aOB(8, _omitFieldNames ? '' : 'enabled')
    ..aOB(9, _omitFieldNames ? '' : 'checked')
    ..aOB(10, _omitFieldNames ? '' : 'mixed')
    ..aOB(11, _omitFieldNames ? '' : 'selected')
    ..aOB(12, _omitFieldNames ? '' : 'toggled')
    ..aOB(13, _omitFieldNames ? '' : 'button')
    ..aOB(14, _omitFieldNames ? '' : 'slider')
    ..aOB(15, _omitFieldNames ? '' : 'keyboardKey')
    ..aOB(16, _omitFieldNames ? '' : 'link')
    ..aOB(17, _omitFieldNames ? '' : 'header')
    ..aOB(18, _omitFieldNames ? '' : 'textField')
    ..aOB(19, _omitFieldNames ? '' : 'readOnly')
    ..aOB(20, _omitFieldNames ? '' : 'focusable')
    ..aOB(21, _omitFieldNames ? '' : 'focused')
    ..aOB(22, _omitFieldNames ? '' : 'inMutuallyExclusiveGroup')
    ..aOB(23, _omitFieldNames ? '' : 'obscured')
    ..aOB(24, _omitFieldNames ? '' : 'multiline')
    ..aOB(25, _omitFieldNames ? '' : 'scopesRoute')
    ..aOB(26, _omitFieldNames ? '' : 'namesRoute')
    ..aOB(27, _omitFieldNames ? '' : 'hidden')
    ..aOB(28, _omitFieldNames ? '' : 'image')
    ..aOB(29, _omitFieldNames ? '' : 'liveRegion')
    ..a<$core.int>(30, _omitFieldNames ? '' : 'maxValueLength', $pb.PbFieldType.O3)
    ..a<$core.int>(31, _omitFieldNames ? '' : 'currentValueLength', $pb.PbFieldType.O3)
    ..aOS(32, _omitFieldNames ? '' : 'label')
    ..aOS(34, _omitFieldNames ? '' : 'value')
    ..aOS(36, _omitFieldNames ? '' : 'increasedValue')
    ..aOS(38, _omitFieldNames ? '' : 'decreasedValue')
    ..aOS(40, _omitFieldNames ? '' : 'hint')
    ..aOS(42, _omitFieldNames ? '' : 'tooltip')
    ..aOS(43, _omitFieldNames ? '' : 'onTapHint')
    ..aOS(44, _omitFieldNames ? '' : 'onLongPressHint')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSemantics clone() => FlutterSemantics()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSemantics copyWith(void Function(FlutterSemantics) updates) => super.copyWith((message) => updates(message as FlutterSemantics)) as FlutterSemantics;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSemantics create() => FlutterSemantics._();
  FlutterSemantics createEmptyInstance() => create();
  static $pb.PbList<FlutterSemantics> createRepeated() => $pb.PbList<FlutterSemantics>();
  @$core.pragma('dart2js:noInline')
  static FlutterSemantics getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSemantics>(create);
  static FlutterSemantics? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get container => $_getBF(2);
  @$pb.TagNumber(4)
  set container($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasContainer() => $_has(2);
  @$pb.TagNumber(4)
  void clearContainer() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get explicitChildNodes => $_getBF(3);
  @$pb.TagNumber(5)
  set explicitChildNodes($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasExplicitChildNodes() => $_has(3);
  @$pb.TagNumber(5)
  void clearExplicitChildNodes() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get excludeSemantics => $_getBF(4);
  @$pb.TagNumber(6)
  set excludeSemantics($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasExcludeSemantics() => $_has(4);
  @$pb.TagNumber(6)
  void clearExcludeSemantics() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get blockUserActions => $_getBF(5);
  @$pb.TagNumber(7)
  set blockUserActions($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasBlockUserActions() => $_has(5);
  @$pb.TagNumber(7)
  void clearBlockUserActions() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get enabled => $_getBF(6);
  @$pb.TagNumber(8)
  set enabled($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasEnabled() => $_has(6);
  @$pb.TagNumber(8)
  void clearEnabled() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get checked => $_getBF(7);
  @$pb.TagNumber(9)
  set checked($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(9)
  $core.bool hasChecked() => $_has(7);
  @$pb.TagNumber(9)
  void clearChecked() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get mixed => $_getBF(8);
  @$pb.TagNumber(10)
  set mixed($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(10)
  $core.bool hasMixed() => $_has(8);
  @$pb.TagNumber(10)
  void clearMixed() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get selected => $_getBF(9);
  @$pb.TagNumber(11)
  set selected($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(11)
  $core.bool hasSelected() => $_has(9);
  @$pb.TagNumber(11)
  void clearSelected() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get toggled => $_getBF(10);
  @$pb.TagNumber(12)
  set toggled($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(12)
  $core.bool hasToggled() => $_has(10);
  @$pb.TagNumber(12)
  void clearToggled() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get button => $_getBF(11);
  @$pb.TagNumber(13)
  set button($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(13)
  $core.bool hasButton() => $_has(11);
  @$pb.TagNumber(13)
  void clearButton() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get slider => $_getBF(12);
  @$pb.TagNumber(14)
  set slider($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(14)
  $core.bool hasSlider() => $_has(12);
  @$pb.TagNumber(14)
  void clearSlider() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get keyboardKey => $_getBF(13);
  @$pb.TagNumber(15)
  set keyboardKey($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(15)
  $core.bool hasKeyboardKey() => $_has(13);
  @$pb.TagNumber(15)
  void clearKeyboardKey() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get link => $_getBF(14);
  @$pb.TagNumber(16)
  set link($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(16)
  $core.bool hasLink() => $_has(14);
  @$pb.TagNumber(16)
  void clearLink() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get header => $_getBF(15);
  @$pb.TagNumber(17)
  set header($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(17)
  $core.bool hasHeader() => $_has(15);
  @$pb.TagNumber(17)
  void clearHeader() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get textField => $_getBF(16);
  @$pb.TagNumber(18)
  set textField($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(18)
  $core.bool hasTextField() => $_has(16);
  @$pb.TagNumber(18)
  void clearTextField() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get readOnly => $_getBF(17);
  @$pb.TagNumber(19)
  set readOnly($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(19)
  $core.bool hasReadOnly() => $_has(17);
  @$pb.TagNumber(19)
  void clearReadOnly() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get focusable => $_getBF(18);
  @$pb.TagNumber(20)
  set focusable($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(20)
  $core.bool hasFocusable() => $_has(18);
  @$pb.TagNumber(20)
  void clearFocusable() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get focused => $_getBF(19);
  @$pb.TagNumber(21)
  set focused($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(21)
  $core.bool hasFocused() => $_has(19);
  @$pb.TagNumber(21)
  void clearFocused() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get inMutuallyExclusiveGroup => $_getBF(20);
  @$pb.TagNumber(22)
  set inMutuallyExclusiveGroup($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(22)
  $core.bool hasInMutuallyExclusiveGroup() => $_has(20);
  @$pb.TagNumber(22)
  void clearInMutuallyExclusiveGroup() => clearField(22);

  @$pb.TagNumber(23)
  $core.bool get obscured => $_getBF(21);
  @$pb.TagNumber(23)
  set obscured($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(23)
  $core.bool hasObscured() => $_has(21);
  @$pb.TagNumber(23)
  void clearObscured() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get multiline => $_getBF(22);
  @$pb.TagNumber(24)
  set multiline($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(24)
  $core.bool hasMultiline() => $_has(22);
  @$pb.TagNumber(24)
  void clearMultiline() => clearField(24);

  @$pb.TagNumber(25)
  $core.bool get scopesRoute => $_getBF(23);
  @$pb.TagNumber(25)
  set scopesRoute($core.bool v) { $_setBool(23, v); }
  @$pb.TagNumber(25)
  $core.bool hasScopesRoute() => $_has(23);
  @$pb.TagNumber(25)
  void clearScopesRoute() => clearField(25);

  @$pb.TagNumber(26)
  $core.bool get namesRoute => $_getBF(24);
  @$pb.TagNumber(26)
  set namesRoute($core.bool v) { $_setBool(24, v); }
  @$pb.TagNumber(26)
  $core.bool hasNamesRoute() => $_has(24);
  @$pb.TagNumber(26)
  void clearNamesRoute() => clearField(26);

  @$pb.TagNumber(27)
  $core.bool get hidden => $_getBF(25);
  @$pb.TagNumber(27)
  set hidden($core.bool v) { $_setBool(25, v); }
  @$pb.TagNumber(27)
  $core.bool hasHidden() => $_has(25);
  @$pb.TagNumber(27)
  void clearHidden() => clearField(27);

  @$pb.TagNumber(28)
  $core.bool get image => $_getBF(26);
  @$pb.TagNumber(28)
  set image($core.bool v) { $_setBool(26, v); }
  @$pb.TagNumber(28)
  $core.bool hasImage() => $_has(26);
  @$pb.TagNumber(28)
  void clearImage() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get liveRegion => $_getBF(27);
  @$pb.TagNumber(29)
  set liveRegion($core.bool v) { $_setBool(27, v); }
  @$pb.TagNumber(29)
  $core.bool hasLiveRegion() => $_has(27);
  @$pb.TagNumber(29)
  void clearLiveRegion() => clearField(29);

  @$pb.TagNumber(30)
  $core.int get maxValueLength => $_getIZ(28);
  @$pb.TagNumber(30)
  set maxValueLength($core.int v) { $_setSignedInt32(28, v); }
  @$pb.TagNumber(30)
  $core.bool hasMaxValueLength() => $_has(28);
  @$pb.TagNumber(30)
  void clearMaxValueLength() => clearField(30);

  @$pb.TagNumber(31)
  $core.int get currentValueLength => $_getIZ(29);
  @$pb.TagNumber(31)
  set currentValueLength($core.int v) { $_setSignedInt32(29, v); }
  @$pb.TagNumber(31)
  $core.bool hasCurrentValueLength() => $_has(29);
  @$pb.TagNumber(31)
  void clearCurrentValueLength() => clearField(31);

  @$pb.TagNumber(32)
  $core.String get label => $_getSZ(30);
  @$pb.TagNumber(32)
  set label($core.String v) { $_setString(30, v); }
  @$pb.TagNumber(32)
  $core.bool hasLabel() => $_has(30);
  @$pb.TagNumber(32)
  void clearLabel() => clearField(32);

  @$pb.TagNumber(34)
  $core.String get value => $_getSZ(31);
  @$pb.TagNumber(34)
  set value($core.String v) { $_setString(31, v); }
  @$pb.TagNumber(34)
  $core.bool hasValue() => $_has(31);
  @$pb.TagNumber(34)
  void clearValue() => clearField(34);

  @$pb.TagNumber(36)
  $core.String get increasedValue => $_getSZ(32);
  @$pb.TagNumber(36)
  set increasedValue($core.String v) { $_setString(32, v); }
  @$pb.TagNumber(36)
  $core.bool hasIncreasedValue() => $_has(32);
  @$pb.TagNumber(36)
  void clearIncreasedValue() => clearField(36);

  @$pb.TagNumber(38)
  $core.String get decreasedValue => $_getSZ(33);
  @$pb.TagNumber(38)
  set decreasedValue($core.String v) { $_setString(33, v); }
  @$pb.TagNumber(38)
  $core.bool hasDecreasedValue() => $_has(33);
  @$pb.TagNumber(38)
  void clearDecreasedValue() => clearField(38);

  @$pb.TagNumber(40)
  $core.String get hint => $_getSZ(34);
  @$pb.TagNumber(40)
  set hint($core.String v) { $_setString(34, v); }
  @$pb.TagNumber(40)
  $core.bool hasHint() => $_has(34);
  @$pb.TagNumber(40)
  void clearHint() => clearField(40);

  @$pb.TagNumber(42)
  $core.String get tooltip => $_getSZ(35);
  @$pb.TagNumber(42)
  set tooltip($core.String v) { $_setString(35, v); }
  @$pb.TagNumber(42)
  $core.bool hasTooltip() => $_has(35);
  @$pb.TagNumber(42)
  void clearTooltip() => clearField(42);

  @$pb.TagNumber(43)
  $core.String get onTapHint => $_getSZ(36);
  @$pb.TagNumber(43)
  set onTapHint($core.String v) { $_setString(36, v); }
  @$pb.TagNumber(43)
  $core.bool hasOnTapHint() => $_has(36);
  @$pb.TagNumber(43)
  void clearOnTapHint() => clearField(43);

  @$pb.TagNumber(44)
  $core.String get onLongPressHint => $_getSZ(37);
  @$pb.TagNumber(44)
  set onLongPressHint($core.String v) { $_setString(37, v); }
  @$pb.TagNumber(44)
  $core.bool hasOnLongPressHint() => $_has(37);
  @$pb.TagNumber(44)
  void clearOnLongPressHint() => clearField(44);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSizedBox extends $pb.GeneratedMessage {
  factory FlutterSizedBox({
    $1.FlutterKeyExpression? key,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSizedBox._() : super();
  factory FlutterSizedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizedBox clone() => FlutterSizedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizedBox copyWith(void Function(FlutterSizedBox) updates) => super.copyWith((message) => updates(message as FlutterSizedBox)) as FlutterSizedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizedBox create() => FlutterSizedBox._();
  FlutterSizedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterSizedBox> createRepeated() => $pb.PbList<FlutterSizedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizedBox>(create);
  static FlutterSizedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get width => $_getN(1);
  @$pb.TagNumber(3)
  set width($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasWidth() => $_has(1);
  @$pb.TagNumber(3)
  void clearWidth() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get height => $_getN(2);
  @$pb.TagNumber(4)
  set height($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasHeight() => $_has(2);
  @$pb.TagNumber(4)
  void clearHeight() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSizedBoxNamedExpand extends $pb.GeneratedMessage {
  factory FlutterSizedBoxNamedExpand({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSizedBoxNamedExpand._() : super();
  factory FlutterSizedBoxNamedExpand.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizedBoxNamedExpand.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizedBoxNamedExpand', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedExpand clone() => FlutterSizedBoxNamedExpand()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedExpand copyWith(void Function(FlutterSizedBoxNamedExpand) updates) => super.copyWith((message) => updates(message as FlutterSizedBoxNamedExpand)) as FlutterSizedBoxNamedExpand;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedExpand create() => FlutterSizedBoxNamedExpand._();
  FlutterSizedBoxNamedExpand createEmptyInstance() => create();
  static $pb.PbList<FlutterSizedBoxNamedExpand> createRepeated() => $pb.PbList<FlutterSizedBoxNamedExpand>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedExpand getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizedBoxNamedExpand>(create);
  static FlutterSizedBoxNamedExpand? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSizedBoxNamedShrink extends $pb.GeneratedMessage {
  factory FlutterSizedBoxNamedShrink({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSizedBoxNamedShrink._() : super();
  factory FlutterSizedBoxNamedShrink.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizedBoxNamedShrink.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizedBoxNamedShrink', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedShrink clone() => FlutterSizedBoxNamedShrink()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedShrink copyWith(void Function(FlutterSizedBoxNamedShrink) updates) => super.copyWith((message) => updates(message as FlutterSizedBoxNamedShrink)) as FlutterSizedBoxNamedShrink;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedShrink create() => FlutterSizedBoxNamedShrink._();
  FlutterSizedBoxNamedShrink createEmptyInstance() => create();
  static $pb.PbList<FlutterSizedBoxNamedShrink> createRepeated() => $pb.PbList<FlutterSizedBoxNamedShrink>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedShrink getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizedBoxNamedShrink>(create);
  static FlutterSizedBoxNamedShrink? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSizedBoxNamedFromSize extends $pb.GeneratedMessage {
  factory FlutterSizedBoxNamedFromSize({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSizedBoxNamedFromSize._() : super();
  factory FlutterSizedBoxNamedFromSize.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizedBoxNamedFromSize.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizedBoxNamedFromSize', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedFromSize clone() => FlutterSizedBoxNamedFromSize()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedFromSize copyWith(void Function(FlutterSizedBoxNamedFromSize) updates) => super.copyWith((message) => updates(message as FlutterSizedBoxNamedFromSize)) as FlutterSizedBoxNamedFromSize;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedFromSize create() => FlutterSizedBoxNamedFromSize._();
  FlutterSizedBoxNamedFromSize createEmptyInstance() => create();
  static $pb.PbList<FlutterSizedBoxNamedFromSize> createRepeated() => $pb.PbList<FlutterSizedBoxNamedFromSize>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedFromSize getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizedBoxNamedFromSize>(create);
  static FlutterSizedBoxNamedFromSize? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSizedBoxNamedSquare extends $pb.GeneratedMessage {
  factory FlutterSizedBoxNamedSquare({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? dimension,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (dimension != null) {
      $result.dimension = dimension;
    }
    return $result;
  }
  FlutterSizedBoxNamedSquare._() : super();
  factory FlutterSizedBoxNamedSquare.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizedBoxNamedSquare.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizedBoxNamedSquare', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'dimension', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedSquare clone() => FlutterSizedBoxNamedSquare()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizedBoxNamedSquare copyWith(void Function(FlutterSizedBoxNamedSquare) updates) => super.copyWith((message) => updates(message as FlutterSizedBoxNamedSquare)) as FlutterSizedBoxNamedSquare;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedSquare create() => FlutterSizedBoxNamedSquare._();
  FlutterSizedBoxNamedSquare createEmptyInstance() => create();
  static $pb.PbList<FlutterSizedBoxNamedSquare> createRepeated() => $pb.PbList<FlutterSizedBoxNamedSquare>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizedBoxNamedSquare getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizedBoxNamedSquare>(create);
  static FlutterSizedBoxNamedSquare? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get dimension => $_getN(2);
  @$pb.TagNumber(4)
  set dimension($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasDimension() => $_has(2);
  @$pb.TagNumber(4)
  void clearDimension() => clearField(4);
}

/// package:flutter/src/widgets/basic.dart
class FlutterSliverToBoxAdapter extends $pb.GeneratedMessage {
  factory FlutterSliverToBoxAdapter({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSliverToBoxAdapter._() : super();
  factory FlutterSliverToBoxAdapter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverToBoxAdapter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverToBoxAdapter', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverToBoxAdapter clone() => FlutterSliverToBoxAdapter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverToBoxAdapter copyWith(void Function(FlutterSliverToBoxAdapter) updates) => super.copyWith((message) => updates(message as FlutterSliverToBoxAdapter)) as FlutterSliverToBoxAdapter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverToBoxAdapter create() => FlutterSliverToBoxAdapter._();
  FlutterSliverToBoxAdapter createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverToBoxAdapter> createRepeated() => $pb.PbList<FlutterSliverToBoxAdapter>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverToBoxAdapter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverToBoxAdapter>(create);
  static FlutterSliverToBoxAdapter? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterStack extends $pb.GeneratedMessage {
  factory FlutterStack({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterStack._() : super();
  factory FlutterStack.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterStack.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterStack', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterStack clone() => FlutterStack()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterStack copyWith(void Function(FlutterStack) updates) => super.copyWith((message) => updates(message as FlutterStack)) as FlutterStack;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterStack create() => FlutterStack._();
  FlutterStack createEmptyInstance() => create();
  static $pb.PbList<FlutterStack> createRepeated() => $pb.PbList<FlutterStack>();
  @$core.pragma('dart2js:noInline')
  static FlutterStack getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterStack>(create);
  static FlutterStack? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get children => $_getList(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterTransformNamedRotate extends $pb.GeneratedMessage {
  factory FlutterTransformNamedRotate({
    $1.FlutterKeyExpression? key,
    $core.double? angle,
    $core.bool? transformHitTests,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (angle != null) {
      $result.angle = angle;
    }
    if (transformHitTests != null) {
      $result.transformHitTests = transformHitTests;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTransformNamedRotate._() : super();
  factory FlutterTransformNamedRotate.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTransformNamedRotate.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTransformNamedRotate', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'angle', $pb.PbFieldType.OD)
    ..aOB(6, _omitFieldNames ? '' : 'transformHitTests')
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedRotate clone() => FlutterTransformNamedRotate()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedRotate copyWith(void Function(FlutterTransformNamedRotate) updates) => super.copyWith((message) => updates(message as FlutterTransformNamedRotate)) as FlutterTransformNamedRotate;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedRotate create() => FlutterTransformNamedRotate._();
  FlutterTransformNamedRotate createEmptyInstance() => create();
  static $pb.PbList<FlutterTransformNamedRotate> createRepeated() => $pb.PbList<FlutterTransformNamedRotate>();
  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedRotate getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTransformNamedRotate>(create);
  static FlutterTransformNamedRotate? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get angle => $_getN(1);
  @$pb.TagNumber(3)
  set angle($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasAngle() => $_has(1);
  @$pb.TagNumber(3)
  void clearAngle() => clearField(3);

  @$pb.TagNumber(6)
  $core.bool get transformHitTests => $_getBF(2);
  @$pb.TagNumber(6)
  set transformHitTests($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasTransformHitTests() => $_has(2);
  @$pb.TagNumber(6)
  void clearTransformHitTests() => clearField(6);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/basic.dart
class FlutterTransformNamedScale extends $pb.GeneratedMessage {
  factory FlutterTransformNamedScale({
    $1.FlutterKeyExpression? key,
    $core.double? scale,
    $core.double? scaleX,
    $core.double? scaleY,
    $core.bool? transformHitTests,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (scale != null) {
      $result.scale = scale;
    }
    if (scaleX != null) {
      $result.scaleX = scaleX;
    }
    if (scaleY != null) {
      $result.scaleY = scaleY;
    }
    if (transformHitTests != null) {
      $result.transformHitTests = transformHitTests;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTransformNamedScale._() : super();
  factory FlutterTransformNamedScale.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTransformNamedScale.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTransformNamedScale', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'scale', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'scaleX', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'scaleY', $pb.PbFieldType.OD)
    ..aOB(8, _omitFieldNames ? '' : 'transformHitTests')
    ..aOM<WidgetExpression>(10, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedScale clone() => FlutterTransformNamedScale()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedScale copyWith(void Function(FlutterTransformNamedScale) updates) => super.copyWith((message) => updates(message as FlutterTransformNamedScale)) as FlutterTransformNamedScale;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedScale create() => FlutterTransformNamedScale._();
  FlutterTransformNamedScale createEmptyInstance() => create();
  static $pb.PbList<FlutterTransformNamedScale> createRepeated() => $pb.PbList<FlutterTransformNamedScale>();
  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedScale getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTransformNamedScale>(create);
  static FlutterTransformNamedScale? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get scale => $_getN(1);
  @$pb.TagNumber(3)
  set scale($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasScale() => $_has(1);
  @$pb.TagNumber(3)
  void clearScale() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get scaleX => $_getN(2);
  @$pb.TagNumber(4)
  set scaleX($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasScaleX() => $_has(2);
  @$pb.TagNumber(4)
  void clearScaleX() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get scaleY => $_getN(3);
  @$pb.TagNumber(5)
  set scaleY($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasScaleY() => $_has(3);
  @$pb.TagNumber(5)
  void clearScaleY() => clearField(5);

  @$pb.TagNumber(8)
  $core.bool get transformHitTests => $_getBF(4);
  @$pb.TagNumber(8)
  set transformHitTests($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasTransformHitTests() => $_has(4);
  @$pb.TagNumber(8)
  void clearTransformHitTests() => clearField(8);

  @$pb.TagNumber(10)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(10)
  set child(WidgetExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(10)
  void clearChild() => clearField(10);
  @$pb.TagNumber(10)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/widgets/basic.dart
class FlutterTransformNamedFlip extends $pb.GeneratedMessage {
  factory FlutterTransformNamedFlip({
    $1.FlutterKeyExpression? key,
    $core.bool? flipX,
    $core.bool? flipY,
    $core.bool? transformHitTests,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (flipX != null) {
      $result.flipX = flipX;
    }
    if (flipY != null) {
      $result.flipY = flipY;
    }
    if (transformHitTests != null) {
      $result.transformHitTests = transformHitTests;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTransformNamedFlip._() : super();
  factory FlutterTransformNamedFlip.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTransformNamedFlip.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTransformNamedFlip', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'flipX')
    ..aOB(4, _omitFieldNames ? '' : 'flipY')
    ..aOB(6, _omitFieldNames ? '' : 'transformHitTests')
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedFlip clone() => FlutterTransformNamedFlip()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTransformNamedFlip copyWith(void Function(FlutterTransformNamedFlip) updates) => super.copyWith((message) => updates(message as FlutterTransformNamedFlip)) as FlutterTransformNamedFlip;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedFlip create() => FlutterTransformNamedFlip._();
  FlutterTransformNamedFlip createEmptyInstance() => create();
  static $pb.PbList<FlutterTransformNamedFlip> createRepeated() => $pb.PbList<FlutterTransformNamedFlip>();
  @$core.pragma('dart2js:noInline')
  static FlutterTransformNamedFlip getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTransformNamedFlip>(create);
  static FlutterTransformNamedFlip? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get flipX => $_getBF(1);
  @$pb.TagNumber(3)
  set flipX($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasFlipX() => $_has(1);
  @$pb.TagNumber(3)
  void clearFlipX() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get flipY => $_getBF(2);
  @$pb.TagNumber(4)
  set flipY($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasFlipY() => $_has(2);
  @$pb.TagNumber(4)
  void clearFlipY() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get transformHitTests => $_getBF(3);
  @$pb.TagNumber(6)
  set transformHitTests($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasTransformHitTests() => $_has(3);
  @$pb.TagNumber(6)
  void clearTransformHitTests() => clearField(6);

  @$pb.TagNumber(8)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(8)
  set child(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(8)
  void clearChild() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/widgets/basic.dart
class FlutterUnconstrainedBox extends $pb.GeneratedMessage {
  factory FlutterUnconstrainedBox({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterUnconstrainedBox._() : super();
  factory FlutterUnconstrainedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterUnconstrainedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterUnconstrainedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterUnconstrainedBox clone() => FlutterUnconstrainedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterUnconstrainedBox copyWith(void Function(FlutterUnconstrainedBox) updates) => super.copyWith((message) => updates(message as FlutterUnconstrainedBox)) as FlutterUnconstrainedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterUnconstrainedBox create() => FlutterUnconstrainedBox._();
  FlutterUnconstrainedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterUnconstrainedBox> createRepeated() => $pb.PbList<FlutterUnconstrainedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterUnconstrainedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterUnconstrainedBox>(create);
  static FlutterUnconstrainedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/basic.dart
class FlutterWrap extends $pb.GeneratedMessage {
  factory FlutterWrap({
    $1.FlutterKeyExpression? key,
    $core.double? spacing,
    $core.double? runSpacing,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (spacing != null) {
      $result.spacing = spacing;
    }
    if (runSpacing != null) {
      $result.runSpacing = runSpacing;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterWrap._() : super();
  factory FlutterWrap.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterWrap.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterWrap', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'spacing', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'runSpacing', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(12, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterWrap clone() => FlutterWrap()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterWrap copyWith(void Function(FlutterWrap) updates) => super.copyWith((message) => updates(message as FlutterWrap)) as FlutterWrap;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterWrap create() => FlutterWrap._();
  FlutterWrap createEmptyInstance() => create();
  static $pb.PbList<FlutterWrap> createRepeated() => $pb.PbList<FlutterWrap>();
  @$core.pragma('dart2js:noInline')
  static FlutterWrap getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterWrap>(create);
  static FlutterWrap? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.double get spacing => $_getN(1);
  @$pb.TagNumber(5)
  set spacing($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasSpacing() => $_has(1);
  @$pb.TagNumber(5)
  void clearSpacing() => clearField(5);

  @$pb.TagNumber(7)
  $core.double get runSpacing => $_getN(2);
  @$pb.TagNumber(7)
  set runSpacing($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasRunSpacing() => $_has(2);
  @$pb.TagNumber(7)
  void clearRunSpacing() => clearField(7);

  @$pb.TagNumber(12)
  $core.List<WidgetExpression> get children => $_getList(3);
}

/// package:flutter/src/widgets/container.dart
class FlutterContainer extends $pb.GeneratedMessage {
  factory FlutterContainer({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterContainer._() : super();
  factory FlutterContainer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterContainer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterContainer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterContainer clone() => FlutterContainer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterContainer copyWith(void Function(FlutterContainer) updates) => super.copyWith((message) => updates(message as FlutterContainer)) as FlutterContainer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterContainer create() => FlutterContainer._();
  FlutterContainer createEmptyInstance() => create();
  static $pb.PbList<FlutterContainer> createRepeated() => $pb.PbList<FlutterContainer>();
  @$core.pragma('dart2js:noInline')
  static FlutterContainer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterContainer>(create);
  static FlutterContainer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(2);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(2);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(9)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(9)
  void clearHeight() => clearField(9);

  @$pb.TagNumber(14)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(14)
  set child(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(14)
  void clearChild() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureChild() => $_ensure(4);
}

/// package:flutter/src/widgets/default_selection_style.dart
class FlutterDefaultSelectionStyle extends $pb.GeneratedMessage {
  factory FlutterDefaultSelectionStyle({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? cursorColor,
    $1.DartColorExpression? selectionColor,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (cursorColor != null) {
      $result.cursorColor = cursorColor;
    }
    if (selectionColor != null) {
      $result.selectionColor = selectionColor;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterDefaultSelectionStyle._() : super();
  factory FlutterDefaultSelectionStyle.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDefaultSelectionStyle.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDefaultSelectionStyle', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'cursorColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'selectionColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDefaultSelectionStyle clone() => FlutterDefaultSelectionStyle()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDefaultSelectionStyle copyWith(void Function(FlutterDefaultSelectionStyle) updates) => super.copyWith((message) => updates(message as FlutterDefaultSelectionStyle)) as FlutterDefaultSelectionStyle;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDefaultSelectionStyle create() => FlutterDefaultSelectionStyle._();
  FlutterDefaultSelectionStyle createEmptyInstance() => create();
  static $pb.PbList<FlutterDefaultSelectionStyle> createRepeated() => $pb.PbList<FlutterDefaultSelectionStyle>();
  @$core.pragma('dart2js:noInline')
  static FlutterDefaultSelectionStyle getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDefaultSelectionStyle>(create);
  static FlutterDefaultSelectionStyle? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get cursorColor => $_getN(1);
  @$pb.TagNumber(3)
  set cursorColor($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCursorColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearCursorColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureCursorColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $1.DartColorExpression get selectionColor => $_getN(2);
  @$pb.TagNumber(4)
  set selectionColor($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSelectionColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearSelectionColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureSelectionColor() => $_ensure(2);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/default_selection_style.dart
class FlutterDefaultSelectionStyleNamedFallback extends $pb.GeneratedMessage {
  factory FlutterDefaultSelectionStyleNamedFallback({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterDefaultSelectionStyleNamedFallback._() : super();
  factory FlutterDefaultSelectionStyleNamedFallback.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDefaultSelectionStyleNamedFallback.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDefaultSelectionStyleNamedFallback', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDefaultSelectionStyleNamedFallback clone() => FlutterDefaultSelectionStyleNamedFallback()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDefaultSelectionStyleNamedFallback copyWith(void Function(FlutterDefaultSelectionStyleNamedFallback) updates) => super.copyWith((message) => updates(message as FlutterDefaultSelectionStyleNamedFallback)) as FlutterDefaultSelectionStyleNamedFallback;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDefaultSelectionStyleNamedFallback create() => FlutterDefaultSelectionStyleNamedFallback._();
  FlutterDefaultSelectionStyleNamedFallback createEmptyInstance() => create();
  static $pb.PbList<FlutterDefaultSelectionStyleNamedFallback> createRepeated() => $pb.PbList<FlutterDefaultSelectionStyleNamedFallback>();
  @$core.pragma('dart2js:noInline')
  static FlutterDefaultSelectionStyleNamedFallback getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDefaultSelectionStyleNamedFallback>(create);
  static FlutterDefaultSelectionStyleNamedFallback? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/widgets/default_text_editing_shortcuts.dart
class FlutterDefaultTextEditingShortcuts extends $pb.GeneratedMessage {
  factory FlutterDefaultTextEditingShortcuts({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterDefaultTextEditingShortcuts._() : super();
  factory FlutterDefaultTextEditingShortcuts.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDefaultTextEditingShortcuts.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDefaultTextEditingShortcuts', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDefaultTextEditingShortcuts clone() => FlutterDefaultTextEditingShortcuts()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDefaultTextEditingShortcuts copyWith(void Function(FlutterDefaultTextEditingShortcuts) updates) => super.copyWith((message) => updates(message as FlutterDefaultTextEditingShortcuts)) as FlutterDefaultTextEditingShortcuts;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDefaultTextEditingShortcuts create() => FlutterDefaultTextEditingShortcuts._();
  FlutterDefaultTextEditingShortcuts createEmptyInstance() => create();
  static $pb.PbList<FlutterDefaultTextEditingShortcuts> createRepeated() => $pb.PbList<FlutterDefaultTextEditingShortcuts>();
  @$core.pragma('dart2js:noInline')
  static FlutterDefaultTextEditingShortcuts getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDefaultTextEditingShortcuts>(create);
  static FlutterDefaultTextEditingShortcuts? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/dismissible.dart
class FlutterDismissible extends $pb.GeneratedMessage {
  factory FlutterDismissible({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    WidgetExpression? background,
    WidgetExpression? secondaryBackground,
    $1.DartDurationExpression? resizeDuration,
    $1.DartDurationExpression? movementDuration,
    $core.double? crossAxisEndOffset,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (background != null) {
      $result.background = background;
    }
    if (secondaryBackground != null) {
      $result.secondaryBackground = secondaryBackground;
    }
    if (resizeDuration != null) {
      $result.resizeDuration = resizeDuration;
    }
    if (movementDuration != null) {
      $result.movementDuration = movementDuration;
    }
    if (crossAxisEndOffset != null) {
      $result.crossAxisEndOffset = crossAxisEndOffset;
    }
    return $result;
  }
  FlutterDismissible._() : super();
  factory FlutterDismissible.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDismissible.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDismissible', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'background', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'secondaryBackground', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(11, _omitFieldNames ? '' : 'resizeDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(13, _omitFieldNames ? '' : 'movementDuration', subBuilder: $1.DartDurationExpression.create)
    ..a<$core.double>(14, _omitFieldNames ? '' : 'crossAxisEndOffset', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDismissible clone() => FlutterDismissible()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDismissible copyWith(void Function(FlutterDismissible) updates) => super.copyWith((message) => updates(message as FlutterDismissible)) as FlutterDismissible;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDismissible create() => FlutterDismissible._();
  FlutterDismissible createEmptyInstance() => create();
  static $pb.PbList<FlutterDismissible> createRepeated() => $pb.PbList<FlutterDismissible>();
  @$core.pragma('dart2js:noInline')
  static FlutterDismissible getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDismissible>(create);
  static FlutterDismissible? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get background => $_getN(2);
  @$pb.TagNumber(4)
  set background(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasBackground() => $_has(2);
  @$pb.TagNumber(4)
  void clearBackground() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureBackground() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get secondaryBackground => $_getN(3);
  @$pb.TagNumber(5)
  set secondaryBackground(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSecondaryBackground() => $_has(3);
  @$pb.TagNumber(5)
  void clearSecondaryBackground() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureSecondaryBackground() => $_ensure(3);

  @$pb.TagNumber(11)
  $1.DartDurationExpression get resizeDuration => $_getN(4);
  @$pb.TagNumber(11)
  set resizeDuration($1.DartDurationExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasResizeDuration() => $_has(4);
  @$pb.TagNumber(11)
  void clearResizeDuration() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartDurationExpression ensureResizeDuration() => $_ensure(4);

  @$pb.TagNumber(13)
  $1.DartDurationExpression get movementDuration => $_getN(5);
  @$pb.TagNumber(13)
  set movementDuration($1.DartDurationExpression v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasMovementDuration() => $_has(5);
  @$pb.TagNumber(13)
  void clearMovementDuration() => clearField(13);
  @$pb.TagNumber(13)
  $1.DartDurationExpression ensureMovementDuration() => $_ensure(5);

  @$pb.TagNumber(14)
  $core.double get crossAxisEndOffset => $_getN(6);
  @$pb.TagNumber(14)
  set crossAxisEndOffset($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(14)
  $core.bool hasCrossAxisEndOffset() => $_has(6);
  @$pb.TagNumber(14)
  void clearCrossAxisEndOffset() => clearField(14);
}

/// package:flutter/src/widgets/display_feature_sub_screen.dart
class FlutterDisplayFeatureSubScreen extends $pb.GeneratedMessage {
  factory FlutterDisplayFeatureSubScreen({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterDisplayFeatureSubScreen._() : super();
  factory FlutterDisplayFeatureSubScreen.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDisplayFeatureSubScreen.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDisplayFeatureSubScreen', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDisplayFeatureSubScreen clone() => FlutterDisplayFeatureSubScreen()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDisplayFeatureSubScreen copyWith(void Function(FlutterDisplayFeatureSubScreen) updates) => super.copyWith((message) => updates(message as FlutterDisplayFeatureSubScreen)) as FlutterDisplayFeatureSubScreen;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDisplayFeatureSubScreen create() => FlutterDisplayFeatureSubScreen._();
  FlutterDisplayFeatureSubScreen createEmptyInstance() => create();
  static $pb.PbList<FlutterDisplayFeatureSubScreen> createRepeated() => $pb.PbList<FlutterDisplayFeatureSubScreen>();
  @$core.pragma('dart2js:noInline')
  static FlutterDisplayFeatureSubScreen getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDisplayFeatureSubScreen>(create);
  static FlutterDisplayFeatureSubScreen? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/drag_target.dart
class FlutterDraggable extends $pb.GeneratedMessage {
  factory FlutterDraggable({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    WidgetExpression? feedback,
    WidgetExpression? childWhenDragging,
    $core.int? maxSimultaneousDrags,
    $core.bool? ignoringFeedbackSemantics,
    $core.bool? ignoringFeedbackPointer,
    $core.bool? rootOverlay,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (feedback != null) {
      $result.feedback = feedback;
    }
    if (childWhenDragging != null) {
      $result.childWhenDragging = childWhenDragging;
    }
    if (maxSimultaneousDrags != null) {
      $result.maxSimultaneousDrags = maxSimultaneousDrags;
    }
    if (ignoringFeedbackSemantics != null) {
      $result.ignoringFeedbackSemantics = ignoringFeedbackSemantics;
    }
    if (ignoringFeedbackPointer != null) {
      $result.ignoringFeedbackPointer = ignoringFeedbackPointer;
    }
    if (rootOverlay != null) {
      $result.rootOverlay = rootOverlay;
    }
    return $result;
  }
  FlutterDraggable._() : super();
  factory FlutterDraggable.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDraggable.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDraggable', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'feedback', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'childWhenDragging', subBuilder: WidgetExpression.create)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'maxSimultaneousDrags', $pb.PbFieldType.O3)
    ..aOB(17, _omitFieldNames ? '' : 'ignoringFeedbackSemantics')
    ..aOB(18, _omitFieldNames ? '' : 'ignoringFeedbackPointer')
    ..aOB(19, _omitFieldNames ? '' : 'rootOverlay')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDraggable clone() => FlutterDraggable()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDraggable copyWith(void Function(FlutterDraggable) updates) => super.copyWith((message) => updates(message as FlutterDraggable)) as FlutterDraggable;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDraggable create() => FlutterDraggable._();
  FlutterDraggable createEmptyInstance() => create();
  static $pb.PbList<FlutterDraggable> createRepeated() => $pb.PbList<FlutterDraggable>();
  @$core.pragma('dart2js:noInline')
  static FlutterDraggable getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDraggable>(create);
  static FlutterDraggable? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get feedback => $_getN(2);
  @$pb.TagNumber(4)
  set feedback(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasFeedback() => $_has(2);
  @$pb.TagNumber(4)
  void clearFeedback() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureFeedback() => $_ensure(2);

  @$pb.TagNumber(7)
  WidgetExpression get childWhenDragging => $_getN(3);
  @$pb.TagNumber(7)
  set childWhenDragging(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChildWhenDragging() => $_has(3);
  @$pb.TagNumber(7)
  void clearChildWhenDragging() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChildWhenDragging() => $_ensure(3);

  @$pb.TagNumber(11)
  $core.int get maxSimultaneousDrags => $_getIZ(4);
  @$pb.TagNumber(11)
  set maxSimultaneousDrags($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(11)
  $core.bool hasMaxSimultaneousDrags() => $_has(4);
  @$pb.TagNumber(11)
  void clearMaxSimultaneousDrags() => clearField(11);

  @$pb.TagNumber(17)
  $core.bool get ignoringFeedbackSemantics => $_getBF(5);
  @$pb.TagNumber(17)
  set ignoringFeedbackSemantics($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(17)
  $core.bool hasIgnoringFeedbackSemantics() => $_has(5);
  @$pb.TagNumber(17)
  void clearIgnoringFeedbackSemantics() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get ignoringFeedbackPointer => $_getBF(6);
  @$pb.TagNumber(18)
  set ignoringFeedbackPointer($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(18)
  $core.bool hasIgnoringFeedbackPointer() => $_has(6);
  @$pb.TagNumber(18)
  void clearIgnoringFeedbackPointer() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get rootOverlay => $_getBF(7);
  @$pb.TagNumber(19)
  set rootOverlay($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(19)
  $core.bool hasRootOverlay() => $_has(7);
  @$pb.TagNumber(19)
  void clearRootOverlay() => clearField(19);
}

/// package:flutter/src/widgets/drag_target.dart
class FlutterLongPressDraggable extends $pb.GeneratedMessage {
  factory FlutterLongPressDraggable({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    WidgetExpression? feedback,
    WidgetExpression? childWhenDragging,
    $core.int? maxSimultaneousDrags,
    $core.bool? hapticFeedbackOnStart,
    $core.bool? ignoringFeedbackSemantics,
    $core.bool? ignoringFeedbackPointer,
    $1.DartDurationExpression? delay,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (feedback != null) {
      $result.feedback = feedback;
    }
    if (childWhenDragging != null) {
      $result.childWhenDragging = childWhenDragging;
    }
    if (maxSimultaneousDrags != null) {
      $result.maxSimultaneousDrags = maxSimultaneousDrags;
    }
    if (hapticFeedbackOnStart != null) {
      $result.hapticFeedbackOnStart = hapticFeedbackOnStart;
    }
    if (ignoringFeedbackSemantics != null) {
      $result.ignoringFeedbackSemantics = ignoringFeedbackSemantics;
    }
    if (ignoringFeedbackPointer != null) {
      $result.ignoringFeedbackPointer = ignoringFeedbackPointer;
    }
    if (delay != null) {
      $result.delay = delay;
    }
    return $result;
  }
  FlutterLongPressDraggable._() : super();
  factory FlutterLongPressDraggable.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterLongPressDraggable.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterLongPressDraggable', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'feedback', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'childWhenDragging', subBuilder: WidgetExpression.create)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'maxSimultaneousDrags', $pb.PbFieldType.O3)
    ..aOB(16, _omitFieldNames ? '' : 'hapticFeedbackOnStart')
    ..aOB(17, _omitFieldNames ? '' : 'ignoringFeedbackSemantics')
    ..aOB(18, _omitFieldNames ? '' : 'ignoringFeedbackPointer')
    ..aOM<$1.DartDurationExpression>(19, _omitFieldNames ? '' : 'delay', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterLongPressDraggable clone() => FlutterLongPressDraggable()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterLongPressDraggable copyWith(void Function(FlutterLongPressDraggable) updates) => super.copyWith((message) => updates(message as FlutterLongPressDraggable)) as FlutterLongPressDraggable;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterLongPressDraggable create() => FlutterLongPressDraggable._();
  FlutterLongPressDraggable createEmptyInstance() => create();
  static $pb.PbList<FlutterLongPressDraggable> createRepeated() => $pb.PbList<FlutterLongPressDraggable>();
  @$core.pragma('dart2js:noInline')
  static FlutterLongPressDraggable getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterLongPressDraggable>(create);
  static FlutterLongPressDraggable? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get feedback => $_getN(2);
  @$pb.TagNumber(4)
  set feedback(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasFeedback() => $_has(2);
  @$pb.TagNumber(4)
  void clearFeedback() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureFeedback() => $_ensure(2);

  @$pb.TagNumber(7)
  WidgetExpression get childWhenDragging => $_getN(3);
  @$pb.TagNumber(7)
  set childWhenDragging(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChildWhenDragging() => $_has(3);
  @$pb.TagNumber(7)
  void clearChildWhenDragging() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChildWhenDragging() => $_ensure(3);

  @$pb.TagNumber(10)
  $core.int get maxSimultaneousDrags => $_getIZ(4);
  @$pb.TagNumber(10)
  set maxSimultaneousDrags($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaxSimultaneousDrags() => $_has(4);
  @$pb.TagNumber(10)
  void clearMaxSimultaneousDrags() => clearField(10);

  @$pb.TagNumber(16)
  $core.bool get hapticFeedbackOnStart => $_getBF(5);
  @$pb.TagNumber(16)
  set hapticFeedbackOnStart($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(16)
  $core.bool hasHapticFeedbackOnStart() => $_has(5);
  @$pb.TagNumber(16)
  void clearHapticFeedbackOnStart() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get ignoringFeedbackSemantics => $_getBF(6);
  @$pb.TagNumber(17)
  set ignoringFeedbackSemantics($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(17)
  $core.bool hasIgnoringFeedbackSemantics() => $_has(6);
  @$pb.TagNumber(17)
  void clearIgnoringFeedbackSemantics() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get ignoringFeedbackPointer => $_getBF(7);
  @$pb.TagNumber(18)
  set ignoringFeedbackPointer($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(18)
  $core.bool hasIgnoringFeedbackPointer() => $_has(7);
  @$pb.TagNumber(18)
  void clearIgnoringFeedbackPointer() => clearField(18);

  @$pb.TagNumber(19)
  $1.DartDurationExpression get delay => $_getN(8);
  @$pb.TagNumber(19)
  set delay($1.DartDurationExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasDelay() => $_has(8);
  @$pb.TagNumber(19)
  void clearDelay() => clearField(19);
  @$pb.TagNumber(19)
  $1.DartDurationExpression ensureDelay() => $_ensure(8);
}

/// package:flutter/src/widgets/draggable_scrollable_sheet.dart
class FlutterDraggableScrollableActuator extends $pb.GeneratedMessage {
  factory FlutterDraggableScrollableActuator({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterDraggableScrollableActuator._() : super();
  factory FlutterDraggableScrollableActuator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDraggableScrollableActuator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDraggableScrollableActuator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDraggableScrollableActuator clone() => FlutterDraggableScrollableActuator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDraggableScrollableActuator copyWith(void Function(FlutterDraggableScrollableActuator) updates) => super.copyWith((message) => updates(message as FlutterDraggableScrollableActuator)) as FlutterDraggableScrollableActuator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDraggableScrollableActuator create() => FlutterDraggableScrollableActuator._();
  FlutterDraggableScrollableActuator createEmptyInstance() => create();
  static $pb.PbList<FlutterDraggableScrollableActuator> createRepeated() => $pb.PbList<FlutterDraggableScrollableActuator>();
  @$core.pragma('dart2js:noInline')
  static FlutterDraggableScrollableActuator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDraggableScrollableActuator>(create);
  static FlutterDraggableScrollableActuator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/fade_in_image.dart
class FlutterFadeInImageNamedAssetNetwork extends $pb.GeneratedMessage {
  factory FlutterFadeInImageNamedAssetNetwork({
    $1.FlutterKeyExpression? key,
    $core.String? placeholder,
    $core.String? image,
    $core.double? placeholderScale,
    $core.double? imageScale,
    $core.bool? excludeFromSemantics,
    $core.String? imageSemanticLabel,
    $1.DartDurationExpression? fadeOutDuration,
    $1.DartDurationExpression? fadeInDuration,
    $core.double? width,
    $core.double? height,
    $core.bool? matchTextDirection,
    $core.int? placeholderCacheWidth,
    $core.int? placeholderCacheHeight,
    $core.int? imageCacheWidth,
    $core.int? imageCacheHeight,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (placeholder != null) {
      $result.placeholder = placeholder;
    }
    if (image != null) {
      $result.image = image;
    }
    if (placeholderScale != null) {
      $result.placeholderScale = placeholderScale;
    }
    if (imageScale != null) {
      $result.imageScale = imageScale;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (imageSemanticLabel != null) {
      $result.imageSemanticLabel = imageSemanticLabel;
    }
    if (fadeOutDuration != null) {
      $result.fadeOutDuration = fadeOutDuration;
    }
    if (fadeInDuration != null) {
      $result.fadeInDuration = fadeInDuration;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (matchTextDirection != null) {
      $result.matchTextDirection = matchTextDirection;
    }
    if (placeholderCacheWidth != null) {
      $result.placeholderCacheWidth = placeholderCacheWidth;
    }
    if (placeholderCacheHeight != null) {
      $result.placeholderCacheHeight = placeholderCacheHeight;
    }
    if (imageCacheWidth != null) {
      $result.imageCacheWidth = imageCacheWidth;
    }
    if (imageCacheHeight != null) {
      $result.imageCacheHeight = imageCacheHeight;
    }
    return $result;
  }
  FlutterFadeInImageNamedAssetNetwork._() : super();
  factory FlutterFadeInImageNamedAssetNetwork.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFadeInImageNamedAssetNetwork.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFadeInImageNamedAssetNetwork', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'placeholder')
    ..aOS(5, _omitFieldNames ? '' : 'image')
    ..a<$core.double>(8, _omitFieldNames ? '' : 'placeholderScale', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'imageScale', $pb.PbFieldType.OD)
    ..aOB(10, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..aOS(11, _omitFieldNames ? '' : 'imageSemanticLabel')
    ..aOM<$1.DartDurationExpression>(12, _omitFieldNames ? '' : 'fadeOutDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(14, _omitFieldNames ? '' : 'fadeInDuration', subBuilder: $1.DartDurationExpression.create)
    ..a<$core.double>(16, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOB(24, _omitFieldNames ? '' : 'matchTextDirection')
    ..a<$core.int>(25, _omitFieldNames ? '' : 'placeholderCacheWidth', $pb.PbFieldType.O3)
    ..a<$core.int>(26, _omitFieldNames ? '' : 'placeholderCacheHeight', $pb.PbFieldType.O3)
    ..a<$core.int>(27, _omitFieldNames ? '' : 'imageCacheWidth', $pb.PbFieldType.O3)
    ..a<$core.int>(28, _omitFieldNames ? '' : 'imageCacheHeight', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFadeInImageNamedAssetNetwork clone() => FlutterFadeInImageNamedAssetNetwork()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFadeInImageNamedAssetNetwork copyWith(void Function(FlutterFadeInImageNamedAssetNetwork) updates) => super.copyWith((message) => updates(message as FlutterFadeInImageNamedAssetNetwork)) as FlutterFadeInImageNamedAssetNetwork;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFadeInImageNamedAssetNetwork create() => FlutterFadeInImageNamedAssetNetwork._();
  FlutterFadeInImageNamedAssetNetwork createEmptyInstance() => create();
  static $pb.PbList<FlutterFadeInImageNamedAssetNetwork> createRepeated() => $pb.PbList<FlutterFadeInImageNamedAssetNetwork>();
  @$core.pragma('dart2js:noInline')
  static FlutterFadeInImageNamedAssetNetwork getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFadeInImageNamedAssetNetwork>(create);
  static FlutterFadeInImageNamedAssetNetwork? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get placeholder => $_getSZ(1);
  @$pb.TagNumber(3)
  set placeholder($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasPlaceholder() => $_has(1);
  @$pb.TagNumber(3)
  void clearPlaceholder() => clearField(3);

  @$pb.TagNumber(5)
  $core.String get image => $_getSZ(2);
  @$pb.TagNumber(5)
  set image($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasImage() => $_has(2);
  @$pb.TagNumber(5)
  void clearImage() => clearField(5);

  @$pb.TagNumber(8)
  $core.double get placeholderScale => $_getN(3);
  @$pb.TagNumber(8)
  set placeholderScale($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasPlaceholderScale() => $_has(3);
  @$pb.TagNumber(8)
  void clearPlaceholderScale() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get imageScale => $_getN(4);
  @$pb.TagNumber(9)
  set imageScale($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasImageScale() => $_has(4);
  @$pb.TagNumber(9)
  void clearImageScale() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get excludeFromSemantics => $_getBF(5);
  @$pb.TagNumber(10)
  set excludeFromSemantics($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasExcludeFromSemantics() => $_has(5);
  @$pb.TagNumber(10)
  void clearExcludeFromSemantics() => clearField(10);

  @$pb.TagNumber(11)
  $core.String get imageSemanticLabel => $_getSZ(6);
  @$pb.TagNumber(11)
  set imageSemanticLabel($core.String v) { $_setString(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasImageSemanticLabel() => $_has(6);
  @$pb.TagNumber(11)
  void clearImageSemanticLabel() => clearField(11);

  @$pb.TagNumber(12)
  $1.DartDurationExpression get fadeOutDuration => $_getN(7);
  @$pb.TagNumber(12)
  set fadeOutDuration($1.DartDurationExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasFadeOutDuration() => $_has(7);
  @$pb.TagNumber(12)
  void clearFadeOutDuration() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartDurationExpression ensureFadeOutDuration() => $_ensure(7);

  @$pb.TagNumber(14)
  $1.DartDurationExpression get fadeInDuration => $_getN(8);
  @$pb.TagNumber(14)
  set fadeInDuration($1.DartDurationExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasFadeInDuration() => $_has(8);
  @$pb.TagNumber(14)
  void clearFadeInDuration() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartDurationExpression ensureFadeInDuration() => $_ensure(8);

  @$pb.TagNumber(16)
  $core.double get width => $_getN(9);
  @$pb.TagNumber(16)
  set width($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(16)
  $core.bool hasWidth() => $_has(9);
  @$pb.TagNumber(16)
  void clearWidth() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get height => $_getN(10);
  @$pb.TagNumber(17)
  set height($core.double v) { $_setDouble(10, v); }
  @$pb.TagNumber(17)
  $core.bool hasHeight() => $_has(10);
  @$pb.TagNumber(17)
  void clearHeight() => clearField(17);

  @$pb.TagNumber(24)
  $core.bool get matchTextDirection => $_getBF(11);
  @$pb.TagNumber(24)
  set matchTextDirection($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(24)
  $core.bool hasMatchTextDirection() => $_has(11);
  @$pb.TagNumber(24)
  void clearMatchTextDirection() => clearField(24);

  @$pb.TagNumber(25)
  $core.int get placeholderCacheWidth => $_getIZ(12);
  @$pb.TagNumber(25)
  set placeholderCacheWidth($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(25)
  $core.bool hasPlaceholderCacheWidth() => $_has(12);
  @$pb.TagNumber(25)
  void clearPlaceholderCacheWidth() => clearField(25);

  @$pb.TagNumber(26)
  $core.int get placeholderCacheHeight => $_getIZ(13);
  @$pb.TagNumber(26)
  set placeholderCacheHeight($core.int v) { $_setSignedInt32(13, v); }
  @$pb.TagNumber(26)
  $core.bool hasPlaceholderCacheHeight() => $_has(13);
  @$pb.TagNumber(26)
  void clearPlaceholderCacheHeight() => clearField(26);

  @$pb.TagNumber(27)
  $core.int get imageCacheWidth => $_getIZ(14);
  @$pb.TagNumber(27)
  set imageCacheWidth($core.int v) { $_setSignedInt32(14, v); }
  @$pb.TagNumber(27)
  $core.bool hasImageCacheWidth() => $_has(14);
  @$pb.TagNumber(27)
  void clearImageCacheWidth() => clearField(27);

  @$pb.TagNumber(28)
  $core.int get imageCacheHeight => $_getIZ(15);
  @$pb.TagNumber(28)
  set imageCacheHeight($core.int v) { $_setSignedInt32(15, v); }
  @$pb.TagNumber(28)
  $core.bool hasImageCacheHeight() => $_has(15);
  @$pb.TagNumber(28)
  void clearImageCacheHeight() => clearField(28);
}

/// package:flutter/src/widgets/focus_scope.dart
class FlutterExcludeFocus extends $pb.GeneratedMessage {
  factory FlutterExcludeFocus({
    $1.FlutterKeyExpression? key,
    $core.bool? excluding,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (excluding != null) {
      $result.excluding = excluding;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterExcludeFocus._() : super();
  factory FlutterExcludeFocus.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterExcludeFocus.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterExcludeFocus', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'excluding')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterExcludeFocus clone() => FlutterExcludeFocus()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterExcludeFocus copyWith(void Function(FlutterExcludeFocus) updates) => super.copyWith((message) => updates(message as FlutterExcludeFocus)) as FlutterExcludeFocus;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterExcludeFocus create() => FlutterExcludeFocus._();
  FlutterExcludeFocus createEmptyInstance() => create();
  static $pb.PbList<FlutterExcludeFocus> createRepeated() => $pb.PbList<FlutterExcludeFocus>();
  @$core.pragma('dart2js:noInline')
  static FlutterExcludeFocus getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterExcludeFocus>(create);
  static FlutterExcludeFocus? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get excluding => $_getBF(1);
  @$pb.TagNumber(3)
  set excluding($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasExcluding() => $_has(1);
  @$pb.TagNumber(3)
  void clearExcluding() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/focus_scope.dart
class FlutterFocus extends $pb.GeneratedMessage {
  factory FlutterFocus({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? autofocus,
    $core.bool? canRequestFocus,
    $core.bool? skipTraversal,
    $core.bool? descendantsAreFocusable,
    $core.bool? descendantsAreTraversable,
    $core.bool? includeSemantics,
    $core.String? debugLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    if (skipTraversal != null) {
      $result.skipTraversal = skipTraversal;
    }
    if (descendantsAreFocusable != null) {
      $result.descendantsAreFocusable = descendantsAreFocusable;
    }
    if (descendantsAreTraversable != null) {
      $result.descendantsAreTraversable = descendantsAreTraversable;
    }
    if (includeSemantics != null) {
      $result.includeSemantics = includeSemantics;
    }
    if (debugLabel != null) {
      $result.debugLabel = debugLabel;
    }
    return $result;
  }
  FlutterFocus._() : super();
  factory FlutterFocus.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFocus.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFocus', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'autofocus')
    ..aOB(10, _omitFieldNames ? '' : 'canRequestFocus')
    ..aOB(11, _omitFieldNames ? '' : 'skipTraversal')
    ..aOB(12, _omitFieldNames ? '' : 'descendantsAreFocusable')
    ..aOB(13, _omitFieldNames ? '' : 'descendantsAreTraversable')
    ..aOB(14, _omitFieldNames ? '' : 'includeSemantics')
    ..aOS(15, _omitFieldNames ? '' : 'debugLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFocus clone() => FlutterFocus()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFocus copyWith(void Function(FlutterFocus) updates) => super.copyWith((message) => updates(message as FlutterFocus)) as FlutterFocus;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFocus create() => FlutterFocus._();
  FlutterFocus createEmptyInstance() => create();
  static $pb.PbList<FlutterFocus> createRepeated() => $pb.PbList<FlutterFocus>();
  @$core.pragma('dart2js:noInline')
  static FlutterFocus getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFocus>(create);
  static FlutterFocus? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.bool get autofocus => $_getBF(2);
  @$pb.TagNumber(6)
  set autofocus($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasAutofocus() => $_has(2);
  @$pb.TagNumber(6)
  void clearAutofocus() => clearField(6);

  @$pb.TagNumber(10)
  $core.bool get canRequestFocus => $_getBF(3);
  @$pb.TagNumber(10)
  set canRequestFocus($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(10)
  $core.bool hasCanRequestFocus() => $_has(3);
  @$pb.TagNumber(10)
  void clearCanRequestFocus() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get skipTraversal => $_getBF(4);
  @$pb.TagNumber(11)
  set skipTraversal($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(11)
  $core.bool hasSkipTraversal() => $_has(4);
  @$pb.TagNumber(11)
  void clearSkipTraversal() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get descendantsAreFocusable => $_getBF(5);
  @$pb.TagNumber(12)
  set descendantsAreFocusable($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(12)
  $core.bool hasDescendantsAreFocusable() => $_has(5);
  @$pb.TagNumber(12)
  void clearDescendantsAreFocusable() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get descendantsAreTraversable => $_getBF(6);
  @$pb.TagNumber(13)
  set descendantsAreTraversable($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(13)
  $core.bool hasDescendantsAreTraversable() => $_has(6);
  @$pb.TagNumber(13)
  void clearDescendantsAreTraversable() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get includeSemantics => $_getBF(7);
  @$pb.TagNumber(14)
  set includeSemantics($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(14)
  $core.bool hasIncludeSemantics() => $_has(7);
  @$pb.TagNumber(14)
  void clearIncludeSemantics() => clearField(14);

  @$pb.TagNumber(15)
  $core.String get debugLabel => $_getSZ(8);
  @$pb.TagNumber(15)
  set debugLabel($core.String v) { $_setString(8, v); }
  @$pb.TagNumber(15)
  $core.bool hasDebugLabel() => $_has(8);
  @$pb.TagNumber(15)
  void clearDebugLabel() => clearField(15);
}

/// package:flutter/src/widgets/focus_scope.dart
class FlutterFocusScope extends $pb.GeneratedMessage {
  factory FlutterFocusScope({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? autofocus,
    $core.bool? canRequestFocus,
    $core.bool? skipTraversal,
    $core.String? debugLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (autofocus != null) {
      $result.autofocus = autofocus;
    }
    if (canRequestFocus != null) {
      $result.canRequestFocus = canRequestFocus;
    }
    if (skipTraversal != null) {
      $result.skipTraversal = skipTraversal;
    }
    if (debugLabel != null) {
      $result.debugLabel = debugLabel;
    }
    return $result;
  }
  FlutterFocusScope._() : super();
  factory FlutterFocusScope.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFocusScope.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFocusScope', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'autofocus')
    ..aOB(8, _omitFieldNames ? '' : 'canRequestFocus')
    ..aOB(9, _omitFieldNames ? '' : 'skipTraversal')
    ..aOS(12, _omitFieldNames ? '' : 'debugLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFocusScope clone() => FlutterFocusScope()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFocusScope copyWith(void Function(FlutterFocusScope) updates) => super.copyWith((message) => updates(message as FlutterFocusScope)) as FlutterFocusScope;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFocusScope create() => FlutterFocusScope._();
  FlutterFocusScope createEmptyInstance() => create();
  static $pb.PbList<FlutterFocusScope> createRepeated() => $pb.PbList<FlutterFocusScope>();
  @$core.pragma('dart2js:noInline')
  static FlutterFocusScope getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFocusScope>(create);
  static FlutterFocusScope? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.bool get autofocus => $_getBF(2);
  @$pb.TagNumber(6)
  set autofocus($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasAutofocus() => $_has(2);
  @$pb.TagNumber(6)
  void clearAutofocus() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get canRequestFocus => $_getBF(3);
  @$pb.TagNumber(8)
  set canRequestFocus($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasCanRequestFocus() => $_has(3);
  @$pb.TagNumber(8)
  void clearCanRequestFocus() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get skipTraversal => $_getBF(4);
  @$pb.TagNumber(9)
  set skipTraversal($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasSkipTraversal() => $_has(4);
  @$pb.TagNumber(9)
  void clearSkipTraversal() => clearField(9);

  @$pb.TagNumber(12)
  $core.String get debugLabel => $_getSZ(5);
  @$pb.TagNumber(12)
  set debugLabel($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(12)
  $core.bool hasDebugLabel() => $_has(5);
  @$pb.TagNumber(12)
  void clearDebugLabel() => clearField(12);
}

/// package:flutter/src/widgets/focus_traversal.dart
class FlutterExcludeFocusTraversal extends $pb.GeneratedMessage {
  factory FlutterExcludeFocusTraversal({
    $1.FlutterKeyExpression? key,
    $core.bool? excluding,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (excluding != null) {
      $result.excluding = excluding;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterExcludeFocusTraversal._() : super();
  factory FlutterExcludeFocusTraversal.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterExcludeFocusTraversal.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterExcludeFocusTraversal', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'excluding')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterExcludeFocusTraversal clone() => FlutterExcludeFocusTraversal()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterExcludeFocusTraversal copyWith(void Function(FlutterExcludeFocusTraversal) updates) => super.copyWith((message) => updates(message as FlutterExcludeFocusTraversal)) as FlutterExcludeFocusTraversal;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterExcludeFocusTraversal create() => FlutterExcludeFocusTraversal._();
  FlutterExcludeFocusTraversal createEmptyInstance() => create();
  static $pb.PbList<FlutterExcludeFocusTraversal> createRepeated() => $pb.PbList<FlutterExcludeFocusTraversal>();
  @$core.pragma('dart2js:noInline')
  static FlutterExcludeFocusTraversal getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterExcludeFocusTraversal>(create);
  static FlutterExcludeFocusTraversal? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get excluding => $_getBF(1);
  @$pb.TagNumber(3)
  set excluding($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasExcluding() => $_has(1);
  @$pb.TagNumber(3)
  void clearExcluding() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/focus_traversal.dart
class FlutterFocusTraversalGroup extends $pb.GeneratedMessage {
  factory FlutterFocusTraversalGroup({
    $1.FlutterKeyExpression? key,
    $core.bool? descendantsAreFocusable,
    $core.bool? descendantsAreTraversable,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (descendantsAreFocusable != null) {
      $result.descendantsAreFocusable = descendantsAreFocusable;
    }
    if (descendantsAreTraversable != null) {
      $result.descendantsAreTraversable = descendantsAreTraversable;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterFocusTraversalGroup._() : super();
  factory FlutterFocusTraversalGroup.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterFocusTraversalGroup.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterFocusTraversalGroup', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'descendantsAreFocusable')
    ..aOB(5, _omitFieldNames ? '' : 'descendantsAreTraversable')
    ..aOM<WidgetExpression>(6, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterFocusTraversalGroup clone() => FlutterFocusTraversalGroup()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterFocusTraversalGroup copyWith(void Function(FlutterFocusTraversalGroup) updates) => super.copyWith((message) => updates(message as FlutterFocusTraversalGroup)) as FlutterFocusTraversalGroup;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterFocusTraversalGroup create() => FlutterFocusTraversalGroup._();
  FlutterFocusTraversalGroup createEmptyInstance() => create();
  static $pb.PbList<FlutterFocusTraversalGroup> createRepeated() => $pb.PbList<FlutterFocusTraversalGroup>();
  @$core.pragma('dart2js:noInline')
  static FlutterFocusTraversalGroup getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterFocusTraversalGroup>(create);
  static FlutterFocusTraversalGroup? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get descendantsAreFocusable => $_getBF(1);
  @$pb.TagNumber(4)
  set descendantsAreFocusable($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasDescendantsAreFocusable() => $_has(1);
  @$pb.TagNumber(4)
  void clearDescendantsAreFocusable() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get descendantsAreTraversable => $_getBF(2);
  @$pb.TagNumber(5)
  set descendantsAreTraversable($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasDescendantsAreTraversable() => $_has(2);
  @$pb.TagNumber(5)
  void clearDescendantsAreTraversable() => clearField(5);

  @$pb.TagNumber(6)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(6)
  set child(WidgetExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(6)
  void clearChild() => clearField(6);
  @$pb.TagNumber(6)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/form.dart
class FlutterForm extends $pb.GeneratedMessage {
  factory FlutterForm({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterForm._() : super();
  factory FlutterForm.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterForm.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterForm', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterForm clone() => FlutterForm()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterForm copyWith(void Function(FlutterForm) updates) => super.copyWith((message) => updates(message as FlutterForm)) as FlutterForm;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterForm create() => FlutterForm._();
  FlutterForm createEmptyInstance() => create();
  static $pb.PbList<FlutterForm> createRepeated() => $pb.PbList<FlutterForm>();
  @$core.pragma('dart2js:noInline')
  static FlutterForm getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterForm>(create);
  static FlutterForm? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/framework.dart
class FlutterErrorWidgetNamedWithDetails extends $pb.GeneratedMessage {
  factory FlutterErrorWidgetNamedWithDetails({
    $core.String? message,
  }) {
    final $result = create();
    if (message != null) {
      $result.message = message;
    }
    return $result;
  }
  FlutterErrorWidgetNamedWithDetails._() : super();
  factory FlutterErrorWidgetNamedWithDetails.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterErrorWidgetNamedWithDetails.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterErrorWidgetNamedWithDetails', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'message')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterErrorWidgetNamedWithDetails clone() => FlutterErrorWidgetNamedWithDetails()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterErrorWidgetNamedWithDetails copyWith(void Function(FlutterErrorWidgetNamedWithDetails) updates) => super.copyWith((message) => updates(message as FlutterErrorWidgetNamedWithDetails)) as FlutterErrorWidgetNamedWithDetails;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterErrorWidgetNamedWithDetails create() => FlutterErrorWidgetNamedWithDetails._();
  FlutterErrorWidgetNamedWithDetails createEmptyInstance() => create();
  static $pb.PbList<FlutterErrorWidgetNamedWithDetails> createRepeated() => $pb.PbList<FlutterErrorWidgetNamedWithDetails>();
  @$core.pragma('dart2js:noInline')
  static FlutterErrorWidgetNamedWithDetails getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterErrorWidgetNamedWithDetails>(create);
  static FlutterErrorWidgetNamedWithDetails? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get message => $_getSZ(0);
  @$pb.TagNumber(2)
  set message($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasMessage() => $_has(0);
  @$pb.TagNumber(2)
  void clearMessage() => clearField(2);
}

/// package:flutter/src/widgets/gesture_detector.dart
class FlutterGestureDetector extends $pb.GeneratedMessage {
  factory FlutterGestureDetector({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? excludeFromSemantics,
    $core.bool? trackpadScrollCausesScale,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (trackpadScrollCausesScale != null) {
      $result.trackpadScrollCausesScale = trackpadScrollCausesScale;
    }
    return $result;
  }
  FlutterGestureDetector._() : super();
  factory FlutterGestureDetector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterGestureDetector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterGestureDetector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(62, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..aOB(64, _omitFieldNames ? '' : 'trackpadScrollCausesScale')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterGestureDetector clone() => FlutterGestureDetector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterGestureDetector copyWith(void Function(FlutterGestureDetector) updates) => super.copyWith((message) => updates(message as FlutterGestureDetector)) as FlutterGestureDetector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterGestureDetector create() => FlutterGestureDetector._();
  FlutterGestureDetector createEmptyInstance() => create();
  static $pb.PbList<FlutterGestureDetector> createRepeated() => $pb.PbList<FlutterGestureDetector>();
  @$core.pragma('dart2js:noInline')
  static FlutterGestureDetector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterGestureDetector>(create);
  static FlutterGestureDetector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(62)
  $core.bool get excludeFromSemantics => $_getBF(2);
  @$pb.TagNumber(62)
  set excludeFromSemantics($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(62)
  $core.bool hasExcludeFromSemantics() => $_has(2);
  @$pb.TagNumber(62)
  void clearExcludeFromSemantics() => clearField(62);

  @$pb.TagNumber(64)
  $core.bool get trackpadScrollCausesScale => $_getBF(3);
  @$pb.TagNumber(64)
  set trackpadScrollCausesScale($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(64)
  $core.bool hasTrackpadScrollCausesScale() => $_has(3);
  @$pb.TagNumber(64)
  void clearTrackpadScrollCausesScale() => clearField(64);
}

/// package:flutter/src/widgets/gesture_detector.dart
class FlutterRawGestureDetector extends $pb.GeneratedMessage {
  factory FlutterRawGestureDetector({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? excludeFromSemantics,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    return $result;
  }
  FlutterRawGestureDetector._() : super();
  factory FlutterRawGestureDetector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRawGestureDetector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRawGestureDetector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRawGestureDetector clone() => FlutterRawGestureDetector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRawGestureDetector copyWith(void Function(FlutterRawGestureDetector) updates) => super.copyWith((message) => updates(message as FlutterRawGestureDetector)) as FlutterRawGestureDetector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRawGestureDetector create() => FlutterRawGestureDetector._();
  FlutterRawGestureDetector createEmptyInstance() => create();
  static $pb.PbList<FlutterRawGestureDetector> createRepeated() => $pb.PbList<FlutterRawGestureDetector>();
  @$core.pragma('dart2js:noInline')
  static FlutterRawGestureDetector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRawGestureDetector>(create);
  static FlutterRawGestureDetector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(6)
  $core.bool get excludeFromSemantics => $_getBF(2);
  @$pb.TagNumber(6)
  set excludeFromSemantics($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasExcludeFromSemantics() => $_has(2);
  @$pb.TagNumber(6)
  void clearExcludeFromSemantics() => clearField(6);
}

/// package:flutter/src/widgets/grid_paper.dart
class FlutterGridPaper extends $pb.GeneratedMessage {
  factory FlutterGridPaper({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? interval,
    $core.int? divisions,
    $core.int? subdivisions,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (interval != null) {
      $result.interval = interval;
    }
    if (divisions != null) {
      $result.divisions = divisions;
    }
    if (subdivisions != null) {
      $result.subdivisions = subdivisions;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterGridPaper._() : super();
  factory FlutterGridPaper.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterGridPaper.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterGridPaper', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'interval', $pb.PbFieldType.OD)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'divisions', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'subdivisions', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterGridPaper clone() => FlutterGridPaper()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterGridPaper copyWith(void Function(FlutterGridPaper) updates) => super.copyWith((message) => updates(message as FlutterGridPaper)) as FlutterGridPaper;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterGridPaper create() => FlutterGridPaper._();
  FlutterGridPaper createEmptyInstance() => create();
  static $pb.PbList<FlutterGridPaper> createRepeated() => $pb.PbList<FlutterGridPaper>();
  @$core.pragma('dart2js:noInline')
  static FlutterGridPaper getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterGridPaper>(create);
  static FlutterGridPaper? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get interval => $_getN(2);
  @$pb.TagNumber(4)
  set interval($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasInterval() => $_has(2);
  @$pb.TagNumber(4)
  void clearInterval() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get divisions => $_getIZ(3);
  @$pb.TagNumber(5)
  set divisions($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasDivisions() => $_has(3);
  @$pb.TagNumber(5)
  void clearDivisions() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get subdivisions => $_getIZ(4);
  @$pb.TagNumber(6)
  set subdivisions($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasSubdivisions() => $_has(4);
  @$pb.TagNumber(6)
  void clearSubdivisions() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/widgets/heroes.dart
class FlutterHeroMode extends $pb.GeneratedMessage {
  factory FlutterHeroMode({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? enabled,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    return $result;
  }
  FlutterHeroMode._() : super();
  factory FlutterHeroMode.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterHeroMode.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterHeroMode', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'enabled')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterHeroMode clone() => FlutterHeroMode()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterHeroMode copyWith(void Function(FlutterHeroMode) updates) => super.copyWith((message) => updates(message as FlutterHeroMode)) as FlutterHeroMode;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterHeroMode create() => FlutterHeroMode._();
  FlutterHeroMode createEmptyInstance() => create();
  static $pb.PbList<FlutterHeroMode> createRepeated() => $pb.PbList<FlutterHeroMode>();
  @$core.pragma('dart2js:noInline')
  static FlutterHeroMode getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterHeroMode>(create);
  static FlutterHeroMode? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get enabled => $_getBF(2);
  @$pb.TagNumber(4)
  set enabled($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasEnabled() => $_has(2);
  @$pb.TagNumber(4)
  void clearEnabled() => clearField(4);
}

/// package:flutter/src/widgets/icon.dart
class FlutterIcon extends $pb.GeneratedMessage {
  factory FlutterIcon({
    $1.FlutterKeyExpression? key,
    $core.double? size,
    $core.double? fill,
    $core.double? weight,
    $core.double? grade,
    $core.double? opticalSize,
    $1.DartColorExpression? color,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (size != null) {
      $result.size = size;
    }
    if (fill != null) {
      $result.fill = fill;
    }
    if (weight != null) {
      $result.weight = weight;
    }
    if (grade != null) {
      $result.grade = grade;
    }
    if (opticalSize != null) {
      $result.opticalSize = opticalSize;
    }
    if (color != null) {
      $result.color = color;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  FlutterIcon._() : super();
  factory FlutterIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'size', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'fill', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'weight', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'grade', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'opticalSize', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOS(11, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterIcon clone() => FlutterIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterIcon copyWith(void Function(FlutterIcon) updates) => super.copyWith((message) => updates(message as FlutterIcon)) as FlutterIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterIcon create() => FlutterIcon._();
  FlutterIcon createEmptyInstance() => create();
  static $pb.PbList<FlutterIcon> createRepeated() => $pb.PbList<FlutterIcon>();
  @$core.pragma('dart2js:noInline')
  static FlutterIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterIcon>(create);
  static FlutterIcon? _defaultInstance;

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get size => $_getN(1);
  @$pb.TagNumber(4)
  set size($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasSize() => $_has(1);
  @$pb.TagNumber(4)
  void clearSize() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get fill => $_getN(2);
  @$pb.TagNumber(5)
  set fill($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasFill() => $_has(2);
  @$pb.TagNumber(5)
  void clearFill() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get weight => $_getN(3);
  @$pb.TagNumber(6)
  set weight($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasWeight() => $_has(3);
  @$pb.TagNumber(6)
  void clearWeight() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get grade => $_getN(4);
  @$pb.TagNumber(7)
  set grade($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasGrade() => $_has(4);
  @$pb.TagNumber(7)
  void clearGrade() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get opticalSize => $_getN(5);
  @$pb.TagNumber(8)
  set opticalSize($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasOpticalSize() => $_has(5);
  @$pb.TagNumber(8)
  void clearOpticalSize() => clearField(8);

  @$pb.TagNumber(9)
  $1.DartColorExpression get color => $_getN(6);
  @$pb.TagNumber(9)
  set color($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasColor() => $_has(6);
  @$pb.TagNumber(9)
  void clearColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureColor() => $_ensure(6);

  @$pb.TagNumber(11)
  $core.String get semanticLabel => $_getSZ(7);
  @$pb.TagNumber(11)
  set semanticLabel($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(11)
  $core.bool hasSemanticLabel() => $_has(7);
  @$pb.TagNumber(11)
  void clearSemanticLabel() => clearField(11);
}

/// package:flutter/src/widgets/image.dart
class FlutterImageNamedNetwork extends $pb.GeneratedMessage {
  factory FlutterImageNamedNetwork({
    $core.String? src,
    $1.FlutterKeyExpression? key,
    $core.double? scale,
    $core.String? semanticLabel,
    $core.bool? excludeFromSemantics,
    $core.double? width,
    $core.double? height,
    $1.DartColorExpression? color,
    $core.bool? matchTextDirection,
    $core.bool? gaplessPlayback,
    $core.bool? isAntiAlias,
    $core.int? cacheWidth,
    $core.int? cacheHeight,
  }) {
    final $result = create();
    if (src != null) {
      $result.src = src;
    }
    if (key != null) {
      $result.key = key;
    }
    if (scale != null) {
      $result.scale = scale;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (color != null) {
      $result.color = color;
    }
    if (matchTextDirection != null) {
      $result.matchTextDirection = matchTextDirection;
    }
    if (gaplessPlayback != null) {
      $result.gaplessPlayback = gaplessPlayback;
    }
    if (isAntiAlias != null) {
      $result.isAntiAlias = isAntiAlias;
    }
    if (cacheWidth != null) {
      $result.cacheWidth = cacheWidth;
    }
    if (cacheHeight != null) {
      $result.cacheHeight = cacheHeight;
    }
    return $result;
  }
  FlutterImageNamedNetwork._() : super();
  factory FlutterImageNamedNetwork.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterImageNamedNetwork.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterImageNamedNetwork', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'src')
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'scale', $pb.PbFieldType.OD)
    ..aOS(8, _omitFieldNames ? '' : 'semanticLabel')
    ..aOB(9, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..a<$core.double>(10, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(19, _omitFieldNames ? '' : 'matchTextDirection')
    ..aOB(20, _omitFieldNames ? '' : 'gaplessPlayback')
    ..aOB(22, _omitFieldNames ? '' : 'isAntiAlias')
    ..a<$core.int>(24, _omitFieldNames ? '' : 'cacheWidth', $pb.PbFieldType.O3)
    ..a<$core.int>(25, _omitFieldNames ? '' : 'cacheHeight', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterImageNamedNetwork clone() => FlutterImageNamedNetwork()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterImageNamedNetwork copyWith(void Function(FlutterImageNamedNetwork) updates) => super.copyWith((message) => updates(message as FlutterImageNamedNetwork)) as FlutterImageNamedNetwork;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterImageNamedNetwork create() => FlutterImageNamedNetwork._();
  FlutterImageNamedNetwork createEmptyInstance() => create();
  static $pb.PbList<FlutterImageNamedNetwork> createRepeated() => $pb.PbList<FlutterImageNamedNetwork>();
  @$core.pragma('dart2js:noInline')
  static FlutterImageNamedNetwork getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterImageNamedNetwork>(create);
  static FlutterImageNamedNetwork? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get src => $_getSZ(0);
  @$pb.TagNumber(2)
  set src($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasSrc() => $_has(0);
  @$pb.TagNumber(2)
  void clearSrc() => clearField(2);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get scale => $_getN(2);
  @$pb.TagNumber(4)
  set scale($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasScale() => $_has(2);
  @$pb.TagNumber(4)
  void clearScale() => clearField(4);

  @$pb.TagNumber(8)
  $core.String get semanticLabel => $_getSZ(3);
  @$pb.TagNumber(8)
  set semanticLabel($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasSemanticLabel() => $_has(3);
  @$pb.TagNumber(8)
  void clearSemanticLabel() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get excludeFromSemantics => $_getBF(4);
  @$pb.TagNumber(9)
  set excludeFromSemantics($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasExcludeFromSemantics() => $_has(4);
  @$pb.TagNumber(9)
  void clearExcludeFromSemantics() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get width => $_getN(5);
  @$pb.TagNumber(10)
  set width($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasWidth() => $_has(5);
  @$pb.TagNumber(10)
  void clearWidth() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get height => $_getN(6);
  @$pb.TagNumber(11)
  set height($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasHeight() => $_has(6);
  @$pb.TagNumber(11)
  void clearHeight() => clearField(11);

  @$pb.TagNumber(12)
  $1.DartColorExpression get color => $_getN(7);
  @$pb.TagNumber(12)
  set color($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureColor() => $_ensure(7);

  @$pb.TagNumber(19)
  $core.bool get matchTextDirection => $_getBF(8);
  @$pb.TagNumber(19)
  set matchTextDirection($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(19)
  $core.bool hasMatchTextDirection() => $_has(8);
  @$pb.TagNumber(19)
  void clearMatchTextDirection() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get gaplessPlayback => $_getBF(9);
  @$pb.TagNumber(20)
  set gaplessPlayback($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(20)
  $core.bool hasGaplessPlayback() => $_has(9);
  @$pb.TagNumber(20)
  void clearGaplessPlayback() => clearField(20);

  @$pb.TagNumber(22)
  $core.bool get isAntiAlias => $_getBF(10);
  @$pb.TagNumber(22)
  set isAntiAlias($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(22)
  $core.bool hasIsAntiAlias() => $_has(10);
  @$pb.TagNumber(22)
  void clearIsAntiAlias() => clearField(22);

  @$pb.TagNumber(24)
  $core.int get cacheWidth => $_getIZ(11);
  @$pb.TagNumber(24)
  set cacheWidth($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(24)
  $core.bool hasCacheWidth() => $_has(11);
  @$pb.TagNumber(24)
  void clearCacheWidth() => clearField(24);

  @$pb.TagNumber(25)
  $core.int get cacheHeight => $_getIZ(12);
  @$pb.TagNumber(25)
  set cacheHeight($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(25)
  $core.bool hasCacheHeight() => $_has(12);
  @$pb.TagNumber(25)
  void clearCacheHeight() => clearField(25);
}

/// package:flutter/src/widgets/image.dart
class FlutterImageNamedAsset extends $pb.GeneratedMessage {
  factory FlutterImageNamedAsset({
    $core.String? name,
    $1.FlutterKeyExpression? key,
    $core.String? semanticLabel,
    $core.bool? excludeFromSemantics,
    $core.double? scale,
    $core.double? width,
    $core.double? height,
    $1.DartColorExpression? color,
    $core.bool? matchTextDirection,
    $core.bool? gaplessPlayback,
    $core.bool? isAntiAlias,
    $core.String? package,
    $core.int? cacheWidth,
    $core.int? cacheHeight,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (key != null) {
      $result.key = key;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    if (excludeFromSemantics != null) {
      $result.excludeFromSemantics = excludeFromSemantics;
    }
    if (scale != null) {
      $result.scale = scale;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (color != null) {
      $result.color = color;
    }
    if (matchTextDirection != null) {
      $result.matchTextDirection = matchTextDirection;
    }
    if (gaplessPlayback != null) {
      $result.gaplessPlayback = gaplessPlayback;
    }
    if (isAntiAlias != null) {
      $result.isAntiAlias = isAntiAlias;
    }
    if (package != null) {
      $result.package = package;
    }
    if (cacheWidth != null) {
      $result.cacheWidth = cacheWidth;
    }
    if (cacheHeight != null) {
      $result.cacheHeight = cacheHeight;
    }
    return $result;
  }
  FlutterImageNamedAsset._() : super();
  factory FlutterImageNamedAsset.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterImageNamedAsset.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterImageNamedAsset', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'name')
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(7, _omitFieldNames ? '' : 'semanticLabel')
    ..aOB(8, _omitFieldNames ? '' : 'excludeFromSemantics')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'scale', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(12, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(19, _omitFieldNames ? '' : 'matchTextDirection')
    ..aOB(20, _omitFieldNames ? '' : 'gaplessPlayback')
    ..aOB(21, _omitFieldNames ? '' : 'isAntiAlias')
    ..aOS(22, _omitFieldNames ? '' : 'package')
    ..a<$core.int>(24, _omitFieldNames ? '' : 'cacheWidth', $pb.PbFieldType.O3)
    ..a<$core.int>(25, _omitFieldNames ? '' : 'cacheHeight', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterImageNamedAsset clone() => FlutterImageNamedAsset()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterImageNamedAsset copyWith(void Function(FlutterImageNamedAsset) updates) => super.copyWith((message) => updates(message as FlutterImageNamedAsset)) as FlutterImageNamedAsset;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterImageNamedAsset create() => FlutterImageNamedAsset._();
  FlutterImageNamedAsset createEmptyInstance() => create();
  static $pb.PbList<FlutterImageNamedAsset> createRepeated() => $pb.PbList<FlutterImageNamedAsset>();
  @$core.pragma('dart2js:noInline')
  static FlutterImageNamedAsset getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterImageNamedAsset>(create);
  static FlutterImageNamedAsset? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(2)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);

  @$pb.TagNumber(7)
  $core.String get semanticLabel => $_getSZ(2);
  @$pb.TagNumber(7)
  set semanticLabel($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasSemanticLabel() => $_has(2);
  @$pb.TagNumber(7)
  void clearSemanticLabel() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get excludeFromSemantics => $_getBF(3);
  @$pb.TagNumber(8)
  set excludeFromSemantics($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasExcludeFromSemantics() => $_has(3);
  @$pb.TagNumber(8)
  void clearExcludeFromSemantics() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get scale => $_getN(4);
  @$pb.TagNumber(9)
  set scale($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasScale() => $_has(4);
  @$pb.TagNumber(9)
  void clearScale() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get width => $_getN(5);
  @$pb.TagNumber(10)
  set width($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasWidth() => $_has(5);
  @$pb.TagNumber(10)
  void clearWidth() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get height => $_getN(6);
  @$pb.TagNumber(11)
  set height($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasHeight() => $_has(6);
  @$pb.TagNumber(11)
  void clearHeight() => clearField(11);

  @$pb.TagNumber(12)
  $1.DartColorExpression get color => $_getN(7);
  @$pb.TagNumber(12)
  set color($1.DartColorExpression v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasColor() => $_has(7);
  @$pb.TagNumber(12)
  void clearColor() => clearField(12);
  @$pb.TagNumber(12)
  $1.DartColorExpression ensureColor() => $_ensure(7);

  @$pb.TagNumber(19)
  $core.bool get matchTextDirection => $_getBF(8);
  @$pb.TagNumber(19)
  set matchTextDirection($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(19)
  $core.bool hasMatchTextDirection() => $_has(8);
  @$pb.TagNumber(19)
  void clearMatchTextDirection() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get gaplessPlayback => $_getBF(9);
  @$pb.TagNumber(20)
  set gaplessPlayback($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(20)
  $core.bool hasGaplessPlayback() => $_has(9);
  @$pb.TagNumber(20)
  void clearGaplessPlayback() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get isAntiAlias => $_getBF(10);
  @$pb.TagNumber(21)
  set isAntiAlias($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(21)
  $core.bool hasIsAntiAlias() => $_has(10);
  @$pb.TagNumber(21)
  void clearIsAntiAlias() => clearField(21);

  @$pb.TagNumber(22)
  $core.String get package => $_getSZ(11);
  @$pb.TagNumber(22)
  set package($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(22)
  $core.bool hasPackage() => $_has(11);
  @$pb.TagNumber(22)
  void clearPackage() => clearField(22);

  @$pb.TagNumber(24)
  $core.int get cacheWidth => $_getIZ(12);
  @$pb.TagNumber(24)
  set cacheWidth($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(24)
  $core.bool hasCacheWidth() => $_has(12);
  @$pb.TagNumber(24)
  void clearCacheWidth() => clearField(24);

  @$pb.TagNumber(25)
  $core.int get cacheHeight => $_getIZ(13);
  @$pb.TagNumber(25)
  set cacheHeight($core.int v) { $_setSignedInt32(13, v); }
  @$pb.TagNumber(25)
  $core.bool hasCacheHeight() => $_has(13);
  @$pb.TagNumber(25)
  void clearCacheHeight() => clearField(25);
}

/// package:flutter/src/widgets/image_icon.dart
class FlutterImageIcon extends $pb.GeneratedMessage {
  factory FlutterImageIcon({
    $1.FlutterKeyExpression? key,
    $core.double? size,
    $1.DartColorExpression? color,
    $core.String? semanticLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (size != null) {
      $result.size = size;
    }
    if (color != null) {
      $result.color = color;
    }
    if (semanticLabel != null) {
      $result.semanticLabel = semanticLabel;
    }
    return $result;
  }
  FlutterImageIcon._() : super();
  factory FlutterImageIcon.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterImageIcon.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterImageIcon', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'size', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOS(6, _omitFieldNames ? '' : 'semanticLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterImageIcon clone() => FlutterImageIcon()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterImageIcon copyWith(void Function(FlutterImageIcon) updates) => super.copyWith((message) => updates(message as FlutterImageIcon)) as FlutterImageIcon;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterImageIcon create() => FlutterImageIcon._();
  FlutterImageIcon createEmptyInstance() => create();
  static $pb.PbList<FlutterImageIcon> createRepeated() => $pb.PbList<FlutterImageIcon>();
  @$core.pragma('dart2js:noInline')
  static FlutterImageIcon getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterImageIcon>(create);
  static FlutterImageIcon? _defaultInstance;

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.double get size => $_getN(1);
  @$pb.TagNumber(4)
  set size($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasSize() => $_has(1);
  @$pb.TagNumber(4)
  void clearSize() => clearField(4);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(6)
  $core.String get semanticLabel => $_getSZ(3);
  @$pb.TagNumber(6)
  set semanticLabel($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasSemanticLabel() => $_has(3);
  @$pb.TagNumber(6)
  void clearSemanticLabel() => clearField(6);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedContainer extends $pb.GeneratedMessage {
  factory FlutterAnimatedContainer({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? width,
    $core.double? height,
    WidgetExpression? child,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (child != null) {
      $result.child = child;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedContainer._() : super();
  factory FlutterAnimatedContainer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedContainer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedContainer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(5, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(14, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<$1.DartDurationExpression>(17, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedContainer clone() => FlutterAnimatedContainer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedContainer copyWith(void Function(FlutterAnimatedContainer) updates) => super.copyWith((message) => updates(message as FlutterAnimatedContainer)) as FlutterAnimatedContainer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedContainer create() => FlutterAnimatedContainer._();
  FlutterAnimatedContainer createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedContainer> createRepeated() => $pb.PbList<FlutterAnimatedContainer>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedContainer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedContainer>(create);
  static FlutterAnimatedContainer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(5)
  set color($1.DartColorExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(5)
  void clearColor() => clearField(5);
  @$pb.TagNumber(5)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(2);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(2);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get height => $_getN(3);
  @$pb.TagNumber(9)
  set height($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasHeight() => $_has(3);
  @$pb.TagNumber(9)
  void clearHeight() => clearField(9);

  @$pb.TagNumber(14)
  WidgetExpression get child => $_getN(4);
  @$pb.TagNumber(14)
  set child(WidgetExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasChild() => $_has(4);
  @$pb.TagNumber(14)
  void clearChild() => clearField(14);
  @$pb.TagNumber(14)
  WidgetExpression ensureChild() => $_ensure(4);

  @$pb.TagNumber(17)
  $1.DartDurationExpression get duration => $_getN(5);
  @$pb.TagNumber(17)
  set duration($1.DartDurationExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasDuration() => $_has(5);
  @$pb.TagNumber(17)
  void clearDuration() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartDurationExpression ensureDuration() => $_ensure(5);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedFractionallySizedBox extends $pb.GeneratedMessage {
  factory FlutterAnimatedFractionallySizedBox({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? heightFactor,
    $core.double? widthFactor,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (heightFactor != null) {
      $result.heightFactor = heightFactor;
    }
    if (widthFactor != null) {
      $result.widthFactor = widthFactor;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedFractionallySizedBox._() : super();
  factory FlutterAnimatedFractionallySizedBox.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedFractionallySizedBox.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedFractionallySizedBox', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'heightFactor', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'widthFactor', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(8, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedFractionallySizedBox clone() => FlutterAnimatedFractionallySizedBox()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedFractionallySizedBox copyWith(void Function(FlutterAnimatedFractionallySizedBox) updates) => super.copyWith((message) => updates(message as FlutterAnimatedFractionallySizedBox)) as FlutterAnimatedFractionallySizedBox;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedFractionallySizedBox create() => FlutterAnimatedFractionallySizedBox._();
  FlutterAnimatedFractionallySizedBox createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedFractionallySizedBox> createRepeated() => $pb.PbList<FlutterAnimatedFractionallySizedBox>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedFractionallySizedBox getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedFractionallySizedBox>(create);
  static FlutterAnimatedFractionallySizedBox? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.double get heightFactor => $_getN(2);
  @$pb.TagNumber(5)
  set heightFactor($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasHeightFactor() => $_has(2);
  @$pb.TagNumber(5)
  void clearHeightFactor() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get widthFactor => $_getN(3);
  @$pb.TagNumber(6)
  set widthFactor($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasWidthFactor() => $_has(3);
  @$pb.TagNumber(6)
  void clearWidthFactor() => clearField(6);

  @$pb.TagNumber(8)
  $1.DartDurationExpression get duration => $_getN(4);
  @$pb.TagNumber(8)
  set duration($1.DartDurationExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasDuration() => $_has(4);
  @$pb.TagNumber(8)
  void clearDuration() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartDurationExpression ensureDuration() => $_ensure(4);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedOpacity extends $pb.GeneratedMessage {
  factory FlutterAnimatedOpacity({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? opacity,
    $1.DartDurationExpression? duration,
    $core.bool? alwaysIncludeSemantics,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (opacity != null) {
      $result.opacity = opacity;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    if (alwaysIncludeSemantics != null) {
      $result.alwaysIncludeSemantics = alwaysIncludeSemantics;
    }
    return $result;
  }
  FlutterAnimatedOpacity._() : super();
  factory FlutterAnimatedOpacity.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedOpacity.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedOpacity', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'opacity', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'alwaysIncludeSemantics')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedOpacity clone() => FlutterAnimatedOpacity()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedOpacity copyWith(void Function(FlutterAnimatedOpacity) updates) => super.copyWith((message) => updates(message as FlutterAnimatedOpacity)) as FlutterAnimatedOpacity;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedOpacity create() => FlutterAnimatedOpacity._();
  FlutterAnimatedOpacity createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedOpacity> createRepeated() => $pb.PbList<FlutterAnimatedOpacity>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedOpacity getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedOpacity>(create);
  static FlutterAnimatedOpacity? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get opacity => $_getN(2);
  @$pb.TagNumber(4)
  set opacity($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasOpacity() => $_has(2);
  @$pb.TagNumber(4)
  void clearOpacity() => clearField(4);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get duration => $_getN(3);
  @$pb.TagNumber(6)
  set duration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDuration() => $_has(3);
  @$pb.TagNumber(6)
  void clearDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureDuration() => $_ensure(3);

  @$pb.TagNumber(8)
  $core.bool get alwaysIncludeSemantics => $_getBF(4);
  @$pb.TagNumber(8)
  set alwaysIncludeSemantics($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasAlwaysIncludeSemantics() => $_has(4);
  @$pb.TagNumber(8)
  void clearAlwaysIncludeSemantics() => clearField(8);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedPositioned extends $pb.GeneratedMessage {
  factory FlutterAnimatedPositioned({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? left,
    $core.double? top,
    $core.double? right,
    $core.double? bottom,
    $core.double? width,
    $core.double? height,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (left != null) {
      $result.left = left;
    }
    if (top != null) {
      $result.top = top;
    }
    if (right != null) {
      $result.right = right;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedPositioned._() : super();
  factory FlutterAnimatedPositioned.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedPositioned.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedPositioned', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'left', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'top', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'right', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'bottom', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(11, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedPositioned clone() => FlutterAnimatedPositioned()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedPositioned copyWith(void Function(FlutterAnimatedPositioned) updates) => super.copyWith((message) => updates(message as FlutterAnimatedPositioned)) as FlutterAnimatedPositioned;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedPositioned create() => FlutterAnimatedPositioned._();
  FlutterAnimatedPositioned createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedPositioned> createRepeated() => $pb.PbList<FlutterAnimatedPositioned>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedPositioned getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedPositioned>(create);
  static FlutterAnimatedPositioned? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get left => $_getN(2);
  @$pb.TagNumber(4)
  set left($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasLeft() => $_has(2);
  @$pb.TagNumber(4)
  void clearLeft() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get top => $_getN(3);
  @$pb.TagNumber(5)
  set top($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasTop() => $_has(3);
  @$pb.TagNumber(5)
  void clearTop() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get right => $_getN(4);
  @$pb.TagNumber(6)
  set right($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasRight() => $_has(4);
  @$pb.TagNumber(6)
  void clearRight() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get bottom => $_getN(5);
  @$pb.TagNumber(7)
  set bottom($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasBottom() => $_has(5);
  @$pb.TagNumber(7)
  void clearBottom() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(6);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(6);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get height => $_getN(7);
  @$pb.TagNumber(9)
  set height($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(9)
  $core.bool hasHeight() => $_has(7);
  @$pb.TagNumber(9)
  void clearHeight() => clearField(9);

  @$pb.TagNumber(11)
  $1.DartDurationExpression get duration => $_getN(8);
  @$pb.TagNumber(11)
  set duration($1.DartDurationExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDuration() => $_has(8);
  @$pb.TagNumber(11)
  void clearDuration() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartDurationExpression ensureDuration() => $_ensure(8);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedPositionedDirectional extends $pb.GeneratedMessage {
  factory FlutterAnimatedPositionedDirectional({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? start,
    $core.double? top,
    $core.double? end,
    $core.double? bottom,
    $core.double? width,
    $core.double? height,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (start != null) {
      $result.start = start;
    }
    if (top != null) {
      $result.top = top;
    }
    if (end != null) {
      $result.end = end;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (width != null) {
      $result.width = width;
    }
    if (height != null) {
      $result.height = height;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedPositionedDirectional._() : super();
  factory FlutterAnimatedPositionedDirectional.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedPositionedDirectional.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedPositionedDirectional', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'start', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'top', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'end', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'bottom', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'width', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'height', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(11, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedPositionedDirectional clone() => FlutterAnimatedPositionedDirectional()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedPositionedDirectional copyWith(void Function(FlutterAnimatedPositionedDirectional) updates) => super.copyWith((message) => updates(message as FlutterAnimatedPositionedDirectional)) as FlutterAnimatedPositionedDirectional;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedPositionedDirectional create() => FlutterAnimatedPositionedDirectional._();
  FlutterAnimatedPositionedDirectional createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedPositionedDirectional> createRepeated() => $pb.PbList<FlutterAnimatedPositionedDirectional>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedPositionedDirectional getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedPositionedDirectional>(create);
  static FlutterAnimatedPositionedDirectional? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get start => $_getN(2);
  @$pb.TagNumber(4)
  set start($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasStart() => $_has(2);
  @$pb.TagNumber(4)
  void clearStart() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get top => $_getN(3);
  @$pb.TagNumber(5)
  set top($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasTop() => $_has(3);
  @$pb.TagNumber(5)
  void clearTop() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get end => $_getN(4);
  @$pb.TagNumber(6)
  set end($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasEnd() => $_has(4);
  @$pb.TagNumber(6)
  void clearEnd() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get bottom => $_getN(5);
  @$pb.TagNumber(7)
  set bottom($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasBottom() => $_has(5);
  @$pb.TagNumber(7)
  void clearBottom() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get width => $_getN(6);
  @$pb.TagNumber(8)
  set width($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasWidth() => $_has(6);
  @$pb.TagNumber(8)
  void clearWidth() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get height => $_getN(7);
  @$pb.TagNumber(9)
  set height($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(9)
  $core.bool hasHeight() => $_has(7);
  @$pb.TagNumber(9)
  void clearHeight() => clearField(9);

  @$pb.TagNumber(11)
  $1.DartDurationExpression get duration => $_getN(8);
  @$pb.TagNumber(11)
  set duration($1.DartDurationExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasDuration() => $_has(8);
  @$pb.TagNumber(11)
  void clearDuration() => clearField(11);
  @$pb.TagNumber(11)
  $1.DartDurationExpression ensureDuration() => $_ensure(8);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedRotation extends $pb.GeneratedMessage {
  factory FlutterAnimatedRotation({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? turns,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (turns != null) {
      $result.turns = turns;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedRotation._() : super();
  factory FlutterAnimatedRotation.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedRotation.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedRotation', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'turns', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(8, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedRotation clone() => FlutterAnimatedRotation()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedRotation copyWith(void Function(FlutterAnimatedRotation) updates) => super.copyWith((message) => updates(message as FlutterAnimatedRotation)) as FlutterAnimatedRotation;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedRotation create() => FlutterAnimatedRotation._();
  FlutterAnimatedRotation createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedRotation> createRepeated() => $pb.PbList<FlutterAnimatedRotation>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedRotation getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedRotation>(create);
  static FlutterAnimatedRotation? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get turns => $_getN(2);
  @$pb.TagNumber(4)
  set turns($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTurns() => $_has(2);
  @$pb.TagNumber(4)
  void clearTurns() => clearField(4);

  @$pb.TagNumber(8)
  $1.DartDurationExpression get duration => $_getN(3);
  @$pb.TagNumber(8)
  set duration($1.DartDurationExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasDuration() => $_has(3);
  @$pb.TagNumber(8)
  void clearDuration() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartDurationExpression ensureDuration() => $_ensure(3);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterAnimatedScale extends $pb.GeneratedMessage {
  factory FlutterAnimatedScale({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.double? scale,
    $1.DartDurationExpression? duration,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (scale != null) {
      $result.scale = scale;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    return $result;
  }
  FlutterAnimatedScale._() : super();
  factory FlutterAnimatedScale.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAnimatedScale.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAnimatedScale', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'scale', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(8, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAnimatedScale clone() => FlutterAnimatedScale()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAnimatedScale copyWith(void Function(FlutterAnimatedScale) updates) => super.copyWith((message) => updates(message as FlutterAnimatedScale)) as FlutterAnimatedScale;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedScale create() => FlutterAnimatedScale._();
  FlutterAnimatedScale createEmptyInstance() => create();
  static $pb.PbList<FlutterAnimatedScale> createRepeated() => $pb.PbList<FlutterAnimatedScale>();
  @$core.pragma('dart2js:noInline')
  static FlutterAnimatedScale getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAnimatedScale>(create);
  static FlutterAnimatedScale? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get scale => $_getN(2);
  @$pb.TagNumber(4)
  set scale($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasScale() => $_has(2);
  @$pb.TagNumber(4)
  void clearScale() => clearField(4);

  @$pb.TagNumber(8)
  $1.DartDurationExpression get duration => $_getN(3);
  @$pb.TagNumber(8)
  set duration($1.DartDurationExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasDuration() => $_has(3);
  @$pb.TagNumber(8)
  void clearDuration() => clearField(8);
  @$pb.TagNumber(8)
  $1.DartDurationExpression ensureDuration() => $_ensure(3);
}

/// package:flutter/src/widgets/implicit_animations.dart
class FlutterSliverAnimatedOpacity extends $pb.GeneratedMessage {
  factory FlutterSliverAnimatedOpacity({
    $1.FlutterKeyExpression? key,
    WidgetExpression? sliver,
    $core.double? opacity,
    $1.DartDurationExpression? duration,
    $core.bool? alwaysIncludeSemantics,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    if (opacity != null) {
      $result.opacity = opacity;
    }
    if (duration != null) {
      $result.duration = duration;
    }
    if (alwaysIncludeSemantics != null) {
      $result.alwaysIncludeSemantics = alwaysIncludeSemantics;
    }
    return $result;
  }
  FlutterSliverAnimatedOpacity._() : super();
  factory FlutterSliverAnimatedOpacity.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverAnimatedOpacity.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverAnimatedOpacity', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'opacity', $pb.PbFieldType.OD)
    ..aOM<$1.DartDurationExpression>(6, _omitFieldNames ? '' : 'duration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(8, _omitFieldNames ? '' : 'alwaysIncludeSemantics')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverAnimatedOpacity clone() => FlutterSliverAnimatedOpacity()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverAnimatedOpacity copyWith(void Function(FlutterSliverAnimatedOpacity) updates) => super.copyWith((message) => updates(message as FlutterSliverAnimatedOpacity)) as FlutterSliverAnimatedOpacity;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverAnimatedOpacity create() => FlutterSliverAnimatedOpacity._();
  FlutterSliverAnimatedOpacity createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverAnimatedOpacity> createRepeated() => $pb.PbList<FlutterSliverAnimatedOpacity>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverAnimatedOpacity getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverAnimatedOpacity>(create);
  static FlutterSliverAnimatedOpacity? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get sliver => $_getN(1);
  @$pb.TagNumber(3)
  set sliver(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSliver() => $_has(1);
  @$pb.TagNumber(3)
  void clearSliver() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureSliver() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get opacity => $_getN(2);
  @$pb.TagNumber(4)
  set opacity($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasOpacity() => $_has(2);
  @$pb.TagNumber(4)
  void clearOpacity() => clearField(4);

  @$pb.TagNumber(6)
  $1.DartDurationExpression get duration => $_getN(3);
  @$pb.TagNumber(6)
  set duration($1.DartDurationExpression v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDuration() => $_has(3);
  @$pb.TagNumber(6)
  void clearDuration() => clearField(6);
  @$pb.TagNumber(6)
  $1.DartDurationExpression ensureDuration() => $_ensure(3);

  @$pb.TagNumber(8)
  $core.bool get alwaysIncludeSemantics => $_getBF(4);
  @$pb.TagNumber(8)
  set alwaysIncludeSemantics($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasAlwaysIncludeSemantics() => $_has(4);
  @$pb.TagNumber(8)
  void clearAlwaysIncludeSemantics() => clearField(8);
}

/// package:flutter/src/widgets/interactive_viewer.dart
class FlutterInteractiveViewer extends $pb.GeneratedMessage {
  factory FlutterInteractiveViewer({
    $1.FlutterKeyExpression? key,
    $core.bool? constrained,
    $core.double? maxScale,
    $core.double? minScale,
    $core.double? interactionEndFrictionCoefficient,
    $core.bool? panEnabled,
    $core.bool? scaleEnabled,
    $core.double? scaleFactor,
    $core.bool? trackpadScrollCausesScale,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (constrained != null) {
      $result.constrained = constrained;
    }
    if (maxScale != null) {
      $result.maxScale = maxScale;
    }
    if (minScale != null) {
      $result.minScale = minScale;
    }
    if (interactionEndFrictionCoefficient != null) {
      $result.interactionEndFrictionCoefficient = interactionEndFrictionCoefficient;
    }
    if (panEnabled != null) {
      $result.panEnabled = panEnabled;
    }
    if (scaleEnabled != null) {
      $result.scaleEnabled = scaleEnabled;
    }
    if (scaleFactor != null) {
      $result.scaleFactor = scaleFactor;
    }
    if (trackpadScrollCausesScale != null) {
      $result.trackpadScrollCausesScale = trackpadScrollCausesScale;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterInteractiveViewer._() : super();
  factory FlutterInteractiveViewer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterInteractiveViewer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterInteractiveViewer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'constrained')
    ..a<$core.double>(7, _omitFieldNames ? '' : 'maxScale', $pb.PbFieldType.OD)
    ..a<$core.double>(8, _omitFieldNames ? '' : 'minScale', $pb.PbFieldType.OD)
    ..a<$core.double>(9, _omitFieldNames ? '' : 'interactionEndFrictionCoefficient', $pb.PbFieldType.OD)
    ..aOB(13, _omitFieldNames ? '' : 'panEnabled')
    ..aOB(14, _omitFieldNames ? '' : 'scaleEnabled')
    ..a<$core.double>(15, _omitFieldNames ? '' : 'scaleFactor', $pb.PbFieldType.OD)
    ..aOB(18, _omitFieldNames ? '' : 'trackpadScrollCausesScale')
    ..aOM<WidgetExpression>(19, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterInteractiveViewer clone() => FlutterInteractiveViewer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterInteractiveViewer copyWith(void Function(FlutterInteractiveViewer) updates) => super.copyWith((message) => updates(message as FlutterInteractiveViewer)) as FlutterInteractiveViewer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterInteractiveViewer create() => FlutterInteractiveViewer._();
  FlutterInteractiveViewer createEmptyInstance() => create();
  static $pb.PbList<FlutterInteractiveViewer> createRepeated() => $pb.PbList<FlutterInteractiveViewer>();
  @$core.pragma('dart2js:noInline')
  static FlutterInteractiveViewer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterInteractiveViewer>(create);
  static FlutterInteractiveViewer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(6)
  $core.bool get constrained => $_getBF(1);
  @$pb.TagNumber(6)
  set constrained($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(6)
  $core.bool hasConstrained() => $_has(1);
  @$pb.TagNumber(6)
  void clearConstrained() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get maxScale => $_getN(2);
  @$pb.TagNumber(7)
  set maxScale($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasMaxScale() => $_has(2);
  @$pb.TagNumber(7)
  void clearMaxScale() => clearField(7);

  @$pb.TagNumber(8)
  $core.double get minScale => $_getN(3);
  @$pb.TagNumber(8)
  set minScale($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasMinScale() => $_has(3);
  @$pb.TagNumber(8)
  void clearMinScale() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get interactionEndFrictionCoefficient => $_getN(4);
  @$pb.TagNumber(9)
  set interactionEndFrictionCoefficient($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(9)
  $core.bool hasInteractionEndFrictionCoefficient() => $_has(4);
  @$pb.TagNumber(9)
  void clearInteractionEndFrictionCoefficient() => clearField(9);

  @$pb.TagNumber(13)
  $core.bool get panEnabled => $_getBF(5);
  @$pb.TagNumber(13)
  set panEnabled($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(13)
  $core.bool hasPanEnabled() => $_has(5);
  @$pb.TagNumber(13)
  void clearPanEnabled() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get scaleEnabled => $_getBF(6);
  @$pb.TagNumber(14)
  set scaleEnabled($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(14)
  $core.bool hasScaleEnabled() => $_has(6);
  @$pb.TagNumber(14)
  void clearScaleEnabled() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get scaleFactor => $_getN(7);
  @$pb.TagNumber(15)
  set scaleFactor($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(15)
  $core.bool hasScaleFactor() => $_has(7);
  @$pb.TagNumber(15)
  void clearScaleFactor() => clearField(15);

  @$pb.TagNumber(18)
  $core.bool get trackpadScrollCausesScale => $_getBF(8);
  @$pb.TagNumber(18)
  set trackpadScrollCausesScale($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(18)
  $core.bool hasTrackpadScrollCausesScale() => $_has(8);
  @$pb.TagNumber(18)
  void clearTrackpadScrollCausesScale() => clearField(18);

  @$pb.TagNumber(19)
  WidgetExpression get child => $_getN(9);
  @$pb.TagNumber(19)
  set child(WidgetExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasChild() => $_has(9);
  @$pb.TagNumber(19)
  void clearChild() => clearField(19);
  @$pb.TagNumber(19)
  WidgetExpression ensureChild() => $_ensure(9);
}

/// package:flutter/src/widgets/list_wheel_scroll_view.dart
class FlutterListWheelScrollView extends $pb.GeneratedMessage {
  factory FlutterListWheelScrollView({
    $1.FlutterKeyExpression? key,
    $core.double? diameterRatio,
    $core.double? perspective,
    $core.double? offAxisFraction,
    $core.bool? useMagnifier,
    $core.double? magnification,
    $core.double? overAndUnderCenterOpacity,
    $core.double? itemExtent,
    $core.double? squeeze,
    $core.bool? renderChildrenOutsideViewport,
    $core.String? restorationId,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (diameterRatio != null) {
      $result.diameterRatio = diameterRatio;
    }
    if (perspective != null) {
      $result.perspective = perspective;
    }
    if (offAxisFraction != null) {
      $result.offAxisFraction = offAxisFraction;
    }
    if (useMagnifier != null) {
      $result.useMagnifier = useMagnifier;
    }
    if (magnification != null) {
      $result.magnification = magnification;
    }
    if (overAndUnderCenterOpacity != null) {
      $result.overAndUnderCenterOpacity = overAndUnderCenterOpacity;
    }
    if (itemExtent != null) {
      $result.itemExtent = itemExtent;
    }
    if (squeeze != null) {
      $result.squeeze = squeeze;
    }
    if (renderChildrenOutsideViewport != null) {
      $result.renderChildrenOutsideViewport = renderChildrenOutsideViewport;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterListWheelScrollView._() : super();
  factory FlutterListWheelScrollView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterListWheelScrollView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterListWheelScrollView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'diameterRatio', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'perspective', $pb.PbFieldType.OD)
    ..a<$core.double>(7, _omitFieldNames ? '' : 'offAxisFraction', $pb.PbFieldType.OD)
    ..aOB(8, _omitFieldNames ? '' : 'useMagnifier')
    ..a<$core.double>(9, _omitFieldNames ? '' : 'magnification', $pb.PbFieldType.OD)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'overAndUnderCenterOpacity', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'itemExtent', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'squeeze', $pb.PbFieldType.OD)
    ..aOB(14, _omitFieldNames ? '' : 'renderChildrenOutsideViewport')
    ..aOS(16, _omitFieldNames ? '' : 'restorationId')
    ..pc<WidgetExpression>(18, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterListWheelScrollView clone() => FlutterListWheelScrollView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterListWheelScrollView copyWith(void Function(FlutterListWheelScrollView) updates) => super.copyWith((message) => updates(message as FlutterListWheelScrollView)) as FlutterListWheelScrollView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterListWheelScrollView create() => FlutterListWheelScrollView._();
  FlutterListWheelScrollView createEmptyInstance() => create();
  static $pb.PbList<FlutterListWheelScrollView> createRepeated() => $pb.PbList<FlutterListWheelScrollView>();
  @$core.pragma('dart2js:noInline')
  static FlutterListWheelScrollView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterListWheelScrollView>(create);
  static FlutterListWheelScrollView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.double get diameterRatio => $_getN(1);
  @$pb.TagNumber(5)
  set diameterRatio($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasDiameterRatio() => $_has(1);
  @$pb.TagNumber(5)
  void clearDiameterRatio() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get perspective => $_getN(2);
  @$pb.TagNumber(6)
  set perspective($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPerspective() => $_has(2);
  @$pb.TagNumber(6)
  void clearPerspective() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get offAxisFraction => $_getN(3);
  @$pb.TagNumber(7)
  set offAxisFraction($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasOffAxisFraction() => $_has(3);
  @$pb.TagNumber(7)
  void clearOffAxisFraction() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get useMagnifier => $_getBF(4);
  @$pb.TagNumber(8)
  set useMagnifier($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(8)
  $core.bool hasUseMagnifier() => $_has(4);
  @$pb.TagNumber(8)
  void clearUseMagnifier() => clearField(8);

  @$pb.TagNumber(9)
  $core.double get magnification => $_getN(5);
  @$pb.TagNumber(9)
  set magnification($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(9)
  $core.bool hasMagnification() => $_has(5);
  @$pb.TagNumber(9)
  void clearMagnification() => clearField(9);

  @$pb.TagNumber(10)
  $core.double get overAndUnderCenterOpacity => $_getN(6);
  @$pb.TagNumber(10)
  set overAndUnderCenterOpacity($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(10)
  $core.bool hasOverAndUnderCenterOpacity() => $_has(6);
  @$pb.TagNumber(10)
  void clearOverAndUnderCenterOpacity() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get itemExtent => $_getN(7);
  @$pb.TagNumber(11)
  set itemExtent($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(11)
  $core.bool hasItemExtent() => $_has(7);
  @$pb.TagNumber(11)
  void clearItemExtent() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get squeeze => $_getN(8);
  @$pb.TagNumber(12)
  set squeeze($core.double v) { $_setDouble(8, v); }
  @$pb.TagNumber(12)
  $core.bool hasSqueeze() => $_has(8);
  @$pb.TagNumber(12)
  void clearSqueeze() => clearField(12);

  @$pb.TagNumber(14)
  $core.bool get renderChildrenOutsideViewport => $_getBF(9);
  @$pb.TagNumber(14)
  set renderChildrenOutsideViewport($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(14)
  $core.bool hasRenderChildrenOutsideViewport() => $_has(9);
  @$pb.TagNumber(14)
  void clearRenderChildrenOutsideViewport() => clearField(14);

  @$pb.TagNumber(16)
  $core.String get restorationId => $_getSZ(10);
  @$pb.TagNumber(16)
  set restorationId($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(16)
  $core.bool hasRestorationId() => $_has(10);
  @$pb.TagNumber(16)
  void clearRestorationId() => clearField(16);

  @$pb.TagNumber(18)
  $core.List<WidgetExpression> get children => $_getList(11);
}

/// package:flutter/src/widgets/lookup_boundary.dart
class FlutterLookupBoundary extends $pb.GeneratedMessage {
  factory FlutterLookupBoundary({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterLookupBoundary._() : super();
  factory FlutterLookupBoundary.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterLookupBoundary.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterLookupBoundary', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterLookupBoundary clone() => FlutterLookupBoundary()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterLookupBoundary copyWith(void Function(FlutterLookupBoundary) updates) => super.copyWith((message) => updates(message as FlutterLookupBoundary)) as FlutterLookupBoundary;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterLookupBoundary create() => FlutterLookupBoundary._();
  FlutterLookupBoundary createEmptyInstance() => create();
  static $pb.PbList<FlutterLookupBoundary> createRepeated() => $pb.PbList<FlutterLookupBoundary>();
  @$core.pragma('dart2js:noInline')
  static FlutterLookupBoundary getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterLookupBoundary>(create);
  static FlutterLookupBoundary? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/modal_barrier.dart
class FlutterModalBarrier extends $pb.GeneratedMessage {
  factory FlutterModalBarrier({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.bool? dismissible,
    $core.String? semanticsLabel,
    $core.bool? barrierSemanticsDismissible,
    $core.String? semanticsOnTapHint,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (dismissible != null) {
      $result.dismissible = dismissible;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (barrierSemanticsDismissible != null) {
      $result.barrierSemanticsDismissible = barrierSemanticsDismissible;
    }
    if (semanticsOnTapHint != null) {
      $result.semanticsOnTapHint = semanticsOnTapHint;
    }
    return $result;
  }
  FlutterModalBarrier._() : super();
  factory FlutterModalBarrier.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterModalBarrier.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterModalBarrier', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'dismissible')
    ..aOS(6, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOB(7, _omitFieldNames ? '' : 'barrierSemanticsDismissible')
    ..aOS(9, _omitFieldNames ? '' : 'semanticsOnTapHint')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterModalBarrier clone() => FlutterModalBarrier()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterModalBarrier copyWith(void Function(FlutterModalBarrier) updates) => super.copyWith((message) => updates(message as FlutterModalBarrier)) as FlutterModalBarrier;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterModalBarrier create() => FlutterModalBarrier._();
  FlutterModalBarrier createEmptyInstance() => create();
  static $pb.PbList<FlutterModalBarrier> createRepeated() => $pb.PbList<FlutterModalBarrier>();
  @$core.pragma('dart2js:noInline')
  static FlutterModalBarrier getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterModalBarrier>(create);
  static FlutterModalBarrier? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get dismissible => $_getBF(2);
  @$pb.TagNumber(4)
  set dismissible($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasDismissible() => $_has(2);
  @$pb.TagNumber(4)
  void clearDismissible() => clearField(4);

  @$pb.TagNumber(6)
  $core.String get semanticsLabel => $_getSZ(3);
  @$pb.TagNumber(6)
  set semanticsLabel($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(6)
  $core.bool hasSemanticsLabel() => $_has(3);
  @$pb.TagNumber(6)
  void clearSemanticsLabel() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get barrierSemanticsDismissible => $_getBF(4);
  @$pb.TagNumber(7)
  set barrierSemanticsDismissible($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(7)
  $core.bool hasBarrierSemanticsDismissible() => $_has(4);
  @$pb.TagNumber(7)
  void clearBarrierSemanticsDismissible() => clearField(7);

  @$pb.TagNumber(9)
  $core.String get semanticsOnTapHint => $_getSZ(5);
  @$pb.TagNumber(9)
  set semanticsOnTapHint($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(9)
  $core.bool hasSemanticsOnTapHint() => $_has(5);
  @$pb.TagNumber(9)
  void clearSemanticsOnTapHint() => clearField(9);
}

/// package:flutter/src/widgets/navigation_toolbar.dart
class FlutterNavigationToolbar extends $pb.GeneratedMessage {
  factory FlutterNavigationToolbar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? leading,
    WidgetExpression? middle,
    WidgetExpression? trailing,
    $core.bool? centerMiddle,
    $core.double? middleSpacing,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (leading != null) {
      $result.leading = leading;
    }
    if (middle != null) {
      $result.middle = middle;
    }
    if (trailing != null) {
      $result.trailing = trailing;
    }
    if (centerMiddle != null) {
      $result.centerMiddle = centerMiddle;
    }
    if (middleSpacing != null) {
      $result.middleSpacing = middleSpacing;
    }
    return $result;
  }
  FlutterNavigationToolbar._() : super();
  factory FlutterNavigationToolbar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterNavigationToolbar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterNavigationToolbar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'leading', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'middle', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'trailing', subBuilder: WidgetExpression.create)
    ..aOB(6, _omitFieldNames ? '' : 'centerMiddle')
    ..a<$core.double>(7, _omitFieldNames ? '' : 'middleSpacing', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterNavigationToolbar clone() => FlutterNavigationToolbar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterNavigationToolbar copyWith(void Function(FlutterNavigationToolbar) updates) => super.copyWith((message) => updates(message as FlutterNavigationToolbar)) as FlutterNavigationToolbar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterNavigationToolbar create() => FlutterNavigationToolbar._();
  FlutterNavigationToolbar createEmptyInstance() => create();
  static $pb.PbList<FlutterNavigationToolbar> createRepeated() => $pb.PbList<FlutterNavigationToolbar>();
  @$core.pragma('dart2js:noInline')
  static FlutterNavigationToolbar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterNavigationToolbar>(create);
  static FlutterNavigationToolbar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get leading => $_getN(1);
  @$pb.TagNumber(3)
  set leading(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeading() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeading() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureLeading() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get middle => $_getN(2);
  @$pb.TagNumber(4)
  set middle(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasMiddle() => $_has(2);
  @$pb.TagNumber(4)
  void clearMiddle() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureMiddle() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get trailing => $_getN(3);
  @$pb.TagNumber(5)
  set trailing(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTrailing() => $_has(3);
  @$pb.TagNumber(5)
  void clearTrailing() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureTrailing() => $_ensure(3);

  @$pb.TagNumber(6)
  $core.bool get centerMiddle => $_getBF(4);
  @$pb.TagNumber(6)
  set centerMiddle($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasCenterMiddle() => $_has(4);
  @$pb.TagNumber(6)
  void clearCenterMiddle() => clearField(6);

  @$pb.TagNumber(7)
  $core.double get middleSpacing => $_getN(5);
  @$pb.TagNumber(7)
  set middleSpacing($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasMiddleSpacing() => $_has(5);
  @$pb.TagNumber(7)
  void clearMiddleSpacing() => clearField(7);
}

/// package:flutter/src/widgets/navigator.dart
class FlutterHeroControllerScopeNamedNone extends $pb.GeneratedMessage {
  factory FlutterHeroControllerScopeNamedNone({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterHeroControllerScopeNamedNone._() : super();
  factory FlutterHeroControllerScopeNamedNone.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterHeroControllerScopeNamedNone.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterHeroControllerScopeNamedNone', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterHeroControllerScopeNamedNone clone() => FlutterHeroControllerScopeNamedNone()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterHeroControllerScopeNamedNone copyWith(void Function(FlutterHeroControllerScopeNamedNone) updates) => super.copyWith((message) => updates(message as FlutterHeroControllerScopeNamedNone)) as FlutterHeroControllerScopeNamedNone;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterHeroControllerScopeNamedNone create() => FlutterHeroControllerScopeNamedNone._();
  FlutterHeroControllerScopeNamedNone createEmptyInstance() => create();
  static $pb.PbList<FlutterHeroControllerScopeNamedNone> createRepeated() => $pb.PbList<FlutterHeroControllerScopeNamedNone>();
  @$core.pragma('dart2js:noInline')
  static FlutterHeroControllerScopeNamedNone getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterHeroControllerScopeNamedNone>(create);
  static FlutterHeroControllerScopeNamedNone? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/navigator.dart
class FlutterNavigator extends $pb.GeneratedMessage {
  factory FlutterNavigator({
    $1.FlutterKeyExpression? key,
    $core.String? initialRoute,
    $core.bool? reportsRouteUpdateToEngine,
    $core.bool? requestFocus,
    $core.String? restorationScopeId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (initialRoute != null) {
      $result.initialRoute = initialRoute;
    }
    if (reportsRouteUpdateToEngine != null) {
      $result.reportsRouteUpdateToEngine = reportsRouteUpdateToEngine;
    }
    if (requestFocus != null) {
      $result.requestFocus = requestFocus;
    }
    if (restorationScopeId != null) {
      $result.restorationScopeId = restorationScopeId;
    }
    return $result;
  }
  FlutterNavigator._() : super();
  factory FlutterNavigator.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterNavigator.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterNavigator', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(5, _omitFieldNames ? '' : 'initialRoute')
    ..aOB(10, _omitFieldNames ? '' : 'reportsRouteUpdateToEngine')
    ..aOB(13, _omitFieldNames ? '' : 'requestFocus')
    ..aOS(14, _omitFieldNames ? '' : 'restorationScopeId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterNavigator clone() => FlutterNavigator()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterNavigator copyWith(void Function(FlutterNavigator) updates) => super.copyWith((message) => updates(message as FlutterNavigator)) as FlutterNavigator;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterNavigator create() => FlutterNavigator._();
  FlutterNavigator createEmptyInstance() => create();
  static $pb.PbList<FlutterNavigator> createRepeated() => $pb.PbList<FlutterNavigator>();
  @$core.pragma('dart2js:noInline')
  static FlutterNavigator getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterNavigator>(create);
  static FlutterNavigator? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(5)
  $core.String get initialRoute => $_getSZ(1);
  @$pb.TagNumber(5)
  set initialRoute($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(5)
  $core.bool hasInitialRoute() => $_has(1);
  @$pb.TagNumber(5)
  void clearInitialRoute() => clearField(5);

  @$pb.TagNumber(10)
  $core.bool get reportsRouteUpdateToEngine => $_getBF(2);
  @$pb.TagNumber(10)
  set reportsRouteUpdateToEngine($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(10)
  $core.bool hasReportsRouteUpdateToEngine() => $_has(2);
  @$pb.TagNumber(10)
  void clearReportsRouteUpdateToEngine() => clearField(10);

  @$pb.TagNumber(13)
  $core.bool get requestFocus => $_getBF(3);
  @$pb.TagNumber(13)
  set requestFocus($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(13)
  $core.bool hasRequestFocus() => $_has(3);
  @$pb.TagNumber(13)
  void clearRequestFocus() => clearField(13);

  @$pb.TagNumber(14)
  $core.String get restorationScopeId => $_getSZ(4);
  @$pb.TagNumber(14)
  set restorationScopeId($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(14)
  $core.bool hasRestorationScopeId() => $_has(4);
  @$pb.TagNumber(14)
  void clearRestorationScopeId() => clearField(14);
}

/// package:flutter/src/widgets/notification_listener.dart
class FlutterNotificationListener extends $pb.GeneratedMessage {
  factory FlutterNotificationListener({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterNotificationListener._() : super();
  factory FlutterNotificationListener.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterNotificationListener.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterNotificationListener', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterNotificationListener clone() => FlutterNotificationListener()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterNotificationListener copyWith(void Function(FlutterNotificationListener) updates) => super.copyWith((message) => updates(message as FlutterNotificationListener)) as FlutterNotificationListener;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterNotificationListener create() => FlutterNotificationListener._();
  FlutterNotificationListener createEmptyInstance() => create();
  static $pb.PbList<FlutterNotificationListener> createRepeated() => $pb.PbList<FlutterNotificationListener>();
  @$core.pragma('dart2js:noInline')
  static FlutterNotificationListener getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterNotificationListener>(create);
  static FlutterNotificationListener? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/overflow_bar.dart
class FlutterOverflowBar extends $pb.GeneratedMessage {
  factory FlutterOverflowBar({
    $1.FlutterKeyExpression? key,
    $core.double? spacing,
    $core.double? overflowSpacing,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (spacing != null) {
      $result.spacing = spacing;
    }
    if (overflowSpacing != null) {
      $result.overflowSpacing = overflowSpacing;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterOverflowBar._() : super();
  factory FlutterOverflowBar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterOverflowBar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterOverflowBar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'spacing', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'overflowSpacing', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(10, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterOverflowBar clone() => FlutterOverflowBar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterOverflowBar copyWith(void Function(FlutterOverflowBar) updates) => super.copyWith((message) => updates(message as FlutterOverflowBar)) as FlutterOverflowBar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterOverflowBar create() => FlutterOverflowBar._();
  FlutterOverflowBar createEmptyInstance() => create();
  static $pb.PbList<FlutterOverflowBar> createRepeated() => $pb.PbList<FlutterOverflowBar>();
  @$core.pragma('dart2js:noInline')
  static FlutterOverflowBar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterOverflowBar>(create);
  static FlutterOverflowBar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get spacing => $_getN(1);
  @$pb.TagNumber(3)
  set spacing($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasSpacing() => $_has(1);
  @$pb.TagNumber(3)
  void clearSpacing() => clearField(3);

  @$pb.TagNumber(5)
  $core.double get overflowSpacing => $_getN(2);
  @$pb.TagNumber(5)
  set overflowSpacing($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasOverflowSpacing() => $_has(2);
  @$pb.TagNumber(5)
  void clearOverflowSpacing() => clearField(5);

  @$pb.TagNumber(10)
  $core.List<WidgetExpression> get children => $_getList(3);
}

/// package:flutter/src/widgets/overlay.dart
class FlutterOverlay extends $pb.GeneratedMessage {
  factory FlutterOverlay({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterOverlay._() : super();
  factory FlutterOverlay.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterOverlay.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterOverlay', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterOverlay clone() => FlutterOverlay()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterOverlay copyWith(void Function(FlutterOverlay) updates) => super.copyWith((message) => updates(message as FlutterOverlay)) as FlutterOverlay;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterOverlay create() => FlutterOverlay._();
  FlutterOverlay createEmptyInstance() => create();
  static $pb.PbList<FlutterOverlay> createRepeated() => $pb.PbList<FlutterOverlay>();
  @$core.pragma('dart2js:noInline')
  static FlutterOverlay getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterOverlay>(create);
  static FlutterOverlay? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/widgets/page_view.dart
class FlutterPageView extends $pb.GeneratedMessage {
  factory FlutterPageView({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? pageSnapping,
    $core.Iterable<WidgetExpression>? children,
    $core.bool? allowImplicitScrolling,
    $core.String? restorationId,
    $core.bool? padEnds,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (pageSnapping != null) {
      $result.pageSnapping = pageSnapping;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (allowImplicitScrolling != null) {
      $result.allowImplicitScrolling = allowImplicitScrolling;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (padEnds != null) {
      $result.padEnds = padEnds;
    }
    return $result;
  }
  FlutterPageView._() : super();
  factory FlutterPageView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPageView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPageView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(7, _omitFieldNames ? '' : 'pageSnapping')
    ..pc<WidgetExpression>(9, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOB(11, _omitFieldNames ? '' : 'allowImplicitScrolling')
    ..aOS(12, _omitFieldNames ? '' : 'restorationId')
    ..aOB(15, _omitFieldNames ? '' : 'padEnds')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPageView clone() => FlutterPageView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPageView copyWith(void Function(FlutterPageView) updates) => super.copyWith((message) => updates(message as FlutterPageView)) as FlutterPageView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPageView create() => FlutterPageView._();
  FlutterPageView createEmptyInstance() => create();
  static $pb.PbList<FlutterPageView> createRepeated() => $pb.PbList<FlutterPageView>();
  @$core.pragma('dart2js:noInline')
  static FlutterPageView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPageView>(create);
  static FlutterPageView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(7)
  $core.bool get pageSnapping => $_getBF(2);
  @$pb.TagNumber(7)
  set pageSnapping($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(7)
  $core.bool hasPageSnapping() => $_has(2);
  @$pb.TagNumber(7)
  void clearPageSnapping() => clearField(7);

  @$pb.TagNumber(9)
  $core.List<WidgetExpression> get children => $_getList(3);

  @$pb.TagNumber(11)
  $core.bool get allowImplicitScrolling => $_getBF(4);
  @$pb.TagNumber(11)
  set allowImplicitScrolling($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(11)
  $core.bool hasAllowImplicitScrolling() => $_has(4);
  @$pb.TagNumber(11)
  void clearAllowImplicitScrolling() => clearField(11);

  @$pb.TagNumber(12)
  $core.String get restorationId => $_getSZ(5);
  @$pb.TagNumber(12)
  set restorationId($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(12)
  $core.bool hasRestorationId() => $_has(5);
  @$pb.TagNumber(12)
  void clearRestorationId() => clearField(12);

  @$pb.TagNumber(15)
  $core.bool get padEnds => $_getBF(6);
  @$pb.TagNumber(15)
  set padEnds($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(15)
  $core.bool hasPadEnds() => $_has(6);
  @$pb.TagNumber(15)
  void clearPadEnds() => clearField(15);
}

/// package:flutter/src/widgets/performance_overlay.dart
class FlutterPerformanceOverlay extends $pb.GeneratedMessage {
  factory FlutterPerformanceOverlay({
    $1.FlutterKeyExpression? key,
    $core.int? optionsMask,
    $core.int? rasterizerThreshold,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (optionsMask != null) {
      $result.optionsMask = optionsMask;
    }
    if (rasterizerThreshold != null) {
      $result.rasterizerThreshold = rasterizerThreshold;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    return $result;
  }
  FlutterPerformanceOverlay._() : super();
  factory FlutterPerformanceOverlay.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPerformanceOverlay.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPerformanceOverlay', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'optionsMask', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'rasterizerThreshold', $pb.PbFieldType.O3)
    ..aOB(5, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(6, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPerformanceOverlay clone() => FlutterPerformanceOverlay()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPerformanceOverlay copyWith(void Function(FlutterPerformanceOverlay) updates) => super.copyWith((message) => updates(message as FlutterPerformanceOverlay)) as FlutterPerformanceOverlay;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPerformanceOverlay create() => FlutterPerformanceOverlay._();
  FlutterPerformanceOverlay createEmptyInstance() => create();
  static $pb.PbList<FlutterPerformanceOverlay> createRepeated() => $pb.PbList<FlutterPerformanceOverlay>();
  @$core.pragma('dart2js:noInline')
  static FlutterPerformanceOverlay getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPerformanceOverlay>(create);
  static FlutterPerformanceOverlay? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get optionsMask => $_getIZ(1);
  @$pb.TagNumber(3)
  set optionsMask($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasOptionsMask() => $_has(1);
  @$pb.TagNumber(3)
  void clearOptionsMask() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get rasterizerThreshold => $_getIZ(2);
  @$pb.TagNumber(4)
  set rasterizerThreshold($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasRasterizerThreshold() => $_has(2);
  @$pb.TagNumber(4)
  void clearRasterizerThreshold() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get checkerboardRasterCacheImages => $_getBF(3);
  @$pb.TagNumber(5)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(3);
  @$pb.TagNumber(5)
  void clearCheckerboardRasterCacheImages() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get checkerboardOffscreenLayers => $_getBF(4);
  @$pb.TagNumber(6)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(4);
  @$pb.TagNumber(6)
  void clearCheckerboardOffscreenLayers() => clearField(6);
}

/// package:flutter/src/widgets/performance_overlay.dart
class FlutterPerformanceOverlayNamedAllEnabled extends $pb.GeneratedMessage {
  factory FlutterPerformanceOverlayNamedAllEnabled({
    $1.FlutterKeyExpression? key,
    $core.int? rasterizerThreshold,
    $core.bool? checkerboardRasterCacheImages,
    $core.bool? checkerboardOffscreenLayers,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (rasterizerThreshold != null) {
      $result.rasterizerThreshold = rasterizerThreshold;
    }
    if (checkerboardRasterCacheImages != null) {
      $result.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    }
    if (checkerboardOffscreenLayers != null) {
      $result.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    }
    return $result;
  }
  FlutterPerformanceOverlayNamedAllEnabled._() : super();
  factory FlutterPerformanceOverlayNamedAllEnabled.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPerformanceOverlayNamedAllEnabled.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPerformanceOverlayNamedAllEnabled', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'rasterizerThreshold', $pb.PbFieldType.O3)
    ..aOB(4, _omitFieldNames ? '' : 'checkerboardRasterCacheImages')
    ..aOB(5, _omitFieldNames ? '' : 'checkerboardOffscreenLayers')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPerformanceOverlayNamedAllEnabled clone() => FlutterPerformanceOverlayNamedAllEnabled()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPerformanceOverlayNamedAllEnabled copyWith(void Function(FlutterPerformanceOverlayNamedAllEnabled) updates) => super.copyWith((message) => updates(message as FlutterPerformanceOverlayNamedAllEnabled)) as FlutterPerformanceOverlayNamedAllEnabled;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPerformanceOverlayNamedAllEnabled create() => FlutterPerformanceOverlayNamedAllEnabled._();
  FlutterPerformanceOverlayNamedAllEnabled createEmptyInstance() => create();
  static $pb.PbList<FlutterPerformanceOverlayNamedAllEnabled> createRepeated() => $pb.PbList<FlutterPerformanceOverlayNamedAllEnabled>();
  @$core.pragma('dart2js:noInline')
  static FlutterPerformanceOverlayNamedAllEnabled getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPerformanceOverlayNamedAllEnabled>(create);
  static FlutterPerformanceOverlayNamedAllEnabled? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get rasterizerThreshold => $_getIZ(1);
  @$pb.TagNumber(3)
  set rasterizerThreshold($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasRasterizerThreshold() => $_has(1);
  @$pb.TagNumber(3)
  void clearRasterizerThreshold() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get checkerboardRasterCacheImages => $_getBF(2);
  @$pb.TagNumber(4)
  set checkerboardRasterCacheImages($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasCheckerboardRasterCacheImages() => $_has(2);
  @$pb.TagNumber(4)
  void clearCheckerboardRasterCacheImages() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get checkerboardOffscreenLayers => $_getBF(3);
  @$pb.TagNumber(5)
  set checkerboardOffscreenLayers($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCheckerboardOffscreenLayers() => $_has(3);
  @$pb.TagNumber(5)
  void clearCheckerboardOffscreenLayers() => clearField(5);
}

/// package:flutter/src/widgets/placeholder.dart
class FlutterPlaceholder extends $pb.GeneratedMessage {
  factory FlutterPlaceholder({
    $1.FlutterKeyExpression? key,
    $1.DartColorExpression? color,
    $core.double? strokeWidth,
    $core.double? fallbackWidth,
    $core.double? fallbackHeight,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (color != null) {
      $result.color = color;
    }
    if (strokeWidth != null) {
      $result.strokeWidth = strokeWidth;
    }
    if (fallbackWidth != null) {
      $result.fallbackWidth = fallbackWidth;
    }
    if (fallbackHeight != null) {
      $result.fallbackHeight = fallbackHeight;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPlaceholder._() : super();
  factory FlutterPlaceholder.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPlaceholder.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPlaceholder', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<$1.DartColorExpression>(3, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'strokeWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'fallbackWidth', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'fallbackHeight', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(7, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPlaceholder clone() => FlutterPlaceholder()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPlaceholder copyWith(void Function(FlutterPlaceholder) updates) => super.copyWith((message) => updates(message as FlutterPlaceholder)) as FlutterPlaceholder;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPlaceholder create() => FlutterPlaceholder._();
  FlutterPlaceholder createEmptyInstance() => create();
  static $pb.PbList<FlutterPlaceholder> createRepeated() => $pb.PbList<FlutterPlaceholder>();
  @$core.pragma('dart2js:noInline')
  static FlutterPlaceholder getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPlaceholder>(create);
  static FlutterPlaceholder? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $1.DartColorExpression get color => $_getN(1);
  @$pb.TagNumber(3)
  set color($1.DartColorExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasColor() => $_has(1);
  @$pb.TagNumber(3)
  void clearColor() => clearField(3);
  @$pb.TagNumber(3)
  $1.DartColorExpression ensureColor() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.double get strokeWidth => $_getN(2);
  @$pb.TagNumber(4)
  set strokeWidth($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasStrokeWidth() => $_has(2);
  @$pb.TagNumber(4)
  void clearStrokeWidth() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get fallbackWidth => $_getN(3);
  @$pb.TagNumber(5)
  set fallbackWidth($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasFallbackWidth() => $_has(3);
  @$pb.TagNumber(5)
  void clearFallbackWidth() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get fallbackHeight => $_getN(4);
  @$pb.TagNumber(6)
  set fallbackHeight($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasFallbackHeight() => $_has(4);
  @$pb.TagNumber(6)
  void clearFallbackHeight() => clearField(6);

  @$pb.TagNumber(7)
  WidgetExpression get child => $_getN(5);
  @$pb.TagNumber(7)
  set child(WidgetExpression v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasChild() => $_has(5);
  @$pb.TagNumber(7)
  void clearChild() => clearField(7);
  @$pb.TagNumber(7)
  WidgetExpression ensureChild() => $_ensure(5);
}

/// package:flutter/src/widgets/platform_view.dart
class FlutterAndroidView extends $pb.GeneratedMessage {
  factory FlutterAndroidView({
    $1.FlutterKeyExpression? key,
    $core.String? viewType,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (viewType != null) {
      $result.viewType = viewType;
    }
    return $result;
  }
  FlutterAndroidView._() : super();
  factory FlutterAndroidView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterAndroidView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterAndroidView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'viewType')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterAndroidView clone() => FlutterAndroidView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterAndroidView copyWith(void Function(FlutterAndroidView) updates) => super.copyWith((message) => updates(message as FlutterAndroidView)) as FlutterAndroidView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterAndroidView create() => FlutterAndroidView._();
  FlutterAndroidView createEmptyInstance() => create();
  static $pb.PbList<FlutterAndroidView> createRepeated() => $pb.PbList<FlutterAndroidView>();
  @$core.pragma('dart2js:noInline')
  static FlutterAndroidView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterAndroidView>(create);
  static FlutterAndroidView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get viewType => $_getSZ(1);
  @$pb.TagNumber(3)
  set viewType($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasViewType() => $_has(1);
  @$pb.TagNumber(3)
  void clearViewType() => clearField(3);
}

/// package:flutter/src/widgets/platform_view.dart
class FlutterHtmlElementView extends $pb.GeneratedMessage {
  factory FlutterHtmlElementView({
    $1.FlutterKeyExpression? key,
    $core.String? viewType,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (viewType != null) {
      $result.viewType = viewType;
    }
    return $result;
  }
  FlutterHtmlElementView._() : super();
  factory FlutterHtmlElementView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterHtmlElementView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterHtmlElementView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'viewType')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterHtmlElementView clone() => FlutterHtmlElementView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterHtmlElementView copyWith(void Function(FlutterHtmlElementView) updates) => super.copyWith((message) => updates(message as FlutterHtmlElementView)) as FlutterHtmlElementView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterHtmlElementView create() => FlutterHtmlElementView._();
  FlutterHtmlElementView createEmptyInstance() => create();
  static $pb.PbList<FlutterHtmlElementView> createRepeated() => $pb.PbList<FlutterHtmlElementView>();
  @$core.pragma('dart2js:noInline')
  static FlutterHtmlElementView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterHtmlElementView>(create);
  static FlutterHtmlElementView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get viewType => $_getSZ(1);
  @$pb.TagNumber(3)
  set viewType($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasViewType() => $_has(1);
  @$pb.TagNumber(3)
  void clearViewType() => clearField(3);
}

/// package:flutter/src/widgets/platform_view.dart
class FlutterUiKitView extends $pb.GeneratedMessage {
  factory FlutterUiKitView({
    $1.FlutterKeyExpression? key,
    $core.String? viewType,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (viewType != null) {
      $result.viewType = viewType;
    }
    return $result;
  }
  FlutterUiKitView._() : super();
  factory FlutterUiKitView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterUiKitView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterUiKitView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'viewType')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterUiKitView clone() => FlutterUiKitView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterUiKitView copyWith(void Function(FlutterUiKitView) updates) => super.copyWith((message) => updates(message as FlutterUiKitView)) as FlutterUiKitView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterUiKitView create() => FlutterUiKitView._();
  FlutterUiKitView createEmptyInstance() => create();
  static $pb.PbList<FlutterUiKitView> createRepeated() => $pb.PbList<FlutterUiKitView>();
  @$core.pragma('dart2js:noInline')
  static FlutterUiKitView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterUiKitView>(create);
  static FlutterUiKitView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get viewType => $_getSZ(1);
  @$pb.TagNumber(3)
  set viewType($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasViewType() => $_has(1);
  @$pb.TagNumber(3)
  void clearViewType() => clearField(3);
}

/// package:flutter/src/widgets/primary_scroll_controller.dart
class FlutterPrimaryScrollControllerNamedNone extends $pb.GeneratedMessage {
  factory FlutterPrimaryScrollControllerNamedNone({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterPrimaryScrollControllerNamedNone._() : super();
  factory FlutterPrimaryScrollControllerNamedNone.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterPrimaryScrollControllerNamedNone.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterPrimaryScrollControllerNamedNone', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterPrimaryScrollControllerNamedNone clone() => FlutterPrimaryScrollControllerNamedNone()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterPrimaryScrollControllerNamedNone copyWith(void Function(FlutterPrimaryScrollControllerNamedNone) updates) => super.copyWith((message) => updates(message as FlutterPrimaryScrollControllerNamedNone)) as FlutterPrimaryScrollControllerNamedNone;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterPrimaryScrollControllerNamedNone create() => FlutterPrimaryScrollControllerNamedNone._();
  FlutterPrimaryScrollControllerNamedNone createEmptyInstance() => create();
  static $pb.PbList<FlutterPrimaryScrollControllerNamedNone> createRepeated() => $pb.PbList<FlutterPrimaryScrollControllerNamedNone>();
  @$core.pragma('dart2js:noInline')
  static FlutterPrimaryScrollControllerNamedNone getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterPrimaryScrollControllerNamedNone>(create);
  static FlutterPrimaryScrollControllerNamedNone? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/reorderable_list.dart
class FlutterReorderableDelayedDragStartListener extends $pb.GeneratedMessage {
  factory FlutterReorderableDelayedDragStartListener({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.int? index,
    $core.bool? enabled,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (index != null) {
      $result.index = index;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    return $result;
  }
  FlutterReorderableDelayedDragStartListener._() : super();
  factory FlutterReorderableDelayedDragStartListener.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterReorderableDelayedDragStartListener.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterReorderableDelayedDragStartListener', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'index', $pb.PbFieldType.O3)
    ..aOB(5, _omitFieldNames ? '' : 'enabled')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterReorderableDelayedDragStartListener clone() => FlutterReorderableDelayedDragStartListener()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterReorderableDelayedDragStartListener copyWith(void Function(FlutterReorderableDelayedDragStartListener) updates) => super.copyWith((message) => updates(message as FlutterReorderableDelayedDragStartListener)) as FlutterReorderableDelayedDragStartListener;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterReorderableDelayedDragStartListener create() => FlutterReorderableDelayedDragStartListener._();
  FlutterReorderableDelayedDragStartListener createEmptyInstance() => create();
  static $pb.PbList<FlutterReorderableDelayedDragStartListener> createRepeated() => $pb.PbList<FlutterReorderableDelayedDragStartListener>();
  @$core.pragma('dart2js:noInline')
  static FlutterReorderableDelayedDragStartListener getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterReorderableDelayedDragStartListener>(create);
  static FlutterReorderableDelayedDragStartListener? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.int get index => $_getIZ(2);
  @$pb.TagNumber(4)
  set index($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasIndex() => $_has(2);
  @$pb.TagNumber(4)
  void clearIndex() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get enabled => $_getBF(3);
  @$pb.TagNumber(5)
  set enabled($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnabled() => $_has(3);
  @$pb.TagNumber(5)
  void clearEnabled() => clearField(5);
}

/// package:flutter/src/widgets/reorderable_list.dart
class FlutterReorderableDragStartListener extends $pb.GeneratedMessage {
  factory FlutterReorderableDragStartListener({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.int? index,
    $core.bool? enabled,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (index != null) {
      $result.index = index;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    return $result;
  }
  FlutterReorderableDragStartListener._() : super();
  factory FlutterReorderableDragStartListener.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterReorderableDragStartListener.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterReorderableDragStartListener', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'index', $pb.PbFieldType.O3)
    ..aOB(5, _omitFieldNames ? '' : 'enabled')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterReorderableDragStartListener clone() => FlutterReorderableDragStartListener()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterReorderableDragStartListener copyWith(void Function(FlutterReorderableDragStartListener) updates) => super.copyWith((message) => updates(message as FlutterReorderableDragStartListener)) as FlutterReorderableDragStartListener;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterReorderableDragStartListener create() => FlutterReorderableDragStartListener._();
  FlutterReorderableDragStartListener createEmptyInstance() => create();
  static $pb.PbList<FlutterReorderableDragStartListener> createRepeated() => $pb.PbList<FlutterReorderableDragStartListener>();
  @$core.pragma('dart2js:noInline')
  static FlutterReorderableDragStartListener getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterReorderableDragStartListener>(create);
  static FlutterReorderableDragStartListener? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.int get index => $_getIZ(2);
  @$pb.TagNumber(4)
  set index($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasIndex() => $_has(2);
  @$pb.TagNumber(4)
  void clearIndex() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get enabled => $_getBF(3);
  @$pb.TagNumber(5)
  set enabled($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasEnabled() => $_has(3);
  @$pb.TagNumber(5)
  void clearEnabled() => clearField(5);
}

/// package:flutter/src/widgets/restoration.dart
class FlutterRestorationScope extends $pb.GeneratedMessage {
  factory FlutterRestorationScope({
    $1.FlutterKeyExpression? key,
    $core.String? restorationId,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterRestorationScope._() : super();
  factory FlutterRestorationScope.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRestorationScope.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRestorationScope', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'restorationId')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRestorationScope clone() => FlutterRestorationScope()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRestorationScope copyWith(void Function(FlutterRestorationScope) updates) => super.copyWith((message) => updates(message as FlutterRestorationScope)) as FlutterRestorationScope;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRestorationScope create() => FlutterRestorationScope._();
  FlutterRestorationScope createEmptyInstance() => create();
  static $pb.PbList<FlutterRestorationScope> createRepeated() => $pb.PbList<FlutterRestorationScope>();
  @$core.pragma('dart2js:noInline')
  static FlutterRestorationScope getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRestorationScope>(create);
  static FlutterRestorationScope? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get restorationId => $_getSZ(1);
  @$pb.TagNumber(3)
  set restorationId($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasRestorationId() => $_has(1);
  @$pb.TagNumber(3)
  void clearRestorationId() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/restoration.dart
class FlutterRootRestorationScope extends $pb.GeneratedMessage {
  factory FlutterRootRestorationScope({
    $1.FlutterKeyExpression? key,
    $core.String? restorationId,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterRootRestorationScope._() : super();
  factory FlutterRootRestorationScope.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRootRestorationScope.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRootRestorationScope', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'restorationId')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRootRestorationScope clone() => FlutterRootRestorationScope()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRootRestorationScope copyWith(void Function(FlutterRootRestorationScope) updates) => super.copyWith((message) => updates(message as FlutterRootRestorationScope)) as FlutterRootRestorationScope;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRootRestorationScope create() => FlutterRootRestorationScope._();
  FlutterRootRestorationScope createEmptyInstance() => create();
  static $pb.PbList<FlutterRootRestorationScope> createRepeated() => $pb.PbList<FlutterRootRestorationScope>();
  @$core.pragma('dart2js:noInline')
  static FlutterRootRestorationScope getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRootRestorationScope>(create);
  static FlutterRootRestorationScope? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get restorationId => $_getSZ(1);
  @$pb.TagNumber(3)
  set restorationId($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasRestorationId() => $_has(1);
  @$pb.TagNumber(3)
  void clearRestorationId() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/restoration.dart
class FlutterUnmanagedRestorationScope extends $pb.GeneratedMessage {
  factory FlutterUnmanagedRestorationScope({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterUnmanagedRestorationScope._() : super();
  factory FlutterUnmanagedRestorationScope.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterUnmanagedRestorationScope.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterUnmanagedRestorationScope', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterUnmanagedRestorationScope clone() => FlutterUnmanagedRestorationScope()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterUnmanagedRestorationScope copyWith(void Function(FlutterUnmanagedRestorationScope) updates) => super.copyWith((message) => updates(message as FlutterUnmanagedRestorationScope)) as FlutterUnmanagedRestorationScope;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterUnmanagedRestorationScope create() => FlutterUnmanagedRestorationScope._();
  FlutterUnmanagedRestorationScope createEmptyInstance() => create();
  static $pb.PbList<FlutterUnmanagedRestorationScope> createRepeated() => $pb.PbList<FlutterUnmanagedRestorationScope>();
  @$core.pragma('dart2js:noInline')
  static FlutterUnmanagedRestorationScope getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterUnmanagedRestorationScope>(create);
  static FlutterUnmanagedRestorationScope? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/safe_area.dart
class FlutterSafeArea extends $pb.GeneratedMessage {
  factory FlutterSafeArea({
    $1.FlutterKeyExpression? key,
    $core.bool? left,
    $core.bool? top,
    $core.bool? right,
    $core.bool? bottom,
    $core.bool? maintainBottomViewPadding,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (left != null) {
      $result.left = left;
    }
    if (top != null) {
      $result.top = top;
    }
    if (right != null) {
      $result.right = right;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (maintainBottomViewPadding != null) {
      $result.maintainBottomViewPadding = maintainBottomViewPadding;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSafeArea._() : super();
  factory FlutterSafeArea.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSafeArea.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSafeArea', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'left')
    ..aOB(4, _omitFieldNames ? '' : 'top')
    ..aOB(5, _omitFieldNames ? '' : 'right')
    ..aOB(6, _omitFieldNames ? '' : 'bottom')
    ..aOB(8, _omitFieldNames ? '' : 'maintainBottomViewPadding')
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSafeArea clone() => FlutterSafeArea()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSafeArea copyWith(void Function(FlutterSafeArea) updates) => super.copyWith((message) => updates(message as FlutterSafeArea)) as FlutterSafeArea;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSafeArea create() => FlutterSafeArea._();
  FlutterSafeArea createEmptyInstance() => create();
  static $pb.PbList<FlutterSafeArea> createRepeated() => $pb.PbList<FlutterSafeArea>();
  @$core.pragma('dart2js:noInline')
  static FlutterSafeArea getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSafeArea>(create);
  static FlutterSafeArea? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get left => $_getBF(1);
  @$pb.TagNumber(3)
  set left($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeft() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeft() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get top => $_getBF(2);
  @$pb.TagNumber(4)
  set top($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTop() => $_has(2);
  @$pb.TagNumber(4)
  void clearTop() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get right => $_getBF(3);
  @$pb.TagNumber(5)
  set right($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasRight() => $_has(3);
  @$pb.TagNumber(5)
  void clearRight() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get bottom => $_getBF(4);
  @$pb.TagNumber(6)
  set bottom($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasBottom() => $_has(4);
  @$pb.TagNumber(6)
  void clearBottom() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get maintainBottomViewPadding => $_getBF(5);
  @$pb.TagNumber(8)
  set maintainBottomViewPadding($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(8)
  $core.bool hasMaintainBottomViewPadding() => $_has(5);
  @$pb.TagNumber(8)
  void clearMaintainBottomViewPadding() => clearField(8);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(6);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(6);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(6);
}

/// package:flutter/src/widgets/safe_area.dart
class FlutterSliverSafeArea extends $pb.GeneratedMessage {
  factory FlutterSliverSafeArea({
    $1.FlutterKeyExpression? key,
    $core.bool? left,
    $core.bool? top,
    $core.bool? right,
    $core.bool? bottom,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (left != null) {
      $result.left = left;
    }
    if (top != null) {
      $result.top = top;
    }
    if (right != null) {
      $result.right = right;
    }
    if (bottom != null) {
      $result.bottom = bottom;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverSafeArea._() : super();
  factory FlutterSliverSafeArea.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverSafeArea.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverSafeArea', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'left')
    ..aOB(4, _omitFieldNames ? '' : 'top')
    ..aOB(5, _omitFieldNames ? '' : 'right')
    ..aOB(6, _omitFieldNames ? '' : 'bottom')
    ..aOM<WidgetExpression>(8, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverSafeArea clone() => FlutterSliverSafeArea()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverSafeArea copyWith(void Function(FlutterSliverSafeArea) updates) => super.copyWith((message) => updates(message as FlutterSliverSafeArea)) as FlutterSliverSafeArea;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverSafeArea create() => FlutterSliverSafeArea._();
  FlutterSliverSafeArea createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverSafeArea> createRepeated() => $pb.PbList<FlutterSliverSafeArea>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverSafeArea getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverSafeArea>(create);
  static FlutterSliverSafeArea? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get left => $_getBF(1);
  @$pb.TagNumber(3)
  set left($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasLeft() => $_has(1);
  @$pb.TagNumber(3)
  void clearLeft() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get top => $_getBF(2);
  @$pb.TagNumber(4)
  set top($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasTop() => $_has(2);
  @$pb.TagNumber(4)
  void clearTop() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get right => $_getBF(3);
  @$pb.TagNumber(5)
  set right($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasRight() => $_has(3);
  @$pb.TagNumber(5)
  void clearRight() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get bottom => $_getBF(4);
  @$pb.TagNumber(6)
  set bottom($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasBottom() => $_has(4);
  @$pb.TagNumber(6)
  void clearBottom() => clearField(6);

  @$pb.TagNumber(8)
  WidgetExpression get sliver => $_getN(5);
  @$pb.TagNumber(8)
  set sliver(WidgetExpression v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasSliver() => $_has(5);
  @$pb.TagNumber(8)
  void clearSliver() => clearField(8);
  @$pb.TagNumber(8)
  WidgetExpression ensureSliver() => $_ensure(5);
}

/// package:flutter/src/widgets/scroll_notification_observer.dart
class FlutterScrollNotificationObserver extends $pb.GeneratedMessage {
  factory FlutterScrollNotificationObserver({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterScrollNotificationObserver._() : super();
  factory FlutterScrollNotificationObserver.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterScrollNotificationObserver.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterScrollNotificationObserver', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterScrollNotificationObserver clone() => FlutterScrollNotificationObserver()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterScrollNotificationObserver copyWith(void Function(FlutterScrollNotificationObserver) updates) => super.copyWith((message) => updates(message as FlutterScrollNotificationObserver)) as FlutterScrollNotificationObserver;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterScrollNotificationObserver create() => FlutterScrollNotificationObserver._();
  FlutterScrollNotificationObserver createEmptyInstance() => create();
  static $pb.PbList<FlutterScrollNotificationObserver> createRepeated() => $pb.PbList<FlutterScrollNotificationObserver>();
  @$core.pragma('dart2js:noInline')
  static FlutterScrollNotificationObserver getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterScrollNotificationObserver>(create);
  static FlutterScrollNotificationObserver? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/scroll_view.dart
class FlutterCustomScrollView extends $pb.GeneratedMessage {
  factory FlutterCustomScrollView({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? primary,
    $core.bool? shrinkWrap,
    $1.FlutterKeyExpression? center,
    $core.double? anchor,
    $core.double? cacheExtent,
    $core.Iterable<WidgetExpression>? slivers,
    $core.int? semanticChildCount,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (shrinkWrap != null) {
      $result.shrinkWrap = shrinkWrap;
    }
    if (center != null) {
      $result.center = center;
    }
    if (anchor != null) {
      $result.anchor = anchor;
    }
    if (cacheExtent != null) {
      $result.cacheExtent = cacheExtent;
    }
    if (slivers != null) {
      $result.slivers.addAll(slivers);
    }
    if (semanticChildCount != null) {
      $result.semanticChildCount = semanticChildCount;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  FlutterCustomScrollView._() : super();
  factory FlutterCustomScrollView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterCustomScrollView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterCustomScrollView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(6, _omitFieldNames ? '' : 'primary')
    ..aOB(9, _omitFieldNames ? '' : 'shrinkWrap')
    ..aOM<$1.FlutterKeyExpression>(10, _omitFieldNames ? '' : 'center', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'anchor', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'cacheExtent', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(13, _omitFieldNames ? '' : 'slivers', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.int>(14, _omitFieldNames ? '' : 'semanticChildCount', $pb.PbFieldType.O3)
    ..aOS(17, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterCustomScrollView clone() => FlutterCustomScrollView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterCustomScrollView copyWith(void Function(FlutterCustomScrollView) updates) => super.copyWith((message) => updates(message as FlutterCustomScrollView)) as FlutterCustomScrollView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterCustomScrollView create() => FlutterCustomScrollView._();
  FlutterCustomScrollView createEmptyInstance() => create();
  static $pb.PbList<FlutterCustomScrollView> createRepeated() => $pb.PbList<FlutterCustomScrollView>();
  @$core.pragma('dart2js:noInline')
  static FlutterCustomScrollView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterCustomScrollView>(create);
  static FlutterCustomScrollView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get primary => $_getBF(2);
  @$pb.TagNumber(6)
  set primary($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPrimary() => $_has(2);
  @$pb.TagNumber(6)
  void clearPrimary() => clearField(6);

  @$pb.TagNumber(9)
  $core.bool get shrinkWrap => $_getBF(3);
  @$pb.TagNumber(9)
  set shrinkWrap($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasShrinkWrap() => $_has(3);
  @$pb.TagNumber(9)
  void clearShrinkWrap() => clearField(9);

  @$pb.TagNumber(10)
  $1.FlutterKeyExpression get center => $_getN(4);
  @$pb.TagNumber(10)
  set center($1.FlutterKeyExpression v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasCenter() => $_has(4);
  @$pb.TagNumber(10)
  void clearCenter() => clearField(10);
  @$pb.TagNumber(10)
  $1.FlutterKeyExpression ensureCenter() => $_ensure(4);

  @$pb.TagNumber(11)
  $core.double get anchor => $_getN(5);
  @$pb.TagNumber(11)
  set anchor($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasAnchor() => $_has(5);
  @$pb.TagNumber(11)
  void clearAnchor() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get cacheExtent => $_getN(6);
  @$pb.TagNumber(12)
  set cacheExtent($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasCacheExtent() => $_has(6);
  @$pb.TagNumber(12)
  void clearCacheExtent() => clearField(12);

  @$pb.TagNumber(13)
  $core.List<WidgetExpression> get slivers => $_getList(7);

  @$pb.TagNumber(14)
  $core.int get semanticChildCount => $_getIZ(8);
  @$pb.TagNumber(14)
  set semanticChildCount($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(14)
  $core.bool hasSemanticChildCount() => $_has(8);
  @$pb.TagNumber(14)
  void clearSemanticChildCount() => clearField(14);

  @$pb.TagNumber(17)
  $core.String get restorationId => $_getSZ(9);
  @$pb.TagNumber(17)
  set restorationId($core.String v) { $_setString(9, v); }
  @$pb.TagNumber(17)
  $core.bool hasRestorationId() => $_has(9);
  @$pb.TagNumber(17)
  void clearRestorationId() => clearField(17);
}

/// package:flutter/src/widgets/scroll_view.dart
class FlutterGridViewNamedCount extends $pb.GeneratedMessage {
  factory FlutterGridViewNamedCount({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? primary,
    $core.bool? shrinkWrap,
    $core.int? crossAxisCount,
    $core.double? mainAxisSpacing,
    $core.double? crossAxisSpacing,
    $core.double? childAspectRatio,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
    $core.double? cacheExtent,
    $core.Iterable<WidgetExpression>? children,
    $core.int? semanticChildCount,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (shrinkWrap != null) {
      $result.shrinkWrap = shrinkWrap;
    }
    if (crossAxisCount != null) {
      $result.crossAxisCount = crossAxisCount;
    }
    if (mainAxisSpacing != null) {
      $result.mainAxisSpacing = mainAxisSpacing;
    }
    if (crossAxisSpacing != null) {
      $result.crossAxisSpacing = crossAxisSpacing;
    }
    if (childAspectRatio != null) {
      $result.childAspectRatio = childAspectRatio;
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    if (cacheExtent != null) {
      $result.cacheExtent = cacheExtent;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (semanticChildCount != null) {
      $result.semanticChildCount = semanticChildCount;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  FlutterGridViewNamedCount._() : super();
  factory FlutterGridViewNamedCount.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterGridViewNamedCount.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterGridViewNamedCount', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(6, _omitFieldNames ? '' : 'primary')
    ..aOB(8, _omitFieldNames ? '' : 'shrinkWrap')
    ..a<$core.int>(10, _omitFieldNames ? '' : 'crossAxisCount', $pb.PbFieldType.O3)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'mainAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'crossAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'childAspectRatio', $pb.PbFieldType.OD)
    ..aOB(14, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(15, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(16, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..a<$core.double>(17, _omitFieldNames ? '' : 'cacheExtent', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(18, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.int>(19, _omitFieldNames ? '' : 'semanticChildCount', $pb.PbFieldType.O3)
    ..aOS(22, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterGridViewNamedCount clone() => FlutterGridViewNamedCount()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterGridViewNamedCount copyWith(void Function(FlutterGridViewNamedCount) updates) => super.copyWith((message) => updates(message as FlutterGridViewNamedCount)) as FlutterGridViewNamedCount;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterGridViewNamedCount create() => FlutterGridViewNamedCount._();
  FlutterGridViewNamedCount createEmptyInstance() => create();
  static $pb.PbList<FlutterGridViewNamedCount> createRepeated() => $pb.PbList<FlutterGridViewNamedCount>();
  @$core.pragma('dart2js:noInline')
  static FlutterGridViewNamedCount getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterGridViewNamedCount>(create);
  static FlutterGridViewNamedCount? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get primary => $_getBF(2);
  @$pb.TagNumber(6)
  set primary($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPrimary() => $_has(2);
  @$pb.TagNumber(6)
  void clearPrimary() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get shrinkWrap => $_getBF(3);
  @$pb.TagNumber(8)
  set shrinkWrap($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasShrinkWrap() => $_has(3);
  @$pb.TagNumber(8)
  void clearShrinkWrap() => clearField(8);

  @$pb.TagNumber(10)
  $core.int get crossAxisCount => $_getIZ(4);
  @$pb.TagNumber(10)
  set crossAxisCount($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(10)
  $core.bool hasCrossAxisCount() => $_has(4);
  @$pb.TagNumber(10)
  void clearCrossAxisCount() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get mainAxisSpacing => $_getN(5);
  @$pb.TagNumber(11)
  set mainAxisSpacing($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasMainAxisSpacing() => $_has(5);
  @$pb.TagNumber(11)
  void clearMainAxisSpacing() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get crossAxisSpacing => $_getN(6);
  @$pb.TagNumber(12)
  set crossAxisSpacing($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasCrossAxisSpacing() => $_has(6);
  @$pb.TagNumber(12)
  void clearCrossAxisSpacing() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get childAspectRatio => $_getN(7);
  @$pb.TagNumber(13)
  set childAspectRatio($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasChildAspectRatio() => $_has(7);
  @$pb.TagNumber(13)
  void clearChildAspectRatio() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get addAutomaticKeepAlives => $_getBF(8);
  @$pb.TagNumber(14)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(14)
  $core.bool hasAddAutomaticKeepAlives() => $_has(8);
  @$pb.TagNumber(14)
  void clearAddAutomaticKeepAlives() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get addRepaintBoundaries => $_getBF(9);
  @$pb.TagNumber(15)
  set addRepaintBoundaries($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(15)
  $core.bool hasAddRepaintBoundaries() => $_has(9);
  @$pb.TagNumber(15)
  void clearAddRepaintBoundaries() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get addSemanticIndexes => $_getBF(10);
  @$pb.TagNumber(16)
  set addSemanticIndexes($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(16)
  $core.bool hasAddSemanticIndexes() => $_has(10);
  @$pb.TagNumber(16)
  void clearAddSemanticIndexes() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get cacheExtent => $_getN(11);
  @$pb.TagNumber(17)
  set cacheExtent($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(17)
  $core.bool hasCacheExtent() => $_has(11);
  @$pb.TagNumber(17)
  void clearCacheExtent() => clearField(17);

  @$pb.TagNumber(18)
  $core.List<WidgetExpression> get children => $_getList(12);

  @$pb.TagNumber(19)
  $core.int get semanticChildCount => $_getIZ(13);
  @$pb.TagNumber(19)
  set semanticChildCount($core.int v) { $_setSignedInt32(13, v); }
  @$pb.TagNumber(19)
  $core.bool hasSemanticChildCount() => $_has(13);
  @$pb.TagNumber(19)
  void clearSemanticChildCount() => clearField(19);

  @$pb.TagNumber(22)
  $core.String get restorationId => $_getSZ(14);
  @$pb.TagNumber(22)
  set restorationId($core.String v) { $_setString(14, v); }
  @$pb.TagNumber(22)
  $core.bool hasRestorationId() => $_has(14);
  @$pb.TagNumber(22)
  void clearRestorationId() => clearField(22);
}

/// package:flutter/src/widgets/scroll_view.dart
class FlutterGridViewNamedExtent extends $pb.GeneratedMessage {
  factory FlutterGridViewNamedExtent({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? primary,
    $core.bool? shrinkWrap,
    $core.double? maxCrossAxisExtent,
    $core.double? mainAxisSpacing,
    $core.double? crossAxisSpacing,
    $core.double? childAspectRatio,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
    $core.double? cacheExtent,
    $core.Iterable<WidgetExpression>? children,
    $core.int? semanticChildCount,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (shrinkWrap != null) {
      $result.shrinkWrap = shrinkWrap;
    }
    if (maxCrossAxisExtent != null) {
      $result.maxCrossAxisExtent = maxCrossAxisExtent;
    }
    if (mainAxisSpacing != null) {
      $result.mainAxisSpacing = mainAxisSpacing;
    }
    if (crossAxisSpacing != null) {
      $result.crossAxisSpacing = crossAxisSpacing;
    }
    if (childAspectRatio != null) {
      $result.childAspectRatio = childAspectRatio;
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    if (cacheExtent != null) {
      $result.cacheExtent = cacheExtent;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (semanticChildCount != null) {
      $result.semanticChildCount = semanticChildCount;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  FlutterGridViewNamedExtent._() : super();
  factory FlutterGridViewNamedExtent.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterGridViewNamedExtent.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterGridViewNamedExtent', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(6, _omitFieldNames ? '' : 'primary')
    ..aOB(8, _omitFieldNames ? '' : 'shrinkWrap')
    ..a<$core.double>(10, _omitFieldNames ? '' : 'maxCrossAxisExtent', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'mainAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(12, _omitFieldNames ? '' : 'crossAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(13, _omitFieldNames ? '' : 'childAspectRatio', $pb.PbFieldType.OD)
    ..aOB(14, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(15, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(16, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..a<$core.double>(17, _omitFieldNames ? '' : 'cacheExtent', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(18, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.int>(19, _omitFieldNames ? '' : 'semanticChildCount', $pb.PbFieldType.O3)
    ..aOS(22, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterGridViewNamedExtent clone() => FlutterGridViewNamedExtent()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterGridViewNamedExtent copyWith(void Function(FlutterGridViewNamedExtent) updates) => super.copyWith((message) => updates(message as FlutterGridViewNamedExtent)) as FlutterGridViewNamedExtent;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterGridViewNamedExtent create() => FlutterGridViewNamedExtent._();
  FlutterGridViewNamedExtent createEmptyInstance() => create();
  static $pb.PbList<FlutterGridViewNamedExtent> createRepeated() => $pb.PbList<FlutterGridViewNamedExtent>();
  @$core.pragma('dart2js:noInline')
  static FlutterGridViewNamedExtent getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterGridViewNamedExtent>(create);
  static FlutterGridViewNamedExtent? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get primary => $_getBF(2);
  @$pb.TagNumber(6)
  set primary($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPrimary() => $_has(2);
  @$pb.TagNumber(6)
  void clearPrimary() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get shrinkWrap => $_getBF(3);
  @$pb.TagNumber(8)
  set shrinkWrap($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasShrinkWrap() => $_has(3);
  @$pb.TagNumber(8)
  void clearShrinkWrap() => clearField(8);

  @$pb.TagNumber(10)
  $core.double get maxCrossAxisExtent => $_getN(4);
  @$pb.TagNumber(10)
  set maxCrossAxisExtent($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaxCrossAxisExtent() => $_has(4);
  @$pb.TagNumber(10)
  void clearMaxCrossAxisExtent() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get mainAxisSpacing => $_getN(5);
  @$pb.TagNumber(11)
  set mainAxisSpacing($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(11)
  $core.bool hasMainAxisSpacing() => $_has(5);
  @$pb.TagNumber(11)
  void clearMainAxisSpacing() => clearField(11);

  @$pb.TagNumber(12)
  $core.double get crossAxisSpacing => $_getN(6);
  @$pb.TagNumber(12)
  set crossAxisSpacing($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasCrossAxisSpacing() => $_has(6);
  @$pb.TagNumber(12)
  void clearCrossAxisSpacing() => clearField(12);

  @$pb.TagNumber(13)
  $core.double get childAspectRatio => $_getN(7);
  @$pb.TagNumber(13)
  set childAspectRatio($core.double v) { $_setDouble(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasChildAspectRatio() => $_has(7);
  @$pb.TagNumber(13)
  void clearChildAspectRatio() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get addAutomaticKeepAlives => $_getBF(8);
  @$pb.TagNumber(14)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(14)
  $core.bool hasAddAutomaticKeepAlives() => $_has(8);
  @$pb.TagNumber(14)
  void clearAddAutomaticKeepAlives() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get addRepaintBoundaries => $_getBF(9);
  @$pb.TagNumber(15)
  set addRepaintBoundaries($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(15)
  $core.bool hasAddRepaintBoundaries() => $_has(9);
  @$pb.TagNumber(15)
  void clearAddRepaintBoundaries() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get addSemanticIndexes => $_getBF(10);
  @$pb.TagNumber(16)
  set addSemanticIndexes($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(16)
  $core.bool hasAddSemanticIndexes() => $_has(10);
  @$pb.TagNumber(16)
  void clearAddSemanticIndexes() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get cacheExtent => $_getN(11);
  @$pb.TagNumber(17)
  set cacheExtent($core.double v) { $_setDouble(11, v); }
  @$pb.TagNumber(17)
  $core.bool hasCacheExtent() => $_has(11);
  @$pb.TagNumber(17)
  void clearCacheExtent() => clearField(17);

  @$pb.TagNumber(18)
  $core.List<WidgetExpression> get children => $_getList(12);

  @$pb.TagNumber(19)
  $core.int get semanticChildCount => $_getIZ(13);
  @$pb.TagNumber(19)
  set semanticChildCount($core.int v) { $_setSignedInt32(13, v); }
  @$pb.TagNumber(19)
  $core.bool hasSemanticChildCount() => $_has(13);
  @$pb.TagNumber(19)
  void clearSemanticChildCount() => clearField(19);

  @$pb.TagNumber(22)
  $core.String get restorationId => $_getSZ(14);
  @$pb.TagNumber(22)
  set restorationId($core.String v) { $_setString(14, v); }
  @$pb.TagNumber(22)
  $core.bool hasRestorationId() => $_has(14);
  @$pb.TagNumber(22)
  void clearRestorationId() => clearField(22);
}

/// package:flutter/src/widgets/scroll_view.dart
class FlutterListView extends $pb.GeneratedMessage {
  factory FlutterListView({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? primary,
    $core.bool? shrinkWrap,
    $core.double? itemExtent,
    WidgetExpression? prototypeItem,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
    $core.double? cacheExtent,
    $core.Iterable<WidgetExpression>? children,
    $core.int? semanticChildCount,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (shrinkWrap != null) {
      $result.shrinkWrap = shrinkWrap;
    }
    if (itemExtent != null) {
      $result.itemExtent = itemExtent;
    }
    if (prototypeItem != null) {
      $result.prototypeItem = prototypeItem;
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    if (cacheExtent != null) {
      $result.cacheExtent = cacheExtent;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (semanticChildCount != null) {
      $result.semanticChildCount = semanticChildCount;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  FlutterListView._() : super();
  factory FlutterListView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterListView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterListView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(6, _omitFieldNames ? '' : 'primary')
    ..aOB(8, _omitFieldNames ? '' : 'shrinkWrap')
    ..a<$core.double>(10, _omitFieldNames ? '' : 'itemExtent', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(11, _omitFieldNames ? '' : 'prototypeItem', subBuilder: WidgetExpression.create)
    ..aOB(12, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(13, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(14, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..a<$core.double>(15, _omitFieldNames ? '' : 'cacheExtent', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(16, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.int>(17, _omitFieldNames ? '' : 'semanticChildCount', $pb.PbFieldType.O3)
    ..aOS(20, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterListView clone() => FlutterListView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterListView copyWith(void Function(FlutterListView) updates) => super.copyWith((message) => updates(message as FlutterListView)) as FlutterListView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterListView create() => FlutterListView._();
  FlutterListView createEmptyInstance() => create();
  static $pb.PbList<FlutterListView> createRepeated() => $pb.PbList<FlutterListView>();
  @$core.pragma('dart2js:noInline')
  static FlutterListView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterListView>(create);
  static FlutterListView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get primary => $_getBF(2);
  @$pb.TagNumber(6)
  set primary($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPrimary() => $_has(2);
  @$pb.TagNumber(6)
  void clearPrimary() => clearField(6);

  @$pb.TagNumber(8)
  $core.bool get shrinkWrap => $_getBF(3);
  @$pb.TagNumber(8)
  set shrinkWrap($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasShrinkWrap() => $_has(3);
  @$pb.TagNumber(8)
  void clearShrinkWrap() => clearField(8);

  @$pb.TagNumber(10)
  $core.double get itemExtent => $_getN(4);
  @$pb.TagNumber(10)
  set itemExtent($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(10)
  $core.bool hasItemExtent() => $_has(4);
  @$pb.TagNumber(10)
  void clearItemExtent() => clearField(10);

  @$pb.TagNumber(11)
  WidgetExpression get prototypeItem => $_getN(5);
  @$pb.TagNumber(11)
  set prototypeItem(WidgetExpression v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasPrototypeItem() => $_has(5);
  @$pb.TagNumber(11)
  void clearPrototypeItem() => clearField(11);
  @$pb.TagNumber(11)
  WidgetExpression ensurePrototypeItem() => $_ensure(5);

  @$pb.TagNumber(12)
  $core.bool get addAutomaticKeepAlives => $_getBF(6);
  @$pb.TagNumber(12)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(12)
  $core.bool hasAddAutomaticKeepAlives() => $_has(6);
  @$pb.TagNumber(12)
  void clearAddAutomaticKeepAlives() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get addRepaintBoundaries => $_getBF(7);
  @$pb.TagNumber(13)
  set addRepaintBoundaries($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(13)
  $core.bool hasAddRepaintBoundaries() => $_has(7);
  @$pb.TagNumber(13)
  void clearAddRepaintBoundaries() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get addSemanticIndexes => $_getBF(8);
  @$pb.TagNumber(14)
  set addSemanticIndexes($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(14)
  $core.bool hasAddSemanticIndexes() => $_has(8);
  @$pb.TagNumber(14)
  void clearAddSemanticIndexes() => clearField(14);

  @$pb.TagNumber(15)
  $core.double get cacheExtent => $_getN(9);
  @$pb.TagNumber(15)
  set cacheExtent($core.double v) { $_setDouble(9, v); }
  @$pb.TagNumber(15)
  $core.bool hasCacheExtent() => $_has(9);
  @$pb.TagNumber(15)
  void clearCacheExtent() => clearField(15);

  @$pb.TagNumber(16)
  $core.List<WidgetExpression> get children => $_getList(10);

  @$pb.TagNumber(17)
  $core.int get semanticChildCount => $_getIZ(11);
  @$pb.TagNumber(17)
  set semanticChildCount($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(17)
  $core.bool hasSemanticChildCount() => $_has(11);
  @$pb.TagNumber(17)
  void clearSemanticChildCount() => clearField(17);

  @$pb.TagNumber(20)
  $core.String get restorationId => $_getSZ(12);
  @$pb.TagNumber(20)
  set restorationId($core.String v) { $_setString(12, v); }
  @$pb.TagNumber(20)
  $core.bool hasRestorationId() => $_has(12);
  @$pb.TagNumber(20)
  void clearRestorationId() => clearField(20);
}

/// package:flutter/src/widgets/scrollbar.dart
class FlutterRawScrollbar extends $pb.GeneratedMessage {
  factory FlutterRawScrollbar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? thumbVisibility,
    $core.double? thickness,
    $1.DartColorExpression? thumbColor,
    $core.double? minThumbLength,
    $core.double? minOverscrollLength,
    $core.bool? trackVisibility,
    $1.DartColorExpression? trackColor,
    $1.DartColorExpression? trackBorderColor,
    $1.DartDurationExpression? fadeDuration,
    $1.DartDurationExpression? timeToFade,
    $1.DartDurationExpression? pressDuration,
    $core.bool? interactive,
    $core.double? mainAxisMargin,
    $core.double? crossAxisMargin,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (thumbVisibility != null) {
      $result.thumbVisibility = thumbVisibility;
    }
    if (thickness != null) {
      $result.thickness = thickness;
    }
    if (thumbColor != null) {
      $result.thumbColor = thumbColor;
    }
    if (minThumbLength != null) {
      $result.minThumbLength = minThumbLength;
    }
    if (minOverscrollLength != null) {
      $result.minOverscrollLength = minOverscrollLength;
    }
    if (trackVisibility != null) {
      $result.trackVisibility = trackVisibility;
    }
    if (trackColor != null) {
      $result.trackColor = trackColor;
    }
    if (trackBorderColor != null) {
      $result.trackBorderColor = trackBorderColor;
    }
    if (fadeDuration != null) {
      $result.fadeDuration = fadeDuration;
    }
    if (timeToFade != null) {
      $result.timeToFade = timeToFade;
    }
    if (pressDuration != null) {
      $result.pressDuration = pressDuration;
    }
    if (interactive != null) {
      $result.interactive = interactive;
    }
    if (mainAxisMargin != null) {
      $result.mainAxisMargin = mainAxisMargin;
    }
    if (crossAxisMargin != null) {
      $result.crossAxisMargin = crossAxisMargin;
    }
    return $result;
  }
  FlutterRawScrollbar._() : super();
  factory FlutterRawScrollbar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterRawScrollbar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterRawScrollbar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'thumbVisibility')
    ..a<$core.double>(8, _omitFieldNames ? '' : 'thickness', $pb.PbFieldType.OD)
    ..aOM<$1.DartColorExpression>(9, _omitFieldNames ? '' : 'thumbColor', subBuilder: $1.DartColorExpression.create)
    ..a<$core.double>(10, _omitFieldNames ? '' : 'minThumbLength', $pb.PbFieldType.OD)
    ..a<$core.double>(11, _omitFieldNames ? '' : 'minOverscrollLength', $pb.PbFieldType.OD)
    ..aOB(12, _omitFieldNames ? '' : 'trackVisibility')
    ..aOM<$1.DartColorExpression>(14, _omitFieldNames ? '' : 'trackColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartColorExpression>(15, _omitFieldNames ? '' : 'trackBorderColor', subBuilder: $1.DartColorExpression.create)
    ..aOM<$1.DartDurationExpression>(16, _omitFieldNames ? '' : 'fadeDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(17, _omitFieldNames ? '' : 'timeToFade', subBuilder: $1.DartDurationExpression.create)
    ..aOM<$1.DartDurationExpression>(18, _omitFieldNames ? '' : 'pressDuration', subBuilder: $1.DartDurationExpression.create)
    ..aOB(20, _omitFieldNames ? '' : 'interactive')
    ..a<$core.double>(22, _omitFieldNames ? '' : 'mainAxisMargin', $pb.PbFieldType.OD)
    ..a<$core.double>(23, _omitFieldNames ? '' : 'crossAxisMargin', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterRawScrollbar clone() => FlutterRawScrollbar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterRawScrollbar copyWith(void Function(FlutterRawScrollbar) updates) => super.copyWith((message) => updates(message as FlutterRawScrollbar)) as FlutterRawScrollbar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterRawScrollbar create() => FlutterRawScrollbar._();
  FlutterRawScrollbar createEmptyInstance() => create();
  static $pb.PbList<FlutterRawScrollbar> createRepeated() => $pb.PbList<FlutterRawScrollbar>();
  @$core.pragma('dart2js:noInline')
  static FlutterRawScrollbar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterRawScrollbar>(create);
  static FlutterRawScrollbar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(5)
  $core.bool get thumbVisibility => $_getBF(2);
  @$pb.TagNumber(5)
  set thumbVisibility($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(5)
  $core.bool hasThumbVisibility() => $_has(2);
  @$pb.TagNumber(5)
  void clearThumbVisibility() => clearField(5);

  @$pb.TagNumber(8)
  $core.double get thickness => $_getN(3);
  @$pb.TagNumber(8)
  set thickness($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(8)
  $core.bool hasThickness() => $_has(3);
  @$pb.TagNumber(8)
  void clearThickness() => clearField(8);

  @$pb.TagNumber(9)
  $1.DartColorExpression get thumbColor => $_getN(4);
  @$pb.TagNumber(9)
  set thumbColor($1.DartColorExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasThumbColor() => $_has(4);
  @$pb.TagNumber(9)
  void clearThumbColor() => clearField(9);
  @$pb.TagNumber(9)
  $1.DartColorExpression ensureThumbColor() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.double get minThumbLength => $_getN(5);
  @$pb.TagNumber(10)
  set minThumbLength($core.double v) { $_setDouble(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasMinThumbLength() => $_has(5);
  @$pb.TagNumber(10)
  void clearMinThumbLength() => clearField(10);

  @$pb.TagNumber(11)
  $core.double get minOverscrollLength => $_getN(6);
  @$pb.TagNumber(11)
  set minOverscrollLength($core.double v) { $_setDouble(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasMinOverscrollLength() => $_has(6);
  @$pb.TagNumber(11)
  void clearMinOverscrollLength() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get trackVisibility => $_getBF(7);
  @$pb.TagNumber(12)
  set trackVisibility($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(12)
  $core.bool hasTrackVisibility() => $_has(7);
  @$pb.TagNumber(12)
  void clearTrackVisibility() => clearField(12);

  @$pb.TagNumber(14)
  $1.DartColorExpression get trackColor => $_getN(8);
  @$pb.TagNumber(14)
  set trackColor($1.DartColorExpression v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasTrackColor() => $_has(8);
  @$pb.TagNumber(14)
  void clearTrackColor() => clearField(14);
  @$pb.TagNumber(14)
  $1.DartColorExpression ensureTrackColor() => $_ensure(8);

  @$pb.TagNumber(15)
  $1.DartColorExpression get trackBorderColor => $_getN(9);
  @$pb.TagNumber(15)
  set trackBorderColor($1.DartColorExpression v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasTrackBorderColor() => $_has(9);
  @$pb.TagNumber(15)
  void clearTrackBorderColor() => clearField(15);
  @$pb.TagNumber(15)
  $1.DartColorExpression ensureTrackBorderColor() => $_ensure(9);

  @$pb.TagNumber(16)
  $1.DartDurationExpression get fadeDuration => $_getN(10);
  @$pb.TagNumber(16)
  set fadeDuration($1.DartDurationExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasFadeDuration() => $_has(10);
  @$pb.TagNumber(16)
  void clearFadeDuration() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartDurationExpression ensureFadeDuration() => $_ensure(10);

  @$pb.TagNumber(17)
  $1.DartDurationExpression get timeToFade => $_getN(11);
  @$pb.TagNumber(17)
  set timeToFade($1.DartDurationExpression v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasTimeToFade() => $_has(11);
  @$pb.TagNumber(17)
  void clearTimeToFade() => clearField(17);
  @$pb.TagNumber(17)
  $1.DartDurationExpression ensureTimeToFade() => $_ensure(11);

  @$pb.TagNumber(18)
  $1.DartDurationExpression get pressDuration => $_getN(12);
  @$pb.TagNumber(18)
  set pressDuration($1.DartDurationExpression v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasPressDuration() => $_has(12);
  @$pb.TagNumber(18)
  void clearPressDuration() => clearField(18);
  @$pb.TagNumber(18)
  $1.DartDurationExpression ensurePressDuration() => $_ensure(12);

  @$pb.TagNumber(20)
  $core.bool get interactive => $_getBF(13);
  @$pb.TagNumber(20)
  set interactive($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(20)
  $core.bool hasInteractive() => $_has(13);
  @$pb.TagNumber(20)
  void clearInteractive() => clearField(20);

  @$pb.TagNumber(22)
  $core.double get mainAxisMargin => $_getN(14);
  @$pb.TagNumber(22)
  set mainAxisMargin($core.double v) { $_setDouble(14, v); }
  @$pb.TagNumber(22)
  $core.bool hasMainAxisMargin() => $_has(14);
  @$pb.TagNumber(22)
  void clearMainAxisMargin() => clearField(22);

  @$pb.TagNumber(23)
  $core.double get crossAxisMargin => $_getN(15);
  @$pb.TagNumber(23)
  set crossAxisMargin($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(23)
  $core.bool hasCrossAxisMargin() => $_has(15);
  @$pb.TagNumber(23)
  void clearCrossAxisMargin() => clearField(23);
}

/// package:flutter/src/widgets/selection_container.dart
class FlutterSelectionContainerNamedDisabled extends $pb.GeneratedMessage {
  factory FlutterSelectionContainerNamedDisabled({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSelectionContainerNamedDisabled._() : super();
  factory FlutterSelectionContainerNamedDisabled.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSelectionContainerNamedDisabled.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSelectionContainerNamedDisabled', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSelectionContainerNamedDisabled clone() => FlutterSelectionContainerNamedDisabled()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSelectionContainerNamedDisabled copyWith(void Function(FlutterSelectionContainerNamedDisabled) updates) => super.copyWith((message) => updates(message as FlutterSelectionContainerNamedDisabled)) as FlutterSelectionContainerNamedDisabled;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSelectionContainerNamedDisabled create() => FlutterSelectionContainerNamedDisabled._();
  FlutterSelectionContainerNamedDisabled createEmptyInstance() => create();
  static $pb.PbList<FlutterSelectionContainerNamedDisabled> createRepeated() => $pb.PbList<FlutterSelectionContainerNamedDisabled>();
  @$core.pragma('dart2js:noInline')
  static FlutterSelectionContainerNamedDisabled getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSelectionContainerNamedDisabled>(create);
  static FlutterSelectionContainerNamedDisabled? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/semantics_debugger.dart
class FlutterSemanticsDebugger extends $pb.GeneratedMessage {
  factory FlutterSemanticsDebugger({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSemanticsDebugger._() : super();
  factory FlutterSemanticsDebugger.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSemanticsDebugger.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSemanticsDebugger', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSemanticsDebugger clone() => FlutterSemanticsDebugger()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSemanticsDebugger copyWith(void Function(FlutterSemanticsDebugger) updates) => super.copyWith((message) => updates(message as FlutterSemanticsDebugger)) as FlutterSemanticsDebugger;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSemanticsDebugger create() => FlutterSemanticsDebugger._();
  FlutterSemanticsDebugger createEmptyInstance() => create();
  static $pb.PbList<FlutterSemanticsDebugger> createRepeated() => $pb.PbList<FlutterSemanticsDebugger>();
  @$core.pragma('dart2js:noInline')
  static FlutterSemanticsDebugger getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSemanticsDebugger>(create);
  static FlutterSemanticsDebugger? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/shared_app_data.dart
class FlutterSharedAppData extends $pb.GeneratedMessage {
  factory FlutterSharedAppData({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSharedAppData._() : super();
  factory FlutterSharedAppData.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSharedAppData.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSharedAppData', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSharedAppData clone() => FlutterSharedAppData()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSharedAppData copyWith(void Function(FlutterSharedAppData) updates) => super.copyWith((message) => updates(message as FlutterSharedAppData)) as FlutterSharedAppData;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSharedAppData create() => FlutterSharedAppData._();
  FlutterSharedAppData createEmptyInstance() => create();
  static $pb.PbList<FlutterSharedAppData> createRepeated() => $pb.PbList<FlutterSharedAppData>();
  @$core.pragma('dart2js:noInline')
  static FlutterSharedAppData getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSharedAppData>(create);
  static FlutterSharedAppData? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/shortcuts.dart
class FlutterShortcutRegistrar extends $pb.GeneratedMessage {
  factory FlutterShortcutRegistrar({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterShortcutRegistrar._() : super();
  factory FlutterShortcutRegistrar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterShortcutRegistrar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterShortcutRegistrar', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterShortcutRegistrar clone() => FlutterShortcutRegistrar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterShortcutRegistrar copyWith(void Function(FlutterShortcutRegistrar) updates) => super.copyWith((message) => updates(message as FlutterShortcutRegistrar)) as FlutterShortcutRegistrar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterShortcutRegistrar create() => FlutterShortcutRegistrar._();
  FlutterShortcutRegistrar createEmptyInstance() => create();
  static $pb.PbList<FlutterShortcutRegistrar> createRepeated() => $pb.PbList<FlutterShortcutRegistrar>();
  @$core.pragma('dart2js:noInline')
  static FlutterShortcutRegistrar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterShortcutRegistrar>(create);
  static FlutterShortcutRegistrar? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/single_child_scroll_view.dart
class FlutterSingleChildScrollView extends $pb.GeneratedMessage {
  factory FlutterSingleChildScrollView({
    $1.FlutterKeyExpression? key,
    $core.bool? reverse,
    $core.bool? primary,
    WidgetExpression? child,
    $core.String? restorationId,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (reverse != null) {
      $result.reverse = reverse;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (child != null) {
      $result.child = child;
    }
    if (restorationId != null) {
      $result.restorationId = restorationId;
    }
    return $result;
  }
  FlutterSingleChildScrollView._() : super();
  factory FlutterSingleChildScrollView.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSingleChildScrollView.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSingleChildScrollView', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'reverse')
    ..aOB(6, _omitFieldNames ? '' : 'primary')
    ..aOM<WidgetExpression>(9, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOS(12, _omitFieldNames ? '' : 'restorationId')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSingleChildScrollView clone() => FlutterSingleChildScrollView()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSingleChildScrollView copyWith(void Function(FlutterSingleChildScrollView) updates) => super.copyWith((message) => updates(message as FlutterSingleChildScrollView)) as FlutterSingleChildScrollView;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSingleChildScrollView create() => FlutterSingleChildScrollView._();
  FlutterSingleChildScrollView createEmptyInstance() => create();
  static $pb.PbList<FlutterSingleChildScrollView> createRepeated() => $pb.PbList<FlutterSingleChildScrollView>();
  @$core.pragma('dart2js:noInline')
  static FlutterSingleChildScrollView getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSingleChildScrollView>(create);
  static FlutterSingleChildScrollView? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  $core.bool get reverse => $_getBF(1);
  @$pb.TagNumber(4)
  set reverse($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(4)
  $core.bool hasReverse() => $_has(1);
  @$pb.TagNumber(4)
  void clearReverse() => clearField(4);

  @$pb.TagNumber(6)
  $core.bool get primary => $_getBF(2);
  @$pb.TagNumber(6)
  set primary($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(6)
  $core.bool hasPrimary() => $_has(2);
  @$pb.TagNumber(6)
  void clearPrimary() => clearField(6);

  @$pb.TagNumber(9)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(9)
  set child(WidgetExpression v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(9)
  void clearChild() => clearField(9);
  @$pb.TagNumber(9)
  WidgetExpression ensureChild() => $_ensure(3);

  @$pb.TagNumber(12)
  $core.String get restorationId => $_getSZ(4);
  @$pb.TagNumber(12)
  set restorationId($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(12)
  $core.bool hasRestorationId() => $_has(4);
  @$pb.TagNumber(12)
  void clearRestorationId() => clearField(12);
}

/// package:flutter/src/widgets/size_changed_layout_notifier.dart
class FlutterSizeChangedLayoutNotifier extends $pb.GeneratedMessage {
  factory FlutterSizeChangedLayoutNotifier({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterSizeChangedLayoutNotifier._() : super();
  factory FlutterSizeChangedLayoutNotifier.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSizeChangedLayoutNotifier.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSizeChangedLayoutNotifier', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSizeChangedLayoutNotifier clone() => FlutterSizeChangedLayoutNotifier()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSizeChangedLayoutNotifier copyWith(void Function(FlutterSizeChangedLayoutNotifier) updates) => super.copyWith((message) => updates(message as FlutterSizeChangedLayoutNotifier)) as FlutterSizeChangedLayoutNotifier;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSizeChangedLayoutNotifier create() => FlutterSizeChangedLayoutNotifier._();
  FlutterSizeChangedLayoutNotifier createEmptyInstance() => create();
  static $pb.PbList<FlutterSizeChangedLayoutNotifier> createRepeated() => $pb.PbList<FlutterSizeChangedLayoutNotifier>();
  @$core.pragma('dart2js:noInline')
  static FlutterSizeChangedLayoutNotifier getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSizeChangedLayoutNotifier>(create);
  static FlutterSizeChangedLayoutNotifier? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterKeepAlive extends $pb.GeneratedMessage {
  factory FlutterKeepAlive({
    $1.FlutterKeyExpression? key,
    $core.bool? keepAlive,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (keepAlive != null) {
      $result.keepAlive = keepAlive;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterKeepAlive._() : super();
  factory FlutterKeepAlive.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterKeepAlive.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterKeepAlive', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'keepAlive')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterKeepAlive clone() => FlutterKeepAlive()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterKeepAlive copyWith(void Function(FlutterKeepAlive) updates) => super.copyWith((message) => updates(message as FlutterKeepAlive)) as FlutterKeepAlive;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterKeepAlive create() => FlutterKeepAlive._();
  FlutterKeepAlive createEmptyInstance() => create();
  static $pb.PbList<FlutterKeepAlive> createRepeated() => $pb.PbList<FlutterKeepAlive>();
  @$core.pragma('dart2js:noInline')
  static FlutterKeepAlive getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterKeepAlive>(create);
  static FlutterKeepAlive? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get keepAlive => $_getBF(1);
  @$pb.TagNumber(3)
  set keepAlive($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasKeepAlive() => $_has(1);
  @$pb.TagNumber(3)
  void clearKeepAlive() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverConstrainedCrossAxis extends $pb.GeneratedMessage {
  factory FlutterSliverConstrainedCrossAxis({
    $1.FlutterKeyExpression? key,
    $core.double? maxExtent,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (maxExtent != null) {
      $result.maxExtent = maxExtent;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverConstrainedCrossAxis._() : super();
  factory FlutterSliverConstrainedCrossAxis.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverConstrainedCrossAxis.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverConstrainedCrossAxis', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'maxExtent', $pb.PbFieldType.OD)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverConstrainedCrossAxis clone() => FlutterSliverConstrainedCrossAxis()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverConstrainedCrossAxis copyWith(void Function(FlutterSliverConstrainedCrossAxis) updates) => super.copyWith((message) => updates(message as FlutterSliverConstrainedCrossAxis)) as FlutterSliverConstrainedCrossAxis;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverConstrainedCrossAxis create() => FlutterSliverConstrainedCrossAxis._();
  FlutterSliverConstrainedCrossAxis createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverConstrainedCrossAxis> createRepeated() => $pb.PbList<FlutterSliverConstrainedCrossAxis>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverConstrainedCrossAxis getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverConstrainedCrossAxis>(create);
  static FlutterSliverConstrainedCrossAxis? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get maxExtent => $_getN(1);
  @$pb.TagNumber(3)
  set maxExtent($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasMaxExtent() => $_has(1);
  @$pb.TagNumber(3)
  void clearMaxExtent() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get sliver => $_getN(2);
  @$pb.TagNumber(4)
  set sliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSliver() => $_ensure(2);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverCrossAxisExpanded extends $pb.GeneratedMessage {
  factory FlutterSliverCrossAxisExpanded({
    $1.FlutterKeyExpression? key,
    $core.int? flex,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (flex != null) {
      $result.flex = flex;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverCrossAxisExpanded._() : super();
  factory FlutterSliverCrossAxisExpanded.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverCrossAxisExpanded.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverCrossAxisExpanded', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'flex', $pb.PbFieldType.O3)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverCrossAxisExpanded clone() => FlutterSliverCrossAxisExpanded()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverCrossAxisExpanded copyWith(void Function(FlutterSliverCrossAxisExpanded) updates) => super.copyWith((message) => updates(message as FlutterSliverCrossAxisExpanded)) as FlutterSliverCrossAxisExpanded;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverCrossAxisExpanded create() => FlutterSliverCrossAxisExpanded._();
  FlutterSliverCrossAxisExpanded createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverCrossAxisExpanded> createRepeated() => $pb.PbList<FlutterSliverCrossAxisExpanded>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverCrossAxisExpanded getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverCrossAxisExpanded>(create);
  static FlutterSliverCrossAxisExpanded? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get flex => $_getIZ(1);
  @$pb.TagNumber(3)
  set flex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasFlex() => $_has(1);
  @$pb.TagNumber(3)
  void clearFlex() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get sliver => $_getN(2);
  @$pb.TagNumber(4)
  set sliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSliver() => $_ensure(2);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverCrossAxisGroup extends $pb.GeneratedMessage {
  factory FlutterSliverCrossAxisGroup({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? slivers,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (slivers != null) {
      $result.slivers.addAll(slivers);
    }
    return $result;
  }
  FlutterSliverCrossAxisGroup._() : super();
  factory FlutterSliverCrossAxisGroup.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverCrossAxisGroup.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverCrossAxisGroup', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'slivers', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverCrossAxisGroup clone() => FlutterSliverCrossAxisGroup()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverCrossAxisGroup copyWith(void Function(FlutterSliverCrossAxisGroup) updates) => super.copyWith((message) => updates(message as FlutterSliverCrossAxisGroup)) as FlutterSliverCrossAxisGroup;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverCrossAxisGroup create() => FlutterSliverCrossAxisGroup._();
  FlutterSliverCrossAxisGroup createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverCrossAxisGroup> createRepeated() => $pb.PbList<FlutterSliverCrossAxisGroup>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverCrossAxisGroup getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverCrossAxisGroup>(create);
  static FlutterSliverCrossAxisGroup? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get slivers => $_getList(1);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverFixedExtentListNamedList extends $pb.GeneratedMessage {
  factory FlutterSliverFixedExtentListNamedList({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    $core.double? itemExtent,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (itemExtent != null) {
      $result.itemExtent = itemExtent;
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    return $result;
  }
  FlutterSliverFixedExtentListNamedList._() : super();
  factory FlutterSliverFixedExtentListNamedList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverFixedExtentListNamedList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverFixedExtentListNamedList', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'itemExtent', $pb.PbFieldType.OD)
    ..aOB(5, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(6, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(7, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverFixedExtentListNamedList clone() => FlutterSliverFixedExtentListNamedList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverFixedExtentListNamedList copyWith(void Function(FlutterSliverFixedExtentListNamedList) updates) => super.copyWith((message) => updates(message as FlutterSliverFixedExtentListNamedList)) as FlutterSliverFixedExtentListNamedList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverFixedExtentListNamedList create() => FlutterSliverFixedExtentListNamedList._();
  FlutterSliverFixedExtentListNamedList createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverFixedExtentListNamedList> createRepeated() => $pb.PbList<FlutterSliverFixedExtentListNamedList>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverFixedExtentListNamedList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverFixedExtentListNamedList>(create);
  static FlutterSliverFixedExtentListNamedList? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  $core.double get itemExtent => $_getN(2);
  @$pb.TagNumber(4)
  set itemExtent($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasItemExtent() => $_has(2);
  @$pb.TagNumber(4)
  void clearItemExtent() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get addAutomaticKeepAlives => $_getBF(3);
  @$pb.TagNumber(5)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasAddAutomaticKeepAlives() => $_has(3);
  @$pb.TagNumber(5)
  void clearAddAutomaticKeepAlives() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get addRepaintBoundaries => $_getBF(4);
  @$pb.TagNumber(6)
  set addRepaintBoundaries($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasAddRepaintBoundaries() => $_has(4);
  @$pb.TagNumber(6)
  void clearAddRepaintBoundaries() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get addSemanticIndexes => $_getBF(5);
  @$pb.TagNumber(7)
  set addSemanticIndexes($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasAddSemanticIndexes() => $_has(5);
  @$pb.TagNumber(7)
  void clearAddSemanticIndexes() => clearField(7);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverGridNamedCount extends $pb.GeneratedMessage {
  factory FlutterSliverGridNamedCount({
    $1.FlutterKeyExpression? key,
    $core.int? crossAxisCount,
    $core.double? mainAxisSpacing,
    $core.double? crossAxisSpacing,
    $core.double? childAspectRatio,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (crossAxisCount != null) {
      $result.crossAxisCount = crossAxisCount;
    }
    if (mainAxisSpacing != null) {
      $result.mainAxisSpacing = mainAxisSpacing;
    }
    if (crossAxisSpacing != null) {
      $result.crossAxisSpacing = crossAxisSpacing;
    }
    if (childAspectRatio != null) {
      $result.childAspectRatio = childAspectRatio;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterSliverGridNamedCount._() : super();
  factory FlutterSliverGridNamedCount.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverGridNamedCount.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverGridNamedCount', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'crossAxisCount', $pb.PbFieldType.O3)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'mainAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'crossAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'childAspectRatio', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverGridNamedCount clone() => FlutterSliverGridNamedCount()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverGridNamedCount copyWith(void Function(FlutterSliverGridNamedCount) updates) => super.copyWith((message) => updates(message as FlutterSliverGridNamedCount)) as FlutterSliverGridNamedCount;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverGridNamedCount create() => FlutterSliverGridNamedCount._();
  FlutterSliverGridNamedCount createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverGridNamedCount> createRepeated() => $pb.PbList<FlutterSliverGridNamedCount>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverGridNamedCount getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverGridNamedCount>(create);
  static FlutterSliverGridNamedCount? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get crossAxisCount => $_getIZ(1);
  @$pb.TagNumber(3)
  set crossAxisCount($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasCrossAxisCount() => $_has(1);
  @$pb.TagNumber(3)
  void clearCrossAxisCount() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get mainAxisSpacing => $_getN(2);
  @$pb.TagNumber(4)
  set mainAxisSpacing($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasMainAxisSpacing() => $_has(2);
  @$pb.TagNumber(4)
  void clearMainAxisSpacing() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get crossAxisSpacing => $_getN(3);
  @$pb.TagNumber(5)
  set crossAxisSpacing($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCrossAxisSpacing() => $_has(3);
  @$pb.TagNumber(5)
  void clearCrossAxisSpacing() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get childAspectRatio => $_getN(4);
  @$pb.TagNumber(6)
  set childAspectRatio($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasChildAspectRatio() => $_has(4);
  @$pb.TagNumber(6)
  void clearChildAspectRatio() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get children => $_getList(5);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverGridNamedExtent extends $pb.GeneratedMessage {
  factory FlutterSliverGridNamedExtent({
    $1.FlutterKeyExpression? key,
    $core.double? maxCrossAxisExtent,
    $core.double? mainAxisSpacing,
    $core.double? crossAxisSpacing,
    $core.double? childAspectRatio,
    $core.Iterable<WidgetExpression>? children,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (maxCrossAxisExtent != null) {
      $result.maxCrossAxisExtent = maxCrossAxisExtent;
    }
    if (mainAxisSpacing != null) {
      $result.mainAxisSpacing = mainAxisSpacing;
    }
    if (crossAxisSpacing != null) {
      $result.crossAxisSpacing = crossAxisSpacing;
    }
    if (childAspectRatio != null) {
      $result.childAspectRatio = childAspectRatio;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    return $result;
  }
  FlutterSliverGridNamedExtent._() : super();
  factory FlutterSliverGridNamedExtent.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverGridNamedExtent.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverGridNamedExtent', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'maxCrossAxisExtent', $pb.PbFieldType.OD)
    ..a<$core.double>(4, _omitFieldNames ? '' : 'mainAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(5, _omitFieldNames ? '' : 'crossAxisSpacing', $pb.PbFieldType.OD)
    ..a<$core.double>(6, _omitFieldNames ? '' : 'childAspectRatio', $pb.PbFieldType.OD)
    ..pc<WidgetExpression>(7, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverGridNamedExtent clone() => FlutterSliverGridNamedExtent()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverGridNamedExtent copyWith(void Function(FlutterSliverGridNamedExtent) updates) => super.copyWith((message) => updates(message as FlutterSliverGridNamedExtent)) as FlutterSliverGridNamedExtent;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverGridNamedExtent create() => FlutterSliverGridNamedExtent._();
  FlutterSliverGridNamedExtent createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverGridNamedExtent> createRepeated() => $pb.PbList<FlutterSliverGridNamedExtent>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverGridNamedExtent getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverGridNamedExtent>(create);
  static FlutterSliverGridNamedExtent? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get maxCrossAxisExtent => $_getN(1);
  @$pb.TagNumber(3)
  set maxCrossAxisExtent($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasMaxCrossAxisExtent() => $_has(1);
  @$pb.TagNumber(3)
  void clearMaxCrossAxisExtent() => clearField(3);

  @$pb.TagNumber(4)
  $core.double get mainAxisSpacing => $_getN(2);
  @$pb.TagNumber(4)
  set mainAxisSpacing($core.double v) { $_setDouble(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasMainAxisSpacing() => $_has(2);
  @$pb.TagNumber(4)
  void clearMainAxisSpacing() => clearField(4);

  @$pb.TagNumber(5)
  $core.double get crossAxisSpacing => $_getN(3);
  @$pb.TagNumber(5)
  set crossAxisSpacing($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasCrossAxisSpacing() => $_has(3);
  @$pb.TagNumber(5)
  void clearCrossAxisSpacing() => clearField(5);

  @$pb.TagNumber(6)
  $core.double get childAspectRatio => $_getN(4);
  @$pb.TagNumber(6)
  set childAspectRatio($core.double v) { $_setDouble(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasChildAspectRatio() => $_has(4);
  @$pb.TagNumber(6)
  void clearChildAspectRatio() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<WidgetExpression> get children => $_getList(5);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverIgnorePointer extends $pb.GeneratedMessage {
  factory FlutterSliverIgnorePointer({
    $1.FlutterKeyExpression? key,
    $core.bool? ignoring,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (ignoring != null) {
      $result.ignoring = ignoring;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverIgnorePointer._() : super();
  factory FlutterSliverIgnorePointer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverIgnorePointer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverIgnorePointer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'ignoring')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverIgnorePointer clone() => FlutterSliverIgnorePointer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverIgnorePointer copyWith(void Function(FlutterSliverIgnorePointer) updates) => super.copyWith((message) => updates(message as FlutterSliverIgnorePointer)) as FlutterSliverIgnorePointer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverIgnorePointer create() => FlutterSliverIgnorePointer._();
  FlutterSliverIgnorePointer createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverIgnorePointer> createRepeated() => $pb.PbList<FlutterSliverIgnorePointer>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverIgnorePointer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverIgnorePointer>(create);
  static FlutterSliverIgnorePointer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get ignoring => $_getBF(1);
  @$pb.TagNumber(3)
  set ignoring($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasIgnoring() => $_has(1);
  @$pb.TagNumber(3)
  void clearIgnoring() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get sliver => $_getN(2);
  @$pb.TagNumber(4)
  set sliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSliver() => $_ensure(2);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverListNamedList extends $pb.GeneratedMessage {
  factory FlutterSliverListNamedList({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    return $result;
  }
  FlutterSliverListNamedList._() : super();
  factory FlutterSliverListNamedList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverListNamedList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverListNamedList', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(5, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(6, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverListNamedList clone() => FlutterSliverListNamedList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverListNamedList copyWith(void Function(FlutterSliverListNamedList) updates) => super.copyWith((message) => updates(message as FlutterSliverListNamedList)) as FlutterSliverListNamedList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverListNamedList create() => FlutterSliverListNamedList._();
  FlutterSliverListNamedList createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverListNamedList> createRepeated() => $pb.PbList<FlutterSliverListNamedList>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverListNamedList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverListNamedList>(create);
  static FlutterSliverListNamedList? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  $core.bool get addAutomaticKeepAlives => $_getBF(2);
  @$pb.TagNumber(4)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAddAutomaticKeepAlives() => $_has(2);
  @$pb.TagNumber(4)
  void clearAddAutomaticKeepAlives() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get addRepaintBoundaries => $_getBF(3);
  @$pb.TagNumber(5)
  set addRepaintBoundaries($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasAddRepaintBoundaries() => $_has(3);
  @$pb.TagNumber(5)
  void clearAddRepaintBoundaries() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get addSemanticIndexes => $_getBF(4);
  @$pb.TagNumber(6)
  set addSemanticIndexes($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasAddSemanticIndexes() => $_has(4);
  @$pb.TagNumber(6)
  void clearAddSemanticIndexes() => clearField(6);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverMainAxisGroup extends $pb.GeneratedMessage {
  factory FlutterSliverMainAxisGroup({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? slivers,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (slivers != null) {
      $result.slivers.addAll(slivers);
    }
    return $result;
  }
  FlutterSliverMainAxisGroup._() : super();
  factory FlutterSliverMainAxisGroup.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverMainAxisGroup.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverMainAxisGroup', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'slivers', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverMainAxisGroup clone() => FlutterSliverMainAxisGroup()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverMainAxisGroup copyWith(void Function(FlutterSliverMainAxisGroup) updates) => super.copyWith((message) => updates(message as FlutterSliverMainAxisGroup)) as FlutterSliverMainAxisGroup;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverMainAxisGroup create() => FlutterSliverMainAxisGroup._();
  FlutterSliverMainAxisGroup createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverMainAxisGroup> createRepeated() => $pb.PbList<FlutterSliverMainAxisGroup>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverMainAxisGroup getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverMainAxisGroup>(create);
  static FlutterSliverMainAxisGroup? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get slivers => $_getList(1);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverOffstage extends $pb.GeneratedMessage {
  factory FlutterSliverOffstage({
    $1.FlutterKeyExpression? key,
    $core.bool? offstage,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (offstage != null) {
      $result.offstage = offstage;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverOffstage._() : super();
  factory FlutterSliverOffstage.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverOffstage.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverOffstage', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'offstage')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverOffstage clone() => FlutterSliverOffstage()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverOffstage copyWith(void Function(FlutterSliverOffstage) updates) => super.copyWith((message) => updates(message as FlutterSliverOffstage)) as FlutterSliverOffstage;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverOffstage create() => FlutterSliverOffstage._();
  FlutterSliverOffstage createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverOffstage> createRepeated() => $pb.PbList<FlutterSliverOffstage>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverOffstage getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverOffstage>(create);
  static FlutterSliverOffstage? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get offstage => $_getBF(1);
  @$pb.TagNumber(3)
  set offstage($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasOffstage() => $_has(1);
  @$pb.TagNumber(3)
  void clearOffstage() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get sliver => $_getN(2);
  @$pb.TagNumber(4)
  set sliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureSliver() => $_ensure(2);
}

/// package:flutter/src/widgets/sliver.dart
class FlutterSliverOpacity extends $pb.GeneratedMessage {
  factory FlutterSliverOpacity({
    $1.FlutterKeyExpression? key,
    $core.double? opacity,
    $core.bool? alwaysIncludeSemantics,
    WidgetExpression? sliver,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (opacity != null) {
      $result.opacity = opacity;
    }
    if (alwaysIncludeSemantics != null) {
      $result.alwaysIncludeSemantics = alwaysIncludeSemantics;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    return $result;
  }
  FlutterSliverOpacity._() : super();
  factory FlutterSliverOpacity.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverOpacity.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverOpacity', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.double>(3, _omitFieldNames ? '' : 'opacity', $pb.PbFieldType.OD)
    ..aOB(4, _omitFieldNames ? '' : 'alwaysIncludeSemantics')
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverOpacity clone() => FlutterSliverOpacity()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverOpacity copyWith(void Function(FlutterSliverOpacity) updates) => super.copyWith((message) => updates(message as FlutterSliverOpacity)) as FlutterSliverOpacity;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverOpacity create() => FlutterSliverOpacity._();
  FlutterSliverOpacity createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverOpacity> createRepeated() => $pb.PbList<FlutterSliverOpacity>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverOpacity getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverOpacity>(create);
  static FlutterSliverOpacity? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.double get opacity => $_getN(1);
  @$pb.TagNumber(3)
  set opacity($core.double v) { $_setDouble(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasOpacity() => $_has(1);
  @$pb.TagNumber(3)
  void clearOpacity() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get alwaysIncludeSemantics => $_getBF(2);
  @$pb.TagNumber(4)
  set alwaysIncludeSemantics($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasAlwaysIncludeSemantics() => $_has(2);
  @$pb.TagNumber(4)
  void clearAlwaysIncludeSemantics() => clearField(4);

  @$pb.TagNumber(5)
  WidgetExpression get sliver => $_getN(3);
  @$pb.TagNumber(5)
  set sliver(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSliver() => $_has(3);
  @$pb.TagNumber(5)
  void clearSliver() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureSliver() => $_ensure(3);
}

/// package:flutter/src/widgets/sliver_fill.dart
class FlutterSliverFillRemaining extends $pb.GeneratedMessage {
  factory FlutterSliverFillRemaining({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? hasScrollBody,
    $core.bool? fillOverscroll,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (hasScrollBody != null) {
      $result.hasScrollBody = hasScrollBody;
    }
    if (fillOverscroll != null) {
      $result.fillOverscroll = fillOverscroll;
    }
    return $result;
  }
  FlutterSliverFillRemaining._() : super();
  factory FlutterSliverFillRemaining.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverFillRemaining.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverFillRemaining', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'hasScrollBody')
    ..aOB(5, _omitFieldNames ? '' : 'fillOverscroll')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverFillRemaining clone() => FlutterSliverFillRemaining()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverFillRemaining copyWith(void Function(FlutterSliverFillRemaining) updates) => super.copyWith((message) => updates(message as FlutterSliverFillRemaining)) as FlutterSliverFillRemaining;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverFillRemaining create() => FlutterSliverFillRemaining._();
  FlutterSliverFillRemaining createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverFillRemaining> createRepeated() => $pb.PbList<FlutterSliverFillRemaining>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverFillRemaining getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverFillRemaining>(create);
  static FlutterSliverFillRemaining? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get hasScrollBody => $_getBF(2);
  @$pb.TagNumber(4)
  set hasScrollBody($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasHasScrollBody() => $_has(2);
  @$pb.TagNumber(4)
  void clearHasScrollBody() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get fillOverscroll => $_getBF(3);
  @$pb.TagNumber(5)
  set fillOverscroll($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasFillOverscroll() => $_has(3);
  @$pb.TagNumber(5)
  void clearFillOverscroll() => clearField(5);
}

/// package:flutter/src/widgets/sliver_prototype_extent_list.dart
class FlutterSliverPrototypeExtentListNamedList extends $pb.GeneratedMessage {
  factory FlutterSliverPrototypeExtentListNamedList({
    $1.FlutterKeyExpression? key,
    $core.Iterable<WidgetExpression>? children,
    WidgetExpression? prototypeItem,
    $core.bool? addAutomaticKeepAlives,
    $core.bool? addRepaintBoundaries,
    $core.bool? addSemanticIndexes,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (children != null) {
      $result.children.addAll(children);
    }
    if (prototypeItem != null) {
      $result.prototypeItem = prototypeItem;
    }
    if (addAutomaticKeepAlives != null) {
      $result.addAutomaticKeepAlives = addAutomaticKeepAlives;
    }
    if (addRepaintBoundaries != null) {
      $result.addRepaintBoundaries = addRepaintBoundaries;
    }
    if (addSemanticIndexes != null) {
      $result.addSemanticIndexes = addSemanticIndexes;
    }
    return $result;
  }
  FlutterSliverPrototypeExtentListNamedList._() : super();
  factory FlutterSliverPrototypeExtentListNamedList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverPrototypeExtentListNamedList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverPrototypeExtentListNamedList', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..pc<WidgetExpression>(3, _omitFieldNames ? '' : 'children', $pb.PbFieldType.PM, subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'prototypeItem', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'addAutomaticKeepAlives')
    ..aOB(6, _omitFieldNames ? '' : 'addRepaintBoundaries')
    ..aOB(7, _omitFieldNames ? '' : 'addSemanticIndexes')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverPrototypeExtentListNamedList clone() => FlutterSliverPrototypeExtentListNamedList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverPrototypeExtentListNamedList copyWith(void Function(FlutterSliverPrototypeExtentListNamedList) updates) => super.copyWith((message) => updates(message as FlutterSliverPrototypeExtentListNamedList)) as FlutterSliverPrototypeExtentListNamedList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverPrototypeExtentListNamedList create() => FlutterSliverPrototypeExtentListNamedList._();
  FlutterSliverPrototypeExtentListNamedList createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverPrototypeExtentListNamedList> createRepeated() => $pb.PbList<FlutterSliverPrototypeExtentListNamedList>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverPrototypeExtentListNamedList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverPrototypeExtentListNamedList>(create);
  static FlutterSliverPrototypeExtentListNamedList? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.List<WidgetExpression> get children => $_getList(1);

  @$pb.TagNumber(4)
  WidgetExpression get prototypeItem => $_getN(2);
  @$pb.TagNumber(4)
  set prototypeItem(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasPrototypeItem() => $_has(2);
  @$pb.TagNumber(4)
  void clearPrototypeItem() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensurePrototypeItem() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get addAutomaticKeepAlives => $_getBF(3);
  @$pb.TagNumber(5)
  set addAutomaticKeepAlives($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasAddAutomaticKeepAlives() => $_has(3);
  @$pb.TagNumber(5)
  void clearAddAutomaticKeepAlives() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get addRepaintBoundaries => $_getBF(4);
  @$pb.TagNumber(6)
  set addRepaintBoundaries($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasAddRepaintBoundaries() => $_has(4);
  @$pb.TagNumber(6)
  void clearAddRepaintBoundaries() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get addSemanticIndexes => $_getBF(5);
  @$pb.TagNumber(7)
  set addSemanticIndexes($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasAddSemanticIndexes() => $_has(5);
  @$pb.TagNumber(7)
  void clearAddSemanticIndexes() => clearField(7);
}

/// package:flutter/src/widgets/spacer.dart
class FlutterSpacer extends $pb.GeneratedMessage {
  factory FlutterSpacer({
    $1.FlutterKeyExpression? key,
    $core.int? flex,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (flex != null) {
      $result.flex = flex;
    }
    return $result;
  }
  FlutterSpacer._() : super();
  factory FlutterSpacer.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSpacer.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSpacer', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'flex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSpacer clone() => FlutterSpacer()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSpacer copyWith(void Function(FlutterSpacer) updates) => super.copyWith((message) => updates(message as FlutterSpacer)) as FlutterSpacer;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSpacer create() => FlutterSpacer._();
  FlutterSpacer createEmptyInstance() => create();
  static $pb.PbList<FlutterSpacer> createRepeated() => $pb.PbList<FlutterSpacer>();
  @$core.pragma('dart2js:noInline')
  static FlutterSpacer getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSpacer>(create);
  static FlutterSpacer? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get flex => $_getIZ(1);
  @$pb.TagNumber(3)
  set flex($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasFlex() => $_has(1);
  @$pb.TagNumber(3)
  void clearFlex() => clearField(3);
}

/// package:flutter/src/widgets/table.dart
class FlutterTable extends $pb.GeneratedMessage {
  factory FlutterTable({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterTable._() : super();
  factory FlutterTable.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTable.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTable', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTable clone() => FlutterTable()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTable copyWith(void Function(FlutterTable) updates) => super.copyWith((message) => updates(message as FlutterTable)) as FlutterTable;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTable create() => FlutterTable._();
  FlutterTable createEmptyInstance() => create();
  static $pb.PbList<FlutterTable> createRepeated() => $pb.PbList<FlutterTable>();
  @$core.pragma('dart2js:noInline')
  static FlutterTable getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTable>(create);
  static FlutterTable? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/widgets/table.dart
class FlutterTableCell extends $pb.GeneratedMessage {
  factory FlutterTableCell({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTableCell._() : super();
  factory FlutterTableCell.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTableCell.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTableCell', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTableCell clone() => FlutterTableCell()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTableCell copyWith(void Function(FlutterTableCell) updates) => super.copyWith((message) => updates(message as FlutterTableCell)) as FlutterTableCell;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTableCell create() => FlutterTableCell._();
  FlutterTableCell createEmptyInstance() => create();
  static $pb.PbList<FlutterTableCell> createRepeated() => $pb.PbList<FlutterTableCell>();
  @$core.pragma('dart2js:noInline')
  static FlutterTableCell getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTableCell>(create);
  static FlutterTableCell? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/tap_region.dart
class FlutterTapRegion extends $pb.GeneratedMessage {
  factory FlutterTapRegion({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? enabled,
    $core.String? debugLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (debugLabel != null) {
      $result.debugLabel = debugLabel;
    }
    return $result;
  }
  FlutterTapRegion._() : super();
  factory FlutterTapRegion.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTapRegion.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTapRegion', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'enabled')
    ..aOS(9, _omitFieldNames ? '' : 'debugLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTapRegion clone() => FlutterTapRegion()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTapRegion copyWith(void Function(FlutterTapRegion) updates) => super.copyWith((message) => updates(message as FlutterTapRegion)) as FlutterTapRegion;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTapRegion create() => FlutterTapRegion._();
  FlutterTapRegion createEmptyInstance() => create();
  static $pb.PbList<FlutterTapRegion> createRepeated() => $pb.PbList<FlutterTapRegion>();
  @$core.pragma('dart2js:noInline')
  static FlutterTapRegion getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTapRegion>(create);
  static FlutterTapRegion? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get enabled => $_getBF(2);
  @$pb.TagNumber(4)
  set enabled($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasEnabled() => $_has(2);
  @$pb.TagNumber(4)
  void clearEnabled() => clearField(4);

  @$pb.TagNumber(9)
  $core.String get debugLabel => $_getSZ(3);
  @$pb.TagNumber(9)
  set debugLabel($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(9)
  $core.bool hasDebugLabel() => $_has(3);
  @$pb.TagNumber(9)
  void clearDebugLabel() => clearField(9);
}

/// package:flutter/src/widgets/tap_region.dart
class FlutterTapRegionSurface extends $pb.GeneratedMessage {
  factory FlutterTapRegionSurface({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTapRegionSurface._() : super();
  factory FlutterTapRegionSurface.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTapRegionSurface.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTapRegionSurface', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTapRegionSurface clone() => FlutterTapRegionSurface()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTapRegionSurface copyWith(void Function(FlutterTapRegionSurface) updates) => super.copyWith((message) => updates(message as FlutterTapRegionSurface)) as FlutterTapRegionSurface;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTapRegionSurface create() => FlutterTapRegionSurface._();
  FlutterTapRegionSurface createEmptyInstance() => create();
  static $pb.PbList<FlutterTapRegionSurface> createRepeated() => $pb.PbList<FlutterTapRegionSurface>();
  @$core.pragma('dart2js:noInline')
  static FlutterTapRegionSurface getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTapRegionSurface>(create);
  static FlutterTapRegionSurface? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/tap_region.dart
class FlutterTextFieldTapRegion extends $pb.GeneratedMessage {
  factory FlutterTextFieldTapRegion({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? enabled,
    $core.String? debugLabel,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (debugLabel != null) {
      $result.debugLabel = debugLabel;
    }
    return $result;
  }
  FlutterTextFieldTapRegion._() : super();
  factory FlutterTextFieldTapRegion.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTextFieldTapRegion.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTextFieldTapRegion', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'enabled')
    ..aOS(7, _omitFieldNames ? '' : 'debugLabel')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTextFieldTapRegion clone() => FlutterTextFieldTapRegion()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTextFieldTapRegion copyWith(void Function(FlutterTextFieldTapRegion) updates) => super.copyWith((message) => updates(message as FlutterTextFieldTapRegion)) as FlutterTextFieldTapRegion;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTextFieldTapRegion create() => FlutterTextFieldTapRegion._();
  FlutterTextFieldTapRegion createEmptyInstance() => create();
  static $pb.PbList<FlutterTextFieldTapRegion> createRepeated() => $pb.PbList<FlutterTextFieldTapRegion>();
  @$core.pragma('dart2js:noInline')
  static FlutterTextFieldTapRegion getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTextFieldTapRegion>(create);
  static FlutterTextFieldTapRegion? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get enabled => $_getBF(2);
  @$pb.TagNumber(4)
  set enabled($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasEnabled() => $_has(2);
  @$pb.TagNumber(4)
  void clearEnabled() => clearField(4);

  @$pb.TagNumber(7)
  $core.String get debugLabel => $_getSZ(3);
  @$pb.TagNumber(7)
  set debugLabel($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(7)
  $core.bool hasDebugLabel() => $_has(3);
  @$pb.TagNumber(7)
  void clearDebugLabel() => clearField(7);
}

/// package:flutter/src/widgets/text.dart
class FlutterDefaultTextStyleNamedFallback extends $pb.GeneratedMessage {
  factory FlutterDefaultTextStyleNamedFallback({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterDefaultTextStyleNamedFallback._() : super();
  factory FlutterDefaultTextStyleNamedFallback.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterDefaultTextStyleNamedFallback.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterDefaultTextStyleNamedFallback', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterDefaultTextStyleNamedFallback clone() => FlutterDefaultTextStyleNamedFallback()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterDefaultTextStyleNamedFallback copyWith(void Function(FlutterDefaultTextStyleNamedFallback) updates) => super.copyWith((message) => updates(message as FlutterDefaultTextStyleNamedFallback)) as FlutterDefaultTextStyleNamedFallback;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterDefaultTextStyleNamedFallback create() => FlutterDefaultTextStyleNamedFallback._();
  FlutterDefaultTextStyleNamedFallback createEmptyInstance() => create();
  static $pb.PbList<FlutterDefaultTextStyleNamedFallback> createRepeated() => $pb.PbList<FlutterDefaultTextStyleNamedFallback>();
  @$core.pragma('dart2js:noInline')
  static FlutterDefaultTextStyleNamedFallback getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterDefaultTextStyleNamedFallback>(create);
  static FlutterDefaultTextStyleNamedFallback? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter/src/widgets/text.dart
class FlutterText extends $pb.GeneratedMessage {
  factory FlutterText({
    $core.String? data,
    $1.FlutterKeyExpression? key,
    $core.bool? softWrap,
    $core.double? textScaleFactor,
    $core.int? maxLines,
    $core.String? semanticsLabel,
    $1.DartColorExpression? selectionColor,
  }) {
    final $result = create();
    if (data != null) {
      $result.data = data;
    }
    if (key != null) {
      $result.key = key;
    }
    if (softWrap != null) {
      $result.softWrap = softWrap;
    }
    if (textScaleFactor != null) {
      $result.textScaleFactor = textScaleFactor;
    }
    if (maxLines != null) {
      $result.maxLines = maxLines;
    }
    if (semanticsLabel != null) {
      $result.semanticsLabel = semanticsLabel;
    }
    if (selectionColor != null) {
      $result.selectionColor = selectionColor;
    }
    return $result;
  }
  FlutterText._() : super();
  factory FlutterText.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterText.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterText', createEmptyInstance: create)
    ..aOS(2, _omitFieldNames ? '' : 'data')
    ..aOM<$1.FlutterKeyExpression>(3, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(9, _omitFieldNames ? '' : 'softWrap')
    ..a<$core.double>(11, _omitFieldNames ? '' : 'textScaleFactor', $pb.PbFieldType.OD)
    ..a<$core.int>(12, _omitFieldNames ? '' : 'maxLines', $pb.PbFieldType.O3)
    ..aOS(13, _omitFieldNames ? '' : 'semanticsLabel')
    ..aOM<$1.DartColorExpression>(16, _omitFieldNames ? '' : 'selectionColor', subBuilder: $1.DartColorExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterText clone() => FlutterText()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterText copyWith(void Function(FlutterText) updates) => super.copyWith((message) => updates(message as FlutterText)) as FlutterText;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterText create() => FlutterText._();
  FlutterText createEmptyInstance() => create();
  static $pb.PbList<FlutterText> createRepeated() => $pb.PbList<FlutterText>();
  @$core.pragma('dart2js:noInline')
  static FlutterText getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterText>(create);
  static FlutterText? _defaultInstance;

  @$pb.TagNumber(2)
  $core.String get data => $_getSZ(0);
  @$pb.TagNumber(2)
  set data($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(2)
  $core.bool hasData() => $_has(0);
  @$pb.TagNumber(2)
  void clearData() => clearField(2);

  @$pb.TagNumber(3)
  $1.FlutterKeyExpression get key => $_getN(1);
  @$pb.TagNumber(3)
  set key($1.FlutterKeyExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasKey() => $_has(1);
  @$pb.TagNumber(3)
  void clearKey() => clearField(3);
  @$pb.TagNumber(3)
  $1.FlutterKeyExpression ensureKey() => $_ensure(1);

  @$pb.TagNumber(9)
  $core.bool get softWrap => $_getBF(2);
  @$pb.TagNumber(9)
  set softWrap($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(9)
  $core.bool hasSoftWrap() => $_has(2);
  @$pb.TagNumber(9)
  void clearSoftWrap() => clearField(9);

  @$pb.TagNumber(11)
  $core.double get textScaleFactor => $_getN(3);
  @$pb.TagNumber(11)
  set textScaleFactor($core.double v) { $_setDouble(3, v); }
  @$pb.TagNumber(11)
  $core.bool hasTextScaleFactor() => $_has(3);
  @$pb.TagNumber(11)
  void clearTextScaleFactor() => clearField(11);

  @$pb.TagNumber(12)
  $core.int get maxLines => $_getIZ(4);
  @$pb.TagNumber(12)
  set maxLines($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(12)
  $core.bool hasMaxLines() => $_has(4);
  @$pb.TagNumber(12)
  void clearMaxLines() => clearField(12);

  @$pb.TagNumber(13)
  $core.String get semanticsLabel => $_getSZ(5);
  @$pb.TagNumber(13)
  set semanticsLabel($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(13)
  $core.bool hasSemanticsLabel() => $_has(5);
  @$pb.TagNumber(13)
  void clearSemanticsLabel() => clearField(13);

  @$pb.TagNumber(16)
  $1.DartColorExpression get selectionColor => $_getN(6);
  @$pb.TagNumber(16)
  set selectionColor($1.DartColorExpression v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasSelectionColor() => $_has(6);
  @$pb.TagNumber(16)
  void clearSelectionColor() => clearField(16);
  @$pb.TagNumber(16)
  $1.DartColorExpression ensureSelectionColor() => $_ensure(6);
}

/// package:flutter/src/widgets/text_selection.dart
class FlutterTextSelectionGestureDetector extends $pb.GeneratedMessage {
  factory FlutterTextSelectionGestureDetector({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTextSelectionGestureDetector._() : super();
  factory FlutterTextSelectionGestureDetector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTextSelectionGestureDetector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTextSelectionGestureDetector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(19, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTextSelectionGestureDetector clone() => FlutterTextSelectionGestureDetector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTextSelectionGestureDetector copyWith(void Function(FlutterTextSelectionGestureDetector) updates) => super.copyWith((message) => updates(message as FlutterTextSelectionGestureDetector)) as FlutterTextSelectionGestureDetector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTextSelectionGestureDetector create() => FlutterTextSelectionGestureDetector._();
  FlutterTextSelectionGestureDetector createEmptyInstance() => create();
  static $pb.PbList<FlutterTextSelectionGestureDetector> createRepeated() => $pb.PbList<FlutterTextSelectionGestureDetector>();
  @$core.pragma('dart2js:noInline')
  static FlutterTextSelectionGestureDetector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTextSelectionGestureDetector>(create);
  static FlutterTextSelectionGestureDetector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(19)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(19)
  set child(WidgetExpression v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(19)
  void clearChild() => clearField(19);
  @$pb.TagNumber(19)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/texture.dart
class FlutterTexture extends $pb.GeneratedMessage {
  factory FlutterTexture({
    $1.FlutterKeyExpression? key,
    $core.int? textureId,
    $core.bool? freeze_4,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (textureId != null) {
      $result.textureId = textureId;
    }
    if (freeze_4 != null) {
      $result.freeze_4 = freeze_4;
    }
    return $result;
  }
  FlutterTexture._() : super();
  factory FlutterTexture.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTexture.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTexture', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'textureId', $pb.PbFieldType.O3)
    ..aOB(4, _omitFieldNames ? '' : 'freeze')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTexture clone() => FlutterTexture()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTexture copyWith(void Function(FlutterTexture) updates) => super.copyWith((message) => updates(message as FlutterTexture)) as FlutterTexture;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTexture create() => FlutterTexture._();
  FlutterTexture createEmptyInstance() => create();
  static $pb.PbList<FlutterTexture> createRepeated() => $pb.PbList<FlutterTexture>();
  @$core.pragma('dart2js:noInline')
  static FlutterTexture getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTexture>(create);
  static FlutterTexture? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.int get textureId => $_getIZ(1);
  @$pb.TagNumber(3)
  set textureId($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasTextureId() => $_has(1);
  @$pb.TagNumber(3)
  void clearTextureId() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get freeze_4 => $_getBF(2);
  @$pb.TagNumber(4)
  set freeze_4($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasFreeze_4() => $_has(2);
  @$pb.TagNumber(4)
  void clearFreeze_4() => clearField(4);
}

/// package:flutter/src/widgets/ticker_provider.dart
class FlutterTickerMode extends $pb.GeneratedMessage {
  factory FlutterTickerMode({
    $1.FlutterKeyExpression? key,
    $core.bool? enabled,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (enabled != null) {
      $result.enabled = enabled;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTickerMode._() : super();
  factory FlutterTickerMode.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTickerMode.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTickerMode', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOB(3, _omitFieldNames ? '' : 'enabled')
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTickerMode clone() => FlutterTickerMode()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTickerMode copyWith(void Function(FlutterTickerMode) updates) => super.copyWith((message) => updates(message as FlutterTickerMode)) as FlutterTickerMode;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTickerMode create() => FlutterTickerMode._();
  FlutterTickerMode createEmptyInstance() => create();
  static $pb.PbList<FlutterTickerMode> createRepeated() => $pb.PbList<FlutterTickerMode>();
  @$core.pragma('dart2js:noInline')
  static FlutterTickerMode getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTickerMode>(create);
  static FlutterTickerMode? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.bool get enabled => $_getBF(1);
  @$pb.TagNumber(3)
  set enabled($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasEnabled() => $_has(1);
  @$pb.TagNumber(3)
  void clearEnabled() => clearField(3);

  @$pb.TagNumber(4)
  WidgetExpression get child => $_getN(2);
  @$pb.TagNumber(4)
  set child(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasChild() => $_has(2);
  @$pb.TagNumber(4)
  void clearChild() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureChild() => $_ensure(2);
}

/// package:flutter/src/widgets/title.dart
class FlutterTitle extends $pb.GeneratedMessage {
  factory FlutterTitle({
    $1.FlutterKeyExpression? key,
    $core.String? title,
    $1.DartColorExpression? color,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    if (color != null) {
      $result.color = color;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterTitle._() : super();
  factory FlutterTitle.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterTitle.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterTitle', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'title')
    ..aOM<$1.DartColorExpression>(4, _omitFieldNames ? '' : 'color', subBuilder: $1.DartColorExpression.create)
    ..aOM<WidgetExpression>(5, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterTitle clone() => FlutterTitle()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterTitle copyWith(void Function(FlutterTitle) updates) => super.copyWith((message) => updates(message as FlutterTitle)) as FlutterTitle;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterTitle create() => FlutterTitle._();
  FlutterTitle createEmptyInstance() => create();
  static $pb.PbList<FlutterTitle> createRepeated() => $pb.PbList<FlutterTitle>();
  @$core.pragma('dart2js:noInline')
  static FlutterTitle getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterTitle>(create);
  static FlutterTitle? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get title => $_getSZ(1);
  @$pb.TagNumber(3)
  set title($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);

  @$pb.TagNumber(4)
  $1.DartColorExpression get color => $_getN(2);
  @$pb.TagNumber(4)
  set color($1.DartColorExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasColor() => $_has(2);
  @$pb.TagNumber(4)
  void clearColor() => clearField(4);
  @$pb.TagNumber(4)
  $1.DartColorExpression ensureColor() => $_ensure(2);

  @$pb.TagNumber(5)
  WidgetExpression get child => $_getN(3);
  @$pb.TagNumber(5)
  set child(WidgetExpression v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasChild() => $_has(3);
  @$pb.TagNumber(5)
  void clearChild() => clearField(5);
  @$pb.TagNumber(5)
  WidgetExpression ensureChild() => $_ensure(3);
}

/// package:flutter/src/widgets/visibility.dart
class FlutterSliverVisibility extends $pb.GeneratedMessage {
  factory FlutterSliverVisibility({
    $1.FlutterKeyExpression? key,
    WidgetExpression? sliver,
    WidgetExpression? replacementSliver,
    $core.bool? visible,
    $core.bool? maintainState,
    $core.bool? maintainAnimation,
    $core.bool? maintainSize,
    $core.bool? maintainSemantics,
    $core.bool? maintainInteractivity,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    if (replacementSliver != null) {
      $result.replacementSliver = replacementSliver;
    }
    if (visible != null) {
      $result.visible = visible;
    }
    if (maintainState != null) {
      $result.maintainState = maintainState;
    }
    if (maintainAnimation != null) {
      $result.maintainAnimation = maintainAnimation;
    }
    if (maintainSize != null) {
      $result.maintainSize = maintainSize;
    }
    if (maintainSemantics != null) {
      $result.maintainSemantics = maintainSemantics;
    }
    if (maintainInteractivity != null) {
      $result.maintainInteractivity = maintainInteractivity;
    }
    return $result;
  }
  FlutterSliverVisibility._() : super();
  factory FlutterSliverVisibility.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverVisibility.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverVisibility', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'replacementSliver', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'visible')
    ..aOB(6, _omitFieldNames ? '' : 'maintainState')
    ..aOB(7, _omitFieldNames ? '' : 'maintainAnimation')
    ..aOB(8, _omitFieldNames ? '' : 'maintainSize')
    ..aOB(9, _omitFieldNames ? '' : 'maintainSemantics')
    ..aOB(10, _omitFieldNames ? '' : 'maintainInteractivity')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverVisibility clone() => FlutterSliverVisibility()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverVisibility copyWith(void Function(FlutterSliverVisibility) updates) => super.copyWith((message) => updates(message as FlutterSliverVisibility)) as FlutterSliverVisibility;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverVisibility create() => FlutterSliverVisibility._();
  FlutterSliverVisibility createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverVisibility> createRepeated() => $pb.PbList<FlutterSliverVisibility>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverVisibility getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverVisibility>(create);
  static FlutterSliverVisibility? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get sliver => $_getN(1);
  @$pb.TagNumber(3)
  set sliver(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSliver() => $_has(1);
  @$pb.TagNumber(3)
  void clearSliver() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureSliver() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get replacementSliver => $_getN(2);
  @$pb.TagNumber(4)
  set replacementSliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasReplacementSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearReplacementSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureReplacementSliver() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get visible => $_getBF(3);
  @$pb.TagNumber(5)
  set visible($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasVisible() => $_has(3);
  @$pb.TagNumber(5)
  void clearVisible() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get maintainState => $_getBF(4);
  @$pb.TagNumber(6)
  set maintainState($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasMaintainState() => $_has(4);
  @$pb.TagNumber(6)
  void clearMaintainState() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get maintainAnimation => $_getBF(5);
  @$pb.TagNumber(7)
  set maintainAnimation($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasMaintainAnimation() => $_has(5);
  @$pb.TagNumber(7)
  void clearMaintainAnimation() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get maintainSize => $_getBF(6);
  @$pb.TagNumber(8)
  set maintainSize($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasMaintainSize() => $_has(6);
  @$pb.TagNumber(8)
  void clearMaintainSize() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get maintainSemantics => $_getBF(7);
  @$pb.TagNumber(9)
  set maintainSemantics($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(9)
  $core.bool hasMaintainSemantics() => $_has(7);
  @$pb.TagNumber(9)
  void clearMaintainSemantics() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get maintainInteractivity => $_getBF(8);
  @$pb.TagNumber(10)
  set maintainInteractivity($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaintainInteractivity() => $_has(8);
  @$pb.TagNumber(10)
  void clearMaintainInteractivity() => clearField(10);
}

/// package:flutter/src/widgets/visibility.dart
class FlutterSliverVisibilityNamedMaintain extends $pb.GeneratedMessage {
  factory FlutterSliverVisibilityNamedMaintain({
    $1.FlutterKeyExpression? key,
    WidgetExpression? sliver,
    WidgetExpression? replacementSliver,
    $core.bool? visible,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (sliver != null) {
      $result.sliver = sliver;
    }
    if (replacementSliver != null) {
      $result.replacementSliver = replacementSliver;
    }
    if (visible != null) {
      $result.visible = visible;
    }
    return $result;
  }
  FlutterSliverVisibilityNamedMaintain._() : super();
  factory FlutterSliverVisibilityNamedMaintain.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterSliverVisibilityNamedMaintain.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterSliverVisibilityNamedMaintain', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'sliver', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'replacementSliver', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'visible')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterSliverVisibilityNamedMaintain clone() => FlutterSliverVisibilityNamedMaintain()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterSliverVisibilityNamedMaintain copyWith(void Function(FlutterSliverVisibilityNamedMaintain) updates) => super.copyWith((message) => updates(message as FlutterSliverVisibilityNamedMaintain)) as FlutterSliverVisibilityNamedMaintain;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterSliverVisibilityNamedMaintain create() => FlutterSliverVisibilityNamedMaintain._();
  FlutterSliverVisibilityNamedMaintain createEmptyInstance() => create();
  static $pb.PbList<FlutterSliverVisibilityNamedMaintain> createRepeated() => $pb.PbList<FlutterSliverVisibilityNamedMaintain>();
  @$core.pragma('dart2js:noInline')
  static FlutterSliverVisibilityNamedMaintain getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterSliverVisibilityNamedMaintain>(create);
  static FlutterSliverVisibilityNamedMaintain? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get sliver => $_getN(1);
  @$pb.TagNumber(3)
  set sliver(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSliver() => $_has(1);
  @$pb.TagNumber(3)
  void clearSliver() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureSliver() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get replacementSliver => $_getN(2);
  @$pb.TagNumber(4)
  set replacementSliver(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasReplacementSliver() => $_has(2);
  @$pb.TagNumber(4)
  void clearReplacementSliver() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureReplacementSliver() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get visible => $_getBF(3);
  @$pb.TagNumber(5)
  set visible($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasVisible() => $_has(3);
  @$pb.TagNumber(5)
  void clearVisible() => clearField(5);
}

/// package:flutter/src/widgets/visibility.dart
class FlutterVisibility extends $pb.GeneratedMessage {
  factory FlutterVisibility({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    WidgetExpression? replacement,
    $core.bool? visible,
    $core.bool? maintainState,
    $core.bool? maintainAnimation,
    $core.bool? maintainSize,
    $core.bool? maintainSemantics,
    $core.bool? maintainInteractivity,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (replacement != null) {
      $result.replacement = replacement;
    }
    if (visible != null) {
      $result.visible = visible;
    }
    if (maintainState != null) {
      $result.maintainState = maintainState;
    }
    if (maintainAnimation != null) {
      $result.maintainAnimation = maintainAnimation;
    }
    if (maintainSize != null) {
      $result.maintainSize = maintainSize;
    }
    if (maintainSemantics != null) {
      $result.maintainSemantics = maintainSemantics;
    }
    if (maintainInteractivity != null) {
      $result.maintainInteractivity = maintainInteractivity;
    }
    return $result;
  }
  FlutterVisibility._() : super();
  factory FlutterVisibility.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterVisibility.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterVisibility', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOM<WidgetExpression>(4, _omitFieldNames ? '' : 'replacement', subBuilder: WidgetExpression.create)
    ..aOB(5, _omitFieldNames ? '' : 'visible')
    ..aOB(6, _omitFieldNames ? '' : 'maintainState')
    ..aOB(7, _omitFieldNames ? '' : 'maintainAnimation')
    ..aOB(8, _omitFieldNames ? '' : 'maintainSize')
    ..aOB(9, _omitFieldNames ? '' : 'maintainSemantics')
    ..aOB(10, _omitFieldNames ? '' : 'maintainInteractivity')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterVisibility clone() => FlutterVisibility()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterVisibility copyWith(void Function(FlutterVisibility) updates) => super.copyWith((message) => updates(message as FlutterVisibility)) as FlutterVisibility;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterVisibility create() => FlutterVisibility._();
  FlutterVisibility createEmptyInstance() => create();
  static $pb.PbList<FlutterVisibility> createRepeated() => $pb.PbList<FlutterVisibility>();
  @$core.pragma('dart2js:noInline')
  static FlutterVisibility getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterVisibility>(create);
  static FlutterVisibility? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  WidgetExpression get replacement => $_getN(2);
  @$pb.TagNumber(4)
  set replacement(WidgetExpression v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasReplacement() => $_has(2);
  @$pb.TagNumber(4)
  void clearReplacement() => clearField(4);
  @$pb.TagNumber(4)
  WidgetExpression ensureReplacement() => $_ensure(2);

  @$pb.TagNumber(5)
  $core.bool get visible => $_getBF(3);
  @$pb.TagNumber(5)
  set visible($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(5)
  $core.bool hasVisible() => $_has(3);
  @$pb.TagNumber(5)
  void clearVisible() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get maintainState => $_getBF(4);
  @$pb.TagNumber(6)
  set maintainState($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(6)
  $core.bool hasMaintainState() => $_has(4);
  @$pb.TagNumber(6)
  void clearMaintainState() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get maintainAnimation => $_getBF(5);
  @$pb.TagNumber(7)
  set maintainAnimation($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(7)
  $core.bool hasMaintainAnimation() => $_has(5);
  @$pb.TagNumber(7)
  void clearMaintainAnimation() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get maintainSize => $_getBF(6);
  @$pb.TagNumber(8)
  set maintainSize($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(8)
  $core.bool hasMaintainSize() => $_has(6);
  @$pb.TagNumber(8)
  void clearMaintainSize() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get maintainSemantics => $_getBF(7);
  @$pb.TagNumber(9)
  set maintainSemantics($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(9)
  $core.bool hasMaintainSemantics() => $_has(7);
  @$pb.TagNumber(9)
  void clearMaintainSemantics() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get maintainInteractivity => $_getBF(8);
  @$pb.TagNumber(10)
  set maintainInteractivity($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(10)
  $core.bool hasMaintainInteractivity() => $_has(8);
  @$pb.TagNumber(10)
  void clearMaintainInteractivity() => clearField(10);
}

/// package:flutter/src/widgets/visibility.dart
class FlutterVisibilityNamedMaintain extends $pb.GeneratedMessage {
  factory FlutterVisibilityNamedMaintain({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
    $core.bool? visible,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    if (visible != null) {
      $result.visible = visible;
    }
    return $result;
  }
  FlutterVisibilityNamedMaintain._() : super();
  factory FlutterVisibilityNamedMaintain.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterVisibilityNamedMaintain.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterVisibilityNamedMaintain', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..aOB(4, _omitFieldNames ? '' : 'visible')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterVisibilityNamedMaintain clone() => FlutterVisibilityNamedMaintain()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterVisibilityNamedMaintain copyWith(void Function(FlutterVisibilityNamedMaintain) updates) => super.copyWith((message) => updates(message as FlutterVisibilityNamedMaintain)) as FlutterVisibilityNamedMaintain;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterVisibilityNamedMaintain create() => FlutterVisibilityNamedMaintain._();
  FlutterVisibilityNamedMaintain createEmptyInstance() => create();
  static $pb.PbList<FlutterVisibilityNamedMaintain> createRepeated() => $pb.PbList<FlutterVisibilityNamedMaintain>();
  @$core.pragma('dart2js:noInline')
  static FlutterVisibilityNamedMaintain getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterVisibilityNamedMaintain>(create);
  static FlutterVisibilityNamedMaintain? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);

  @$pb.TagNumber(4)
  $core.bool get visible => $_getBF(2);
  @$pb.TagNumber(4)
  set visible($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(4)
  $core.bool hasVisible() => $_has(2);
  @$pb.TagNumber(4)
  void clearVisible() => clearField(4);
}

/// package:flutter/src/widgets/widget_inspector.dart
class FlutterWidgetInspector extends $pb.GeneratedMessage {
  factory FlutterWidgetInspector({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterWidgetInspector._() : super();
  factory FlutterWidgetInspector.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterWidgetInspector.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterWidgetInspector', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterWidgetInspector clone() => FlutterWidgetInspector()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterWidgetInspector copyWith(void Function(FlutterWidgetInspector) updates) => super.copyWith((message) => updates(message as FlutterWidgetInspector)) as FlutterWidgetInspector;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterWidgetInspector create() => FlutterWidgetInspector._();
  FlutterWidgetInspector createEmptyInstance() => create();
  static $pb.PbList<FlutterWidgetInspector> createRepeated() => $pb.PbList<FlutterWidgetInspector>();
  @$core.pragma('dart2js:noInline')
  static FlutterWidgetInspector getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterWidgetInspector>(create);
  static FlutterWidgetInspector? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter/src/widgets/will_pop_scope.dart
class FlutterWillPopScope extends $pb.GeneratedMessage {
  factory FlutterWillPopScope({
    $1.FlutterKeyExpression? key,
    WidgetExpression? child,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (child != null) {
      $result.child = child;
    }
    return $result;
  }
  FlutterWillPopScope._() : super();
  factory FlutterWillPopScope.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterWillPopScope.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterWillPopScope', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOM<WidgetExpression>(3, _omitFieldNames ? '' : 'child', subBuilder: WidgetExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterWillPopScope clone() => FlutterWillPopScope()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterWillPopScope copyWith(void Function(FlutterWillPopScope) updates) => super.copyWith((message) => updates(message as FlutterWillPopScope)) as FlutterWillPopScope;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterWillPopScope create() => FlutterWillPopScope._();
  FlutterWillPopScope createEmptyInstance() => create();
  static $pb.PbList<FlutterWillPopScope> createRepeated() => $pb.PbList<FlutterWillPopScope>();
  @$core.pragma('dart2js:noInline')
  static FlutterWillPopScope getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterWillPopScope>(create);
  static FlutterWillPopScope? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  WidgetExpression get child => $_getN(1);
  @$pb.TagNumber(3)
  set child(WidgetExpression v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasChild() => $_has(1);
  @$pb.TagNumber(3)
  void clearChild() => clearField(3);
  @$pb.TagNumber(3)
  WidgetExpression ensureChild() => $_ensure(1);
}

/// package:flutter_project/main.dart
class FlutterProjectMyApp extends $pb.GeneratedMessage {
  factory FlutterProjectMyApp({
    $1.FlutterKeyExpression? key,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    return $result;
  }
  FlutterProjectMyApp._() : super();
  factory FlutterProjectMyApp.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterProjectMyApp.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterProjectMyApp', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterProjectMyApp clone() => FlutterProjectMyApp()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterProjectMyApp copyWith(void Function(FlutterProjectMyApp) updates) => super.copyWith((message) => updates(message as FlutterProjectMyApp)) as FlutterProjectMyApp;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterProjectMyApp create() => FlutterProjectMyApp._();
  FlutterProjectMyApp createEmptyInstance() => create();
  static $pb.PbList<FlutterProjectMyApp> createRepeated() => $pb.PbList<FlutterProjectMyApp>();
  @$core.pragma('dart2js:noInline')
  static FlutterProjectMyApp getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterProjectMyApp>(create);
  static FlutterProjectMyApp? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);
}

/// package:flutter_project/main.dart
class FlutterProjectMyHomePage extends $pb.GeneratedMessage {
  factory FlutterProjectMyHomePage({
    $1.FlutterKeyExpression? key,
    $core.String? title,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (title != null) {
      $result.title = title;
    }
    return $result;
  }
  FlutterProjectMyHomePage._() : super();
  factory FlutterProjectMyHomePage.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FlutterProjectMyHomePage.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FlutterProjectMyHomePage', createEmptyInstance: create)
    ..aOM<$1.FlutterKeyExpression>(2, _omitFieldNames ? '' : 'key', subBuilder: $1.FlutterKeyExpression.create)
    ..aOS(3, _omitFieldNames ? '' : 'title')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FlutterProjectMyHomePage clone() => FlutterProjectMyHomePage()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FlutterProjectMyHomePage copyWith(void Function(FlutterProjectMyHomePage) updates) => super.copyWith((message) => updates(message as FlutterProjectMyHomePage)) as FlutterProjectMyHomePage;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FlutterProjectMyHomePage create() => FlutterProjectMyHomePage._();
  FlutterProjectMyHomePage createEmptyInstance() => create();
  static $pb.PbList<FlutterProjectMyHomePage> createRepeated() => $pb.PbList<FlutterProjectMyHomePage>();
  @$core.pragma('dart2js:noInline')
  static FlutterProjectMyHomePage getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FlutterProjectMyHomePage>(create);
  static FlutterProjectMyHomePage? _defaultInstance;

  @$pb.TagNumber(2)
  $1.FlutterKeyExpression get key => $_getN(0);
  @$pb.TagNumber(2)
  set key($1.FlutterKeyExpression v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(2)
  void clearKey() => clearField(2);
  @$pb.TagNumber(2)
  $1.FlutterKeyExpression ensureKey() => $_ensure(0);

  @$pb.TagNumber(3)
  $core.String get title => $_getSZ(1);
  @$pb.TagNumber(3)
  set title($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(3)
  $core.bool hasTitle() => $_has(1);
  @$pb.TagNumber(3)
  void clearTitle() => clearField(3);
}

enum WidgetExpression_Result {
  cupertinoActivityIndicator, 
  cupertinoActivityIndicatorNamedPartiallyRevealed, 
  cupertinoApp, 
  cupertinoAppNamedRouter, 
  cupertinoButton, 
  cupertinoButtonNamedFilled, 
  cupertinoCheckbox, 
  cupertinoContextMenu, 
  cupertinoContextMenuAction, 
  cupertinoDesktopTextSelectionToolbarButton, 
  cupertinoDesktopTextSelectionToolbarButtonNamedText, 
  cupertinoActionSheet, 
  cupertinoAlertDialog, 
  cupertinoDialogAction, 
  cupertinoPopupSurface, 
  cupertinoFormRow, 
  cupertinoFormSection, 
  cupertinoFormSectionNamedInsetGrouped, 
  cupertinoListSection, 
  cupertinoListSectionNamedInsetGrouped, 
  cupertinoListTile, 
  cupertinoListTileNamedNotched, 
  cupertinoListTileChevron, 
  cupertinoMagnifier, 
  cupertinoNavigationBar, 
  cupertinoNavigationBarBackButton, 
  cupertinoSliverNavigationBar, 
  cupertinoPageScaffold, 
  cupertinoPicker, 
  cupertinoPickerDefaultSelectionOverlay, 
  cupertinoSliverRefreshControl, 
  cupertinoScrollbar, 
  cupertinoSearchTextField, 
  cupertinoSlider, 
  cupertinoSwitch, 
  cupertinoTabView, 
  cupertinoTextField, 
  cupertinoTextFieldNamedBorderless, 
  cupertinoTextFormFieldRow, 
  cupertinoTextSelectionToolbarButton, 
  cupertinoTextSelectionToolbarButtonNamedText, 
  materialAboutDialog, 
  materialAboutListTile, 
  materialLicensePage, 
  materialBackButton, 
  materialBackButtonIcon, 
  materialCloseButton, 
  materialCloseButtonIcon, 
  materialDrawerButton, 
  materialDrawerButtonIcon, 
  materialEndDrawerButton, 
  materialEndDrawerButtonIcon, 
  materialActionChip, 
  materialActionChipNamedElevated, 
  materialMaterialApp, 
  materialMaterialAppNamedRouter, 
  materialAppBar, 
  materialSliverAppBar, 
  materialSliverAppBarNamedMedium, 
  materialSliverAppBarNamedLarge, 
  materialBadge, 
  materialBadgeNamedCount, 
  materialMaterialBanner, 
  materialMaterialBannerTheme, 
  materialBottomAppBar, 
  materialRawMaterialButton, 
  materialButtonBar, 
  materialButtonTheme, 
  materialCard, 
  materialCheckbox, 
  materialCheckboxNamedAdaptive, 
  materialCheckboxListTile, 
  materialCheckboxListTileNamedAdaptive, 
  materialChip, 
  materialRawChip, 
  materialChoiceChip, 
  materialChoiceChipNamedElevated, 
  materialCircleAvatar, 
  materialTableRowInkWell, 
  materialDesktopTextSelectionToolbarButton, 
  materialAlertDialog, 
  materialAlertDialogNamedAdaptive, 
  materialDialog, 
  materialDialogNamedFullscreen, 
  materialSimpleDialog, 
  materialSimpleDialogOption, 
  materialDivider, 
  materialVerticalDivider, 
  materialDrawer, 
  materialDrawerHeader, 
  materialDropdownButton, 
  materialDropdownButtonFormField, 
  materialDropdownButtonHideUnderline, 
  materialDropdownMenuItem, 
  materialElevatedButton, 
  materialElevatedButtonNamedIcon, 
  materialExpandIcon, 
  materialExpansionPanelList, 
  materialExpansionPanelListNamedRadio, 
  materialExpansionTile, 
  materialFilledButton, 
  materialFilledButtonNamedIcon, 
  materialFilledButtonNamedTonal, 
  materialFilledButtonNamedTonalIcon, 
  materialFilterChip, 
  materialFilterChipNamedElevated, 
  materialFlexibleSpaceBar, 
  materialFlexibleSpaceBarSettings, 
  materialFloatingActionButton, 
  materialFloatingActionButtonNamedSmall, 
  materialFloatingActionButtonNamedLarge, 
  materialFloatingActionButtonNamedExtended, 
  materialFlutterLogo, 
  materialGridTile, 
  materialGridTileBar, 
  materialIconButton, 
  materialIconButtonNamedFilled, 
  materialIconButtonNamedFilledTonal, 
  materialIconButtonNamedOutlined, 
  materialInk, 
  materialInkResponse, 
  materialInkWell, 
  materialInputChip, 
  materialListTile, 
  materialListTileTheme, 
  materialMagnifier, 
  materialMaterial, 
  materialMaterialButton, 
  materialCheckboxMenuButton, 
  materialMenuAcceleratorCallbackBinding, 
  materialMenuAcceleratorLabel, 
  materialMenuAnchor, 
  materialMenuBar, 
  materialMenuItemButton, 
  materialSubmenuButton, 
  materialMergeableMaterial, 
  materialNavigationBar, 
  materialNavigationDestination, 
  materialNavigationDrawer, 
  materialNavigationDrawerDestination, 
  materialOutlinedButton, 
  materialOutlinedButtonNamedIcon, 
  materialCheckedPopupMenuItem, 
  materialPopupMenuDivider, 
  materialPopupMenuItem, 
  materialCircularProgressIndicator, 
  materialCircularProgressIndicatorNamedAdaptive, 
  materialLinearProgressIndicator, 
  materialRefreshProgressIndicator, 
  materialScaffold, 
  materialScaffoldMessenger, 
  materialScrollbar, 
  materialSearchBar, 
  materialSelectableText, 
  materialSelectionArea, 
  materialSlider, 
  materialSliderNamedAdaptive, 
  materialSnackBar, 
  materialSwitch, 
  materialSwitchNamedAdaptive, 
  materialSwitchListTile, 
  materialSwitchListTileNamedAdaptive, 
  materialDefaultTabController, 
  materialTab, 
  materialTabBar, 
  materialTabBarNamedSecondary, 
  materialTabBarView, 
  materialTabPageSelector, 
  materialTabPageSelectorIndicator, 
  materialTextButton, 
  materialTextButtonNamedIcon, 
  materialTextField, 
  materialTextFormField, 
  materialToggleButtons, 
  materialTooltip, 
  materialTooltipVisibility, 
  materialUserAccountsDrawerHeader, 
  flutterPlatformSelectableRegionContextMenu, 
  flutterFocusableActionDetector, 
  flutterAnimatedSize, 
  flutterAnimatedSwitcher, 
  flutterWidgetsApp, 
  flutterWidgetsAppNamedRouter, 
  flutterAutofillGroup, 
  flutterAutomaticKeepAlive, 
  flutterCheckedModeBanner, 
  flutterAbsorbPointer, 
  flutterAlign, 
  flutterAspectRatio, 
  flutterBlockSemantics, 
  flutterCenter, 
  flutterClipOval, 
  flutterClipPath, 
  flutterClipRRect, 
  flutterClipRect, 
  flutterColoredBox, 
  flutterColumn, 
  flutterCustomPaint, 
  flutterExcludeSemantics, 
  flutterExpanded, 
  flutterFittedBox, 
  flutterFlexible, 
  flutterFractionallySizedBox, 
  flutterIgnorePointer, 
  flutterIndexedSemantics, 
  flutterIndexedStack, 
  flutterIntrinsicHeight, 
  flutterIntrinsicWidth, 
  flutterKeyedSubtree, 
  flutterKeyedSubtreeNamedWrap, 
  flutterLimitedBox, 
  flutterListBody, 
  flutterListener, 
  flutterMergeSemantics, 
  flutterMetaData, 
  flutterMouseRegion, 
  flutterOffstage, 
  flutterOpacity, 
  flutterOverflowBox, 
  flutterPhysicalModel, 
  flutterPositioned, 
  flutterPositionedNamedFill, 
  flutterPositionedDirectional, 
  flutterRawImage, 
  flutterRepaintBoundary, 
  flutterRepaintBoundaryNamedWrap, 
  flutterRotatedBox, 
  flutterRow, 
  flutterSemantics, 
  flutterSizedBox, 
  flutterSizedBoxNamedExpand, 
  flutterSizedBoxNamedShrink, 
  flutterSizedBoxNamedFromSize, 
  flutterSizedBoxNamedSquare, 
  flutterSliverToBoxAdapter, 
  flutterStack, 
  flutterTransformNamedRotate, 
  flutterTransformNamedScale, 
  flutterTransformNamedFlip, 
  flutterUnconstrainedBox, 
  flutterWrap, 
  flutterContainer, 
  flutterDefaultSelectionStyle, 
  flutterDefaultSelectionStyleNamedFallback, 
  flutterDefaultTextEditingShortcuts, 
  flutterDismissible, 
  flutterDisplayFeatureSubScreen, 
  flutterDraggable, 
  flutterLongPressDraggable, 
  flutterDraggableScrollableActuator, 
  flutterFadeInImageNamedAssetNetwork, 
  flutterExcludeFocus, 
  flutterFocus, 
  flutterFocusScope, 
  flutterExcludeFocusTraversal, 
  flutterFocusTraversalGroup, 
  flutterForm, 
  flutterErrorWidgetNamedWithDetails, 
  flutterGestureDetector, 
  flutterRawGestureDetector, 
  flutterGridPaper, 
  flutterHeroMode, 
  flutterIcon, 
  flutterImageNamedNetwork, 
  flutterImageNamedAsset, 
  flutterImageIcon, 
  flutterAnimatedContainer, 
  flutterAnimatedFractionallySizedBox, 
  flutterAnimatedOpacity, 
  flutterAnimatedPositioned, 
  flutterAnimatedPositionedDirectional, 
  flutterAnimatedRotation, 
  flutterAnimatedScale, 
  flutterSliverAnimatedOpacity, 
  flutterInteractiveViewer, 
  flutterListWheelScrollView, 
  flutterLookupBoundary, 
  flutterModalBarrier, 
  flutterNavigationToolbar, 
  flutterHeroControllerScopeNamedNone, 
  flutterNavigator, 
  flutterNotificationListener, 
  flutterOverflowBar, 
  flutterOverlay, 
  flutterPageView, 
  flutterPerformanceOverlay, 
  flutterPerformanceOverlayNamedAllEnabled, 
  flutterPlaceholder, 
  flutterAndroidView, 
  flutterHtmlElementView, 
  flutterUiKitView, 
  flutterPrimaryScrollControllerNamedNone, 
  flutterReorderableDelayedDragStartListener, 
  flutterReorderableDragStartListener, 
  flutterRestorationScope, 
  flutterRootRestorationScope, 
  flutterUnmanagedRestorationScope, 
  flutterSafeArea, 
  flutterSliverSafeArea, 
  flutterScrollNotificationObserver, 
  flutterCustomScrollView, 
  flutterGridViewNamedCount, 
  flutterGridViewNamedExtent, 
  flutterListView, 
  flutterRawScrollbar, 
  flutterSelectionContainerNamedDisabled, 
  flutterSemanticsDebugger, 
  flutterSharedAppData, 
  flutterShortcutRegistrar, 
  flutterSingleChildScrollView, 
  flutterSizeChangedLayoutNotifier, 
  flutterKeepAlive, 
  flutterSliverConstrainedCrossAxis, 
  flutterSliverCrossAxisExpanded, 
  flutterSliverCrossAxisGroup, 
  flutterSliverFixedExtentListNamedList, 
  flutterSliverGridNamedCount, 
  flutterSliverGridNamedExtent, 
  flutterSliverIgnorePointer, 
  flutterSliverListNamedList, 
  flutterSliverMainAxisGroup, 
  flutterSliverOffstage, 
  flutterSliverOpacity, 
  flutterSliverFillRemaining, 
  flutterSliverPrototypeExtentListNamedList, 
  flutterSpacer, 
  flutterTable, 
  flutterTableCell, 
  flutterTapRegion, 
  flutterTapRegionSurface, 
  flutterTextFieldTapRegion, 
  flutterDefaultTextStyleNamedFallback, 
  flutterText, 
  flutterTextSelectionGestureDetector, 
  flutterTexture, 
  flutterTickerMode, 
  flutterTitle, 
  flutterSliverVisibility, 
  flutterSliverVisibilityNamedMaintain, 
  flutterVisibility, 
  flutterVisibilityNamedMaintain, 
  flutterWidgetInspector, 
  flutterWillPopScope, 
  flutterProjectMyApp, 
  flutterProjectMyHomePage, 
  notSet
}

class WidgetExpression extends $pb.GeneratedMessage {
  factory WidgetExpression({
    CupertinoActivityIndicator? cupertinoActivityIndicator,
    CupertinoActivityIndicatorNamedPartiallyRevealed? cupertinoActivityIndicatorNamedPartiallyRevealed,
    CupertinoApp? cupertinoApp,
    CupertinoAppNamedRouter? cupertinoAppNamedRouter,
    CupertinoButton? cupertinoButton,
    CupertinoButtonNamedFilled? cupertinoButtonNamedFilled,
    CupertinoCheckbox? cupertinoCheckbox,
    CupertinoContextMenu? cupertinoContextMenu,
    CupertinoContextMenuAction? cupertinoContextMenuAction,
    CupertinoDesktopTextSelectionToolbarButton? cupertinoDesktopTextSelectionToolbarButton,
    CupertinoDesktopTextSelectionToolbarButtonNamedText? cupertinoDesktopTextSelectionToolbarButtonNamedText,
    CupertinoActionSheet? cupertinoActionSheet,
    CupertinoAlertDialog? cupertinoAlertDialog,
    CupertinoDialogAction? cupertinoDialogAction,
    CupertinoPopupSurface? cupertinoPopupSurface,
    CupertinoFormRow? cupertinoFormRow,
    CupertinoFormSection? cupertinoFormSection,
    CupertinoFormSectionNamedInsetGrouped? cupertinoFormSectionNamedInsetGrouped,
    CupertinoListSection? cupertinoListSection,
    CupertinoListSectionNamedInsetGrouped? cupertinoListSectionNamedInsetGrouped,
    CupertinoListTile? cupertinoListTile,
    CupertinoListTileNamedNotched? cupertinoListTileNamedNotched,
    CupertinoListTileChevron? cupertinoListTileChevron,
    CupertinoMagnifier? cupertinoMagnifier,
    CupertinoNavigationBar? cupertinoNavigationBar,
    CupertinoNavigationBarBackButton? cupertinoNavigationBarBackButton,
    CupertinoSliverNavigationBar? cupertinoSliverNavigationBar,
    CupertinoPageScaffold? cupertinoPageScaffold,
    CupertinoPicker? cupertinoPicker,
    CupertinoPickerDefaultSelectionOverlay? cupertinoPickerDefaultSelectionOverlay,
    CupertinoSliverRefreshControl? cupertinoSliverRefreshControl,
    CupertinoScrollbar? cupertinoScrollbar,
    CupertinoSearchTextField? cupertinoSearchTextField,
    CupertinoSlider? cupertinoSlider,
    CupertinoSwitch? cupertinoSwitch,
    CupertinoTabView? cupertinoTabView,
    CupertinoTextField? cupertinoTextField,
    CupertinoTextFieldNamedBorderless? cupertinoTextFieldNamedBorderless,
    CupertinoTextFormFieldRow? cupertinoTextFormFieldRow,
    CupertinoTextSelectionToolbarButton? cupertinoTextSelectionToolbarButton,
    CupertinoTextSelectionToolbarButtonNamedText? cupertinoTextSelectionToolbarButtonNamedText,
    MaterialAboutDialog? materialAboutDialog,
    MaterialAboutListTile? materialAboutListTile,
    MaterialLicensePage? materialLicensePage,
    MaterialBackButton? materialBackButton,
    MaterialBackButtonIcon? materialBackButtonIcon,
    MaterialCloseButton? materialCloseButton,
    MaterialCloseButtonIcon? materialCloseButtonIcon,
    MaterialDrawerButton? materialDrawerButton,
    MaterialDrawerButtonIcon? materialDrawerButtonIcon,
    MaterialEndDrawerButton? materialEndDrawerButton,
    MaterialEndDrawerButtonIcon? materialEndDrawerButtonIcon,
    MaterialActionChip? materialActionChip,
    MaterialActionChipNamedElevated? materialActionChipNamedElevated,
    MaterialMaterialApp? materialMaterialApp,
    MaterialMaterialAppNamedRouter? materialMaterialAppNamedRouter,
    MaterialAppBar? materialAppBar,
    MaterialSliverAppBar? materialSliverAppBar,
    MaterialSliverAppBarNamedMedium? materialSliverAppBarNamedMedium,
    MaterialSliverAppBarNamedLarge? materialSliverAppBarNamedLarge,
    MaterialBadge? materialBadge,
    MaterialBadgeNamedCount? materialBadgeNamedCount,
    MaterialMaterialBanner? materialMaterialBanner,
    MaterialMaterialBannerTheme? materialMaterialBannerTheme,
    MaterialBottomAppBar? materialBottomAppBar,
    MaterialRawMaterialButton? materialRawMaterialButton,
    MaterialButtonBar? materialButtonBar,
    MaterialButtonTheme? materialButtonTheme,
    MaterialCard? materialCard,
    MaterialCheckbox? materialCheckbox,
    MaterialCheckboxNamedAdaptive? materialCheckboxNamedAdaptive,
    MaterialCheckboxListTile? materialCheckboxListTile,
    MaterialCheckboxListTileNamedAdaptive? materialCheckboxListTileNamedAdaptive,
    MaterialChip? materialChip,
    MaterialRawChip? materialRawChip,
    MaterialChoiceChip? materialChoiceChip,
    MaterialChoiceChipNamedElevated? materialChoiceChipNamedElevated,
    MaterialCircleAvatar? materialCircleAvatar,
    MaterialTableRowInkWell? materialTableRowInkWell,
    MaterialDesktopTextSelectionToolbarButton? materialDesktopTextSelectionToolbarButton,
    MaterialAlertDialog? materialAlertDialog,
    MaterialAlertDialogNamedAdaptive? materialAlertDialogNamedAdaptive,
    MaterialDialog? materialDialog,
    MaterialDialogNamedFullscreen? materialDialogNamedFullscreen,
    MaterialSimpleDialog? materialSimpleDialog,
    MaterialSimpleDialogOption? materialSimpleDialogOption,
    MaterialDivider? materialDivider,
    MaterialVerticalDivider? materialVerticalDivider,
    MaterialDrawer? materialDrawer,
    MaterialDrawerHeader? materialDrawerHeader,
    MaterialDropdownButton? materialDropdownButton,
    MaterialDropdownButtonFormField? materialDropdownButtonFormField,
    MaterialDropdownButtonHideUnderline? materialDropdownButtonHideUnderline,
    MaterialDropdownMenuItem? materialDropdownMenuItem,
    MaterialElevatedButton? materialElevatedButton,
    MaterialElevatedButtonNamedIcon? materialElevatedButtonNamedIcon,
    MaterialExpandIcon? materialExpandIcon,
    MaterialExpansionPanelList? materialExpansionPanelList,
    MaterialExpansionPanelListNamedRadio? materialExpansionPanelListNamedRadio,
    MaterialExpansionTile? materialExpansionTile,
    MaterialFilledButton? materialFilledButton,
    MaterialFilledButtonNamedIcon? materialFilledButtonNamedIcon,
    MaterialFilledButtonNamedTonal? materialFilledButtonNamedTonal,
    MaterialFilledButtonNamedTonalIcon? materialFilledButtonNamedTonalIcon,
    MaterialFilterChip? materialFilterChip,
    MaterialFilterChipNamedElevated? materialFilterChipNamedElevated,
    MaterialFlexibleSpaceBar? materialFlexibleSpaceBar,
    MaterialFlexibleSpaceBarSettings? materialFlexibleSpaceBarSettings,
    MaterialFloatingActionButton? materialFloatingActionButton,
    MaterialFloatingActionButtonNamedSmall? materialFloatingActionButtonNamedSmall,
    MaterialFloatingActionButtonNamedLarge? materialFloatingActionButtonNamedLarge,
    MaterialFloatingActionButtonNamedExtended? materialFloatingActionButtonNamedExtended,
    MaterialFlutterLogo? materialFlutterLogo,
    MaterialGridTile? materialGridTile,
    MaterialGridTileBar? materialGridTileBar,
    MaterialIconButton? materialIconButton,
    MaterialIconButtonNamedFilled? materialIconButtonNamedFilled,
    MaterialIconButtonNamedFilledTonal? materialIconButtonNamedFilledTonal,
    MaterialIconButtonNamedOutlined? materialIconButtonNamedOutlined,
    MaterialInk? materialInk,
    MaterialInkResponse? materialInkResponse,
    MaterialInkWell? materialInkWell,
    MaterialInputChip? materialInputChip,
    MaterialListTile? materialListTile,
    MaterialListTileTheme? materialListTileTheme,
    MaterialMagnifier? materialMagnifier,
    MaterialMaterial? materialMaterial,
    MaterialMaterialButton? materialMaterialButton,
    MaterialCheckboxMenuButton? materialCheckboxMenuButton,
    MaterialMenuAcceleratorCallbackBinding? materialMenuAcceleratorCallbackBinding,
    MaterialMenuAcceleratorLabel? materialMenuAcceleratorLabel,
    MaterialMenuAnchor? materialMenuAnchor,
    MaterialMenuBar? materialMenuBar,
    MaterialMenuItemButton? materialMenuItemButton,
    MaterialSubmenuButton? materialSubmenuButton,
    MaterialMergeableMaterial? materialMergeableMaterial,
    MaterialNavigationBar? materialNavigationBar,
    MaterialNavigationDestination? materialNavigationDestination,
    MaterialNavigationDrawer? materialNavigationDrawer,
    MaterialNavigationDrawerDestination? materialNavigationDrawerDestination,
    MaterialOutlinedButton? materialOutlinedButton,
    MaterialOutlinedButtonNamedIcon? materialOutlinedButtonNamedIcon,
    MaterialCheckedPopupMenuItem? materialCheckedPopupMenuItem,
    MaterialPopupMenuDivider? materialPopupMenuDivider,
    MaterialPopupMenuItem? materialPopupMenuItem,
    MaterialCircularProgressIndicator? materialCircularProgressIndicator,
    MaterialCircularProgressIndicatorNamedAdaptive? materialCircularProgressIndicatorNamedAdaptive,
    MaterialLinearProgressIndicator? materialLinearProgressIndicator,
    MaterialRefreshProgressIndicator? materialRefreshProgressIndicator,
    MaterialScaffold? materialScaffold,
    MaterialScaffoldMessenger? materialScaffoldMessenger,
    MaterialScrollbar? materialScrollbar,
    MaterialSearchBar? materialSearchBar,
    MaterialSelectableText? materialSelectableText,
    MaterialSelectionArea? materialSelectionArea,
    MaterialSlider? materialSlider,
    MaterialSliderNamedAdaptive? materialSliderNamedAdaptive,
    MaterialSnackBar? materialSnackBar,
    MaterialSwitch? materialSwitch,
    MaterialSwitchNamedAdaptive? materialSwitchNamedAdaptive,
    MaterialSwitchListTile? materialSwitchListTile,
    MaterialSwitchListTileNamedAdaptive? materialSwitchListTileNamedAdaptive,
    MaterialDefaultTabController? materialDefaultTabController,
    MaterialTab? materialTab,
    MaterialTabBar? materialTabBar,
    MaterialTabBarNamedSecondary? materialTabBarNamedSecondary,
    MaterialTabBarView? materialTabBarView,
    MaterialTabPageSelector? materialTabPageSelector,
    MaterialTabPageSelectorIndicator? materialTabPageSelectorIndicator,
    MaterialTextButton? materialTextButton,
    MaterialTextButtonNamedIcon? materialTextButtonNamedIcon,
    MaterialTextField? materialTextField,
    MaterialTextFormField? materialTextFormField,
    MaterialToggleButtons? materialToggleButtons,
    MaterialTooltip? materialTooltip,
    MaterialTooltipVisibility? materialTooltipVisibility,
    MaterialUserAccountsDrawerHeader? materialUserAccountsDrawerHeader,
    FlutterPlatformSelectableRegionContextMenu? flutterPlatformSelectableRegionContextMenu,
    FlutterFocusableActionDetector? flutterFocusableActionDetector,
    FlutterAnimatedSize? flutterAnimatedSize,
    FlutterAnimatedSwitcher? flutterAnimatedSwitcher,
    FlutterWidgetsApp? flutterWidgetsApp,
    FlutterWidgetsAppNamedRouter? flutterWidgetsAppNamedRouter,
    FlutterAutofillGroup? flutterAutofillGroup,
    FlutterAutomaticKeepAlive? flutterAutomaticKeepAlive,
    FlutterCheckedModeBanner? flutterCheckedModeBanner,
    FlutterAbsorbPointer? flutterAbsorbPointer,
    FlutterAlign? flutterAlign,
    FlutterAspectRatio? flutterAspectRatio,
    FlutterBlockSemantics? flutterBlockSemantics,
    FlutterCenter? flutterCenter,
    FlutterClipOval? flutterClipOval,
    FlutterClipPath? flutterClipPath,
    FlutterClipRRect? flutterClipRRect,
    FlutterClipRect? flutterClipRect,
    FlutterColoredBox? flutterColoredBox,
    FlutterColumn? flutterColumn,
    FlutterCustomPaint? flutterCustomPaint,
    FlutterExcludeSemantics? flutterExcludeSemantics,
    FlutterExpanded? flutterExpanded,
    FlutterFittedBox? flutterFittedBox,
    FlutterFlexible? flutterFlexible,
    FlutterFractionallySizedBox? flutterFractionallySizedBox,
    FlutterIgnorePointer? flutterIgnorePointer,
    FlutterIndexedSemantics? flutterIndexedSemantics,
    FlutterIndexedStack? flutterIndexedStack,
    FlutterIntrinsicHeight? flutterIntrinsicHeight,
    FlutterIntrinsicWidth? flutterIntrinsicWidth,
    FlutterKeyedSubtree? flutterKeyedSubtree,
    FlutterKeyedSubtreeNamedWrap? flutterKeyedSubtreeNamedWrap,
    FlutterLimitedBox? flutterLimitedBox,
    FlutterListBody? flutterListBody,
    FlutterListener? flutterListener,
    FlutterMergeSemantics? flutterMergeSemantics,
    FlutterMetaData? flutterMetaData,
    FlutterMouseRegion? flutterMouseRegion,
    FlutterOffstage? flutterOffstage,
    FlutterOpacity? flutterOpacity,
    FlutterOverflowBox? flutterOverflowBox,
    FlutterPhysicalModel? flutterPhysicalModel,
    FlutterPositioned? flutterPositioned,
    FlutterPositionedNamedFill? flutterPositionedNamedFill,
    FlutterPositionedDirectional? flutterPositionedDirectional,
    FlutterRawImage? flutterRawImage,
    FlutterRepaintBoundary? flutterRepaintBoundary,
    FlutterRepaintBoundaryNamedWrap? flutterRepaintBoundaryNamedWrap,
    FlutterRotatedBox? flutterRotatedBox,
    FlutterRow? flutterRow,
    FlutterSemantics? flutterSemantics,
    FlutterSizedBox? flutterSizedBox,
    FlutterSizedBoxNamedExpand? flutterSizedBoxNamedExpand,
    FlutterSizedBoxNamedShrink? flutterSizedBoxNamedShrink,
    FlutterSizedBoxNamedFromSize? flutterSizedBoxNamedFromSize,
    FlutterSizedBoxNamedSquare? flutterSizedBoxNamedSquare,
    FlutterSliverToBoxAdapter? flutterSliverToBoxAdapter,
    FlutterStack? flutterStack,
    FlutterTransformNamedRotate? flutterTransformNamedRotate,
    FlutterTransformNamedScale? flutterTransformNamedScale,
    FlutterTransformNamedFlip? flutterTransformNamedFlip,
    FlutterUnconstrainedBox? flutterUnconstrainedBox,
    FlutterWrap? flutterWrap,
    FlutterContainer? flutterContainer,
    FlutterDefaultSelectionStyle? flutterDefaultSelectionStyle,
    FlutterDefaultSelectionStyleNamedFallback? flutterDefaultSelectionStyleNamedFallback,
    FlutterDefaultTextEditingShortcuts? flutterDefaultTextEditingShortcuts,
    FlutterDismissible? flutterDismissible,
    FlutterDisplayFeatureSubScreen? flutterDisplayFeatureSubScreen,
    FlutterDraggable? flutterDraggable,
    FlutterLongPressDraggable? flutterLongPressDraggable,
    FlutterDraggableScrollableActuator? flutterDraggableScrollableActuator,
    FlutterFadeInImageNamedAssetNetwork? flutterFadeInImageNamedAssetNetwork,
    FlutterExcludeFocus? flutterExcludeFocus,
    FlutterFocus? flutterFocus,
    FlutterFocusScope? flutterFocusScope,
    FlutterExcludeFocusTraversal? flutterExcludeFocusTraversal,
    FlutterFocusTraversalGroup? flutterFocusTraversalGroup,
    FlutterForm? flutterForm,
    FlutterErrorWidgetNamedWithDetails? flutterErrorWidgetNamedWithDetails,
    FlutterGestureDetector? flutterGestureDetector,
    FlutterRawGestureDetector? flutterRawGestureDetector,
    FlutterGridPaper? flutterGridPaper,
    FlutterHeroMode? flutterHeroMode,
    FlutterIcon? flutterIcon,
    FlutterImageNamedNetwork? flutterImageNamedNetwork,
    FlutterImageNamedAsset? flutterImageNamedAsset,
    FlutterImageIcon? flutterImageIcon,
    FlutterAnimatedContainer? flutterAnimatedContainer,
    FlutterAnimatedFractionallySizedBox? flutterAnimatedFractionallySizedBox,
    FlutterAnimatedOpacity? flutterAnimatedOpacity,
    FlutterAnimatedPositioned? flutterAnimatedPositioned,
    FlutterAnimatedPositionedDirectional? flutterAnimatedPositionedDirectional,
    FlutterAnimatedRotation? flutterAnimatedRotation,
    FlutterAnimatedScale? flutterAnimatedScale,
    FlutterSliverAnimatedOpacity? flutterSliverAnimatedOpacity,
    FlutterInteractiveViewer? flutterInteractiveViewer,
    FlutterListWheelScrollView? flutterListWheelScrollView,
    FlutterLookupBoundary? flutterLookupBoundary,
    FlutterModalBarrier? flutterModalBarrier,
    FlutterNavigationToolbar? flutterNavigationToolbar,
    FlutterHeroControllerScopeNamedNone? flutterHeroControllerScopeNamedNone,
    FlutterNavigator? flutterNavigator,
    FlutterNotificationListener? flutterNotificationListener,
    FlutterOverflowBar? flutterOverflowBar,
    FlutterOverlay? flutterOverlay,
    FlutterPageView? flutterPageView,
    FlutterPerformanceOverlay? flutterPerformanceOverlay,
    FlutterPerformanceOverlayNamedAllEnabled? flutterPerformanceOverlayNamedAllEnabled,
    FlutterPlaceholder? flutterPlaceholder,
    FlutterAndroidView? flutterAndroidView,
    FlutterHtmlElementView? flutterHtmlElementView,
    FlutterUiKitView? flutterUiKitView,
    FlutterPrimaryScrollControllerNamedNone? flutterPrimaryScrollControllerNamedNone,
    FlutterReorderableDelayedDragStartListener? flutterReorderableDelayedDragStartListener,
    FlutterReorderableDragStartListener? flutterReorderableDragStartListener,
    FlutterRestorationScope? flutterRestorationScope,
    FlutterRootRestorationScope? flutterRootRestorationScope,
    FlutterUnmanagedRestorationScope? flutterUnmanagedRestorationScope,
    FlutterSafeArea? flutterSafeArea,
    FlutterSliverSafeArea? flutterSliverSafeArea,
    FlutterScrollNotificationObserver? flutterScrollNotificationObserver,
    FlutterCustomScrollView? flutterCustomScrollView,
    FlutterGridViewNamedCount? flutterGridViewNamedCount,
    FlutterGridViewNamedExtent? flutterGridViewNamedExtent,
    FlutterListView? flutterListView,
    FlutterRawScrollbar? flutterRawScrollbar,
    FlutterSelectionContainerNamedDisabled? flutterSelectionContainerNamedDisabled,
    FlutterSemanticsDebugger? flutterSemanticsDebugger,
    FlutterSharedAppData? flutterSharedAppData,
    FlutterShortcutRegistrar? flutterShortcutRegistrar,
    FlutterSingleChildScrollView? flutterSingleChildScrollView,
    FlutterSizeChangedLayoutNotifier? flutterSizeChangedLayoutNotifier,
    FlutterKeepAlive? flutterKeepAlive,
    FlutterSliverConstrainedCrossAxis? flutterSliverConstrainedCrossAxis,
    FlutterSliverCrossAxisExpanded? flutterSliverCrossAxisExpanded,
    FlutterSliverCrossAxisGroup? flutterSliverCrossAxisGroup,
    FlutterSliverFixedExtentListNamedList? flutterSliverFixedExtentListNamedList,
    FlutterSliverGridNamedCount? flutterSliverGridNamedCount,
    FlutterSliverGridNamedExtent? flutterSliverGridNamedExtent,
    FlutterSliverIgnorePointer? flutterSliverIgnorePointer,
    FlutterSliverListNamedList? flutterSliverListNamedList,
    FlutterSliverMainAxisGroup? flutterSliverMainAxisGroup,
    FlutterSliverOffstage? flutterSliverOffstage,
    FlutterSliverOpacity? flutterSliverOpacity,
    FlutterSliverFillRemaining? flutterSliverFillRemaining,
    FlutterSliverPrototypeExtentListNamedList? flutterSliverPrototypeExtentListNamedList,
    FlutterSpacer? flutterSpacer,
    FlutterTable? flutterTable,
    FlutterTableCell? flutterTableCell,
    FlutterTapRegion? flutterTapRegion,
    FlutterTapRegionSurface? flutterTapRegionSurface,
    FlutterTextFieldTapRegion? flutterTextFieldTapRegion,
    FlutterDefaultTextStyleNamedFallback? flutterDefaultTextStyleNamedFallback,
    FlutterText? flutterText,
    FlutterTextSelectionGestureDetector? flutterTextSelectionGestureDetector,
    FlutterTexture? flutterTexture,
    FlutterTickerMode? flutterTickerMode,
    FlutterTitle? flutterTitle,
    FlutterSliverVisibility? flutterSliverVisibility,
    FlutterSliverVisibilityNamedMaintain? flutterSliverVisibilityNamedMaintain,
    FlutterVisibility? flutterVisibility,
    FlutterVisibilityNamedMaintain? flutterVisibilityNamedMaintain,
    FlutterWidgetInspector? flutterWidgetInspector,
    FlutterWillPopScope? flutterWillPopScope,
    FlutterProjectMyApp? flutterProjectMyApp,
    FlutterProjectMyHomePage? flutterProjectMyHomePage,
  }) {
    final $result = create();
    if (cupertinoActivityIndicator != null) {
      $result.cupertinoActivityIndicator = cupertinoActivityIndicator;
    }
    if (cupertinoActivityIndicatorNamedPartiallyRevealed != null) {
      $result.cupertinoActivityIndicatorNamedPartiallyRevealed = cupertinoActivityIndicatorNamedPartiallyRevealed;
    }
    if (cupertinoApp != null) {
      $result.cupertinoApp = cupertinoApp;
    }
    if (cupertinoAppNamedRouter != null) {
      $result.cupertinoAppNamedRouter = cupertinoAppNamedRouter;
    }
    if (cupertinoButton != null) {
      $result.cupertinoButton = cupertinoButton;
    }
    if (cupertinoButtonNamedFilled != null) {
      $result.cupertinoButtonNamedFilled = cupertinoButtonNamedFilled;
    }
    if (cupertinoCheckbox != null) {
      $result.cupertinoCheckbox = cupertinoCheckbox;
    }
    if (cupertinoContextMenu != null) {
      $result.cupertinoContextMenu = cupertinoContextMenu;
    }
    if (cupertinoContextMenuAction != null) {
      $result.cupertinoContextMenuAction = cupertinoContextMenuAction;
    }
    if (cupertinoDesktopTextSelectionToolbarButton != null) {
      $result.cupertinoDesktopTextSelectionToolbarButton = cupertinoDesktopTextSelectionToolbarButton;
    }
    if (cupertinoDesktopTextSelectionToolbarButtonNamedText != null) {
      $result.cupertinoDesktopTextSelectionToolbarButtonNamedText = cupertinoDesktopTextSelectionToolbarButtonNamedText;
    }
    if (cupertinoActionSheet != null) {
      $result.cupertinoActionSheet = cupertinoActionSheet;
    }
    if (cupertinoAlertDialog != null) {
      $result.cupertinoAlertDialog = cupertinoAlertDialog;
    }
    if (cupertinoDialogAction != null) {
      $result.cupertinoDialogAction = cupertinoDialogAction;
    }
    if (cupertinoPopupSurface != null) {
      $result.cupertinoPopupSurface = cupertinoPopupSurface;
    }
    if (cupertinoFormRow != null) {
      $result.cupertinoFormRow = cupertinoFormRow;
    }
    if (cupertinoFormSection != null) {
      $result.cupertinoFormSection = cupertinoFormSection;
    }
    if (cupertinoFormSectionNamedInsetGrouped != null) {
      $result.cupertinoFormSectionNamedInsetGrouped = cupertinoFormSectionNamedInsetGrouped;
    }
    if (cupertinoListSection != null) {
      $result.cupertinoListSection = cupertinoListSection;
    }
    if (cupertinoListSectionNamedInsetGrouped != null) {
      $result.cupertinoListSectionNamedInsetGrouped = cupertinoListSectionNamedInsetGrouped;
    }
    if (cupertinoListTile != null) {
      $result.cupertinoListTile = cupertinoListTile;
    }
    if (cupertinoListTileNamedNotched != null) {
      $result.cupertinoListTileNamedNotched = cupertinoListTileNamedNotched;
    }
    if (cupertinoListTileChevron != null) {
      $result.cupertinoListTileChevron = cupertinoListTileChevron;
    }
    if (cupertinoMagnifier != null) {
      $result.cupertinoMagnifier = cupertinoMagnifier;
    }
    if (cupertinoNavigationBar != null) {
      $result.cupertinoNavigationBar = cupertinoNavigationBar;
    }
    if (cupertinoNavigationBarBackButton != null) {
      $result.cupertinoNavigationBarBackButton = cupertinoNavigationBarBackButton;
    }
    if (cupertinoSliverNavigationBar != null) {
      $result.cupertinoSliverNavigationBar = cupertinoSliverNavigationBar;
    }
    if (cupertinoPageScaffold != null) {
      $result.cupertinoPageScaffold = cupertinoPageScaffold;
    }
    if (cupertinoPicker != null) {
      $result.cupertinoPicker = cupertinoPicker;
    }
    if (cupertinoPickerDefaultSelectionOverlay != null) {
      $result.cupertinoPickerDefaultSelectionOverlay = cupertinoPickerDefaultSelectionOverlay;
    }
    if (cupertinoSliverRefreshControl != null) {
      $result.cupertinoSliverRefreshControl = cupertinoSliverRefreshControl;
    }
    if (cupertinoScrollbar != null) {
      $result.cupertinoScrollbar = cupertinoScrollbar;
    }
    if (cupertinoSearchTextField != null) {
      $result.cupertinoSearchTextField = cupertinoSearchTextField;
    }
    if (cupertinoSlider != null) {
      $result.cupertinoSlider = cupertinoSlider;
    }
    if (cupertinoSwitch != null) {
      $result.cupertinoSwitch = cupertinoSwitch;
    }
    if (cupertinoTabView != null) {
      $result.cupertinoTabView = cupertinoTabView;
    }
    if (cupertinoTextField != null) {
      $result.cupertinoTextField = cupertinoTextField;
    }
    if (cupertinoTextFieldNamedBorderless != null) {
      $result.cupertinoTextFieldNamedBorderless = cupertinoTextFieldNamedBorderless;
    }
    if (cupertinoTextFormFieldRow != null) {
      $result.cupertinoTextFormFieldRow = cupertinoTextFormFieldRow;
    }
    if (cupertinoTextSelectionToolbarButton != null) {
      $result.cupertinoTextSelectionToolbarButton = cupertinoTextSelectionToolbarButton;
    }
    if (cupertinoTextSelectionToolbarButtonNamedText != null) {
      $result.cupertinoTextSelectionToolbarButtonNamedText = cupertinoTextSelectionToolbarButtonNamedText;
    }
    if (materialAboutDialog != null) {
      $result.materialAboutDialog = materialAboutDialog;
    }
    if (materialAboutListTile != null) {
      $result.materialAboutListTile = materialAboutListTile;
    }
    if (materialLicensePage != null) {
      $result.materialLicensePage = materialLicensePage;
    }
    if (materialBackButton != null) {
      $result.materialBackButton = materialBackButton;
    }
    if (materialBackButtonIcon != null) {
      $result.materialBackButtonIcon = materialBackButtonIcon;
    }
    if (materialCloseButton != null) {
      $result.materialCloseButton = materialCloseButton;
    }
    if (materialCloseButtonIcon != null) {
      $result.materialCloseButtonIcon = materialCloseButtonIcon;
    }
    if (materialDrawerButton != null) {
      $result.materialDrawerButton = materialDrawerButton;
    }
    if (materialDrawerButtonIcon != null) {
      $result.materialDrawerButtonIcon = materialDrawerButtonIcon;
    }
    if (materialEndDrawerButton != null) {
      $result.materialEndDrawerButton = materialEndDrawerButton;
    }
    if (materialEndDrawerButtonIcon != null) {
      $result.materialEndDrawerButtonIcon = materialEndDrawerButtonIcon;
    }
    if (materialActionChip != null) {
      $result.materialActionChip = materialActionChip;
    }
    if (materialActionChipNamedElevated != null) {
      $result.materialActionChipNamedElevated = materialActionChipNamedElevated;
    }
    if (materialMaterialApp != null) {
      $result.materialMaterialApp = materialMaterialApp;
    }
    if (materialMaterialAppNamedRouter != null) {
      $result.materialMaterialAppNamedRouter = materialMaterialAppNamedRouter;
    }
    if (materialAppBar != null) {
      $result.materialAppBar = materialAppBar;
    }
    if (materialSliverAppBar != null) {
      $result.materialSliverAppBar = materialSliverAppBar;
    }
    if (materialSliverAppBarNamedMedium != null) {
      $result.materialSliverAppBarNamedMedium = materialSliverAppBarNamedMedium;
    }
    if (materialSliverAppBarNamedLarge != null) {
      $result.materialSliverAppBarNamedLarge = materialSliverAppBarNamedLarge;
    }
    if (materialBadge != null) {
      $result.materialBadge = materialBadge;
    }
    if (materialBadgeNamedCount != null) {
      $result.materialBadgeNamedCount = materialBadgeNamedCount;
    }
    if (materialMaterialBanner != null) {
      $result.materialMaterialBanner = materialMaterialBanner;
    }
    if (materialMaterialBannerTheme != null) {
      $result.materialMaterialBannerTheme = materialMaterialBannerTheme;
    }
    if (materialBottomAppBar != null) {
      $result.materialBottomAppBar = materialBottomAppBar;
    }
    if (materialRawMaterialButton != null) {
      $result.materialRawMaterialButton = materialRawMaterialButton;
    }
    if (materialButtonBar != null) {
      $result.materialButtonBar = materialButtonBar;
    }
    if (materialButtonTheme != null) {
      $result.materialButtonTheme = materialButtonTheme;
    }
    if (materialCard != null) {
      $result.materialCard = materialCard;
    }
    if (materialCheckbox != null) {
      $result.materialCheckbox = materialCheckbox;
    }
    if (materialCheckboxNamedAdaptive != null) {
      $result.materialCheckboxNamedAdaptive = materialCheckboxNamedAdaptive;
    }
    if (materialCheckboxListTile != null) {
      $result.materialCheckboxListTile = materialCheckboxListTile;
    }
    if (materialCheckboxListTileNamedAdaptive != null) {
      $result.materialCheckboxListTileNamedAdaptive = materialCheckboxListTileNamedAdaptive;
    }
    if (materialChip != null) {
      $result.materialChip = materialChip;
    }
    if (materialRawChip != null) {
      $result.materialRawChip = materialRawChip;
    }
    if (materialChoiceChip != null) {
      $result.materialChoiceChip = materialChoiceChip;
    }
    if (materialChoiceChipNamedElevated != null) {
      $result.materialChoiceChipNamedElevated = materialChoiceChipNamedElevated;
    }
    if (materialCircleAvatar != null) {
      $result.materialCircleAvatar = materialCircleAvatar;
    }
    if (materialTableRowInkWell != null) {
      $result.materialTableRowInkWell = materialTableRowInkWell;
    }
    if (materialDesktopTextSelectionToolbarButton != null) {
      $result.materialDesktopTextSelectionToolbarButton = materialDesktopTextSelectionToolbarButton;
    }
    if (materialAlertDialog != null) {
      $result.materialAlertDialog = materialAlertDialog;
    }
    if (materialAlertDialogNamedAdaptive != null) {
      $result.materialAlertDialogNamedAdaptive = materialAlertDialogNamedAdaptive;
    }
    if (materialDialog != null) {
      $result.materialDialog = materialDialog;
    }
    if (materialDialogNamedFullscreen != null) {
      $result.materialDialogNamedFullscreen = materialDialogNamedFullscreen;
    }
    if (materialSimpleDialog != null) {
      $result.materialSimpleDialog = materialSimpleDialog;
    }
    if (materialSimpleDialogOption != null) {
      $result.materialSimpleDialogOption = materialSimpleDialogOption;
    }
    if (materialDivider != null) {
      $result.materialDivider = materialDivider;
    }
    if (materialVerticalDivider != null) {
      $result.materialVerticalDivider = materialVerticalDivider;
    }
    if (materialDrawer != null) {
      $result.materialDrawer = materialDrawer;
    }
    if (materialDrawerHeader != null) {
      $result.materialDrawerHeader = materialDrawerHeader;
    }
    if (materialDropdownButton != null) {
      $result.materialDropdownButton = materialDropdownButton;
    }
    if (materialDropdownButtonFormField != null) {
      $result.materialDropdownButtonFormField = materialDropdownButtonFormField;
    }
    if (materialDropdownButtonHideUnderline != null) {
      $result.materialDropdownButtonHideUnderline = materialDropdownButtonHideUnderline;
    }
    if (materialDropdownMenuItem != null) {
      $result.materialDropdownMenuItem = materialDropdownMenuItem;
    }
    if (materialElevatedButton != null) {
      $result.materialElevatedButton = materialElevatedButton;
    }
    if (materialElevatedButtonNamedIcon != null) {
      $result.materialElevatedButtonNamedIcon = materialElevatedButtonNamedIcon;
    }
    if (materialExpandIcon != null) {
      $result.materialExpandIcon = materialExpandIcon;
    }
    if (materialExpansionPanelList != null) {
      $result.materialExpansionPanelList = materialExpansionPanelList;
    }
    if (materialExpansionPanelListNamedRadio != null) {
      $result.materialExpansionPanelListNamedRadio = materialExpansionPanelListNamedRadio;
    }
    if (materialExpansionTile != null) {
      $result.materialExpansionTile = materialExpansionTile;
    }
    if (materialFilledButton != null) {
      $result.materialFilledButton = materialFilledButton;
    }
    if (materialFilledButtonNamedIcon != null) {
      $result.materialFilledButtonNamedIcon = materialFilledButtonNamedIcon;
    }
    if (materialFilledButtonNamedTonal != null) {
      $result.materialFilledButtonNamedTonal = materialFilledButtonNamedTonal;
    }
    if (materialFilledButtonNamedTonalIcon != null) {
      $result.materialFilledButtonNamedTonalIcon = materialFilledButtonNamedTonalIcon;
    }
    if (materialFilterChip != null) {
      $result.materialFilterChip = materialFilterChip;
    }
    if (materialFilterChipNamedElevated != null) {
      $result.materialFilterChipNamedElevated = materialFilterChipNamedElevated;
    }
    if (materialFlexibleSpaceBar != null) {
      $result.materialFlexibleSpaceBar = materialFlexibleSpaceBar;
    }
    if (materialFlexibleSpaceBarSettings != null) {
      $result.materialFlexibleSpaceBarSettings = materialFlexibleSpaceBarSettings;
    }
    if (materialFloatingActionButton != null) {
      $result.materialFloatingActionButton = materialFloatingActionButton;
    }
    if (materialFloatingActionButtonNamedSmall != null) {
      $result.materialFloatingActionButtonNamedSmall = materialFloatingActionButtonNamedSmall;
    }
    if (materialFloatingActionButtonNamedLarge != null) {
      $result.materialFloatingActionButtonNamedLarge = materialFloatingActionButtonNamedLarge;
    }
    if (materialFloatingActionButtonNamedExtended != null) {
      $result.materialFloatingActionButtonNamedExtended = materialFloatingActionButtonNamedExtended;
    }
    if (materialFlutterLogo != null) {
      $result.materialFlutterLogo = materialFlutterLogo;
    }
    if (materialGridTile != null) {
      $result.materialGridTile = materialGridTile;
    }
    if (materialGridTileBar != null) {
      $result.materialGridTileBar = materialGridTileBar;
    }
    if (materialIconButton != null) {
      $result.materialIconButton = materialIconButton;
    }
    if (materialIconButtonNamedFilled != null) {
      $result.materialIconButtonNamedFilled = materialIconButtonNamedFilled;
    }
    if (materialIconButtonNamedFilledTonal != null) {
      $result.materialIconButtonNamedFilledTonal = materialIconButtonNamedFilledTonal;
    }
    if (materialIconButtonNamedOutlined != null) {
      $result.materialIconButtonNamedOutlined = materialIconButtonNamedOutlined;
    }
    if (materialInk != null) {
      $result.materialInk = materialInk;
    }
    if (materialInkResponse != null) {
      $result.materialInkResponse = materialInkResponse;
    }
    if (materialInkWell != null) {
      $result.materialInkWell = materialInkWell;
    }
    if (materialInputChip != null) {
      $result.materialInputChip = materialInputChip;
    }
    if (materialListTile != null) {
      $result.materialListTile = materialListTile;
    }
    if (materialListTileTheme != null) {
      $result.materialListTileTheme = materialListTileTheme;
    }
    if (materialMagnifier != null) {
      $result.materialMagnifier = materialMagnifier;
    }
    if (materialMaterial != null) {
      $result.materialMaterial = materialMaterial;
    }
    if (materialMaterialButton != null) {
      $result.materialMaterialButton = materialMaterialButton;
    }
    if (materialCheckboxMenuButton != null) {
      $result.materialCheckboxMenuButton = materialCheckboxMenuButton;
    }
    if (materialMenuAcceleratorCallbackBinding != null) {
      $result.materialMenuAcceleratorCallbackBinding = materialMenuAcceleratorCallbackBinding;
    }
    if (materialMenuAcceleratorLabel != null) {
      $result.materialMenuAcceleratorLabel = materialMenuAcceleratorLabel;
    }
    if (materialMenuAnchor != null) {
      $result.materialMenuAnchor = materialMenuAnchor;
    }
    if (materialMenuBar != null) {
      $result.materialMenuBar = materialMenuBar;
    }
    if (materialMenuItemButton != null) {
      $result.materialMenuItemButton = materialMenuItemButton;
    }
    if (materialSubmenuButton != null) {
      $result.materialSubmenuButton = materialSubmenuButton;
    }
    if (materialMergeableMaterial != null) {
      $result.materialMergeableMaterial = materialMergeableMaterial;
    }
    if (materialNavigationBar != null) {
      $result.materialNavigationBar = materialNavigationBar;
    }
    if (materialNavigationDestination != null) {
      $result.materialNavigationDestination = materialNavigationDestination;
    }
    if (materialNavigationDrawer != null) {
      $result.materialNavigationDrawer = materialNavigationDrawer;
    }
    if (materialNavigationDrawerDestination != null) {
      $result.materialNavigationDrawerDestination = materialNavigationDrawerDestination;
    }
    if (materialOutlinedButton != null) {
      $result.materialOutlinedButton = materialOutlinedButton;
    }
    if (materialOutlinedButtonNamedIcon != null) {
      $result.materialOutlinedButtonNamedIcon = materialOutlinedButtonNamedIcon;
    }
    if (materialCheckedPopupMenuItem != null) {
      $result.materialCheckedPopupMenuItem = materialCheckedPopupMenuItem;
    }
    if (materialPopupMenuDivider != null) {
      $result.materialPopupMenuDivider = materialPopupMenuDivider;
    }
    if (materialPopupMenuItem != null) {
      $result.materialPopupMenuItem = materialPopupMenuItem;
    }
    if (materialCircularProgressIndicator != null) {
      $result.materialCircularProgressIndicator = materialCircularProgressIndicator;
    }
    if (materialCircularProgressIndicatorNamedAdaptive != null) {
      $result.materialCircularProgressIndicatorNamedAdaptive = materialCircularProgressIndicatorNamedAdaptive;
    }
    if (materialLinearProgressIndicator != null) {
      $result.materialLinearProgressIndicator = materialLinearProgressIndicator;
    }
    if (materialRefreshProgressIndicator != null) {
      $result.materialRefreshProgressIndicator = materialRefreshProgressIndicator;
    }
    if (materialScaffold != null) {
      $result.materialScaffold = materialScaffold;
    }
    if (materialScaffoldMessenger != null) {
      $result.materialScaffoldMessenger = materialScaffoldMessenger;
    }
    if (materialScrollbar != null) {
      $result.materialScrollbar = materialScrollbar;
    }
    if (materialSearchBar != null) {
      $result.materialSearchBar = materialSearchBar;
    }
    if (materialSelectableText != null) {
      $result.materialSelectableText = materialSelectableText;
    }
    if (materialSelectionArea != null) {
      $result.materialSelectionArea = materialSelectionArea;
    }
    if (materialSlider != null) {
      $result.materialSlider = materialSlider;
    }
    if (materialSliderNamedAdaptive != null) {
      $result.materialSliderNamedAdaptive = materialSliderNamedAdaptive;
    }
    if (materialSnackBar != null) {
      $result.materialSnackBar = materialSnackBar;
    }
    if (materialSwitch != null) {
      $result.materialSwitch = materialSwitch;
    }
    if (materialSwitchNamedAdaptive != null) {
      $result.materialSwitchNamedAdaptive = materialSwitchNamedAdaptive;
    }
    if (materialSwitchListTile != null) {
      $result.materialSwitchListTile = materialSwitchListTile;
    }
    if (materialSwitchListTileNamedAdaptive != null) {
      $result.materialSwitchListTileNamedAdaptive = materialSwitchListTileNamedAdaptive;
    }
    if (materialDefaultTabController != null) {
      $result.materialDefaultTabController = materialDefaultTabController;
    }
    if (materialTab != null) {
      $result.materialTab = materialTab;
    }
    if (materialTabBar != null) {
      $result.materialTabBar = materialTabBar;
    }
    if (materialTabBarNamedSecondary != null) {
      $result.materialTabBarNamedSecondary = materialTabBarNamedSecondary;
    }
    if (materialTabBarView != null) {
      $result.materialTabBarView = materialTabBarView;
    }
    if (materialTabPageSelector != null) {
      $result.materialTabPageSelector = materialTabPageSelector;
    }
    if (materialTabPageSelectorIndicator != null) {
      $result.materialTabPageSelectorIndicator = materialTabPageSelectorIndicator;
    }
    if (materialTextButton != null) {
      $result.materialTextButton = materialTextButton;
    }
    if (materialTextButtonNamedIcon != null) {
      $result.materialTextButtonNamedIcon = materialTextButtonNamedIcon;
    }
    if (materialTextField != null) {
      $result.materialTextField = materialTextField;
    }
    if (materialTextFormField != null) {
      $result.materialTextFormField = materialTextFormField;
    }
    if (materialToggleButtons != null) {
      $result.materialToggleButtons = materialToggleButtons;
    }
    if (materialTooltip != null) {
      $result.materialTooltip = materialTooltip;
    }
    if (materialTooltipVisibility != null) {
      $result.materialTooltipVisibility = materialTooltipVisibility;
    }
    if (materialUserAccountsDrawerHeader != null) {
      $result.materialUserAccountsDrawerHeader = materialUserAccountsDrawerHeader;
    }
    if (flutterPlatformSelectableRegionContextMenu != null) {
      $result.flutterPlatformSelectableRegionContextMenu = flutterPlatformSelectableRegionContextMenu;
    }
    if (flutterFocusableActionDetector != null) {
      $result.flutterFocusableActionDetector = flutterFocusableActionDetector;
    }
    if (flutterAnimatedSize != null) {
      $result.flutterAnimatedSize = flutterAnimatedSize;
    }
    if (flutterAnimatedSwitcher != null) {
      $result.flutterAnimatedSwitcher = flutterAnimatedSwitcher;
    }
    if (flutterWidgetsApp != null) {
      $result.flutterWidgetsApp = flutterWidgetsApp;
    }
    if (flutterWidgetsAppNamedRouter != null) {
      $result.flutterWidgetsAppNamedRouter = flutterWidgetsAppNamedRouter;
    }
    if (flutterAutofillGroup != null) {
      $result.flutterAutofillGroup = flutterAutofillGroup;
    }
    if (flutterAutomaticKeepAlive != null) {
      $result.flutterAutomaticKeepAlive = flutterAutomaticKeepAlive;
    }
    if (flutterCheckedModeBanner != null) {
      $result.flutterCheckedModeBanner = flutterCheckedModeBanner;
    }
    if (flutterAbsorbPointer != null) {
      $result.flutterAbsorbPointer = flutterAbsorbPointer;
    }
    if (flutterAlign != null) {
      $result.flutterAlign = flutterAlign;
    }
    if (flutterAspectRatio != null) {
      $result.flutterAspectRatio = flutterAspectRatio;
    }
    if (flutterBlockSemantics != null) {
      $result.flutterBlockSemantics = flutterBlockSemantics;
    }
    if (flutterCenter != null) {
      $result.flutterCenter = flutterCenter;
    }
    if (flutterClipOval != null) {
      $result.flutterClipOval = flutterClipOval;
    }
    if (flutterClipPath != null) {
      $result.flutterClipPath = flutterClipPath;
    }
    if (flutterClipRRect != null) {
      $result.flutterClipRRect = flutterClipRRect;
    }
    if (flutterClipRect != null) {
      $result.flutterClipRect = flutterClipRect;
    }
    if (flutterColoredBox != null) {
      $result.flutterColoredBox = flutterColoredBox;
    }
    if (flutterColumn != null) {
      $result.flutterColumn = flutterColumn;
    }
    if (flutterCustomPaint != null) {
      $result.flutterCustomPaint = flutterCustomPaint;
    }
    if (flutterExcludeSemantics != null) {
      $result.flutterExcludeSemantics = flutterExcludeSemantics;
    }
    if (flutterExpanded != null) {
      $result.flutterExpanded = flutterExpanded;
    }
    if (flutterFittedBox != null) {
      $result.flutterFittedBox = flutterFittedBox;
    }
    if (flutterFlexible != null) {
      $result.flutterFlexible = flutterFlexible;
    }
    if (flutterFractionallySizedBox != null) {
      $result.flutterFractionallySizedBox = flutterFractionallySizedBox;
    }
    if (flutterIgnorePointer != null) {
      $result.flutterIgnorePointer = flutterIgnorePointer;
    }
    if (flutterIndexedSemantics != null) {
      $result.flutterIndexedSemantics = flutterIndexedSemantics;
    }
    if (flutterIndexedStack != null) {
      $result.flutterIndexedStack = flutterIndexedStack;
    }
    if (flutterIntrinsicHeight != null) {
      $result.flutterIntrinsicHeight = flutterIntrinsicHeight;
    }
    if (flutterIntrinsicWidth != null) {
      $result.flutterIntrinsicWidth = flutterIntrinsicWidth;
    }
    if (flutterKeyedSubtree != null) {
      $result.flutterKeyedSubtree = flutterKeyedSubtree;
    }
    if (flutterKeyedSubtreeNamedWrap != null) {
      $result.flutterKeyedSubtreeNamedWrap = flutterKeyedSubtreeNamedWrap;
    }
    if (flutterLimitedBox != null) {
      $result.flutterLimitedBox = flutterLimitedBox;
    }
    if (flutterListBody != null) {
      $result.flutterListBody = flutterListBody;
    }
    if (flutterListener != null) {
      $result.flutterListener = flutterListener;
    }
    if (flutterMergeSemantics != null) {
      $result.flutterMergeSemantics = flutterMergeSemantics;
    }
    if (flutterMetaData != null) {
      $result.flutterMetaData = flutterMetaData;
    }
    if (flutterMouseRegion != null) {
      $result.flutterMouseRegion = flutterMouseRegion;
    }
    if (flutterOffstage != null) {
      $result.flutterOffstage = flutterOffstage;
    }
    if (flutterOpacity != null) {
      $result.flutterOpacity = flutterOpacity;
    }
    if (flutterOverflowBox != null) {
      $result.flutterOverflowBox = flutterOverflowBox;
    }
    if (flutterPhysicalModel != null) {
      $result.flutterPhysicalModel = flutterPhysicalModel;
    }
    if (flutterPositioned != null) {
      $result.flutterPositioned = flutterPositioned;
    }
    if (flutterPositionedNamedFill != null) {
      $result.flutterPositionedNamedFill = flutterPositionedNamedFill;
    }
    if (flutterPositionedDirectional != null) {
      $result.flutterPositionedDirectional = flutterPositionedDirectional;
    }
    if (flutterRawImage != null) {
      $result.flutterRawImage = flutterRawImage;
    }
    if (flutterRepaintBoundary != null) {
      $result.flutterRepaintBoundary = flutterRepaintBoundary;
    }
    if (flutterRepaintBoundaryNamedWrap != null) {
      $result.flutterRepaintBoundaryNamedWrap = flutterRepaintBoundaryNamedWrap;
    }
    if (flutterRotatedBox != null) {
      $result.flutterRotatedBox = flutterRotatedBox;
    }
    if (flutterRow != null) {
      $result.flutterRow = flutterRow;
    }
    if (flutterSemantics != null) {
      $result.flutterSemantics = flutterSemantics;
    }
    if (flutterSizedBox != null) {
      $result.flutterSizedBox = flutterSizedBox;
    }
    if (flutterSizedBoxNamedExpand != null) {
      $result.flutterSizedBoxNamedExpand = flutterSizedBoxNamedExpand;
    }
    if (flutterSizedBoxNamedShrink != null) {
      $result.flutterSizedBoxNamedShrink = flutterSizedBoxNamedShrink;
    }
    if (flutterSizedBoxNamedFromSize != null) {
      $result.flutterSizedBoxNamedFromSize = flutterSizedBoxNamedFromSize;
    }
    if (flutterSizedBoxNamedSquare != null) {
      $result.flutterSizedBoxNamedSquare = flutterSizedBoxNamedSquare;
    }
    if (flutterSliverToBoxAdapter != null) {
      $result.flutterSliverToBoxAdapter = flutterSliverToBoxAdapter;
    }
    if (flutterStack != null) {
      $result.flutterStack = flutterStack;
    }
    if (flutterTransformNamedRotate != null) {
      $result.flutterTransformNamedRotate = flutterTransformNamedRotate;
    }
    if (flutterTransformNamedScale != null) {
      $result.flutterTransformNamedScale = flutterTransformNamedScale;
    }
    if (flutterTransformNamedFlip != null) {
      $result.flutterTransformNamedFlip = flutterTransformNamedFlip;
    }
    if (flutterUnconstrainedBox != null) {
      $result.flutterUnconstrainedBox = flutterUnconstrainedBox;
    }
    if (flutterWrap != null) {
      $result.flutterWrap = flutterWrap;
    }
    if (flutterContainer != null) {
      $result.flutterContainer = flutterContainer;
    }
    if (flutterDefaultSelectionStyle != null) {
      $result.flutterDefaultSelectionStyle = flutterDefaultSelectionStyle;
    }
    if (flutterDefaultSelectionStyleNamedFallback != null) {
      $result.flutterDefaultSelectionStyleNamedFallback = flutterDefaultSelectionStyleNamedFallback;
    }
    if (flutterDefaultTextEditingShortcuts != null) {
      $result.flutterDefaultTextEditingShortcuts = flutterDefaultTextEditingShortcuts;
    }
    if (flutterDismissible != null) {
      $result.flutterDismissible = flutterDismissible;
    }
    if (flutterDisplayFeatureSubScreen != null) {
      $result.flutterDisplayFeatureSubScreen = flutterDisplayFeatureSubScreen;
    }
    if (flutterDraggable != null) {
      $result.flutterDraggable = flutterDraggable;
    }
    if (flutterLongPressDraggable != null) {
      $result.flutterLongPressDraggable = flutterLongPressDraggable;
    }
    if (flutterDraggableScrollableActuator != null) {
      $result.flutterDraggableScrollableActuator = flutterDraggableScrollableActuator;
    }
    if (flutterFadeInImageNamedAssetNetwork != null) {
      $result.flutterFadeInImageNamedAssetNetwork = flutterFadeInImageNamedAssetNetwork;
    }
    if (flutterExcludeFocus != null) {
      $result.flutterExcludeFocus = flutterExcludeFocus;
    }
    if (flutterFocus != null) {
      $result.flutterFocus = flutterFocus;
    }
    if (flutterFocusScope != null) {
      $result.flutterFocusScope = flutterFocusScope;
    }
    if (flutterExcludeFocusTraversal != null) {
      $result.flutterExcludeFocusTraversal = flutterExcludeFocusTraversal;
    }
    if (flutterFocusTraversalGroup != null) {
      $result.flutterFocusTraversalGroup = flutterFocusTraversalGroup;
    }
    if (flutterForm != null) {
      $result.flutterForm = flutterForm;
    }
    if (flutterErrorWidgetNamedWithDetails != null) {
      $result.flutterErrorWidgetNamedWithDetails = flutterErrorWidgetNamedWithDetails;
    }
    if (flutterGestureDetector != null) {
      $result.flutterGestureDetector = flutterGestureDetector;
    }
    if (flutterRawGestureDetector != null) {
      $result.flutterRawGestureDetector = flutterRawGestureDetector;
    }
    if (flutterGridPaper != null) {
      $result.flutterGridPaper = flutterGridPaper;
    }
    if (flutterHeroMode != null) {
      $result.flutterHeroMode = flutterHeroMode;
    }
    if (flutterIcon != null) {
      $result.flutterIcon = flutterIcon;
    }
    if (flutterImageNamedNetwork != null) {
      $result.flutterImageNamedNetwork = flutterImageNamedNetwork;
    }
    if (flutterImageNamedAsset != null) {
      $result.flutterImageNamedAsset = flutterImageNamedAsset;
    }
    if (flutterImageIcon != null) {
      $result.flutterImageIcon = flutterImageIcon;
    }
    if (flutterAnimatedContainer != null) {
      $result.flutterAnimatedContainer = flutterAnimatedContainer;
    }
    if (flutterAnimatedFractionallySizedBox != null) {
      $result.flutterAnimatedFractionallySizedBox = flutterAnimatedFractionallySizedBox;
    }
    if (flutterAnimatedOpacity != null) {
      $result.flutterAnimatedOpacity = flutterAnimatedOpacity;
    }
    if (flutterAnimatedPositioned != null) {
      $result.flutterAnimatedPositioned = flutterAnimatedPositioned;
    }
    if (flutterAnimatedPositionedDirectional != null) {
      $result.flutterAnimatedPositionedDirectional = flutterAnimatedPositionedDirectional;
    }
    if (flutterAnimatedRotation != null) {
      $result.flutterAnimatedRotation = flutterAnimatedRotation;
    }
    if (flutterAnimatedScale != null) {
      $result.flutterAnimatedScale = flutterAnimatedScale;
    }
    if (flutterSliverAnimatedOpacity != null) {
      $result.flutterSliverAnimatedOpacity = flutterSliverAnimatedOpacity;
    }
    if (flutterInteractiveViewer != null) {
      $result.flutterInteractiveViewer = flutterInteractiveViewer;
    }
    if (flutterListWheelScrollView != null) {
      $result.flutterListWheelScrollView = flutterListWheelScrollView;
    }
    if (flutterLookupBoundary != null) {
      $result.flutterLookupBoundary = flutterLookupBoundary;
    }
    if (flutterModalBarrier != null) {
      $result.flutterModalBarrier = flutterModalBarrier;
    }
    if (flutterNavigationToolbar != null) {
      $result.flutterNavigationToolbar = flutterNavigationToolbar;
    }
    if (flutterHeroControllerScopeNamedNone != null) {
      $result.flutterHeroControllerScopeNamedNone = flutterHeroControllerScopeNamedNone;
    }
    if (flutterNavigator != null) {
      $result.flutterNavigator = flutterNavigator;
    }
    if (flutterNotificationListener != null) {
      $result.flutterNotificationListener = flutterNotificationListener;
    }
    if (flutterOverflowBar != null) {
      $result.flutterOverflowBar = flutterOverflowBar;
    }
    if (flutterOverlay != null) {
      $result.flutterOverlay = flutterOverlay;
    }
    if (flutterPageView != null) {
      $result.flutterPageView = flutterPageView;
    }
    if (flutterPerformanceOverlay != null) {
      $result.flutterPerformanceOverlay = flutterPerformanceOverlay;
    }
    if (flutterPerformanceOverlayNamedAllEnabled != null) {
      $result.flutterPerformanceOverlayNamedAllEnabled = flutterPerformanceOverlayNamedAllEnabled;
    }
    if (flutterPlaceholder != null) {
      $result.flutterPlaceholder = flutterPlaceholder;
    }
    if (flutterAndroidView != null) {
      $result.flutterAndroidView = flutterAndroidView;
    }
    if (flutterHtmlElementView != null) {
      $result.flutterHtmlElementView = flutterHtmlElementView;
    }
    if (flutterUiKitView != null) {
      $result.flutterUiKitView = flutterUiKitView;
    }
    if (flutterPrimaryScrollControllerNamedNone != null) {
      $result.flutterPrimaryScrollControllerNamedNone = flutterPrimaryScrollControllerNamedNone;
    }
    if (flutterReorderableDelayedDragStartListener != null) {
      $result.flutterReorderableDelayedDragStartListener = flutterReorderableDelayedDragStartListener;
    }
    if (flutterReorderableDragStartListener != null) {
      $result.flutterReorderableDragStartListener = flutterReorderableDragStartListener;
    }
    if (flutterRestorationScope != null) {
      $result.flutterRestorationScope = flutterRestorationScope;
    }
    if (flutterRootRestorationScope != null) {
      $result.flutterRootRestorationScope = flutterRootRestorationScope;
    }
    if (flutterUnmanagedRestorationScope != null) {
      $result.flutterUnmanagedRestorationScope = flutterUnmanagedRestorationScope;
    }
    if (flutterSafeArea != null) {
      $result.flutterSafeArea = flutterSafeArea;
    }
    if (flutterSliverSafeArea != null) {
      $result.flutterSliverSafeArea = flutterSliverSafeArea;
    }
    if (flutterScrollNotificationObserver != null) {
      $result.flutterScrollNotificationObserver = flutterScrollNotificationObserver;
    }
    if (flutterCustomScrollView != null) {
      $result.flutterCustomScrollView = flutterCustomScrollView;
    }
    if (flutterGridViewNamedCount != null) {
      $result.flutterGridViewNamedCount = flutterGridViewNamedCount;
    }
    if (flutterGridViewNamedExtent != null) {
      $result.flutterGridViewNamedExtent = flutterGridViewNamedExtent;
    }
    if (flutterListView != null) {
      $result.flutterListView = flutterListView;
    }
    if (flutterRawScrollbar != null) {
      $result.flutterRawScrollbar = flutterRawScrollbar;
    }
    if (flutterSelectionContainerNamedDisabled != null) {
      $result.flutterSelectionContainerNamedDisabled = flutterSelectionContainerNamedDisabled;
    }
    if (flutterSemanticsDebugger != null) {
      $result.flutterSemanticsDebugger = flutterSemanticsDebugger;
    }
    if (flutterSharedAppData != null) {
      $result.flutterSharedAppData = flutterSharedAppData;
    }
    if (flutterShortcutRegistrar != null) {
      $result.flutterShortcutRegistrar = flutterShortcutRegistrar;
    }
    if (flutterSingleChildScrollView != null) {
      $result.flutterSingleChildScrollView = flutterSingleChildScrollView;
    }
    if (flutterSizeChangedLayoutNotifier != null) {
      $result.flutterSizeChangedLayoutNotifier = flutterSizeChangedLayoutNotifier;
    }
    if (flutterKeepAlive != null) {
      $result.flutterKeepAlive = flutterKeepAlive;
    }
    if (flutterSliverConstrainedCrossAxis != null) {
      $result.flutterSliverConstrainedCrossAxis = flutterSliverConstrainedCrossAxis;
    }
    if (flutterSliverCrossAxisExpanded != null) {
      $result.flutterSliverCrossAxisExpanded = flutterSliverCrossAxisExpanded;
    }
    if (flutterSliverCrossAxisGroup != null) {
      $result.flutterSliverCrossAxisGroup = flutterSliverCrossAxisGroup;
    }
    if (flutterSliverFixedExtentListNamedList != null) {
      $result.flutterSliverFixedExtentListNamedList = flutterSliverFixedExtentListNamedList;
    }
    if (flutterSliverGridNamedCount != null) {
      $result.flutterSliverGridNamedCount = flutterSliverGridNamedCount;
    }
    if (flutterSliverGridNamedExtent != null) {
      $result.flutterSliverGridNamedExtent = flutterSliverGridNamedExtent;
    }
    if (flutterSliverIgnorePointer != null) {
      $result.flutterSliverIgnorePointer = flutterSliverIgnorePointer;
    }
    if (flutterSliverListNamedList != null) {
      $result.flutterSliverListNamedList = flutterSliverListNamedList;
    }
    if (flutterSliverMainAxisGroup != null) {
      $result.flutterSliverMainAxisGroup = flutterSliverMainAxisGroup;
    }
    if (flutterSliverOffstage != null) {
      $result.flutterSliverOffstage = flutterSliverOffstage;
    }
    if (flutterSliverOpacity != null) {
      $result.flutterSliverOpacity = flutterSliverOpacity;
    }
    if (flutterSliverFillRemaining != null) {
      $result.flutterSliverFillRemaining = flutterSliverFillRemaining;
    }
    if (flutterSliverPrototypeExtentListNamedList != null) {
      $result.flutterSliverPrototypeExtentListNamedList = flutterSliverPrototypeExtentListNamedList;
    }
    if (flutterSpacer != null) {
      $result.flutterSpacer = flutterSpacer;
    }
    if (flutterTable != null) {
      $result.flutterTable = flutterTable;
    }
    if (flutterTableCell != null) {
      $result.flutterTableCell = flutterTableCell;
    }
    if (flutterTapRegion != null) {
      $result.flutterTapRegion = flutterTapRegion;
    }
    if (flutterTapRegionSurface != null) {
      $result.flutterTapRegionSurface = flutterTapRegionSurface;
    }
    if (flutterTextFieldTapRegion != null) {
      $result.flutterTextFieldTapRegion = flutterTextFieldTapRegion;
    }
    if (flutterDefaultTextStyleNamedFallback != null) {
      $result.flutterDefaultTextStyleNamedFallback = flutterDefaultTextStyleNamedFallback;
    }
    if (flutterText != null) {
      $result.flutterText = flutterText;
    }
    if (flutterTextSelectionGestureDetector != null) {
      $result.flutterTextSelectionGestureDetector = flutterTextSelectionGestureDetector;
    }
    if (flutterTexture != null) {
      $result.flutterTexture = flutterTexture;
    }
    if (flutterTickerMode != null) {
      $result.flutterTickerMode = flutterTickerMode;
    }
    if (flutterTitle != null) {
      $result.flutterTitle = flutterTitle;
    }
    if (flutterSliverVisibility != null) {
      $result.flutterSliverVisibility = flutterSliverVisibility;
    }
    if (flutterSliverVisibilityNamedMaintain != null) {
      $result.flutterSliverVisibilityNamedMaintain = flutterSliverVisibilityNamedMaintain;
    }
    if (flutterVisibility != null) {
      $result.flutterVisibility = flutterVisibility;
    }
    if (flutterVisibilityNamedMaintain != null) {
      $result.flutterVisibilityNamedMaintain = flutterVisibilityNamedMaintain;
    }
    if (flutterWidgetInspector != null) {
      $result.flutterWidgetInspector = flutterWidgetInspector;
    }
    if (flutterWillPopScope != null) {
      $result.flutterWillPopScope = flutterWillPopScope;
    }
    if (flutterProjectMyApp != null) {
      $result.flutterProjectMyApp = flutterProjectMyApp;
    }
    if (flutterProjectMyHomePage != null) {
      $result.flutterProjectMyHomePage = flutterProjectMyHomePage;
    }
    return $result;
  }
  WidgetExpression._() : super();
  factory WidgetExpression.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WidgetExpression.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static const $core.Map<$core.int, WidgetExpression_Result> _WidgetExpression_ResultByTag = {
    2 : WidgetExpression_Result.cupertinoActivityIndicator,
    3 : WidgetExpression_Result.cupertinoActivityIndicatorNamedPartiallyRevealed,
    4 : WidgetExpression_Result.cupertinoApp,
    5 : WidgetExpression_Result.cupertinoAppNamedRouter,
    6 : WidgetExpression_Result.cupertinoButton,
    7 : WidgetExpression_Result.cupertinoButtonNamedFilled,
    8 : WidgetExpression_Result.cupertinoCheckbox,
    9 : WidgetExpression_Result.cupertinoContextMenu,
    10 : WidgetExpression_Result.cupertinoContextMenuAction,
    11 : WidgetExpression_Result.cupertinoDesktopTextSelectionToolbarButton,
    12 : WidgetExpression_Result.cupertinoDesktopTextSelectionToolbarButtonNamedText,
    13 : WidgetExpression_Result.cupertinoActionSheet,
    14 : WidgetExpression_Result.cupertinoAlertDialog,
    15 : WidgetExpression_Result.cupertinoDialogAction,
    16 : WidgetExpression_Result.cupertinoPopupSurface,
    17 : WidgetExpression_Result.cupertinoFormRow,
    18 : WidgetExpression_Result.cupertinoFormSection,
    19 : WidgetExpression_Result.cupertinoFormSectionNamedInsetGrouped,
    20 : WidgetExpression_Result.cupertinoListSection,
    21 : WidgetExpression_Result.cupertinoListSectionNamedInsetGrouped,
    22 : WidgetExpression_Result.cupertinoListTile,
    23 : WidgetExpression_Result.cupertinoListTileNamedNotched,
    24 : WidgetExpression_Result.cupertinoListTileChevron,
    25 : WidgetExpression_Result.cupertinoMagnifier,
    26 : WidgetExpression_Result.cupertinoNavigationBar,
    27 : WidgetExpression_Result.cupertinoNavigationBarBackButton,
    28 : WidgetExpression_Result.cupertinoSliverNavigationBar,
    29 : WidgetExpression_Result.cupertinoPageScaffold,
    30 : WidgetExpression_Result.cupertinoPicker,
    31 : WidgetExpression_Result.cupertinoPickerDefaultSelectionOverlay,
    32 : WidgetExpression_Result.cupertinoSliverRefreshControl,
    33 : WidgetExpression_Result.cupertinoScrollbar,
    34 : WidgetExpression_Result.cupertinoSearchTextField,
    35 : WidgetExpression_Result.cupertinoSlider,
    36 : WidgetExpression_Result.cupertinoSwitch,
    37 : WidgetExpression_Result.cupertinoTabView,
    38 : WidgetExpression_Result.cupertinoTextField,
    39 : WidgetExpression_Result.cupertinoTextFieldNamedBorderless,
    40 : WidgetExpression_Result.cupertinoTextFormFieldRow,
    41 : WidgetExpression_Result.cupertinoTextSelectionToolbarButton,
    42 : WidgetExpression_Result.cupertinoTextSelectionToolbarButtonNamedText,
    43 : WidgetExpression_Result.materialAboutDialog,
    44 : WidgetExpression_Result.materialAboutListTile,
    45 : WidgetExpression_Result.materialLicensePage,
    46 : WidgetExpression_Result.materialBackButton,
    47 : WidgetExpression_Result.materialBackButtonIcon,
    48 : WidgetExpression_Result.materialCloseButton,
    49 : WidgetExpression_Result.materialCloseButtonIcon,
    50 : WidgetExpression_Result.materialDrawerButton,
    51 : WidgetExpression_Result.materialDrawerButtonIcon,
    52 : WidgetExpression_Result.materialEndDrawerButton,
    53 : WidgetExpression_Result.materialEndDrawerButtonIcon,
    54 : WidgetExpression_Result.materialActionChip,
    55 : WidgetExpression_Result.materialActionChipNamedElevated,
    56 : WidgetExpression_Result.materialMaterialApp,
    57 : WidgetExpression_Result.materialMaterialAppNamedRouter,
    58 : WidgetExpression_Result.materialAppBar,
    59 : WidgetExpression_Result.materialSliverAppBar,
    60 : WidgetExpression_Result.materialSliverAppBarNamedMedium,
    61 : WidgetExpression_Result.materialSliverAppBarNamedLarge,
    62 : WidgetExpression_Result.materialBadge,
    63 : WidgetExpression_Result.materialBadgeNamedCount,
    64 : WidgetExpression_Result.materialMaterialBanner,
    65 : WidgetExpression_Result.materialMaterialBannerTheme,
    66 : WidgetExpression_Result.materialBottomAppBar,
    67 : WidgetExpression_Result.materialRawMaterialButton,
    68 : WidgetExpression_Result.materialButtonBar,
    69 : WidgetExpression_Result.materialButtonTheme,
    70 : WidgetExpression_Result.materialCard,
    71 : WidgetExpression_Result.materialCheckbox,
    72 : WidgetExpression_Result.materialCheckboxNamedAdaptive,
    73 : WidgetExpression_Result.materialCheckboxListTile,
    74 : WidgetExpression_Result.materialCheckboxListTileNamedAdaptive,
    75 : WidgetExpression_Result.materialChip,
    76 : WidgetExpression_Result.materialRawChip,
    77 : WidgetExpression_Result.materialChoiceChip,
    78 : WidgetExpression_Result.materialChoiceChipNamedElevated,
    79 : WidgetExpression_Result.materialCircleAvatar,
    80 : WidgetExpression_Result.materialTableRowInkWell,
    81 : WidgetExpression_Result.materialDesktopTextSelectionToolbarButton,
    82 : WidgetExpression_Result.materialAlertDialog,
    83 : WidgetExpression_Result.materialAlertDialogNamedAdaptive,
    84 : WidgetExpression_Result.materialDialog,
    85 : WidgetExpression_Result.materialDialogNamedFullscreen,
    86 : WidgetExpression_Result.materialSimpleDialog,
    87 : WidgetExpression_Result.materialSimpleDialogOption,
    88 : WidgetExpression_Result.materialDivider,
    89 : WidgetExpression_Result.materialVerticalDivider,
    90 : WidgetExpression_Result.materialDrawer,
    91 : WidgetExpression_Result.materialDrawerHeader,
    92 : WidgetExpression_Result.materialDropdownButton,
    93 : WidgetExpression_Result.materialDropdownButtonFormField,
    94 : WidgetExpression_Result.materialDropdownButtonHideUnderline,
    95 : WidgetExpression_Result.materialDropdownMenuItem,
    96 : WidgetExpression_Result.materialElevatedButton,
    97 : WidgetExpression_Result.materialElevatedButtonNamedIcon,
    98 : WidgetExpression_Result.materialExpandIcon,
    99 : WidgetExpression_Result.materialExpansionPanelList,
    100 : WidgetExpression_Result.materialExpansionPanelListNamedRadio,
    101 : WidgetExpression_Result.materialExpansionTile,
    102 : WidgetExpression_Result.materialFilledButton,
    103 : WidgetExpression_Result.materialFilledButtonNamedIcon,
    104 : WidgetExpression_Result.materialFilledButtonNamedTonal,
    105 : WidgetExpression_Result.materialFilledButtonNamedTonalIcon,
    106 : WidgetExpression_Result.materialFilterChip,
    107 : WidgetExpression_Result.materialFilterChipNamedElevated,
    108 : WidgetExpression_Result.materialFlexibleSpaceBar,
    109 : WidgetExpression_Result.materialFlexibleSpaceBarSettings,
    110 : WidgetExpression_Result.materialFloatingActionButton,
    111 : WidgetExpression_Result.materialFloatingActionButtonNamedSmall,
    112 : WidgetExpression_Result.materialFloatingActionButtonNamedLarge,
    113 : WidgetExpression_Result.materialFloatingActionButtonNamedExtended,
    114 : WidgetExpression_Result.materialFlutterLogo,
    115 : WidgetExpression_Result.materialGridTile,
    116 : WidgetExpression_Result.materialGridTileBar,
    117 : WidgetExpression_Result.materialIconButton,
    118 : WidgetExpression_Result.materialIconButtonNamedFilled,
    119 : WidgetExpression_Result.materialIconButtonNamedFilledTonal,
    120 : WidgetExpression_Result.materialIconButtonNamedOutlined,
    121 : WidgetExpression_Result.materialInk,
    122 : WidgetExpression_Result.materialInkResponse,
    123 : WidgetExpression_Result.materialInkWell,
    124 : WidgetExpression_Result.materialInputChip,
    125 : WidgetExpression_Result.materialListTile,
    126 : WidgetExpression_Result.materialListTileTheme,
    127 : WidgetExpression_Result.materialMagnifier,
    128 : WidgetExpression_Result.materialMaterial,
    129 : WidgetExpression_Result.materialMaterialButton,
    130 : WidgetExpression_Result.materialCheckboxMenuButton,
    131 : WidgetExpression_Result.materialMenuAcceleratorCallbackBinding,
    132 : WidgetExpression_Result.materialMenuAcceleratorLabel,
    133 : WidgetExpression_Result.materialMenuAnchor,
    134 : WidgetExpression_Result.materialMenuBar,
    135 : WidgetExpression_Result.materialMenuItemButton,
    136 : WidgetExpression_Result.materialSubmenuButton,
    137 : WidgetExpression_Result.materialMergeableMaterial,
    138 : WidgetExpression_Result.materialNavigationBar,
    139 : WidgetExpression_Result.materialNavigationDestination,
    140 : WidgetExpression_Result.materialNavigationDrawer,
    141 : WidgetExpression_Result.materialNavigationDrawerDestination,
    142 : WidgetExpression_Result.materialOutlinedButton,
    143 : WidgetExpression_Result.materialOutlinedButtonNamedIcon,
    144 : WidgetExpression_Result.materialCheckedPopupMenuItem,
    145 : WidgetExpression_Result.materialPopupMenuDivider,
    146 : WidgetExpression_Result.materialPopupMenuItem,
    147 : WidgetExpression_Result.materialCircularProgressIndicator,
    148 : WidgetExpression_Result.materialCircularProgressIndicatorNamedAdaptive,
    149 : WidgetExpression_Result.materialLinearProgressIndicator,
    150 : WidgetExpression_Result.materialRefreshProgressIndicator,
    151 : WidgetExpression_Result.materialScaffold,
    152 : WidgetExpression_Result.materialScaffoldMessenger,
    153 : WidgetExpression_Result.materialScrollbar,
    154 : WidgetExpression_Result.materialSearchBar,
    155 : WidgetExpression_Result.materialSelectableText,
    156 : WidgetExpression_Result.materialSelectionArea,
    157 : WidgetExpression_Result.materialSlider,
    158 : WidgetExpression_Result.materialSliderNamedAdaptive,
    159 : WidgetExpression_Result.materialSnackBar,
    160 : WidgetExpression_Result.materialSwitch,
    161 : WidgetExpression_Result.materialSwitchNamedAdaptive,
    162 : WidgetExpression_Result.materialSwitchListTile,
    163 : WidgetExpression_Result.materialSwitchListTileNamedAdaptive,
    164 : WidgetExpression_Result.materialDefaultTabController,
    165 : WidgetExpression_Result.materialTab,
    166 : WidgetExpression_Result.materialTabBar,
    167 : WidgetExpression_Result.materialTabBarNamedSecondary,
    168 : WidgetExpression_Result.materialTabBarView,
    169 : WidgetExpression_Result.materialTabPageSelector,
    170 : WidgetExpression_Result.materialTabPageSelectorIndicator,
    171 : WidgetExpression_Result.materialTextButton,
    172 : WidgetExpression_Result.materialTextButtonNamedIcon,
    173 : WidgetExpression_Result.materialTextField,
    174 : WidgetExpression_Result.materialTextFormField,
    175 : WidgetExpression_Result.materialToggleButtons,
    176 : WidgetExpression_Result.materialTooltip,
    177 : WidgetExpression_Result.materialTooltipVisibility,
    178 : WidgetExpression_Result.materialUserAccountsDrawerHeader,
    179 : WidgetExpression_Result.flutterPlatformSelectableRegionContextMenu,
    180 : WidgetExpression_Result.flutterFocusableActionDetector,
    181 : WidgetExpression_Result.flutterAnimatedSize,
    182 : WidgetExpression_Result.flutterAnimatedSwitcher,
    183 : WidgetExpression_Result.flutterWidgetsApp,
    184 : WidgetExpression_Result.flutterWidgetsAppNamedRouter,
    185 : WidgetExpression_Result.flutterAutofillGroup,
    186 : WidgetExpression_Result.flutterAutomaticKeepAlive,
    187 : WidgetExpression_Result.flutterCheckedModeBanner,
    188 : WidgetExpression_Result.flutterAbsorbPointer,
    189 : WidgetExpression_Result.flutterAlign,
    190 : WidgetExpression_Result.flutterAspectRatio,
    191 : WidgetExpression_Result.flutterBlockSemantics,
    192 : WidgetExpression_Result.flutterCenter,
    193 : WidgetExpression_Result.flutterClipOval,
    194 : WidgetExpression_Result.flutterClipPath,
    195 : WidgetExpression_Result.flutterClipRRect,
    196 : WidgetExpression_Result.flutterClipRect,
    197 : WidgetExpression_Result.flutterColoredBox,
    198 : WidgetExpression_Result.flutterColumn,
    199 : WidgetExpression_Result.flutterCustomPaint,
    200 : WidgetExpression_Result.flutterExcludeSemantics,
    201 : WidgetExpression_Result.flutterExpanded,
    202 : WidgetExpression_Result.flutterFittedBox,
    203 : WidgetExpression_Result.flutterFlexible,
    204 : WidgetExpression_Result.flutterFractionallySizedBox,
    205 : WidgetExpression_Result.flutterIgnorePointer,
    206 : WidgetExpression_Result.flutterIndexedSemantics,
    207 : WidgetExpression_Result.flutterIndexedStack,
    208 : WidgetExpression_Result.flutterIntrinsicHeight,
    209 : WidgetExpression_Result.flutterIntrinsicWidth,
    210 : WidgetExpression_Result.flutterKeyedSubtree,
    211 : WidgetExpression_Result.flutterKeyedSubtreeNamedWrap,
    212 : WidgetExpression_Result.flutterLimitedBox,
    213 : WidgetExpression_Result.flutterListBody,
    214 : WidgetExpression_Result.flutterListener,
    215 : WidgetExpression_Result.flutterMergeSemantics,
    216 : WidgetExpression_Result.flutterMetaData,
    217 : WidgetExpression_Result.flutterMouseRegion,
    218 : WidgetExpression_Result.flutterOffstage,
    219 : WidgetExpression_Result.flutterOpacity,
    220 : WidgetExpression_Result.flutterOverflowBox,
    221 : WidgetExpression_Result.flutterPhysicalModel,
    222 : WidgetExpression_Result.flutterPositioned,
    223 : WidgetExpression_Result.flutterPositionedNamedFill,
    224 : WidgetExpression_Result.flutterPositionedDirectional,
    225 : WidgetExpression_Result.flutterRawImage,
    226 : WidgetExpression_Result.flutterRepaintBoundary,
    227 : WidgetExpression_Result.flutterRepaintBoundaryNamedWrap,
    228 : WidgetExpression_Result.flutterRotatedBox,
    229 : WidgetExpression_Result.flutterRow,
    230 : WidgetExpression_Result.flutterSemantics,
    231 : WidgetExpression_Result.flutterSizedBox,
    232 : WidgetExpression_Result.flutterSizedBoxNamedExpand,
    233 : WidgetExpression_Result.flutterSizedBoxNamedShrink,
    234 : WidgetExpression_Result.flutterSizedBoxNamedFromSize,
    235 : WidgetExpression_Result.flutterSizedBoxNamedSquare,
    236 : WidgetExpression_Result.flutterSliverToBoxAdapter,
    237 : WidgetExpression_Result.flutterStack,
    238 : WidgetExpression_Result.flutterTransformNamedRotate,
    239 : WidgetExpression_Result.flutterTransformNamedScale,
    240 : WidgetExpression_Result.flutterTransformNamedFlip,
    241 : WidgetExpression_Result.flutterUnconstrainedBox,
    242 : WidgetExpression_Result.flutterWrap,
    243 : WidgetExpression_Result.flutterContainer,
    244 : WidgetExpression_Result.flutterDefaultSelectionStyle,
    245 : WidgetExpression_Result.flutterDefaultSelectionStyleNamedFallback,
    246 : WidgetExpression_Result.flutterDefaultTextEditingShortcuts,
    247 : WidgetExpression_Result.flutterDismissible,
    248 : WidgetExpression_Result.flutterDisplayFeatureSubScreen,
    249 : WidgetExpression_Result.flutterDraggable,
    250 : WidgetExpression_Result.flutterLongPressDraggable,
    251 : WidgetExpression_Result.flutterDraggableScrollableActuator,
    252 : WidgetExpression_Result.flutterFadeInImageNamedAssetNetwork,
    253 : WidgetExpression_Result.flutterExcludeFocus,
    254 : WidgetExpression_Result.flutterFocus,
    255 : WidgetExpression_Result.flutterFocusScope,
    256 : WidgetExpression_Result.flutterExcludeFocusTraversal,
    257 : WidgetExpression_Result.flutterFocusTraversalGroup,
    258 : WidgetExpression_Result.flutterForm,
    259 : WidgetExpression_Result.flutterErrorWidgetNamedWithDetails,
    260 : WidgetExpression_Result.flutterGestureDetector,
    261 : WidgetExpression_Result.flutterRawGestureDetector,
    262 : WidgetExpression_Result.flutterGridPaper,
    263 : WidgetExpression_Result.flutterHeroMode,
    264 : WidgetExpression_Result.flutterIcon,
    265 : WidgetExpression_Result.flutterImageNamedNetwork,
    266 : WidgetExpression_Result.flutterImageNamedAsset,
    267 : WidgetExpression_Result.flutterImageIcon,
    268 : WidgetExpression_Result.flutterAnimatedContainer,
    269 : WidgetExpression_Result.flutterAnimatedFractionallySizedBox,
    270 : WidgetExpression_Result.flutterAnimatedOpacity,
    271 : WidgetExpression_Result.flutterAnimatedPositioned,
    272 : WidgetExpression_Result.flutterAnimatedPositionedDirectional,
    273 : WidgetExpression_Result.flutterAnimatedRotation,
    274 : WidgetExpression_Result.flutterAnimatedScale,
    275 : WidgetExpression_Result.flutterSliverAnimatedOpacity,
    276 : WidgetExpression_Result.flutterInteractiveViewer,
    277 : WidgetExpression_Result.flutterListWheelScrollView,
    278 : WidgetExpression_Result.flutterLookupBoundary,
    279 : WidgetExpression_Result.flutterModalBarrier,
    280 : WidgetExpression_Result.flutterNavigationToolbar,
    281 : WidgetExpression_Result.flutterHeroControllerScopeNamedNone,
    282 : WidgetExpression_Result.flutterNavigator,
    283 : WidgetExpression_Result.flutterNotificationListener,
    284 : WidgetExpression_Result.flutterOverflowBar,
    285 : WidgetExpression_Result.flutterOverlay,
    286 : WidgetExpression_Result.flutterPageView,
    287 : WidgetExpression_Result.flutterPerformanceOverlay,
    288 : WidgetExpression_Result.flutterPerformanceOverlayNamedAllEnabled,
    289 : WidgetExpression_Result.flutterPlaceholder,
    290 : WidgetExpression_Result.flutterAndroidView,
    291 : WidgetExpression_Result.flutterHtmlElementView,
    292 : WidgetExpression_Result.flutterUiKitView,
    293 : WidgetExpression_Result.flutterPrimaryScrollControllerNamedNone,
    294 : WidgetExpression_Result.flutterReorderableDelayedDragStartListener,
    295 : WidgetExpression_Result.flutterReorderableDragStartListener,
    296 : WidgetExpression_Result.flutterRestorationScope,
    297 : WidgetExpression_Result.flutterRootRestorationScope,
    298 : WidgetExpression_Result.flutterUnmanagedRestorationScope,
    299 : WidgetExpression_Result.flutterSafeArea,
    300 : WidgetExpression_Result.flutterSliverSafeArea,
    301 : WidgetExpression_Result.flutterScrollNotificationObserver,
    302 : WidgetExpression_Result.flutterCustomScrollView,
    303 : WidgetExpression_Result.flutterGridViewNamedCount,
    304 : WidgetExpression_Result.flutterGridViewNamedExtent,
    305 : WidgetExpression_Result.flutterListView,
    306 : WidgetExpression_Result.flutterRawScrollbar,
    307 : WidgetExpression_Result.flutterSelectionContainerNamedDisabled,
    308 : WidgetExpression_Result.flutterSemanticsDebugger,
    309 : WidgetExpression_Result.flutterSharedAppData,
    310 : WidgetExpression_Result.flutterShortcutRegistrar,
    311 : WidgetExpression_Result.flutterSingleChildScrollView,
    312 : WidgetExpression_Result.flutterSizeChangedLayoutNotifier,
    313 : WidgetExpression_Result.flutterKeepAlive,
    314 : WidgetExpression_Result.flutterSliverConstrainedCrossAxis,
    315 : WidgetExpression_Result.flutterSliverCrossAxisExpanded,
    316 : WidgetExpression_Result.flutterSliverCrossAxisGroup,
    317 : WidgetExpression_Result.flutterSliverFixedExtentListNamedList,
    318 : WidgetExpression_Result.flutterSliverGridNamedCount,
    319 : WidgetExpression_Result.flutterSliverGridNamedExtent,
    320 : WidgetExpression_Result.flutterSliverIgnorePointer,
    321 : WidgetExpression_Result.flutterSliverListNamedList,
    322 : WidgetExpression_Result.flutterSliverMainAxisGroup,
    323 : WidgetExpression_Result.flutterSliverOffstage,
    324 : WidgetExpression_Result.flutterSliverOpacity,
    325 : WidgetExpression_Result.flutterSliverFillRemaining,
    326 : WidgetExpression_Result.flutterSliverPrototypeExtentListNamedList,
    327 : WidgetExpression_Result.flutterSpacer,
    328 : WidgetExpression_Result.flutterTable,
    329 : WidgetExpression_Result.flutterTableCell,
    330 : WidgetExpression_Result.flutterTapRegion,
    331 : WidgetExpression_Result.flutterTapRegionSurface,
    332 : WidgetExpression_Result.flutterTextFieldTapRegion,
    333 : WidgetExpression_Result.flutterDefaultTextStyleNamedFallback,
    334 : WidgetExpression_Result.flutterText,
    335 : WidgetExpression_Result.flutterTextSelectionGestureDetector,
    336 : WidgetExpression_Result.flutterTexture,
    337 : WidgetExpression_Result.flutterTickerMode,
    338 : WidgetExpression_Result.flutterTitle,
    339 : WidgetExpression_Result.flutterSliverVisibility,
    340 : WidgetExpression_Result.flutterSliverVisibilityNamedMaintain,
    341 : WidgetExpression_Result.flutterVisibility,
    342 : WidgetExpression_Result.flutterVisibilityNamedMaintain,
    343 : WidgetExpression_Result.flutterWidgetInspector,
    344 : WidgetExpression_Result.flutterWillPopScope,
    345 : WidgetExpression_Result.flutterProjectMyApp,
    346 : WidgetExpression_Result.flutterProjectMyHomePage,
    0 : WidgetExpression_Result.notSet
  };
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WidgetExpression', createEmptyInstance: create)
    ..oo(0, [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346])
    ..aOM<CupertinoActivityIndicator>(2, _omitFieldNames ? '' : 'cupertinoActivityIndicator', subBuilder: CupertinoActivityIndicator.create)
    ..aOM<CupertinoActivityIndicatorNamedPartiallyRevealed>(3, _omitFieldNames ? '' : 'cupertinoActivityIndicatorNamedPartiallyRevealed', subBuilder: CupertinoActivityIndicatorNamedPartiallyRevealed.create)
    ..aOM<CupertinoApp>(4, _omitFieldNames ? '' : 'cupertinoApp', subBuilder: CupertinoApp.create)
    ..aOM<CupertinoAppNamedRouter>(5, _omitFieldNames ? '' : 'cupertinoAppNamedRouter', subBuilder: CupertinoAppNamedRouter.create)
    ..aOM<CupertinoButton>(6, _omitFieldNames ? '' : 'cupertinoButton', subBuilder: CupertinoButton.create)
    ..aOM<CupertinoButtonNamedFilled>(7, _omitFieldNames ? '' : 'cupertinoButtonNamedFilled', subBuilder: CupertinoButtonNamedFilled.create)
    ..aOM<CupertinoCheckbox>(8, _omitFieldNames ? '' : 'cupertinoCheckbox', subBuilder: CupertinoCheckbox.create)
    ..aOM<CupertinoContextMenu>(9, _omitFieldNames ? '' : 'cupertinoContextMenu', subBuilder: CupertinoContextMenu.create)
    ..aOM<CupertinoContextMenuAction>(10, _omitFieldNames ? '' : 'cupertinoContextMenuAction', subBuilder: CupertinoContextMenuAction.create)
    ..aOM<CupertinoDesktopTextSelectionToolbarButton>(11, _omitFieldNames ? '' : 'cupertinoDesktopTextSelectionToolbarButton', subBuilder: CupertinoDesktopTextSelectionToolbarButton.create)
    ..aOM<CupertinoDesktopTextSelectionToolbarButtonNamedText>(12, _omitFieldNames ? '' : 'cupertinoDesktopTextSelectionToolbarButtonNamedText', subBuilder: CupertinoDesktopTextSelectionToolbarButtonNamedText.create)
    ..aOM<CupertinoActionSheet>(13, _omitFieldNames ? '' : 'cupertinoActionSheet', subBuilder: CupertinoActionSheet.create)
    ..aOM<CupertinoAlertDialog>(14, _omitFieldNames ? '' : 'cupertinoAlertDialog', subBuilder: CupertinoAlertDialog.create)
    ..aOM<CupertinoDialogAction>(15, _omitFieldNames ? '' : 'cupertinoDialogAction', subBuilder: CupertinoDialogAction.create)
    ..aOM<CupertinoPopupSurface>(16, _omitFieldNames ? '' : 'cupertinoPopupSurface', subBuilder: CupertinoPopupSurface.create)
    ..aOM<CupertinoFormRow>(17, _omitFieldNames ? '' : 'cupertinoFormRow', subBuilder: CupertinoFormRow.create)
    ..aOM<CupertinoFormSection>(18, _omitFieldNames ? '' : 'cupertinoFormSection', subBuilder: CupertinoFormSection.create)
    ..aOM<CupertinoFormSectionNamedInsetGrouped>(19, _omitFieldNames ? '' : 'cupertinoFormSectionNamedInsetGrouped', subBuilder: CupertinoFormSectionNamedInsetGrouped.create)
    ..aOM<CupertinoListSection>(20, _omitFieldNames ? '' : 'cupertinoListSection', subBuilder: CupertinoListSection.create)
    ..aOM<CupertinoListSectionNamedInsetGrouped>(21, _omitFieldNames ? '' : 'cupertinoListSectionNamedInsetGrouped', subBuilder: CupertinoListSectionNamedInsetGrouped.create)
    ..aOM<CupertinoListTile>(22, _omitFieldNames ? '' : 'cupertinoListTile', subBuilder: CupertinoListTile.create)
    ..aOM<CupertinoListTileNamedNotched>(23, _omitFieldNames ? '' : 'cupertinoListTileNamedNotched', subBuilder: CupertinoListTileNamedNotched.create)
    ..aOM<CupertinoListTileChevron>(24, _omitFieldNames ? '' : 'cupertinoListTileChevron', subBuilder: CupertinoListTileChevron.create)
    ..aOM<CupertinoMagnifier>(25, _omitFieldNames ? '' : 'cupertinoMagnifier', subBuilder: CupertinoMagnifier.create)
    ..aOM<CupertinoNavigationBar>(26, _omitFieldNames ? '' : 'cupertinoNavigationBar', subBuilder: CupertinoNavigationBar.create)
    ..aOM<CupertinoNavigationBarBackButton>(27, _omitFieldNames ? '' : 'cupertinoNavigationBarBackButton', subBuilder: CupertinoNavigationBarBackButton.create)
    ..aOM<CupertinoSliverNavigationBar>(28, _omitFieldNames ? '' : 'cupertinoSliverNavigationBar', subBuilder: CupertinoSliverNavigationBar.create)
    ..aOM<CupertinoPageScaffold>(29, _omitFieldNames ? '' : 'cupertinoPageScaffold', subBuilder: CupertinoPageScaffold.create)
    ..aOM<CupertinoPicker>(30, _omitFieldNames ? '' : 'cupertinoPicker', subBuilder: CupertinoPicker.create)
    ..aOM<CupertinoPickerDefaultSelectionOverlay>(31, _omitFieldNames ? '' : 'cupertinoPickerDefaultSelectionOverlay', subBuilder: CupertinoPickerDefaultSelectionOverlay.create)
    ..aOM<CupertinoSliverRefreshControl>(32, _omitFieldNames ? '' : 'cupertinoSliverRefreshControl', subBuilder: CupertinoSliverRefreshControl.create)
    ..aOM<CupertinoScrollbar>(33, _omitFieldNames ? '' : 'cupertinoScrollbar', subBuilder: CupertinoScrollbar.create)
    ..aOM<CupertinoSearchTextField>(34, _omitFieldNames ? '' : 'cupertinoSearchTextField', subBuilder: CupertinoSearchTextField.create)
    ..aOM<CupertinoSlider>(35, _omitFieldNames ? '' : 'cupertinoSlider', subBuilder: CupertinoSlider.create)
    ..aOM<CupertinoSwitch>(36, _omitFieldNames ? '' : 'cupertinoSwitch', subBuilder: CupertinoSwitch.create)
    ..aOM<CupertinoTabView>(37, _omitFieldNames ? '' : 'cupertinoTabView', subBuilder: CupertinoTabView.create)
    ..aOM<CupertinoTextField>(38, _omitFieldNames ? '' : 'cupertinoTextField', subBuilder: CupertinoTextField.create)
    ..aOM<CupertinoTextFieldNamedBorderless>(39, _omitFieldNames ? '' : 'cupertinoTextFieldNamedBorderless', subBuilder: CupertinoTextFieldNamedBorderless.create)
    ..aOM<CupertinoTextFormFieldRow>(40, _omitFieldNames ? '' : 'cupertinoTextFormFieldRow', subBuilder: CupertinoTextFormFieldRow.create)
    ..aOM<CupertinoTextSelectionToolbarButton>(41, _omitFieldNames ? '' : 'cupertinoTextSelectionToolbarButton', subBuilder: CupertinoTextSelectionToolbarButton.create)
    ..aOM<CupertinoTextSelectionToolbarButtonNamedText>(42, _omitFieldNames ? '' : 'cupertinoTextSelectionToolbarButtonNamedText', subBuilder: CupertinoTextSelectionToolbarButtonNamedText.create)
    ..aOM<MaterialAboutDialog>(43, _omitFieldNames ? '' : 'materialAboutDialog', subBuilder: MaterialAboutDialog.create)
    ..aOM<MaterialAboutListTile>(44, _omitFieldNames ? '' : 'materialAboutListTile', subBuilder: MaterialAboutListTile.create)
    ..aOM<MaterialLicensePage>(45, _omitFieldNames ? '' : 'materialLicensePage', subBuilder: MaterialLicensePage.create)
    ..aOM<MaterialBackButton>(46, _omitFieldNames ? '' : 'materialBackButton', subBuilder: MaterialBackButton.create)
    ..aOM<MaterialBackButtonIcon>(47, _omitFieldNames ? '' : 'materialBackButtonIcon', subBuilder: MaterialBackButtonIcon.create)
    ..aOM<MaterialCloseButton>(48, _omitFieldNames ? '' : 'materialCloseButton', subBuilder: MaterialCloseButton.create)
    ..aOM<MaterialCloseButtonIcon>(49, _omitFieldNames ? '' : 'materialCloseButtonIcon', subBuilder: MaterialCloseButtonIcon.create)
    ..aOM<MaterialDrawerButton>(50, _omitFieldNames ? '' : 'materialDrawerButton', subBuilder: MaterialDrawerButton.create)
    ..aOM<MaterialDrawerButtonIcon>(51, _omitFieldNames ? '' : 'materialDrawerButtonIcon', subBuilder: MaterialDrawerButtonIcon.create)
    ..aOM<MaterialEndDrawerButton>(52, _omitFieldNames ? '' : 'materialEndDrawerButton', subBuilder: MaterialEndDrawerButton.create)
    ..aOM<MaterialEndDrawerButtonIcon>(53, _omitFieldNames ? '' : 'materialEndDrawerButtonIcon', subBuilder: MaterialEndDrawerButtonIcon.create)
    ..aOM<MaterialActionChip>(54, _omitFieldNames ? '' : 'materialActionChip', subBuilder: MaterialActionChip.create)
    ..aOM<MaterialActionChipNamedElevated>(55, _omitFieldNames ? '' : 'materialActionChipNamedElevated', subBuilder: MaterialActionChipNamedElevated.create)
    ..aOM<MaterialMaterialApp>(56, _omitFieldNames ? '' : 'materialMaterialApp', subBuilder: MaterialMaterialApp.create)
    ..aOM<MaterialMaterialAppNamedRouter>(57, _omitFieldNames ? '' : 'materialMaterialAppNamedRouter', subBuilder: MaterialMaterialAppNamedRouter.create)
    ..aOM<MaterialAppBar>(58, _omitFieldNames ? '' : 'materialAppBar', subBuilder: MaterialAppBar.create)
    ..aOM<MaterialSliverAppBar>(59, _omitFieldNames ? '' : 'materialSliverAppBar', subBuilder: MaterialSliverAppBar.create)
    ..aOM<MaterialSliverAppBarNamedMedium>(60, _omitFieldNames ? '' : 'materialSliverAppBarNamedMedium', subBuilder: MaterialSliverAppBarNamedMedium.create)
    ..aOM<MaterialSliverAppBarNamedLarge>(61, _omitFieldNames ? '' : 'materialSliverAppBarNamedLarge', subBuilder: MaterialSliverAppBarNamedLarge.create)
    ..aOM<MaterialBadge>(62, _omitFieldNames ? '' : 'materialBadge', subBuilder: MaterialBadge.create)
    ..aOM<MaterialBadgeNamedCount>(63, _omitFieldNames ? '' : 'materialBadgeNamedCount', subBuilder: MaterialBadgeNamedCount.create)
    ..aOM<MaterialMaterialBanner>(64, _omitFieldNames ? '' : 'materialMaterialBanner', subBuilder: MaterialMaterialBanner.create)
    ..aOM<MaterialMaterialBannerTheme>(65, _omitFieldNames ? '' : 'materialMaterialBannerTheme', subBuilder: MaterialMaterialBannerTheme.create)
    ..aOM<MaterialBottomAppBar>(66, _omitFieldNames ? '' : 'materialBottomAppBar', subBuilder: MaterialBottomAppBar.create)
    ..aOM<MaterialRawMaterialButton>(67, _omitFieldNames ? '' : 'materialRawMaterialButton', subBuilder: MaterialRawMaterialButton.create)
    ..aOM<MaterialButtonBar>(68, _omitFieldNames ? '' : 'materialButtonBar', subBuilder: MaterialButtonBar.create)
    ..aOM<MaterialButtonTheme>(69, _omitFieldNames ? '' : 'materialButtonTheme', subBuilder: MaterialButtonTheme.create)
    ..aOM<MaterialCard>(70, _omitFieldNames ? '' : 'materialCard', subBuilder: MaterialCard.create)
    ..aOM<MaterialCheckbox>(71, _omitFieldNames ? '' : 'materialCheckbox', subBuilder: MaterialCheckbox.create)
    ..aOM<MaterialCheckboxNamedAdaptive>(72, _omitFieldNames ? '' : 'materialCheckboxNamedAdaptive', subBuilder: MaterialCheckboxNamedAdaptive.create)
    ..aOM<MaterialCheckboxListTile>(73, _omitFieldNames ? '' : 'materialCheckboxListTile', subBuilder: MaterialCheckboxListTile.create)
    ..aOM<MaterialCheckboxListTileNamedAdaptive>(74, _omitFieldNames ? '' : 'materialCheckboxListTileNamedAdaptive', subBuilder: MaterialCheckboxListTileNamedAdaptive.create)
    ..aOM<MaterialChip>(75, _omitFieldNames ? '' : 'materialChip', subBuilder: MaterialChip.create)
    ..aOM<MaterialRawChip>(76, _omitFieldNames ? '' : 'materialRawChip', subBuilder: MaterialRawChip.create)
    ..aOM<MaterialChoiceChip>(77, _omitFieldNames ? '' : 'materialChoiceChip', subBuilder: MaterialChoiceChip.create)
    ..aOM<MaterialChoiceChipNamedElevated>(78, _omitFieldNames ? '' : 'materialChoiceChipNamedElevated', subBuilder: MaterialChoiceChipNamedElevated.create)
    ..aOM<MaterialCircleAvatar>(79, _omitFieldNames ? '' : 'materialCircleAvatar', subBuilder: MaterialCircleAvatar.create)
    ..aOM<MaterialTableRowInkWell>(80, _omitFieldNames ? '' : 'materialTableRowInkWell', subBuilder: MaterialTableRowInkWell.create)
    ..aOM<MaterialDesktopTextSelectionToolbarButton>(81, _omitFieldNames ? '' : 'materialDesktopTextSelectionToolbarButton', subBuilder: MaterialDesktopTextSelectionToolbarButton.create)
    ..aOM<MaterialAlertDialog>(82, _omitFieldNames ? '' : 'materialAlertDialog', subBuilder: MaterialAlertDialog.create)
    ..aOM<MaterialAlertDialogNamedAdaptive>(83, _omitFieldNames ? '' : 'materialAlertDialogNamedAdaptive', subBuilder: MaterialAlertDialogNamedAdaptive.create)
    ..aOM<MaterialDialog>(84, _omitFieldNames ? '' : 'materialDialog', subBuilder: MaterialDialog.create)
    ..aOM<MaterialDialogNamedFullscreen>(85, _omitFieldNames ? '' : 'materialDialogNamedFullscreen', subBuilder: MaterialDialogNamedFullscreen.create)
    ..aOM<MaterialSimpleDialog>(86, _omitFieldNames ? '' : 'materialSimpleDialog', subBuilder: MaterialSimpleDialog.create)
    ..aOM<MaterialSimpleDialogOption>(87, _omitFieldNames ? '' : 'materialSimpleDialogOption', subBuilder: MaterialSimpleDialogOption.create)
    ..aOM<MaterialDivider>(88, _omitFieldNames ? '' : 'materialDivider', subBuilder: MaterialDivider.create)
    ..aOM<MaterialVerticalDivider>(89, _omitFieldNames ? '' : 'materialVerticalDivider', subBuilder: MaterialVerticalDivider.create)
    ..aOM<MaterialDrawer>(90, _omitFieldNames ? '' : 'materialDrawer', subBuilder: MaterialDrawer.create)
    ..aOM<MaterialDrawerHeader>(91, _omitFieldNames ? '' : 'materialDrawerHeader', subBuilder: MaterialDrawerHeader.create)
    ..aOM<MaterialDropdownButton>(92, _omitFieldNames ? '' : 'materialDropdownButton', subBuilder: MaterialDropdownButton.create)
    ..aOM<MaterialDropdownButtonFormField>(93, _omitFieldNames ? '' : 'materialDropdownButtonFormField', subBuilder: MaterialDropdownButtonFormField.create)
    ..aOM<MaterialDropdownButtonHideUnderline>(94, _omitFieldNames ? '' : 'materialDropdownButtonHideUnderline', subBuilder: MaterialDropdownButtonHideUnderline.create)
    ..aOM<MaterialDropdownMenuItem>(95, _omitFieldNames ? '' : 'materialDropdownMenuItem', subBuilder: MaterialDropdownMenuItem.create)
    ..aOM<MaterialElevatedButton>(96, _omitFieldNames ? '' : 'materialElevatedButton', subBuilder: MaterialElevatedButton.create)
    ..aOM<MaterialElevatedButtonNamedIcon>(97, _omitFieldNames ? '' : 'materialElevatedButtonNamedIcon', subBuilder: MaterialElevatedButtonNamedIcon.create)
    ..aOM<MaterialExpandIcon>(98, _omitFieldNames ? '' : 'materialExpandIcon', subBuilder: MaterialExpandIcon.create)
    ..aOM<MaterialExpansionPanelList>(99, _omitFieldNames ? '' : 'materialExpansionPanelList', subBuilder: MaterialExpansionPanelList.create)
    ..aOM<MaterialExpansionPanelListNamedRadio>(100, _omitFieldNames ? '' : 'materialExpansionPanelListNamedRadio', subBuilder: MaterialExpansionPanelListNamedRadio.create)
    ..aOM<MaterialExpansionTile>(101, _omitFieldNames ? '' : 'materialExpansionTile', subBuilder: MaterialExpansionTile.create)
    ..aOM<MaterialFilledButton>(102, _omitFieldNames ? '' : 'materialFilledButton', subBuilder: MaterialFilledButton.create)
    ..aOM<MaterialFilledButtonNamedIcon>(103, _omitFieldNames ? '' : 'materialFilledButtonNamedIcon', subBuilder: MaterialFilledButtonNamedIcon.create)
    ..aOM<MaterialFilledButtonNamedTonal>(104, _omitFieldNames ? '' : 'materialFilledButtonNamedTonal', subBuilder: MaterialFilledButtonNamedTonal.create)
    ..aOM<MaterialFilledButtonNamedTonalIcon>(105, _omitFieldNames ? '' : 'materialFilledButtonNamedTonalIcon', subBuilder: MaterialFilledButtonNamedTonalIcon.create)
    ..aOM<MaterialFilterChip>(106, _omitFieldNames ? '' : 'materialFilterChip', subBuilder: MaterialFilterChip.create)
    ..aOM<MaterialFilterChipNamedElevated>(107, _omitFieldNames ? '' : 'materialFilterChipNamedElevated', subBuilder: MaterialFilterChipNamedElevated.create)
    ..aOM<MaterialFlexibleSpaceBar>(108, _omitFieldNames ? '' : 'materialFlexibleSpaceBar', subBuilder: MaterialFlexibleSpaceBar.create)
    ..aOM<MaterialFlexibleSpaceBarSettings>(109, _omitFieldNames ? '' : 'materialFlexibleSpaceBarSettings', subBuilder: MaterialFlexibleSpaceBarSettings.create)
    ..aOM<MaterialFloatingActionButton>(110, _omitFieldNames ? '' : 'materialFloatingActionButton', subBuilder: MaterialFloatingActionButton.create)
    ..aOM<MaterialFloatingActionButtonNamedSmall>(111, _omitFieldNames ? '' : 'materialFloatingActionButtonNamedSmall', subBuilder: MaterialFloatingActionButtonNamedSmall.create)
    ..aOM<MaterialFloatingActionButtonNamedLarge>(112, _omitFieldNames ? '' : 'materialFloatingActionButtonNamedLarge', subBuilder: MaterialFloatingActionButtonNamedLarge.create)
    ..aOM<MaterialFloatingActionButtonNamedExtended>(113, _omitFieldNames ? '' : 'materialFloatingActionButtonNamedExtended', subBuilder: MaterialFloatingActionButtonNamedExtended.create)
    ..aOM<MaterialFlutterLogo>(114, _omitFieldNames ? '' : 'materialFlutterLogo', subBuilder: MaterialFlutterLogo.create)
    ..aOM<MaterialGridTile>(115, _omitFieldNames ? '' : 'materialGridTile', subBuilder: MaterialGridTile.create)
    ..aOM<MaterialGridTileBar>(116, _omitFieldNames ? '' : 'materialGridTileBar', subBuilder: MaterialGridTileBar.create)
    ..aOM<MaterialIconButton>(117, _omitFieldNames ? '' : 'materialIconButton', subBuilder: MaterialIconButton.create)
    ..aOM<MaterialIconButtonNamedFilled>(118, _omitFieldNames ? '' : 'materialIconButtonNamedFilled', subBuilder: MaterialIconButtonNamedFilled.create)
    ..aOM<MaterialIconButtonNamedFilledTonal>(119, _omitFieldNames ? '' : 'materialIconButtonNamedFilledTonal', subBuilder: MaterialIconButtonNamedFilledTonal.create)
    ..aOM<MaterialIconButtonNamedOutlined>(120, _omitFieldNames ? '' : 'materialIconButtonNamedOutlined', subBuilder: MaterialIconButtonNamedOutlined.create)
    ..aOM<MaterialInk>(121, _omitFieldNames ? '' : 'materialInk', subBuilder: MaterialInk.create)
    ..aOM<MaterialInkResponse>(122, _omitFieldNames ? '' : 'materialInkResponse', subBuilder: MaterialInkResponse.create)
    ..aOM<MaterialInkWell>(123, _omitFieldNames ? '' : 'materialInkWell', subBuilder: MaterialInkWell.create)
    ..aOM<MaterialInputChip>(124, _omitFieldNames ? '' : 'materialInputChip', subBuilder: MaterialInputChip.create)
    ..aOM<MaterialListTile>(125, _omitFieldNames ? '' : 'materialListTile', subBuilder: MaterialListTile.create)
    ..aOM<MaterialListTileTheme>(126, _omitFieldNames ? '' : 'materialListTileTheme', subBuilder: MaterialListTileTheme.create)
    ..aOM<MaterialMagnifier>(127, _omitFieldNames ? '' : 'materialMagnifier', subBuilder: MaterialMagnifier.create)
    ..aOM<MaterialMaterial>(128, _omitFieldNames ? '' : 'materialMaterial', subBuilder: MaterialMaterial.create)
    ..aOM<MaterialMaterialButton>(129, _omitFieldNames ? '' : 'materialMaterialButton', subBuilder: MaterialMaterialButton.create)
    ..aOM<MaterialCheckboxMenuButton>(130, _omitFieldNames ? '' : 'materialCheckboxMenuButton', subBuilder: MaterialCheckboxMenuButton.create)
    ..aOM<MaterialMenuAcceleratorCallbackBinding>(131, _omitFieldNames ? '' : 'materialMenuAcceleratorCallbackBinding', subBuilder: MaterialMenuAcceleratorCallbackBinding.create)
    ..aOM<MaterialMenuAcceleratorLabel>(132, _omitFieldNames ? '' : 'materialMenuAcceleratorLabel', subBuilder: MaterialMenuAcceleratorLabel.create)
    ..aOM<MaterialMenuAnchor>(133, _omitFieldNames ? '' : 'materialMenuAnchor', subBuilder: MaterialMenuAnchor.create)
    ..aOM<MaterialMenuBar>(134, _omitFieldNames ? '' : 'materialMenuBar', subBuilder: MaterialMenuBar.create)
    ..aOM<MaterialMenuItemButton>(135, _omitFieldNames ? '' : 'materialMenuItemButton', subBuilder: MaterialMenuItemButton.create)
    ..aOM<MaterialSubmenuButton>(136, _omitFieldNames ? '' : 'materialSubmenuButton', subBuilder: MaterialSubmenuButton.create)
    ..aOM<MaterialMergeableMaterial>(137, _omitFieldNames ? '' : 'materialMergeableMaterial', subBuilder: MaterialMergeableMaterial.create)
    ..aOM<MaterialNavigationBar>(138, _omitFieldNames ? '' : 'materialNavigationBar', subBuilder: MaterialNavigationBar.create)
    ..aOM<MaterialNavigationDestination>(139, _omitFieldNames ? '' : 'materialNavigationDestination', subBuilder: MaterialNavigationDestination.create)
    ..aOM<MaterialNavigationDrawer>(140, _omitFieldNames ? '' : 'materialNavigationDrawer', subBuilder: MaterialNavigationDrawer.create)
    ..aOM<MaterialNavigationDrawerDestination>(141, _omitFieldNames ? '' : 'materialNavigationDrawerDestination', subBuilder: MaterialNavigationDrawerDestination.create)
    ..aOM<MaterialOutlinedButton>(142, _omitFieldNames ? '' : 'materialOutlinedButton', subBuilder: MaterialOutlinedButton.create)
    ..aOM<MaterialOutlinedButtonNamedIcon>(143, _omitFieldNames ? '' : 'materialOutlinedButtonNamedIcon', subBuilder: MaterialOutlinedButtonNamedIcon.create)
    ..aOM<MaterialCheckedPopupMenuItem>(144, _omitFieldNames ? '' : 'materialCheckedPopupMenuItem', subBuilder: MaterialCheckedPopupMenuItem.create)
    ..aOM<MaterialPopupMenuDivider>(145, _omitFieldNames ? '' : 'materialPopupMenuDivider', subBuilder: MaterialPopupMenuDivider.create)
    ..aOM<MaterialPopupMenuItem>(146, _omitFieldNames ? '' : 'materialPopupMenuItem', subBuilder: MaterialPopupMenuItem.create)
    ..aOM<MaterialCircularProgressIndicator>(147, _omitFieldNames ? '' : 'materialCircularProgressIndicator', subBuilder: MaterialCircularProgressIndicator.create)
    ..aOM<MaterialCircularProgressIndicatorNamedAdaptive>(148, _omitFieldNames ? '' : 'materialCircularProgressIndicatorNamedAdaptive', subBuilder: MaterialCircularProgressIndicatorNamedAdaptive.create)
    ..aOM<MaterialLinearProgressIndicator>(149, _omitFieldNames ? '' : 'materialLinearProgressIndicator', subBuilder: MaterialLinearProgressIndicator.create)
    ..aOM<MaterialRefreshProgressIndicator>(150, _omitFieldNames ? '' : 'materialRefreshProgressIndicator', subBuilder: MaterialRefreshProgressIndicator.create)
    ..aOM<MaterialScaffold>(151, _omitFieldNames ? '' : 'materialScaffold', subBuilder: MaterialScaffold.create)
    ..aOM<MaterialScaffoldMessenger>(152, _omitFieldNames ? '' : 'materialScaffoldMessenger', subBuilder: MaterialScaffoldMessenger.create)
    ..aOM<MaterialScrollbar>(153, _omitFieldNames ? '' : 'materialScrollbar', subBuilder: MaterialScrollbar.create)
    ..aOM<MaterialSearchBar>(154, _omitFieldNames ? '' : 'materialSearchBar', subBuilder: MaterialSearchBar.create)
    ..aOM<MaterialSelectableText>(155, _omitFieldNames ? '' : 'materialSelectableText', subBuilder: MaterialSelectableText.create)
    ..aOM<MaterialSelectionArea>(156, _omitFieldNames ? '' : 'materialSelectionArea', subBuilder: MaterialSelectionArea.create)
    ..aOM<MaterialSlider>(157, _omitFieldNames ? '' : 'materialSlider', subBuilder: MaterialSlider.create)
    ..aOM<MaterialSliderNamedAdaptive>(158, _omitFieldNames ? '' : 'materialSliderNamedAdaptive', subBuilder: MaterialSliderNamedAdaptive.create)
    ..aOM<MaterialSnackBar>(159, _omitFieldNames ? '' : 'materialSnackBar', subBuilder: MaterialSnackBar.create)
    ..aOM<MaterialSwitch>(160, _omitFieldNames ? '' : 'materialSwitch', subBuilder: MaterialSwitch.create)
    ..aOM<MaterialSwitchNamedAdaptive>(161, _omitFieldNames ? '' : 'materialSwitchNamedAdaptive', subBuilder: MaterialSwitchNamedAdaptive.create)
    ..aOM<MaterialSwitchListTile>(162, _omitFieldNames ? '' : 'materialSwitchListTile', subBuilder: MaterialSwitchListTile.create)
    ..aOM<MaterialSwitchListTileNamedAdaptive>(163, _omitFieldNames ? '' : 'materialSwitchListTileNamedAdaptive', subBuilder: MaterialSwitchListTileNamedAdaptive.create)
    ..aOM<MaterialDefaultTabController>(164, _omitFieldNames ? '' : 'materialDefaultTabController', subBuilder: MaterialDefaultTabController.create)
    ..aOM<MaterialTab>(165, _omitFieldNames ? '' : 'materialTab', subBuilder: MaterialTab.create)
    ..aOM<MaterialTabBar>(166, _omitFieldNames ? '' : 'materialTabBar', subBuilder: MaterialTabBar.create)
    ..aOM<MaterialTabBarNamedSecondary>(167, _omitFieldNames ? '' : 'materialTabBarNamedSecondary', subBuilder: MaterialTabBarNamedSecondary.create)
    ..aOM<MaterialTabBarView>(168, _omitFieldNames ? '' : 'materialTabBarView', subBuilder: MaterialTabBarView.create)
    ..aOM<MaterialTabPageSelector>(169, _omitFieldNames ? '' : 'materialTabPageSelector', subBuilder: MaterialTabPageSelector.create)
    ..aOM<MaterialTabPageSelectorIndicator>(170, _omitFieldNames ? '' : 'materialTabPageSelectorIndicator', subBuilder: MaterialTabPageSelectorIndicator.create)
    ..aOM<MaterialTextButton>(171, _omitFieldNames ? '' : 'materialTextButton', subBuilder: MaterialTextButton.create)
    ..aOM<MaterialTextButtonNamedIcon>(172, _omitFieldNames ? '' : 'materialTextButtonNamedIcon', subBuilder: MaterialTextButtonNamedIcon.create)
    ..aOM<MaterialTextField>(173, _omitFieldNames ? '' : 'materialTextField', subBuilder: MaterialTextField.create)
    ..aOM<MaterialTextFormField>(174, _omitFieldNames ? '' : 'materialTextFormField', subBuilder: MaterialTextFormField.create)
    ..aOM<MaterialToggleButtons>(175, _omitFieldNames ? '' : 'materialToggleButtons', subBuilder: MaterialToggleButtons.create)
    ..aOM<MaterialTooltip>(176, _omitFieldNames ? '' : 'materialTooltip', subBuilder: MaterialTooltip.create)
    ..aOM<MaterialTooltipVisibility>(177, _omitFieldNames ? '' : 'materialTooltipVisibility', subBuilder: MaterialTooltipVisibility.create)
    ..aOM<MaterialUserAccountsDrawerHeader>(178, _omitFieldNames ? '' : 'materialUserAccountsDrawerHeader', subBuilder: MaterialUserAccountsDrawerHeader.create)
    ..aOM<FlutterPlatformSelectableRegionContextMenu>(179, _omitFieldNames ? '' : 'flutterPlatformSelectableRegionContextMenu', subBuilder: FlutterPlatformSelectableRegionContextMenu.create)
    ..aOM<FlutterFocusableActionDetector>(180, _omitFieldNames ? '' : 'flutterFocusableActionDetector', subBuilder: FlutterFocusableActionDetector.create)
    ..aOM<FlutterAnimatedSize>(181, _omitFieldNames ? '' : 'flutterAnimatedSize', subBuilder: FlutterAnimatedSize.create)
    ..aOM<FlutterAnimatedSwitcher>(182, _omitFieldNames ? '' : 'flutterAnimatedSwitcher', subBuilder: FlutterAnimatedSwitcher.create)
    ..aOM<FlutterWidgetsApp>(183, _omitFieldNames ? '' : 'flutterWidgetsApp', subBuilder: FlutterWidgetsApp.create)
    ..aOM<FlutterWidgetsAppNamedRouter>(184, _omitFieldNames ? '' : 'flutterWidgetsAppNamedRouter', subBuilder: FlutterWidgetsAppNamedRouter.create)
    ..aOM<FlutterAutofillGroup>(185, _omitFieldNames ? '' : 'flutterAutofillGroup', subBuilder: FlutterAutofillGroup.create)
    ..aOM<FlutterAutomaticKeepAlive>(186, _omitFieldNames ? '' : 'flutterAutomaticKeepAlive', subBuilder: FlutterAutomaticKeepAlive.create)
    ..aOM<FlutterCheckedModeBanner>(187, _omitFieldNames ? '' : 'flutterCheckedModeBanner', subBuilder: FlutterCheckedModeBanner.create)
    ..aOM<FlutterAbsorbPointer>(188, _omitFieldNames ? '' : 'flutterAbsorbPointer', subBuilder: FlutterAbsorbPointer.create)
    ..aOM<FlutterAlign>(189, _omitFieldNames ? '' : 'flutterAlign', subBuilder: FlutterAlign.create)
    ..aOM<FlutterAspectRatio>(190, _omitFieldNames ? '' : 'flutterAspectRatio', subBuilder: FlutterAspectRatio.create)
    ..aOM<FlutterBlockSemantics>(191, _omitFieldNames ? '' : 'flutterBlockSemantics', subBuilder: FlutterBlockSemantics.create)
    ..aOM<FlutterCenter>(192, _omitFieldNames ? '' : 'flutterCenter', subBuilder: FlutterCenter.create)
    ..aOM<FlutterClipOval>(193, _omitFieldNames ? '' : 'flutterClipOval', subBuilder: FlutterClipOval.create)
    ..aOM<FlutterClipPath>(194, _omitFieldNames ? '' : 'flutterClipPath', subBuilder: FlutterClipPath.create)
    ..aOM<FlutterClipRRect>(195, _omitFieldNames ? '' : 'flutterClipRRect', subBuilder: FlutterClipRRect.create)
    ..aOM<FlutterClipRect>(196, _omitFieldNames ? '' : 'flutterClipRect', subBuilder: FlutterClipRect.create)
    ..aOM<FlutterColoredBox>(197, _omitFieldNames ? '' : 'flutterColoredBox', subBuilder: FlutterColoredBox.create)
    ..aOM<FlutterColumn>(198, _omitFieldNames ? '' : 'flutterColumn', subBuilder: FlutterColumn.create)
    ..aOM<FlutterCustomPaint>(199, _omitFieldNames ? '' : 'flutterCustomPaint', subBuilder: FlutterCustomPaint.create)
    ..aOM<FlutterExcludeSemantics>(200, _omitFieldNames ? '' : 'flutterExcludeSemantics', subBuilder: FlutterExcludeSemantics.create)
    ..aOM<FlutterExpanded>(201, _omitFieldNames ? '' : 'flutterExpanded', subBuilder: FlutterExpanded.create)
    ..aOM<FlutterFittedBox>(202, _omitFieldNames ? '' : 'flutterFittedBox', subBuilder: FlutterFittedBox.create)
    ..aOM<FlutterFlexible>(203, _omitFieldNames ? '' : 'flutterFlexible', subBuilder: FlutterFlexible.create)
    ..aOM<FlutterFractionallySizedBox>(204, _omitFieldNames ? '' : 'flutterFractionallySizedBox', subBuilder: FlutterFractionallySizedBox.create)
    ..aOM<FlutterIgnorePointer>(205, _omitFieldNames ? '' : 'flutterIgnorePointer', subBuilder: FlutterIgnorePointer.create)
    ..aOM<FlutterIndexedSemantics>(206, _omitFieldNames ? '' : 'flutterIndexedSemantics', subBuilder: FlutterIndexedSemantics.create)
    ..aOM<FlutterIndexedStack>(207, _omitFieldNames ? '' : 'flutterIndexedStack', subBuilder: FlutterIndexedStack.create)
    ..aOM<FlutterIntrinsicHeight>(208, _omitFieldNames ? '' : 'flutterIntrinsicHeight', subBuilder: FlutterIntrinsicHeight.create)
    ..aOM<FlutterIntrinsicWidth>(209, _omitFieldNames ? '' : 'flutterIntrinsicWidth', subBuilder: FlutterIntrinsicWidth.create)
    ..aOM<FlutterKeyedSubtree>(210, _omitFieldNames ? '' : 'flutterKeyedSubtree', subBuilder: FlutterKeyedSubtree.create)
    ..aOM<FlutterKeyedSubtreeNamedWrap>(211, _omitFieldNames ? '' : 'flutterKeyedSubtreeNamedWrap', subBuilder: FlutterKeyedSubtreeNamedWrap.create)
    ..aOM<FlutterLimitedBox>(212, _omitFieldNames ? '' : 'flutterLimitedBox', subBuilder: FlutterLimitedBox.create)
    ..aOM<FlutterListBody>(213, _omitFieldNames ? '' : 'flutterListBody', subBuilder: FlutterListBody.create)
    ..aOM<FlutterListener>(214, _omitFieldNames ? '' : 'flutterListener', subBuilder: FlutterListener.create)
    ..aOM<FlutterMergeSemantics>(215, _omitFieldNames ? '' : 'flutterMergeSemantics', subBuilder: FlutterMergeSemantics.create)
    ..aOM<FlutterMetaData>(216, _omitFieldNames ? '' : 'flutterMetaData', subBuilder: FlutterMetaData.create)
    ..aOM<FlutterMouseRegion>(217, _omitFieldNames ? '' : 'flutterMouseRegion', subBuilder: FlutterMouseRegion.create)
    ..aOM<FlutterOffstage>(218, _omitFieldNames ? '' : 'flutterOffstage', subBuilder: FlutterOffstage.create)
    ..aOM<FlutterOpacity>(219, _omitFieldNames ? '' : 'flutterOpacity', subBuilder: FlutterOpacity.create)
    ..aOM<FlutterOverflowBox>(220, _omitFieldNames ? '' : 'flutterOverflowBox', subBuilder: FlutterOverflowBox.create)
    ..aOM<FlutterPhysicalModel>(221, _omitFieldNames ? '' : 'flutterPhysicalModel', subBuilder: FlutterPhysicalModel.create)
    ..aOM<FlutterPositioned>(222, _omitFieldNames ? '' : 'flutterPositioned', subBuilder: FlutterPositioned.create)
    ..aOM<FlutterPositionedNamedFill>(223, _omitFieldNames ? '' : 'flutterPositionedNamedFill', subBuilder: FlutterPositionedNamedFill.create)
    ..aOM<FlutterPositionedDirectional>(224, _omitFieldNames ? '' : 'flutterPositionedDirectional', subBuilder: FlutterPositionedDirectional.create)
    ..aOM<FlutterRawImage>(225, _omitFieldNames ? '' : 'flutterRawImage', subBuilder: FlutterRawImage.create)
    ..aOM<FlutterRepaintBoundary>(226, _omitFieldNames ? '' : 'flutterRepaintBoundary', subBuilder: FlutterRepaintBoundary.create)
    ..aOM<FlutterRepaintBoundaryNamedWrap>(227, _omitFieldNames ? '' : 'flutterRepaintBoundaryNamedWrap', subBuilder: FlutterRepaintBoundaryNamedWrap.create)
    ..aOM<FlutterRotatedBox>(228, _omitFieldNames ? '' : 'flutterRotatedBox', subBuilder: FlutterRotatedBox.create)
    ..aOM<FlutterRow>(229, _omitFieldNames ? '' : 'flutterRow', subBuilder: FlutterRow.create)
    ..aOM<FlutterSemantics>(230, _omitFieldNames ? '' : 'flutterSemantics', subBuilder: FlutterSemantics.create)
    ..aOM<FlutterSizedBox>(231, _omitFieldNames ? '' : 'flutterSizedBox', subBuilder: FlutterSizedBox.create)
    ..aOM<FlutterSizedBoxNamedExpand>(232, _omitFieldNames ? '' : 'flutterSizedBoxNamedExpand', subBuilder: FlutterSizedBoxNamedExpand.create)
    ..aOM<FlutterSizedBoxNamedShrink>(233, _omitFieldNames ? '' : 'flutterSizedBoxNamedShrink', subBuilder: FlutterSizedBoxNamedShrink.create)
    ..aOM<FlutterSizedBoxNamedFromSize>(234, _omitFieldNames ? '' : 'flutterSizedBoxNamedFromSize', subBuilder: FlutterSizedBoxNamedFromSize.create)
    ..aOM<FlutterSizedBoxNamedSquare>(235, _omitFieldNames ? '' : 'flutterSizedBoxNamedSquare', subBuilder: FlutterSizedBoxNamedSquare.create)
    ..aOM<FlutterSliverToBoxAdapter>(236, _omitFieldNames ? '' : 'flutterSliverToBoxAdapter', subBuilder: FlutterSliverToBoxAdapter.create)
    ..aOM<FlutterStack>(237, _omitFieldNames ? '' : 'flutterStack', subBuilder: FlutterStack.create)
    ..aOM<FlutterTransformNamedRotate>(238, _omitFieldNames ? '' : 'flutterTransformNamedRotate', subBuilder: FlutterTransformNamedRotate.create)
    ..aOM<FlutterTransformNamedScale>(239, _omitFieldNames ? '' : 'flutterTransformNamedScale', subBuilder: FlutterTransformNamedScale.create)
    ..aOM<FlutterTransformNamedFlip>(240, _omitFieldNames ? '' : 'flutterTransformNamedFlip', subBuilder: FlutterTransformNamedFlip.create)
    ..aOM<FlutterUnconstrainedBox>(241, _omitFieldNames ? '' : 'flutterUnconstrainedBox', subBuilder: FlutterUnconstrainedBox.create)
    ..aOM<FlutterWrap>(242, _omitFieldNames ? '' : 'flutterWrap', subBuilder: FlutterWrap.create)
    ..aOM<FlutterContainer>(243, _omitFieldNames ? '' : 'flutterContainer', subBuilder: FlutterContainer.create)
    ..aOM<FlutterDefaultSelectionStyle>(244, _omitFieldNames ? '' : 'flutterDefaultSelectionStyle', subBuilder: FlutterDefaultSelectionStyle.create)
    ..aOM<FlutterDefaultSelectionStyleNamedFallback>(245, _omitFieldNames ? '' : 'flutterDefaultSelectionStyleNamedFallback', subBuilder: FlutterDefaultSelectionStyleNamedFallback.create)
    ..aOM<FlutterDefaultTextEditingShortcuts>(246, _omitFieldNames ? '' : 'flutterDefaultTextEditingShortcuts', subBuilder: FlutterDefaultTextEditingShortcuts.create)
    ..aOM<FlutterDismissible>(247, _omitFieldNames ? '' : 'flutterDismissible', subBuilder: FlutterDismissible.create)
    ..aOM<FlutterDisplayFeatureSubScreen>(248, _omitFieldNames ? '' : 'flutterDisplayFeatureSubScreen', subBuilder: FlutterDisplayFeatureSubScreen.create)
    ..aOM<FlutterDraggable>(249, _omitFieldNames ? '' : 'flutterDraggable', subBuilder: FlutterDraggable.create)
    ..aOM<FlutterLongPressDraggable>(250, _omitFieldNames ? '' : 'flutterLongPressDraggable', subBuilder: FlutterLongPressDraggable.create)
    ..aOM<FlutterDraggableScrollableActuator>(251, _omitFieldNames ? '' : 'flutterDraggableScrollableActuator', subBuilder: FlutterDraggableScrollableActuator.create)
    ..aOM<FlutterFadeInImageNamedAssetNetwork>(252, _omitFieldNames ? '' : 'flutterFadeInImageNamedAssetNetwork', subBuilder: FlutterFadeInImageNamedAssetNetwork.create)
    ..aOM<FlutterExcludeFocus>(253, _omitFieldNames ? '' : 'flutterExcludeFocus', subBuilder: FlutterExcludeFocus.create)
    ..aOM<FlutterFocus>(254, _omitFieldNames ? '' : 'flutterFocus', subBuilder: FlutterFocus.create)
    ..aOM<FlutterFocusScope>(255, _omitFieldNames ? '' : 'flutterFocusScope', subBuilder: FlutterFocusScope.create)
    ..aOM<FlutterExcludeFocusTraversal>(256, _omitFieldNames ? '' : 'flutterExcludeFocusTraversal', subBuilder: FlutterExcludeFocusTraversal.create)
    ..aOM<FlutterFocusTraversalGroup>(257, _omitFieldNames ? '' : 'flutterFocusTraversalGroup', subBuilder: FlutterFocusTraversalGroup.create)
    ..aOM<FlutterForm>(258, _omitFieldNames ? '' : 'flutterForm', subBuilder: FlutterForm.create)
    ..aOM<FlutterErrorWidgetNamedWithDetails>(259, _omitFieldNames ? '' : 'flutterErrorWidgetNamedWithDetails', subBuilder: FlutterErrorWidgetNamedWithDetails.create)
    ..aOM<FlutterGestureDetector>(260, _omitFieldNames ? '' : 'flutterGestureDetector', subBuilder: FlutterGestureDetector.create)
    ..aOM<FlutterRawGestureDetector>(261, _omitFieldNames ? '' : 'flutterRawGestureDetector', subBuilder: FlutterRawGestureDetector.create)
    ..aOM<FlutterGridPaper>(262, _omitFieldNames ? '' : 'flutterGridPaper', subBuilder: FlutterGridPaper.create)
    ..aOM<FlutterHeroMode>(263, _omitFieldNames ? '' : 'flutterHeroMode', subBuilder: FlutterHeroMode.create)
    ..aOM<FlutterIcon>(264, _omitFieldNames ? '' : 'flutterIcon', subBuilder: FlutterIcon.create)
    ..aOM<FlutterImageNamedNetwork>(265, _omitFieldNames ? '' : 'flutterImageNamedNetwork', subBuilder: FlutterImageNamedNetwork.create)
    ..aOM<FlutterImageNamedAsset>(266, _omitFieldNames ? '' : 'flutterImageNamedAsset', subBuilder: FlutterImageNamedAsset.create)
    ..aOM<FlutterImageIcon>(267, _omitFieldNames ? '' : 'flutterImageIcon', subBuilder: FlutterImageIcon.create)
    ..aOM<FlutterAnimatedContainer>(268, _omitFieldNames ? '' : 'flutterAnimatedContainer', subBuilder: FlutterAnimatedContainer.create)
    ..aOM<FlutterAnimatedFractionallySizedBox>(269, _omitFieldNames ? '' : 'flutterAnimatedFractionallySizedBox', subBuilder: FlutterAnimatedFractionallySizedBox.create)
    ..aOM<FlutterAnimatedOpacity>(270, _omitFieldNames ? '' : 'flutterAnimatedOpacity', subBuilder: FlutterAnimatedOpacity.create)
    ..aOM<FlutterAnimatedPositioned>(271, _omitFieldNames ? '' : 'flutterAnimatedPositioned', subBuilder: FlutterAnimatedPositioned.create)
    ..aOM<FlutterAnimatedPositionedDirectional>(272, _omitFieldNames ? '' : 'flutterAnimatedPositionedDirectional', subBuilder: FlutterAnimatedPositionedDirectional.create)
    ..aOM<FlutterAnimatedRotation>(273, _omitFieldNames ? '' : 'flutterAnimatedRotation', subBuilder: FlutterAnimatedRotation.create)
    ..aOM<FlutterAnimatedScale>(274, _omitFieldNames ? '' : 'flutterAnimatedScale', subBuilder: FlutterAnimatedScale.create)
    ..aOM<FlutterSliverAnimatedOpacity>(275, _omitFieldNames ? '' : 'flutterSliverAnimatedOpacity', subBuilder: FlutterSliverAnimatedOpacity.create)
    ..aOM<FlutterInteractiveViewer>(276, _omitFieldNames ? '' : 'flutterInteractiveViewer', subBuilder: FlutterInteractiveViewer.create)
    ..aOM<FlutterListWheelScrollView>(277, _omitFieldNames ? '' : 'flutterListWheelScrollView', subBuilder: FlutterListWheelScrollView.create)
    ..aOM<FlutterLookupBoundary>(278, _omitFieldNames ? '' : 'flutterLookupBoundary', subBuilder: FlutterLookupBoundary.create)
    ..aOM<FlutterModalBarrier>(279, _omitFieldNames ? '' : 'flutterModalBarrier', subBuilder: FlutterModalBarrier.create)
    ..aOM<FlutterNavigationToolbar>(280, _omitFieldNames ? '' : 'flutterNavigationToolbar', subBuilder: FlutterNavigationToolbar.create)
    ..aOM<FlutterHeroControllerScopeNamedNone>(281, _omitFieldNames ? '' : 'flutterHeroControllerScopeNamedNone', subBuilder: FlutterHeroControllerScopeNamedNone.create)
    ..aOM<FlutterNavigator>(282, _omitFieldNames ? '' : 'flutterNavigator', subBuilder: FlutterNavigator.create)
    ..aOM<FlutterNotificationListener>(283, _omitFieldNames ? '' : 'flutterNotificationListener', subBuilder: FlutterNotificationListener.create)
    ..aOM<FlutterOverflowBar>(284, _omitFieldNames ? '' : 'flutterOverflowBar', subBuilder: FlutterOverflowBar.create)
    ..aOM<FlutterOverlay>(285, _omitFieldNames ? '' : 'flutterOverlay', subBuilder: FlutterOverlay.create)
    ..aOM<FlutterPageView>(286, _omitFieldNames ? '' : 'flutterPageView', subBuilder: FlutterPageView.create)
    ..aOM<FlutterPerformanceOverlay>(287, _omitFieldNames ? '' : 'flutterPerformanceOverlay', subBuilder: FlutterPerformanceOverlay.create)
    ..aOM<FlutterPerformanceOverlayNamedAllEnabled>(288, _omitFieldNames ? '' : 'flutterPerformanceOverlayNamedAllEnabled', subBuilder: FlutterPerformanceOverlayNamedAllEnabled.create)
    ..aOM<FlutterPlaceholder>(289, _omitFieldNames ? '' : 'flutterPlaceholder', subBuilder: FlutterPlaceholder.create)
    ..aOM<FlutterAndroidView>(290, _omitFieldNames ? '' : 'flutterAndroidView', subBuilder: FlutterAndroidView.create)
    ..aOM<FlutterHtmlElementView>(291, _omitFieldNames ? '' : 'flutterHtmlElementView', subBuilder: FlutterHtmlElementView.create)
    ..aOM<FlutterUiKitView>(292, _omitFieldNames ? '' : 'flutterUiKitView', subBuilder: FlutterUiKitView.create)
    ..aOM<FlutterPrimaryScrollControllerNamedNone>(293, _omitFieldNames ? '' : 'flutterPrimaryScrollControllerNamedNone', subBuilder: FlutterPrimaryScrollControllerNamedNone.create)
    ..aOM<FlutterReorderableDelayedDragStartListener>(294, _omitFieldNames ? '' : 'flutterReorderableDelayedDragStartListener', subBuilder: FlutterReorderableDelayedDragStartListener.create)
    ..aOM<FlutterReorderableDragStartListener>(295, _omitFieldNames ? '' : 'flutterReorderableDragStartListener', subBuilder: FlutterReorderableDragStartListener.create)
    ..aOM<FlutterRestorationScope>(296, _omitFieldNames ? '' : 'flutterRestorationScope', subBuilder: FlutterRestorationScope.create)
    ..aOM<FlutterRootRestorationScope>(297, _omitFieldNames ? '' : 'flutterRootRestorationScope', subBuilder: FlutterRootRestorationScope.create)
    ..aOM<FlutterUnmanagedRestorationScope>(298, _omitFieldNames ? '' : 'flutterUnmanagedRestorationScope', subBuilder: FlutterUnmanagedRestorationScope.create)
    ..aOM<FlutterSafeArea>(299, _omitFieldNames ? '' : 'flutterSafeArea', subBuilder: FlutterSafeArea.create)
    ..aOM<FlutterSliverSafeArea>(300, _omitFieldNames ? '' : 'flutterSliverSafeArea', subBuilder: FlutterSliverSafeArea.create)
    ..aOM<FlutterScrollNotificationObserver>(301, _omitFieldNames ? '' : 'flutterScrollNotificationObserver', subBuilder: FlutterScrollNotificationObserver.create)
    ..aOM<FlutterCustomScrollView>(302, _omitFieldNames ? '' : 'flutterCustomScrollView', subBuilder: FlutterCustomScrollView.create)
    ..aOM<FlutterGridViewNamedCount>(303, _omitFieldNames ? '' : 'flutterGridViewNamedCount', subBuilder: FlutterGridViewNamedCount.create)
    ..aOM<FlutterGridViewNamedExtent>(304, _omitFieldNames ? '' : 'flutterGridViewNamedExtent', subBuilder: FlutterGridViewNamedExtent.create)
    ..aOM<FlutterListView>(305, _omitFieldNames ? '' : 'flutterListView', subBuilder: FlutterListView.create)
    ..aOM<FlutterRawScrollbar>(306, _omitFieldNames ? '' : 'flutterRawScrollbar', subBuilder: FlutterRawScrollbar.create)
    ..aOM<FlutterSelectionContainerNamedDisabled>(307, _omitFieldNames ? '' : 'flutterSelectionContainerNamedDisabled', subBuilder: FlutterSelectionContainerNamedDisabled.create)
    ..aOM<FlutterSemanticsDebugger>(308, _omitFieldNames ? '' : 'flutterSemanticsDebugger', subBuilder: FlutterSemanticsDebugger.create)
    ..aOM<FlutterSharedAppData>(309, _omitFieldNames ? '' : 'flutterSharedAppData', subBuilder: FlutterSharedAppData.create)
    ..aOM<FlutterShortcutRegistrar>(310, _omitFieldNames ? '' : 'flutterShortcutRegistrar', subBuilder: FlutterShortcutRegistrar.create)
    ..aOM<FlutterSingleChildScrollView>(311, _omitFieldNames ? '' : 'flutterSingleChildScrollView', subBuilder: FlutterSingleChildScrollView.create)
    ..aOM<FlutterSizeChangedLayoutNotifier>(312, _omitFieldNames ? '' : 'flutterSizeChangedLayoutNotifier', subBuilder: FlutterSizeChangedLayoutNotifier.create)
    ..aOM<FlutterKeepAlive>(313, _omitFieldNames ? '' : 'flutterKeepAlive', subBuilder: FlutterKeepAlive.create)
    ..aOM<FlutterSliverConstrainedCrossAxis>(314, _omitFieldNames ? '' : 'flutterSliverConstrainedCrossAxis', subBuilder: FlutterSliverConstrainedCrossAxis.create)
    ..aOM<FlutterSliverCrossAxisExpanded>(315, _omitFieldNames ? '' : 'flutterSliverCrossAxisExpanded', subBuilder: FlutterSliverCrossAxisExpanded.create)
    ..aOM<FlutterSliverCrossAxisGroup>(316, _omitFieldNames ? '' : 'flutterSliverCrossAxisGroup', subBuilder: FlutterSliverCrossAxisGroup.create)
    ..aOM<FlutterSliverFixedExtentListNamedList>(317, _omitFieldNames ? '' : 'flutterSliverFixedExtentListNamedList', subBuilder: FlutterSliverFixedExtentListNamedList.create)
    ..aOM<FlutterSliverGridNamedCount>(318, _omitFieldNames ? '' : 'flutterSliverGridNamedCount', subBuilder: FlutterSliverGridNamedCount.create)
    ..aOM<FlutterSliverGridNamedExtent>(319, _omitFieldNames ? '' : 'flutterSliverGridNamedExtent', subBuilder: FlutterSliverGridNamedExtent.create)
    ..aOM<FlutterSliverIgnorePointer>(320, _omitFieldNames ? '' : 'flutterSliverIgnorePointer', subBuilder: FlutterSliverIgnorePointer.create)
    ..aOM<FlutterSliverListNamedList>(321, _omitFieldNames ? '' : 'flutterSliverListNamedList', subBuilder: FlutterSliverListNamedList.create)
    ..aOM<FlutterSliverMainAxisGroup>(322, _omitFieldNames ? '' : 'flutterSliverMainAxisGroup', subBuilder: FlutterSliverMainAxisGroup.create)
    ..aOM<FlutterSliverOffstage>(323, _omitFieldNames ? '' : 'flutterSliverOffstage', subBuilder: FlutterSliverOffstage.create)
    ..aOM<FlutterSliverOpacity>(324, _omitFieldNames ? '' : 'flutterSliverOpacity', subBuilder: FlutterSliverOpacity.create)
    ..aOM<FlutterSliverFillRemaining>(325, _omitFieldNames ? '' : 'flutterSliverFillRemaining', subBuilder: FlutterSliverFillRemaining.create)
    ..aOM<FlutterSliverPrototypeExtentListNamedList>(326, _omitFieldNames ? '' : 'flutterSliverPrototypeExtentListNamedList', subBuilder: FlutterSliverPrototypeExtentListNamedList.create)
    ..aOM<FlutterSpacer>(327, _omitFieldNames ? '' : 'flutterSpacer', subBuilder: FlutterSpacer.create)
    ..aOM<FlutterTable>(328, _omitFieldNames ? '' : 'flutterTable', subBuilder: FlutterTable.create)
    ..aOM<FlutterTableCell>(329, _omitFieldNames ? '' : 'flutterTableCell', subBuilder: FlutterTableCell.create)
    ..aOM<FlutterTapRegion>(330, _omitFieldNames ? '' : 'flutterTapRegion', subBuilder: FlutterTapRegion.create)
    ..aOM<FlutterTapRegionSurface>(331, _omitFieldNames ? '' : 'flutterTapRegionSurface', subBuilder: FlutterTapRegionSurface.create)
    ..aOM<FlutterTextFieldTapRegion>(332, _omitFieldNames ? '' : 'flutterTextFieldTapRegion', subBuilder: FlutterTextFieldTapRegion.create)
    ..aOM<FlutterDefaultTextStyleNamedFallback>(333, _omitFieldNames ? '' : 'flutterDefaultTextStyleNamedFallback', subBuilder: FlutterDefaultTextStyleNamedFallback.create)
    ..aOM<FlutterText>(334, _omitFieldNames ? '' : 'flutterText', subBuilder: FlutterText.create)
    ..aOM<FlutterTextSelectionGestureDetector>(335, _omitFieldNames ? '' : 'flutterTextSelectionGestureDetector', subBuilder: FlutterTextSelectionGestureDetector.create)
    ..aOM<FlutterTexture>(336, _omitFieldNames ? '' : 'flutterTexture', subBuilder: FlutterTexture.create)
    ..aOM<FlutterTickerMode>(337, _omitFieldNames ? '' : 'flutterTickerMode', subBuilder: FlutterTickerMode.create)
    ..aOM<FlutterTitle>(338, _omitFieldNames ? '' : 'flutterTitle', subBuilder: FlutterTitle.create)
    ..aOM<FlutterSliverVisibility>(339, _omitFieldNames ? '' : 'flutterSliverVisibility', subBuilder: FlutterSliverVisibility.create)
    ..aOM<FlutterSliverVisibilityNamedMaintain>(340, _omitFieldNames ? '' : 'flutterSliverVisibilityNamedMaintain', subBuilder: FlutterSliverVisibilityNamedMaintain.create)
    ..aOM<FlutterVisibility>(341, _omitFieldNames ? '' : 'flutterVisibility', subBuilder: FlutterVisibility.create)
    ..aOM<FlutterVisibilityNamedMaintain>(342, _omitFieldNames ? '' : 'flutterVisibilityNamedMaintain', subBuilder: FlutterVisibilityNamedMaintain.create)
    ..aOM<FlutterWidgetInspector>(343, _omitFieldNames ? '' : 'flutterWidgetInspector', subBuilder: FlutterWidgetInspector.create)
    ..aOM<FlutterWillPopScope>(344, _omitFieldNames ? '' : 'flutterWillPopScope', subBuilder: FlutterWillPopScope.create)
    ..aOM<FlutterProjectMyApp>(345, _omitFieldNames ? '' : 'flutterProjectMyApp', subBuilder: FlutterProjectMyApp.create)
    ..aOM<FlutterProjectMyHomePage>(346, _omitFieldNames ? '' : 'flutterProjectMyHomePage', subBuilder: FlutterProjectMyHomePage.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WidgetExpression clone() => WidgetExpression()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WidgetExpression copyWith(void Function(WidgetExpression) updates) => super.copyWith((message) => updates(message as WidgetExpression)) as WidgetExpression;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WidgetExpression create() => WidgetExpression._();
  WidgetExpression createEmptyInstance() => create();
  static $pb.PbList<WidgetExpression> createRepeated() => $pb.PbList<WidgetExpression>();
  @$core.pragma('dart2js:noInline')
  static WidgetExpression getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WidgetExpression>(create);
  static WidgetExpression? _defaultInstance;

  WidgetExpression_Result whichResult() => _WidgetExpression_ResultByTag[$_whichOneof(0)]!;
  void clearResult() => clearField($_whichOneof(0));

  @$pb.TagNumber(2)
  CupertinoActivityIndicator get cupertinoActivityIndicator => $_getN(0);
  @$pb.TagNumber(2)
  set cupertinoActivityIndicator(CupertinoActivityIndicator v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasCupertinoActivityIndicator() => $_has(0);
  @$pb.TagNumber(2)
  void clearCupertinoActivityIndicator() => clearField(2);
  @$pb.TagNumber(2)
  CupertinoActivityIndicator ensureCupertinoActivityIndicator() => $_ensure(0);

  @$pb.TagNumber(3)
  CupertinoActivityIndicatorNamedPartiallyRevealed get cupertinoActivityIndicatorNamedPartiallyRevealed => $_getN(1);
  @$pb.TagNumber(3)
  set cupertinoActivityIndicatorNamedPartiallyRevealed(CupertinoActivityIndicatorNamedPartiallyRevealed v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCupertinoActivityIndicatorNamedPartiallyRevealed() => $_has(1);
  @$pb.TagNumber(3)
  void clearCupertinoActivityIndicatorNamedPartiallyRevealed() => clearField(3);
  @$pb.TagNumber(3)
  CupertinoActivityIndicatorNamedPartiallyRevealed ensureCupertinoActivityIndicatorNamedPartiallyRevealed() => $_ensure(1);

  @$pb.TagNumber(4)
  CupertinoApp get cupertinoApp => $_getN(2);
  @$pb.TagNumber(4)
  set cupertinoApp(CupertinoApp v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasCupertinoApp() => $_has(2);
  @$pb.TagNumber(4)
  void clearCupertinoApp() => clearField(4);
  @$pb.TagNumber(4)
  CupertinoApp ensureCupertinoApp() => $_ensure(2);

  @$pb.TagNumber(5)
  CupertinoAppNamedRouter get cupertinoAppNamedRouter => $_getN(3);
  @$pb.TagNumber(5)
  set cupertinoAppNamedRouter(CupertinoAppNamedRouter v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasCupertinoAppNamedRouter() => $_has(3);
  @$pb.TagNumber(5)
  void clearCupertinoAppNamedRouter() => clearField(5);
  @$pb.TagNumber(5)
  CupertinoAppNamedRouter ensureCupertinoAppNamedRouter() => $_ensure(3);

  @$pb.TagNumber(6)
  CupertinoButton get cupertinoButton => $_getN(4);
  @$pb.TagNumber(6)
  set cupertinoButton(CupertinoButton v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasCupertinoButton() => $_has(4);
  @$pb.TagNumber(6)
  void clearCupertinoButton() => clearField(6);
  @$pb.TagNumber(6)
  CupertinoButton ensureCupertinoButton() => $_ensure(4);

  @$pb.TagNumber(7)
  CupertinoButtonNamedFilled get cupertinoButtonNamedFilled => $_getN(5);
  @$pb.TagNumber(7)
  set cupertinoButtonNamedFilled(CupertinoButtonNamedFilled v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasCupertinoButtonNamedFilled() => $_has(5);
  @$pb.TagNumber(7)
  void clearCupertinoButtonNamedFilled() => clearField(7);
  @$pb.TagNumber(7)
  CupertinoButtonNamedFilled ensureCupertinoButtonNamedFilled() => $_ensure(5);

  @$pb.TagNumber(8)
  CupertinoCheckbox get cupertinoCheckbox => $_getN(6);
  @$pb.TagNumber(8)
  set cupertinoCheckbox(CupertinoCheckbox v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasCupertinoCheckbox() => $_has(6);
  @$pb.TagNumber(8)
  void clearCupertinoCheckbox() => clearField(8);
  @$pb.TagNumber(8)
  CupertinoCheckbox ensureCupertinoCheckbox() => $_ensure(6);

  @$pb.TagNumber(9)
  CupertinoContextMenu get cupertinoContextMenu => $_getN(7);
  @$pb.TagNumber(9)
  set cupertinoContextMenu(CupertinoContextMenu v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasCupertinoContextMenu() => $_has(7);
  @$pb.TagNumber(9)
  void clearCupertinoContextMenu() => clearField(9);
  @$pb.TagNumber(9)
  CupertinoContextMenu ensureCupertinoContextMenu() => $_ensure(7);

  @$pb.TagNumber(10)
  CupertinoContextMenuAction get cupertinoContextMenuAction => $_getN(8);
  @$pb.TagNumber(10)
  set cupertinoContextMenuAction(CupertinoContextMenuAction v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasCupertinoContextMenuAction() => $_has(8);
  @$pb.TagNumber(10)
  void clearCupertinoContextMenuAction() => clearField(10);
  @$pb.TagNumber(10)
  CupertinoContextMenuAction ensureCupertinoContextMenuAction() => $_ensure(8);

  @$pb.TagNumber(11)
  CupertinoDesktopTextSelectionToolbarButton get cupertinoDesktopTextSelectionToolbarButton => $_getN(9);
  @$pb.TagNumber(11)
  set cupertinoDesktopTextSelectionToolbarButton(CupertinoDesktopTextSelectionToolbarButton v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasCupertinoDesktopTextSelectionToolbarButton() => $_has(9);
  @$pb.TagNumber(11)
  void clearCupertinoDesktopTextSelectionToolbarButton() => clearField(11);
  @$pb.TagNumber(11)
  CupertinoDesktopTextSelectionToolbarButton ensureCupertinoDesktopTextSelectionToolbarButton() => $_ensure(9);

  @$pb.TagNumber(12)
  CupertinoDesktopTextSelectionToolbarButtonNamedText get cupertinoDesktopTextSelectionToolbarButtonNamedText => $_getN(10);
  @$pb.TagNumber(12)
  set cupertinoDesktopTextSelectionToolbarButtonNamedText(CupertinoDesktopTextSelectionToolbarButtonNamedText v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasCupertinoDesktopTextSelectionToolbarButtonNamedText() => $_has(10);
  @$pb.TagNumber(12)
  void clearCupertinoDesktopTextSelectionToolbarButtonNamedText() => clearField(12);
  @$pb.TagNumber(12)
  CupertinoDesktopTextSelectionToolbarButtonNamedText ensureCupertinoDesktopTextSelectionToolbarButtonNamedText() => $_ensure(10);

  @$pb.TagNumber(13)
  CupertinoActionSheet get cupertinoActionSheet => $_getN(11);
  @$pb.TagNumber(13)
  set cupertinoActionSheet(CupertinoActionSheet v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasCupertinoActionSheet() => $_has(11);
  @$pb.TagNumber(13)
  void clearCupertinoActionSheet() => clearField(13);
  @$pb.TagNumber(13)
  CupertinoActionSheet ensureCupertinoActionSheet() => $_ensure(11);

  @$pb.TagNumber(14)
  CupertinoAlertDialog get cupertinoAlertDialog => $_getN(12);
  @$pb.TagNumber(14)
  set cupertinoAlertDialog(CupertinoAlertDialog v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasCupertinoAlertDialog() => $_has(12);
  @$pb.TagNumber(14)
  void clearCupertinoAlertDialog() => clearField(14);
  @$pb.TagNumber(14)
  CupertinoAlertDialog ensureCupertinoAlertDialog() => $_ensure(12);

  @$pb.TagNumber(15)
  CupertinoDialogAction get cupertinoDialogAction => $_getN(13);
  @$pb.TagNumber(15)
  set cupertinoDialogAction(CupertinoDialogAction v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasCupertinoDialogAction() => $_has(13);
  @$pb.TagNumber(15)
  void clearCupertinoDialogAction() => clearField(15);
  @$pb.TagNumber(15)
  CupertinoDialogAction ensureCupertinoDialogAction() => $_ensure(13);

  @$pb.TagNumber(16)
  CupertinoPopupSurface get cupertinoPopupSurface => $_getN(14);
  @$pb.TagNumber(16)
  set cupertinoPopupSurface(CupertinoPopupSurface v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasCupertinoPopupSurface() => $_has(14);
  @$pb.TagNumber(16)
  void clearCupertinoPopupSurface() => clearField(16);
  @$pb.TagNumber(16)
  CupertinoPopupSurface ensureCupertinoPopupSurface() => $_ensure(14);

  @$pb.TagNumber(17)
  CupertinoFormRow get cupertinoFormRow => $_getN(15);
  @$pb.TagNumber(17)
  set cupertinoFormRow(CupertinoFormRow v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasCupertinoFormRow() => $_has(15);
  @$pb.TagNumber(17)
  void clearCupertinoFormRow() => clearField(17);
  @$pb.TagNumber(17)
  CupertinoFormRow ensureCupertinoFormRow() => $_ensure(15);

  @$pb.TagNumber(18)
  CupertinoFormSection get cupertinoFormSection => $_getN(16);
  @$pb.TagNumber(18)
  set cupertinoFormSection(CupertinoFormSection v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasCupertinoFormSection() => $_has(16);
  @$pb.TagNumber(18)
  void clearCupertinoFormSection() => clearField(18);
  @$pb.TagNumber(18)
  CupertinoFormSection ensureCupertinoFormSection() => $_ensure(16);

  @$pb.TagNumber(19)
  CupertinoFormSectionNamedInsetGrouped get cupertinoFormSectionNamedInsetGrouped => $_getN(17);
  @$pb.TagNumber(19)
  set cupertinoFormSectionNamedInsetGrouped(CupertinoFormSectionNamedInsetGrouped v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasCupertinoFormSectionNamedInsetGrouped() => $_has(17);
  @$pb.TagNumber(19)
  void clearCupertinoFormSectionNamedInsetGrouped() => clearField(19);
  @$pb.TagNumber(19)
  CupertinoFormSectionNamedInsetGrouped ensureCupertinoFormSectionNamedInsetGrouped() => $_ensure(17);

  @$pb.TagNumber(20)
  CupertinoListSection get cupertinoListSection => $_getN(18);
  @$pb.TagNumber(20)
  set cupertinoListSection(CupertinoListSection v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasCupertinoListSection() => $_has(18);
  @$pb.TagNumber(20)
  void clearCupertinoListSection() => clearField(20);
  @$pb.TagNumber(20)
  CupertinoListSection ensureCupertinoListSection() => $_ensure(18);

  @$pb.TagNumber(21)
  CupertinoListSectionNamedInsetGrouped get cupertinoListSectionNamedInsetGrouped => $_getN(19);
  @$pb.TagNumber(21)
  set cupertinoListSectionNamedInsetGrouped(CupertinoListSectionNamedInsetGrouped v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasCupertinoListSectionNamedInsetGrouped() => $_has(19);
  @$pb.TagNumber(21)
  void clearCupertinoListSectionNamedInsetGrouped() => clearField(21);
  @$pb.TagNumber(21)
  CupertinoListSectionNamedInsetGrouped ensureCupertinoListSectionNamedInsetGrouped() => $_ensure(19);

  @$pb.TagNumber(22)
  CupertinoListTile get cupertinoListTile => $_getN(20);
  @$pb.TagNumber(22)
  set cupertinoListTile(CupertinoListTile v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasCupertinoListTile() => $_has(20);
  @$pb.TagNumber(22)
  void clearCupertinoListTile() => clearField(22);
  @$pb.TagNumber(22)
  CupertinoListTile ensureCupertinoListTile() => $_ensure(20);

  @$pb.TagNumber(23)
  CupertinoListTileNamedNotched get cupertinoListTileNamedNotched => $_getN(21);
  @$pb.TagNumber(23)
  set cupertinoListTileNamedNotched(CupertinoListTileNamedNotched v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasCupertinoListTileNamedNotched() => $_has(21);
  @$pb.TagNumber(23)
  void clearCupertinoListTileNamedNotched() => clearField(23);
  @$pb.TagNumber(23)
  CupertinoListTileNamedNotched ensureCupertinoListTileNamedNotched() => $_ensure(21);

  @$pb.TagNumber(24)
  CupertinoListTileChevron get cupertinoListTileChevron => $_getN(22);
  @$pb.TagNumber(24)
  set cupertinoListTileChevron(CupertinoListTileChevron v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasCupertinoListTileChevron() => $_has(22);
  @$pb.TagNumber(24)
  void clearCupertinoListTileChevron() => clearField(24);
  @$pb.TagNumber(24)
  CupertinoListTileChevron ensureCupertinoListTileChevron() => $_ensure(22);

  @$pb.TagNumber(25)
  CupertinoMagnifier get cupertinoMagnifier => $_getN(23);
  @$pb.TagNumber(25)
  set cupertinoMagnifier(CupertinoMagnifier v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasCupertinoMagnifier() => $_has(23);
  @$pb.TagNumber(25)
  void clearCupertinoMagnifier() => clearField(25);
  @$pb.TagNumber(25)
  CupertinoMagnifier ensureCupertinoMagnifier() => $_ensure(23);

  @$pb.TagNumber(26)
  CupertinoNavigationBar get cupertinoNavigationBar => $_getN(24);
  @$pb.TagNumber(26)
  set cupertinoNavigationBar(CupertinoNavigationBar v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasCupertinoNavigationBar() => $_has(24);
  @$pb.TagNumber(26)
  void clearCupertinoNavigationBar() => clearField(26);
  @$pb.TagNumber(26)
  CupertinoNavigationBar ensureCupertinoNavigationBar() => $_ensure(24);

  @$pb.TagNumber(27)
  CupertinoNavigationBarBackButton get cupertinoNavigationBarBackButton => $_getN(25);
  @$pb.TagNumber(27)
  set cupertinoNavigationBarBackButton(CupertinoNavigationBarBackButton v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasCupertinoNavigationBarBackButton() => $_has(25);
  @$pb.TagNumber(27)
  void clearCupertinoNavigationBarBackButton() => clearField(27);
  @$pb.TagNumber(27)
  CupertinoNavigationBarBackButton ensureCupertinoNavigationBarBackButton() => $_ensure(25);

  @$pb.TagNumber(28)
  CupertinoSliverNavigationBar get cupertinoSliverNavigationBar => $_getN(26);
  @$pb.TagNumber(28)
  set cupertinoSliverNavigationBar(CupertinoSliverNavigationBar v) { setField(28, v); }
  @$pb.TagNumber(28)
  $core.bool hasCupertinoSliverNavigationBar() => $_has(26);
  @$pb.TagNumber(28)
  void clearCupertinoSliverNavigationBar() => clearField(28);
  @$pb.TagNumber(28)
  CupertinoSliverNavigationBar ensureCupertinoSliverNavigationBar() => $_ensure(26);

  @$pb.TagNumber(29)
  CupertinoPageScaffold get cupertinoPageScaffold => $_getN(27);
  @$pb.TagNumber(29)
  set cupertinoPageScaffold(CupertinoPageScaffold v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCupertinoPageScaffold() => $_has(27);
  @$pb.TagNumber(29)
  void clearCupertinoPageScaffold() => clearField(29);
  @$pb.TagNumber(29)
  CupertinoPageScaffold ensureCupertinoPageScaffold() => $_ensure(27);

  @$pb.TagNumber(30)
  CupertinoPicker get cupertinoPicker => $_getN(28);
  @$pb.TagNumber(30)
  set cupertinoPicker(CupertinoPicker v) { setField(30, v); }
  @$pb.TagNumber(30)
  $core.bool hasCupertinoPicker() => $_has(28);
  @$pb.TagNumber(30)
  void clearCupertinoPicker() => clearField(30);
  @$pb.TagNumber(30)
  CupertinoPicker ensureCupertinoPicker() => $_ensure(28);

  @$pb.TagNumber(31)
  CupertinoPickerDefaultSelectionOverlay get cupertinoPickerDefaultSelectionOverlay => $_getN(29);
  @$pb.TagNumber(31)
  set cupertinoPickerDefaultSelectionOverlay(CupertinoPickerDefaultSelectionOverlay v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasCupertinoPickerDefaultSelectionOverlay() => $_has(29);
  @$pb.TagNumber(31)
  void clearCupertinoPickerDefaultSelectionOverlay() => clearField(31);
  @$pb.TagNumber(31)
  CupertinoPickerDefaultSelectionOverlay ensureCupertinoPickerDefaultSelectionOverlay() => $_ensure(29);

  @$pb.TagNumber(32)
  CupertinoSliverRefreshControl get cupertinoSliverRefreshControl => $_getN(30);
  @$pb.TagNumber(32)
  set cupertinoSliverRefreshControl(CupertinoSliverRefreshControl v) { setField(32, v); }
  @$pb.TagNumber(32)
  $core.bool hasCupertinoSliverRefreshControl() => $_has(30);
  @$pb.TagNumber(32)
  void clearCupertinoSliverRefreshControl() => clearField(32);
  @$pb.TagNumber(32)
  CupertinoSliverRefreshControl ensureCupertinoSliverRefreshControl() => $_ensure(30);

  @$pb.TagNumber(33)
  CupertinoScrollbar get cupertinoScrollbar => $_getN(31);
  @$pb.TagNumber(33)
  set cupertinoScrollbar(CupertinoScrollbar v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasCupertinoScrollbar() => $_has(31);
  @$pb.TagNumber(33)
  void clearCupertinoScrollbar() => clearField(33);
  @$pb.TagNumber(33)
  CupertinoScrollbar ensureCupertinoScrollbar() => $_ensure(31);

  @$pb.TagNumber(34)
  CupertinoSearchTextField get cupertinoSearchTextField => $_getN(32);
  @$pb.TagNumber(34)
  set cupertinoSearchTextField(CupertinoSearchTextField v) { setField(34, v); }
  @$pb.TagNumber(34)
  $core.bool hasCupertinoSearchTextField() => $_has(32);
  @$pb.TagNumber(34)
  void clearCupertinoSearchTextField() => clearField(34);
  @$pb.TagNumber(34)
  CupertinoSearchTextField ensureCupertinoSearchTextField() => $_ensure(32);

  @$pb.TagNumber(35)
  CupertinoSlider get cupertinoSlider => $_getN(33);
  @$pb.TagNumber(35)
  set cupertinoSlider(CupertinoSlider v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasCupertinoSlider() => $_has(33);
  @$pb.TagNumber(35)
  void clearCupertinoSlider() => clearField(35);
  @$pb.TagNumber(35)
  CupertinoSlider ensureCupertinoSlider() => $_ensure(33);

  @$pb.TagNumber(36)
  CupertinoSwitch get cupertinoSwitch => $_getN(34);
  @$pb.TagNumber(36)
  set cupertinoSwitch(CupertinoSwitch v) { setField(36, v); }
  @$pb.TagNumber(36)
  $core.bool hasCupertinoSwitch() => $_has(34);
  @$pb.TagNumber(36)
  void clearCupertinoSwitch() => clearField(36);
  @$pb.TagNumber(36)
  CupertinoSwitch ensureCupertinoSwitch() => $_ensure(34);

  @$pb.TagNumber(37)
  CupertinoTabView get cupertinoTabView => $_getN(35);
  @$pb.TagNumber(37)
  set cupertinoTabView(CupertinoTabView v) { setField(37, v); }
  @$pb.TagNumber(37)
  $core.bool hasCupertinoTabView() => $_has(35);
  @$pb.TagNumber(37)
  void clearCupertinoTabView() => clearField(37);
  @$pb.TagNumber(37)
  CupertinoTabView ensureCupertinoTabView() => $_ensure(35);

  @$pb.TagNumber(38)
  CupertinoTextField get cupertinoTextField => $_getN(36);
  @$pb.TagNumber(38)
  set cupertinoTextField(CupertinoTextField v) { setField(38, v); }
  @$pb.TagNumber(38)
  $core.bool hasCupertinoTextField() => $_has(36);
  @$pb.TagNumber(38)
  void clearCupertinoTextField() => clearField(38);
  @$pb.TagNumber(38)
  CupertinoTextField ensureCupertinoTextField() => $_ensure(36);

  @$pb.TagNumber(39)
  CupertinoTextFieldNamedBorderless get cupertinoTextFieldNamedBorderless => $_getN(37);
  @$pb.TagNumber(39)
  set cupertinoTextFieldNamedBorderless(CupertinoTextFieldNamedBorderless v) { setField(39, v); }
  @$pb.TagNumber(39)
  $core.bool hasCupertinoTextFieldNamedBorderless() => $_has(37);
  @$pb.TagNumber(39)
  void clearCupertinoTextFieldNamedBorderless() => clearField(39);
  @$pb.TagNumber(39)
  CupertinoTextFieldNamedBorderless ensureCupertinoTextFieldNamedBorderless() => $_ensure(37);

  @$pb.TagNumber(40)
  CupertinoTextFormFieldRow get cupertinoTextFormFieldRow => $_getN(38);
  @$pb.TagNumber(40)
  set cupertinoTextFormFieldRow(CupertinoTextFormFieldRow v) { setField(40, v); }
  @$pb.TagNumber(40)
  $core.bool hasCupertinoTextFormFieldRow() => $_has(38);
  @$pb.TagNumber(40)
  void clearCupertinoTextFormFieldRow() => clearField(40);
  @$pb.TagNumber(40)
  CupertinoTextFormFieldRow ensureCupertinoTextFormFieldRow() => $_ensure(38);

  @$pb.TagNumber(41)
  CupertinoTextSelectionToolbarButton get cupertinoTextSelectionToolbarButton => $_getN(39);
  @$pb.TagNumber(41)
  set cupertinoTextSelectionToolbarButton(CupertinoTextSelectionToolbarButton v) { setField(41, v); }
  @$pb.TagNumber(41)
  $core.bool hasCupertinoTextSelectionToolbarButton() => $_has(39);
  @$pb.TagNumber(41)
  void clearCupertinoTextSelectionToolbarButton() => clearField(41);
  @$pb.TagNumber(41)
  CupertinoTextSelectionToolbarButton ensureCupertinoTextSelectionToolbarButton() => $_ensure(39);

  @$pb.TagNumber(42)
  CupertinoTextSelectionToolbarButtonNamedText get cupertinoTextSelectionToolbarButtonNamedText => $_getN(40);
  @$pb.TagNumber(42)
  set cupertinoTextSelectionToolbarButtonNamedText(CupertinoTextSelectionToolbarButtonNamedText v) { setField(42, v); }
  @$pb.TagNumber(42)
  $core.bool hasCupertinoTextSelectionToolbarButtonNamedText() => $_has(40);
  @$pb.TagNumber(42)
  void clearCupertinoTextSelectionToolbarButtonNamedText() => clearField(42);
  @$pb.TagNumber(42)
  CupertinoTextSelectionToolbarButtonNamedText ensureCupertinoTextSelectionToolbarButtonNamedText() => $_ensure(40);

  @$pb.TagNumber(43)
  MaterialAboutDialog get materialAboutDialog => $_getN(41);
  @$pb.TagNumber(43)
  set materialAboutDialog(MaterialAboutDialog v) { setField(43, v); }
  @$pb.TagNumber(43)
  $core.bool hasMaterialAboutDialog() => $_has(41);
  @$pb.TagNumber(43)
  void clearMaterialAboutDialog() => clearField(43);
  @$pb.TagNumber(43)
  MaterialAboutDialog ensureMaterialAboutDialog() => $_ensure(41);

  @$pb.TagNumber(44)
  MaterialAboutListTile get materialAboutListTile => $_getN(42);
  @$pb.TagNumber(44)
  set materialAboutListTile(MaterialAboutListTile v) { setField(44, v); }
  @$pb.TagNumber(44)
  $core.bool hasMaterialAboutListTile() => $_has(42);
  @$pb.TagNumber(44)
  void clearMaterialAboutListTile() => clearField(44);
  @$pb.TagNumber(44)
  MaterialAboutListTile ensureMaterialAboutListTile() => $_ensure(42);

  @$pb.TagNumber(45)
  MaterialLicensePage get materialLicensePage => $_getN(43);
  @$pb.TagNumber(45)
  set materialLicensePage(MaterialLicensePage v) { setField(45, v); }
  @$pb.TagNumber(45)
  $core.bool hasMaterialLicensePage() => $_has(43);
  @$pb.TagNumber(45)
  void clearMaterialLicensePage() => clearField(45);
  @$pb.TagNumber(45)
  MaterialLicensePage ensureMaterialLicensePage() => $_ensure(43);

  @$pb.TagNumber(46)
  MaterialBackButton get materialBackButton => $_getN(44);
  @$pb.TagNumber(46)
  set materialBackButton(MaterialBackButton v) { setField(46, v); }
  @$pb.TagNumber(46)
  $core.bool hasMaterialBackButton() => $_has(44);
  @$pb.TagNumber(46)
  void clearMaterialBackButton() => clearField(46);
  @$pb.TagNumber(46)
  MaterialBackButton ensureMaterialBackButton() => $_ensure(44);

  @$pb.TagNumber(47)
  MaterialBackButtonIcon get materialBackButtonIcon => $_getN(45);
  @$pb.TagNumber(47)
  set materialBackButtonIcon(MaterialBackButtonIcon v) { setField(47, v); }
  @$pb.TagNumber(47)
  $core.bool hasMaterialBackButtonIcon() => $_has(45);
  @$pb.TagNumber(47)
  void clearMaterialBackButtonIcon() => clearField(47);
  @$pb.TagNumber(47)
  MaterialBackButtonIcon ensureMaterialBackButtonIcon() => $_ensure(45);

  @$pb.TagNumber(48)
  MaterialCloseButton get materialCloseButton => $_getN(46);
  @$pb.TagNumber(48)
  set materialCloseButton(MaterialCloseButton v) { setField(48, v); }
  @$pb.TagNumber(48)
  $core.bool hasMaterialCloseButton() => $_has(46);
  @$pb.TagNumber(48)
  void clearMaterialCloseButton() => clearField(48);
  @$pb.TagNumber(48)
  MaterialCloseButton ensureMaterialCloseButton() => $_ensure(46);

  @$pb.TagNumber(49)
  MaterialCloseButtonIcon get materialCloseButtonIcon => $_getN(47);
  @$pb.TagNumber(49)
  set materialCloseButtonIcon(MaterialCloseButtonIcon v) { setField(49, v); }
  @$pb.TagNumber(49)
  $core.bool hasMaterialCloseButtonIcon() => $_has(47);
  @$pb.TagNumber(49)
  void clearMaterialCloseButtonIcon() => clearField(49);
  @$pb.TagNumber(49)
  MaterialCloseButtonIcon ensureMaterialCloseButtonIcon() => $_ensure(47);

  @$pb.TagNumber(50)
  MaterialDrawerButton get materialDrawerButton => $_getN(48);
  @$pb.TagNumber(50)
  set materialDrawerButton(MaterialDrawerButton v) { setField(50, v); }
  @$pb.TagNumber(50)
  $core.bool hasMaterialDrawerButton() => $_has(48);
  @$pb.TagNumber(50)
  void clearMaterialDrawerButton() => clearField(50);
  @$pb.TagNumber(50)
  MaterialDrawerButton ensureMaterialDrawerButton() => $_ensure(48);

  @$pb.TagNumber(51)
  MaterialDrawerButtonIcon get materialDrawerButtonIcon => $_getN(49);
  @$pb.TagNumber(51)
  set materialDrawerButtonIcon(MaterialDrawerButtonIcon v) { setField(51, v); }
  @$pb.TagNumber(51)
  $core.bool hasMaterialDrawerButtonIcon() => $_has(49);
  @$pb.TagNumber(51)
  void clearMaterialDrawerButtonIcon() => clearField(51);
  @$pb.TagNumber(51)
  MaterialDrawerButtonIcon ensureMaterialDrawerButtonIcon() => $_ensure(49);

  @$pb.TagNumber(52)
  MaterialEndDrawerButton get materialEndDrawerButton => $_getN(50);
  @$pb.TagNumber(52)
  set materialEndDrawerButton(MaterialEndDrawerButton v) { setField(52, v); }
  @$pb.TagNumber(52)
  $core.bool hasMaterialEndDrawerButton() => $_has(50);
  @$pb.TagNumber(52)
  void clearMaterialEndDrawerButton() => clearField(52);
  @$pb.TagNumber(52)
  MaterialEndDrawerButton ensureMaterialEndDrawerButton() => $_ensure(50);

  @$pb.TagNumber(53)
  MaterialEndDrawerButtonIcon get materialEndDrawerButtonIcon => $_getN(51);
  @$pb.TagNumber(53)
  set materialEndDrawerButtonIcon(MaterialEndDrawerButtonIcon v) { setField(53, v); }
  @$pb.TagNumber(53)
  $core.bool hasMaterialEndDrawerButtonIcon() => $_has(51);
  @$pb.TagNumber(53)
  void clearMaterialEndDrawerButtonIcon() => clearField(53);
  @$pb.TagNumber(53)
  MaterialEndDrawerButtonIcon ensureMaterialEndDrawerButtonIcon() => $_ensure(51);

  @$pb.TagNumber(54)
  MaterialActionChip get materialActionChip => $_getN(52);
  @$pb.TagNumber(54)
  set materialActionChip(MaterialActionChip v) { setField(54, v); }
  @$pb.TagNumber(54)
  $core.bool hasMaterialActionChip() => $_has(52);
  @$pb.TagNumber(54)
  void clearMaterialActionChip() => clearField(54);
  @$pb.TagNumber(54)
  MaterialActionChip ensureMaterialActionChip() => $_ensure(52);

  @$pb.TagNumber(55)
  MaterialActionChipNamedElevated get materialActionChipNamedElevated => $_getN(53);
  @$pb.TagNumber(55)
  set materialActionChipNamedElevated(MaterialActionChipNamedElevated v) { setField(55, v); }
  @$pb.TagNumber(55)
  $core.bool hasMaterialActionChipNamedElevated() => $_has(53);
  @$pb.TagNumber(55)
  void clearMaterialActionChipNamedElevated() => clearField(55);
  @$pb.TagNumber(55)
  MaterialActionChipNamedElevated ensureMaterialActionChipNamedElevated() => $_ensure(53);

  @$pb.TagNumber(56)
  MaterialMaterialApp get materialMaterialApp => $_getN(54);
  @$pb.TagNumber(56)
  set materialMaterialApp(MaterialMaterialApp v) { setField(56, v); }
  @$pb.TagNumber(56)
  $core.bool hasMaterialMaterialApp() => $_has(54);
  @$pb.TagNumber(56)
  void clearMaterialMaterialApp() => clearField(56);
  @$pb.TagNumber(56)
  MaterialMaterialApp ensureMaterialMaterialApp() => $_ensure(54);

  @$pb.TagNumber(57)
  MaterialMaterialAppNamedRouter get materialMaterialAppNamedRouter => $_getN(55);
  @$pb.TagNumber(57)
  set materialMaterialAppNamedRouter(MaterialMaterialAppNamedRouter v) { setField(57, v); }
  @$pb.TagNumber(57)
  $core.bool hasMaterialMaterialAppNamedRouter() => $_has(55);
  @$pb.TagNumber(57)
  void clearMaterialMaterialAppNamedRouter() => clearField(57);
  @$pb.TagNumber(57)
  MaterialMaterialAppNamedRouter ensureMaterialMaterialAppNamedRouter() => $_ensure(55);

  @$pb.TagNumber(58)
  MaterialAppBar get materialAppBar => $_getN(56);
  @$pb.TagNumber(58)
  set materialAppBar(MaterialAppBar v) { setField(58, v); }
  @$pb.TagNumber(58)
  $core.bool hasMaterialAppBar() => $_has(56);
  @$pb.TagNumber(58)
  void clearMaterialAppBar() => clearField(58);
  @$pb.TagNumber(58)
  MaterialAppBar ensureMaterialAppBar() => $_ensure(56);

  @$pb.TagNumber(59)
  MaterialSliverAppBar get materialSliverAppBar => $_getN(57);
  @$pb.TagNumber(59)
  set materialSliverAppBar(MaterialSliverAppBar v) { setField(59, v); }
  @$pb.TagNumber(59)
  $core.bool hasMaterialSliverAppBar() => $_has(57);
  @$pb.TagNumber(59)
  void clearMaterialSliverAppBar() => clearField(59);
  @$pb.TagNumber(59)
  MaterialSliverAppBar ensureMaterialSliverAppBar() => $_ensure(57);

  @$pb.TagNumber(60)
  MaterialSliverAppBarNamedMedium get materialSliverAppBarNamedMedium => $_getN(58);
  @$pb.TagNumber(60)
  set materialSliverAppBarNamedMedium(MaterialSliverAppBarNamedMedium v) { setField(60, v); }
  @$pb.TagNumber(60)
  $core.bool hasMaterialSliverAppBarNamedMedium() => $_has(58);
  @$pb.TagNumber(60)
  void clearMaterialSliverAppBarNamedMedium() => clearField(60);
  @$pb.TagNumber(60)
  MaterialSliverAppBarNamedMedium ensureMaterialSliverAppBarNamedMedium() => $_ensure(58);

  @$pb.TagNumber(61)
  MaterialSliverAppBarNamedLarge get materialSliverAppBarNamedLarge => $_getN(59);
  @$pb.TagNumber(61)
  set materialSliverAppBarNamedLarge(MaterialSliverAppBarNamedLarge v) { setField(61, v); }
  @$pb.TagNumber(61)
  $core.bool hasMaterialSliverAppBarNamedLarge() => $_has(59);
  @$pb.TagNumber(61)
  void clearMaterialSliverAppBarNamedLarge() => clearField(61);
  @$pb.TagNumber(61)
  MaterialSliverAppBarNamedLarge ensureMaterialSliverAppBarNamedLarge() => $_ensure(59);

  @$pb.TagNumber(62)
  MaterialBadge get materialBadge => $_getN(60);
  @$pb.TagNumber(62)
  set materialBadge(MaterialBadge v) { setField(62, v); }
  @$pb.TagNumber(62)
  $core.bool hasMaterialBadge() => $_has(60);
  @$pb.TagNumber(62)
  void clearMaterialBadge() => clearField(62);
  @$pb.TagNumber(62)
  MaterialBadge ensureMaterialBadge() => $_ensure(60);

  @$pb.TagNumber(63)
  MaterialBadgeNamedCount get materialBadgeNamedCount => $_getN(61);
  @$pb.TagNumber(63)
  set materialBadgeNamedCount(MaterialBadgeNamedCount v) { setField(63, v); }
  @$pb.TagNumber(63)
  $core.bool hasMaterialBadgeNamedCount() => $_has(61);
  @$pb.TagNumber(63)
  void clearMaterialBadgeNamedCount() => clearField(63);
  @$pb.TagNumber(63)
  MaterialBadgeNamedCount ensureMaterialBadgeNamedCount() => $_ensure(61);

  @$pb.TagNumber(64)
  MaterialMaterialBanner get materialMaterialBanner => $_getN(62);
  @$pb.TagNumber(64)
  set materialMaterialBanner(MaterialMaterialBanner v) { setField(64, v); }
  @$pb.TagNumber(64)
  $core.bool hasMaterialMaterialBanner() => $_has(62);
  @$pb.TagNumber(64)
  void clearMaterialMaterialBanner() => clearField(64);
  @$pb.TagNumber(64)
  MaterialMaterialBanner ensureMaterialMaterialBanner() => $_ensure(62);

  @$pb.TagNumber(65)
  MaterialMaterialBannerTheme get materialMaterialBannerTheme => $_getN(63);
  @$pb.TagNumber(65)
  set materialMaterialBannerTheme(MaterialMaterialBannerTheme v) { setField(65, v); }
  @$pb.TagNumber(65)
  $core.bool hasMaterialMaterialBannerTheme() => $_has(63);
  @$pb.TagNumber(65)
  void clearMaterialMaterialBannerTheme() => clearField(65);
  @$pb.TagNumber(65)
  MaterialMaterialBannerTheme ensureMaterialMaterialBannerTheme() => $_ensure(63);

  @$pb.TagNumber(66)
  MaterialBottomAppBar get materialBottomAppBar => $_getN(64);
  @$pb.TagNumber(66)
  set materialBottomAppBar(MaterialBottomAppBar v) { setField(66, v); }
  @$pb.TagNumber(66)
  $core.bool hasMaterialBottomAppBar() => $_has(64);
  @$pb.TagNumber(66)
  void clearMaterialBottomAppBar() => clearField(66);
  @$pb.TagNumber(66)
  MaterialBottomAppBar ensureMaterialBottomAppBar() => $_ensure(64);

  @$pb.TagNumber(67)
  MaterialRawMaterialButton get materialRawMaterialButton => $_getN(65);
  @$pb.TagNumber(67)
  set materialRawMaterialButton(MaterialRawMaterialButton v) { setField(67, v); }
  @$pb.TagNumber(67)
  $core.bool hasMaterialRawMaterialButton() => $_has(65);
  @$pb.TagNumber(67)
  void clearMaterialRawMaterialButton() => clearField(67);
  @$pb.TagNumber(67)
  MaterialRawMaterialButton ensureMaterialRawMaterialButton() => $_ensure(65);

  @$pb.TagNumber(68)
  MaterialButtonBar get materialButtonBar => $_getN(66);
  @$pb.TagNumber(68)
  set materialButtonBar(MaterialButtonBar v) { setField(68, v); }
  @$pb.TagNumber(68)
  $core.bool hasMaterialButtonBar() => $_has(66);
  @$pb.TagNumber(68)
  void clearMaterialButtonBar() => clearField(68);
  @$pb.TagNumber(68)
  MaterialButtonBar ensureMaterialButtonBar() => $_ensure(66);

  @$pb.TagNumber(69)
  MaterialButtonTheme get materialButtonTheme => $_getN(67);
  @$pb.TagNumber(69)
  set materialButtonTheme(MaterialButtonTheme v) { setField(69, v); }
  @$pb.TagNumber(69)
  $core.bool hasMaterialButtonTheme() => $_has(67);
  @$pb.TagNumber(69)
  void clearMaterialButtonTheme() => clearField(69);
  @$pb.TagNumber(69)
  MaterialButtonTheme ensureMaterialButtonTheme() => $_ensure(67);

  @$pb.TagNumber(70)
  MaterialCard get materialCard => $_getN(68);
  @$pb.TagNumber(70)
  set materialCard(MaterialCard v) { setField(70, v); }
  @$pb.TagNumber(70)
  $core.bool hasMaterialCard() => $_has(68);
  @$pb.TagNumber(70)
  void clearMaterialCard() => clearField(70);
  @$pb.TagNumber(70)
  MaterialCard ensureMaterialCard() => $_ensure(68);

  @$pb.TagNumber(71)
  MaterialCheckbox get materialCheckbox => $_getN(69);
  @$pb.TagNumber(71)
  set materialCheckbox(MaterialCheckbox v) { setField(71, v); }
  @$pb.TagNumber(71)
  $core.bool hasMaterialCheckbox() => $_has(69);
  @$pb.TagNumber(71)
  void clearMaterialCheckbox() => clearField(71);
  @$pb.TagNumber(71)
  MaterialCheckbox ensureMaterialCheckbox() => $_ensure(69);

  @$pb.TagNumber(72)
  MaterialCheckboxNamedAdaptive get materialCheckboxNamedAdaptive => $_getN(70);
  @$pb.TagNumber(72)
  set materialCheckboxNamedAdaptive(MaterialCheckboxNamedAdaptive v) { setField(72, v); }
  @$pb.TagNumber(72)
  $core.bool hasMaterialCheckboxNamedAdaptive() => $_has(70);
  @$pb.TagNumber(72)
  void clearMaterialCheckboxNamedAdaptive() => clearField(72);
  @$pb.TagNumber(72)
  MaterialCheckboxNamedAdaptive ensureMaterialCheckboxNamedAdaptive() => $_ensure(70);

  @$pb.TagNumber(73)
  MaterialCheckboxListTile get materialCheckboxListTile => $_getN(71);
  @$pb.TagNumber(73)
  set materialCheckboxListTile(MaterialCheckboxListTile v) { setField(73, v); }
  @$pb.TagNumber(73)
  $core.bool hasMaterialCheckboxListTile() => $_has(71);
  @$pb.TagNumber(73)
  void clearMaterialCheckboxListTile() => clearField(73);
  @$pb.TagNumber(73)
  MaterialCheckboxListTile ensureMaterialCheckboxListTile() => $_ensure(71);

  @$pb.TagNumber(74)
  MaterialCheckboxListTileNamedAdaptive get materialCheckboxListTileNamedAdaptive => $_getN(72);
  @$pb.TagNumber(74)
  set materialCheckboxListTileNamedAdaptive(MaterialCheckboxListTileNamedAdaptive v) { setField(74, v); }
  @$pb.TagNumber(74)
  $core.bool hasMaterialCheckboxListTileNamedAdaptive() => $_has(72);
  @$pb.TagNumber(74)
  void clearMaterialCheckboxListTileNamedAdaptive() => clearField(74);
  @$pb.TagNumber(74)
  MaterialCheckboxListTileNamedAdaptive ensureMaterialCheckboxListTileNamedAdaptive() => $_ensure(72);

  @$pb.TagNumber(75)
  MaterialChip get materialChip => $_getN(73);
  @$pb.TagNumber(75)
  set materialChip(MaterialChip v) { setField(75, v); }
  @$pb.TagNumber(75)
  $core.bool hasMaterialChip() => $_has(73);
  @$pb.TagNumber(75)
  void clearMaterialChip() => clearField(75);
  @$pb.TagNumber(75)
  MaterialChip ensureMaterialChip() => $_ensure(73);

  @$pb.TagNumber(76)
  MaterialRawChip get materialRawChip => $_getN(74);
  @$pb.TagNumber(76)
  set materialRawChip(MaterialRawChip v) { setField(76, v); }
  @$pb.TagNumber(76)
  $core.bool hasMaterialRawChip() => $_has(74);
  @$pb.TagNumber(76)
  void clearMaterialRawChip() => clearField(76);
  @$pb.TagNumber(76)
  MaterialRawChip ensureMaterialRawChip() => $_ensure(74);

  @$pb.TagNumber(77)
  MaterialChoiceChip get materialChoiceChip => $_getN(75);
  @$pb.TagNumber(77)
  set materialChoiceChip(MaterialChoiceChip v) { setField(77, v); }
  @$pb.TagNumber(77)
  $core.bool hasMaterialChoiceChip() => $_has(75);
  @$pb.TagNumber(77)
  void clearMaterialChoiceChip() => clearField(77);
  @$pb.TagNumber(77)
  MaterialChoiceChip ensureMaterialChoiceChip() => $_ensure(75);

  @$pb.TagNumber(78)
  MaterialChoiceChipNamedElevated get materialChoiceChipNamedElevated => $_getN(76);
  @$pb.TagNumber(78)
  set materialChoiceChipNamedElevated(MaterialChoiceChipNamedElevated v) { setField(78, v); }
  @$pb.TagNumber(78)
  $core.bool hasMaterialChoiceChipNamedElevated() => $_has(76);
  @$pb.TagNumber(78)
  void clearMaterialChoiceChipNamedElevated() => clearField(78);
  @$pb.TagNumber(78)
  MaterialChoiceChipNamedElevated ensureMaterialChoiceChipNamedElevated() => $_ensure(76);

  @$pb.TagNumber(79)
  MaterialCircleAvatar get materialCircleAvatar => $_getN(77);
  @$pb.TagNumber(79)
  set materialCircleAvatar(MaterialCircleAvatar v) { setField(79, v); }
  @$pb.TagNumber(79)
  $core.bool hasMaterialCircleAvatar() => $_has(77);
  @$pb.TagNumber(79)
  void clearMaterialCircleAvatar() => clearField(79);
  @$pb.TagNumber(79)
  MaterialCircleAvatar ensureMaterialCircleAvatar() => $_ensure(77);

  @$pb.TagNumber(80)
  MaterialTableRowInkWell get materialTableRowInkWell => $_getN(78);
  @$pb.TagNumber(80)
  set materialTableRowInkWell(MaterialTableRowInkWell v) { setField(80, v); }
  @$pb.TagNumber(80)
  $core.bool hasMaterialTableRowInkWell() => $_has(78);
  @$pb.TagNumber(80)
  void clearMaterialTableRowInkWell() => clearField(80);
  @$pb.TagNumber(80)
  MaterialTableRowInkWell ensureMaterialTableRowInkWell() => $_ensure(78);

  @$pb.TagNumber(81)
  MaterialDesktopTextSelectionToolbarButton get materialDesktopTextSelectionToolbarButton => $_getN(79);
  @$pb.TagNumber(81)
  set materialDesktopTextSelectionToolbarButton(MaterialDesktopTextSelectionToolbarButton v) { setField(81, v); }
  @$pb.TagNumber(81)
  $core.bool hasMaterialDesktopTextSelectionToolbarButton() => $_has(79);
  @$pb.TagNumber(81)
  void clearMaterialDesktopTextSelectionToolbarButton() => clearField(81);
  @$pb.TagNumber(81)
  MaterialDesktopTextSelectionToolbarButton ensureMaterialDesktopTextSelectionToolbarButton() => $_ensure(79);

  @$pb.TagNumber(82)
  MaterialAlertDialog get materialAlertDialog => $_getN(80);
  @$pb.TagNumber(82)
  set materialAlertDialog(MaterialAlertDialog v) { setField(82, v); }
  @$pb.TagNumber(82)
  $core.bool hasMaterialAlertDialog() => $_has(80);
  @$pb.TagNumber(82)
  void clearMaterialAlertDialog() => clearField(82);
  @$pb.TagNumber(82)
  MaterialAlertDialog ensureMaterialAlertDialog() => $_ensure(80);

  @$pb.TagNumber(83)
  MaterialAlertDialogNamedAdaptive get materialAlertDialogNamedAdaptive => $_getN(81);
  @$pb.TagNumber(83)
  set materialAlertDialogNamedAdaptive(MaterialAlertDialogNamedAdaptive v) { setField(83, v); }
  @$pb.TagNumber(83)
  $core.bool hasMaterialAlertDialogNamedAdaptive() => $_has(81);
  @$pb.TagNumber(83)
  void clearMaterialAlertDialogNamedAdaptive() => clearField(83);
  @$pb.TagNumber(83)
  MaterialAlertDialogNamedAdaptive ensureMaterialAlertDialogNamedAdaptive() => $_ensure(81);

  @$pb.TagNumber(84)
  MaterialDialog get materialDialog => $_getN(82);
  @$pb.TagNumber(84)
  set materialDialog(MaterialDialog v) { setField(84, v); }
  @$pb.TagNumber(84)
  $core.bool hasMaterialDialog() => $_has(82);
  @$pb.TagNumber(84)
  void clearMaterialDialog() => clearField(84);
  @$pb.TagNumber(84)
  MaterialDialog ensureMaterialDialog() => $_ensure(82);

  @$pb.TagNumber(85)
  MaterialDialogNamedFullscreen get materialDialogNamedFullscreen => $_getN(83);
  @$pb.TagNumber(85)
  set materialDialogNamedFullscreen(MaterialDialogNamedFullscreen v) { setField(85, v); }
  @$pb.TagNumber(85)
  $core.bool hasMaterialDialogNamedFullscreen() => $_has(83);
  @$pb.TagNumber(85)
  void clearMaterialDialogNamedFullscreen() => clearField(85);
  @$pb.TagNumber(85)
  MaterialDialogNamedFullscreen ensureMaterialDialogNamedFullscreen() => $_ensure(83);

  @$pb.TagNumber(86)
  MaterialSimpleDialog get materialSimpleDialog => $_getN(84);
  @$pb.TagNumber(86)
  set materialSimpleDialog(MaterialSimpleDialog v) { setField(86, v); }
  @$pb.TagNumber(86)
  $core.bool hasMaterialSimpleDialog() => $_has(84);
  @$pb.TagNumber(86)
  void clearMaterialSimpleDialog() => clearField(86);
  @$pb.TagNumber(86)
  MaterialSimpleDialog ensureMaterialSimpleDialog() => $_ensure(84);

  @$pb.TagNumber(87)
  MaterialSimpleDialogOption get materialSimpleDialogOption => $_getN(85);
  @$pb.TagNumber(87)
  set materialSimpleDialogOption(MaterialSimpleDialogOption v) { setField(87, v); }
  @$pb.TagNumber(87)
  $core.bool hasMaterialSimpleDialogOption() => $_has(85);
  @$pb.TagNumber(87)
  void clearMaterialSimpleDialogOption() => clearField(87);
  @$pb.TagNumber(87)
  MaterialSimpleDialogOption ensureMaterialSimpleDialogOption() => $_ensure(85);

  @$pb.TagNumber(88)
  MaterialDivider get materialDivider => $_getN(86);
  @$pb.TagNumber(88)
  set materialDivider(MaterialDivider v) { setField(88, v); }
  @$pb.TagNumber(88)
  $core.bool hasMaterialDivider() => $_has(86);
  @$pb.TagNumber(88)
  void clearMaterialDivider() => clearField(88);
  @$pb.TagNumber(88)
  MaterialDivider ensureMaterialDivider() => $_ensure(86);

  @$pb.TagNumber(89)
  MaterialVerticalDivider get materialVerticalDivider => $_getN(87);
  @$pb.TagNumber(89)
  set materialVerticalDivider(MaterialVerticalDivider v) { setField(89, v); }
  @$pb.TagNumber(89)
  $core.bool hasMaterialVerticalDivider() => $_has(87);
  @$pb.TagNumber(89)
  void clearMaterialVerticalDivider() => clearField(89);
  @$pb.TagNumber(89)
  MaterialVerticalDivider ensureMaterialVerticalDivider() => $_ensure(87);

  @$pb.TagNumber(90)
  MaterialDrawer get materialDrawer => $_getN(88);
  @$pb.TagNumber(90)
  set materialDrawer(MaterialDrawer v) { setField(90, v); }
  @$pb.TagNumber(90)
  $core.bool hasMaterialDrawer() => $_has(88);
  @$pb.TagNumber(90)
  void clearMaterialDrawer() => clearField(90);
  @$pb.TagNumber(90)
  MaterialDrawer ensureMaterialDrawer() => $_ensure(88);

  @$pb.TagNumber(91)
  MaterialDrawerHeader get materialDrawerHeader => $_getN(89);
  @$pb.TagNumber(91)
  set materialDrawerHeader(MaterialDrawerHeader v) { setField(91, v); }
  @$pb.TagNumber(91)
  $core.bool hasMaterialDrawerHeader() => $_has(89);
  @$pb.TagNumber(91)
  void clearMaterialDrawerHeader() => clearField(91);
  @$pb.TagNumber(91)
  MaterialDrawerHeader ensureMaterialDrawerHeader() => $_ensure(89);

  @$pb.TagNumber(92)
  MaterialDropdownButton get materialDropdownButton => $_getN(90);
  @$pb.TagNumber(92)
  set materialDropdownButton(MaterialDropdownButton v) { setField(92, v); }
  @$pb.TagNumber(92)
  $core.bool hasMaterialDropdownButton() => $_has(90);
  @$pb.TagNumber(92)
  void clearMaterialDropdownButton() => clearField(92);
  @$pb.TagNumber(92)
  MaterialDropdownButton ensureMaterialDropdownButton() => $_ensure(90);

  @$pb.TagNumber(93)
  MaterialDropdownButtonFormField get materialDropdownButtonFormField => $_getN(91);
  @$pb.TagNumber(93)
  set materialDropdownButtonFormField(MaterialDropdownButtonFormField v) { setField(93, v); }
  @$pb.TagNumber(93)
  $core.bool hasMaterialDropdownButtonFormField() => $_has(91);
  @$pb.TagNumber(93)
  void clearMaterialDropdownButtonFormField() => clearField(93);
  @$pb.TagNumber(93)
  MaterialDropdownButtonFormField ensureMaterialDropdownButtonFormField() => $_ensure(91);

  @$pb.TagNumber(94)
  MaterialDropdownButtonHideUnderline get materialDropdownButtonHideUnderline => $_getN(92);
  @$pb.TagNumber(94)
  set materialDropdownButtonHideUnderline(MaterialDropdownButtonHideUnderline v) { setField(94, v); }
  @$pb.TagNumber(94)
  $core.bool hasMaterialDropdownButtonHideUnderline() => $_has(92);
  @$pb.TagNumber(94)
  void clearMaterialDropdownButtonHideUnderline() => clearField(94);
  @$pb.TagNumber(94)
  MaterialDropdownButtonHideUnderline ensureMaterialDropdownButtonHideUnderline() => $_ensure(92);

  @$pb.TagNumber(95)
  MaterialDropdownMenuItem get materialDropdownMenuItem => $_getN(93);
  @$pb.TagNumber(95)
  set materialDropdownMenuItem(MaterialDropdownMenuItem v) { setField(95, v); }
  @$pb.TagNumber(95)
  $core.bool hasMaterialDropdownMenuItem() => $_has(93);
  @$pb.TagNumber(95)
  void clearMaterialDropdownMenuItem() => clearField(95);
  @$pb.TagNumber(95)
  MaterialDropdownMenuItem ensureMaterialDropdownMenuItem() => $_ensure(93);

  @$pb.TagNumber(96)
  MaterialElevatedButton get materialElevatedButton => $_getN(94);
  @$pb.TagNumber(96)
  set materialElevatedButton(MaterialElevatedButton v) { setField(96, v); }
  @$pb.TagNumber(96)
  $core.bool hasMaterialElevatedButton() => $_has(94);
  @$pb.TagNumber(96)
  void clearMaterialElevatedButton() => clearField(96);
  @$pb.TagNumber(96)
  MaterialElevatedButton ensureMaterialElevatedButton() => $_ensure(94);

  @$pb.TagNumber(97)
  MaterialElevatedButtonNamedIcon get materialElevatedButtonNamedIcon => $_getN(95);
  @$pb.TagNumber(97)
  set materialElevatedButtonNamedIcon(MaterialElevatedButtonNamedIcon v) { setField(97, v); }
  @$pb.TagNumber(97)
  $core.bool hasMaterialElevatedButtonNamedIcon() => $_has(95);
  @$pb.TagNumber(97)
  void clearMaterialElevatedButtonNamedIcon() => clearField(97);
  @$pb.TagNumber(97)
  MaterialElevatedButtonNamedIcon ensureMaterialElevatedButtonNamedIcon() => $_ensure(95);

  @$pb.TagNumber(98)
  MaterialExpandIcon get materialExpandIcon => $_getN(96);
  @$pb.TagNumber(98)
  set materialExpandIcon(MaterialExpandIcon v) { setField(98, v); }
  @$pb.TagNumber(98)
  $core.bool hasMaterialExpandIcon() => $_has(96);
  @$pb.TagNumber(98)
  void clearMaterialExpandIcon() => clearField(98);
  @$pb.TagNumber(98)
  MaterialExpandIcon ensureMaterialExpandIcon() => $_ensure(96);

  @$pb.TagNumber(99)
  MaterialExpansionPanelList get materialExpansionPanelList => $_getN(97);
  @$pb.TagNumber(99)
  set materialExpansionPanelList(MaterialExpansionPanelList v) { setField(99, v); }
  @$pb.TagNumber(99)
  $core.bool hasMaterialExpansionPanelList() => $_has(97);
  @$pb.TagNumber(99)
  void clearMaterialExpansionPanelList() => clearField(99);
  @$pb.TagNumber(99)
  MaterialExpansionPanelList ensureMaterialExpansionPanelList() => $_ensure(97);

  @$pb.TagNumber(100)
  MaterialExpansionPanelListNamedRadio get materialExpansionPanelListNamedRadio => $_getN(98);
  @$pb.TagNumber(100)
  set materialExpansionPanelListNamedRadio(MaterialExpansionPanelListNamedRadio v) { setField(100, v); }
  @$pb.TagNumber(100)
  $core.bool hasMaterialExpansionPanelListNamedRadio() => $_has(98);
  @$pb.TagNumber(100)
  void clearMaterialExpansionPanelListNamedRadio() => clearField(100);
  @$pb.TagNumber(100)
  MaterialExpansionPanelListNamedRadio ensureMaterialExpansionPanelListNamedRadio() => $_ensure(98);

  @$pb.TagNumber(101)
  MaterialExpansionTile get materialExpansionTile => $_getN(99);
  @$pb.TagNumber(101)
  set materialExpansionTile(MaterialExpansionTile v) { setField(101, v); }
  @$pb.TagNumber(101)
  $core.bool hasMaterialExpansionTile() => $_has(99);
  @$pb.TagNumber(101)
  void clearMaterialExpansionTile() => clearField(101);
  @$pb.TagNumber(101)
  MaterialExpansionTile ensureMaterialExpansionTile() => $_ensure(99);

  @$pb.TagNumber(102)
  MaterialFilledButton get materialFilledButton => $_getN(100);
  @$pb.TagNumber(102)
  set materialFilledButton(MaterialFilledButton v) { setField(102, v); }
  @$pb.TagNumber(102)
  $core.bool hasMaterialFilledButton() => $_has(100);
  @$pb.TagNumber(102)
  void clearMaterialFilledButton() => clearField(102);
  @$pb.TagNumber(102)
  MaterialFilledButton ensureMaterialFilledButton() => $_ensure(100);

  @$pb.TagNumber(103)
  MaterialFilledButtonNamedIcon get materialFilledButtonNamedIcon => $_getN(101);
  @$pb.TagNumber(103)
  set materialFilledButtonNamedIcon(MaterialFilledButtonNamedIcon v) { setField(103, v); }
  @$pb.TagNumber(103)
  $core.bool hasMaterialFilledButtonNamedIcon() => $_has(101);
  @$pb.TagNumber(103)
  void clearMaterialFilledButtonNamedIcon() => clearField(103);
  @$pb.TagNumber(103)
  MaterialFilledButtonNamedIcon ensureMaterialFilledButtonNamedIcon() => $_ensure(101);

  @$pb.TagNumber(104)
  MaterialFilledButtonNamedTonal get materialFilledButtonNamedTonal => $_getN(102);
  @$pb.TagNumber(104)
  set materialFilledButtonNamedTonal(MaterialFilledButtonNamedTonal v) { setField(104, v); }
  @$pb.TagNumber(104)
  $core.bool hasMaterialFilledButtonNamedTonal() => $_has(102);
  @$pb.TagNumber(104)
  void clearMaterialFilledButtonNamedTonal() => clearField(104);
  @$pb.TagNumber(104)
  MaterialFilledButtonNamedTonal ensureMaterialFilledButtonNamedTonal() => $_ensure(102);

  @$pb.TagNumber(105)
  MaterialFilledButtonNamedTonalIcon get materialFilledButtonNamedTonalIcon => $_getN(103);
  @$pb.TagNumber(105)
  set materialFilledButtonNamedTonalIcon(MaterialFilledButtonNamedTonalIcon v) { setField(105, v); }
  @$pb.TagNumber(105)
  $core.bool hasMaterialFilledButtonNamedTonalIcon() => $_has(103);
  @$pb.TagNumber(105)
  void clearMaterialFilledButtonNamedTonalIcon() => clearField(105);
  @$pb.TagNumber(105)
  MaterialFilledButtonNamedTonalIcon ensureMaterialFilledButtonNamedTonalIcon() => $_ensure(103);

  @$pb.TagNumber(106)
  MaterialFilterChip get materialFilterChip => $_getN(104);
  @$pb.TagNumber(106)
  set materialFilterChip(MaterialFilterChip v) { setField(106, v); }
  @$pb.TagNumber(106)
  $core.bool hasMaterialFilterChip() => $_has(104);
  @$pb.TagNumber(106)
  void clearMaterialFilterChip() => clearField(106);
  @$pb.TagNumber(106)
  MaterialFilterChip ensureMaterialFilterChip() => $_ensure(104);

  @$pb.TagNumber(107)
  MaterialFilterChipNamedElevated get materialFilterChipNamedElevated => $_getN(105);
  @$pb.TagNumber(107)
  set materialFilterChipNamedElevated(MaterialFilterChipNamedElevated v) { setField(107, v); }
  @$pb.TagNumber(107)
  $core.bool hasMaterialFilterChipNamedElevated() => $_has(105);
  @$pb.TagNumber(107)
  void clearMaterialFilterChipNamedElevated() => clearField(107);
  @$pb.TagNumber(107)
  MaterialFilterChipNamedElevated ensureMaterialFilterChipNamedElevated() => $_ensure(105);

  @$pb.TagNumber(108)
  MaterialFlexibleSpaceBar get materialFlexibleSpaceBar => $_getN(106);
  @$pb.TagNumber(108)
  set materialFlexibleSpaceBar(MaterialFlexibleSpaceBar v) { setField(108, v); }
  @$pb.TagNumber(108)
  $core.bool hasMaterialFlexibleSpaceBar() => $_has(106);
  @$pb.TagNumber(108)
  void clearMaterialFlexibleSpaceBar() => clearField(108);
  @$pb.TagNumber(108)
  MaterialFlexibleSpaceBar ensureMaterialFlexibleSpaceBar() => $_ensure(106);

  @$pb.TagNumber(109)
  MaterialFlexibleSpaceBarSettings get materialFlexibleSpaceBarSettings => $_getN(107);
  @$pb.TagNumber(109)
  set materialFlexibleSpaceBarSettings(MaterialFlexibleSpaceBarSettings v) { setField(109, v); }
  @$pb.TagNumber(109)
  $core.bool hasMaterialFlexibleSpaceBarSettings() => $_has(107);
  @$pb.TagNumber(109)
  void clearMaterialFlexibleSpaceBarSettings() => clearField(109);
  @$pb.TagNumber(109)
  MaterialFlexibleSpaceBarSettings ensureMaterialFlexibleSpaceBarSettings() => $_ensure(107);

  @$pb.TagNumber(110)
  MaterialFloatingActionButton get materialFloatingActionButton => $_getN(108);
  @$pb.TagNumber(110)
  set materialFloatingActionButton(MaterialFloatingActionButton v) { setField(110, v); }
  @$pb.TagNumber(110)
  $core.bool hasMaterialFloatingActionButton() => $_has(108);
  @$pb.TagNumber(110)
  void clearMaterialFloatingActionButton() => clearField(110);
  @$pb.TagNumber(110)
  MaterialFloatingActionButton ensureMaterialFloatingActionButton() => $_ensure(108);

  @$pb.TagNumber(111)
  MaterialFloatingActionButtonNamedSmall get materialFloatingActionButtonNamedSmall => $_getN(109);
  @$pb.TagNumber(111)
  set materialFloatingActionButtonNamedSmall(MaterialFloatingActionButtonNamedSmall v) { setField(111, v); }
  @$pb.TagNumber(111)
  $core.bool hasMaterialFloatingActionButtonNamedSmall() => $_has(109);
  @$pb.TagNumber(111)
  void clearMaterialFloatingActionButtonNamedSmall() => clearField(111);
  @$pb.TagNumber(111)
  MaterialFloatingActionButtonNamedSmall ensureMaterialFloatingActionButtonNamedSmall() => $_ensure(109);

  @$pb.TagNumber(112)
  MaterialFloatingActionButtonNamedLarge get materialFloatingActionButtonNamedLarge => $_getN(110);
  @$pb.TagNumber(112)
  set materialFloatingActionButtonNamedLarge(MaterialFloatingActionButtonNamedLarge v) { setField(112, v); }
  @$pb.TagNumber(112)
  $core.bool hasMaterialFloatingActionButtonNamedLarge() => $_has(110);
  @$pb.TagNumber(112)
  void clearMaterialFloatingActionButtonNamedLarge() => clearField(112);
  @$pb.TagNumber(112)
  MaterialFloatingActionButtonNamedLarge ensureMaterialFloatingActionButtonNamedLarge() => $_ensure(110);

  @$pb.TagNumber(113)
  MaterialFloatingActionButtonNamedExtended get materialFloatingActionButtonNamedExtended => $_getN(111);
  @$pb.TagNumber(113)
  set materialFloatingActionButtonNamedExtended(MaterialFloatingActionButtonNamedExtended v) { setField(113, v); }
  @$pb.TagNumber(113)
  $core.bool hasMaterialFloatingActionButtonNamedExtended() => $_has(111);
  @$pb.TagNumber(113)
  void clearMaterialFloatingActionButtonNamedExtended() => clearField(113);
  @$pb.TagNumber(113)
  MaterialFloatingActionButtonNamedExtended ensureMaterialFloatingActionButtonNamedExtended() => $_ensure(111);

  @$pb.TagNumber(114)
  MaterialFlutterLogo get materialFlutterLogo => $_getN(112);
  @$pb.TagNumber(114)
  set materialFlutterLogo(MaterialFlutterLogo v) { setField(114, v); }
  @$pb.TagNumber(114)
  $core.bool hasMaterialFlutterLogo() => $_has(112);
  @$pb.TagNumber(114)
  void clearMaterialFlutterLogo() => clearField(114);
  @$pb.TagNumber(114)
  MaterialFlutterLogo ensureMaterialFlutterLogo() => $_ensure(112);

  @$pb.TagNumber(115)
  MaterialGridTile get materialGridTile => $_getN(113);
  @$pb.TagNumber(115)
  set materialGridTile(MaterialGridTile v) { setField(115, v); }
  @$pb.TagNumber(115)
  $core.bool hasMaterialGridTile() => $_has(113);
  @$pb.TagNumber(115)
  void clearMaterialGridTile() => clearField(115);
  @$pb.TagNumber(115)
  MaterialGridTile ensureMaterialGridTile() => $_ensure(113);

  @$pb.TagNumber(116)
  MaterialGridTileBar get materialGridTileBar => $_getN(114);
  @$pb.TagNumber(116)
  set materialGridTileBar(MaterialGridTileBar v) { setField(116, v); }
  @$pb.TagNumber(116)
  $core.bool hasMaterialGridTileBar() => $_has(114);
  @$pb.TagNumber(116)
  void clearMaterialGridTileBar() => clearField(116);
  @$pb.TagNumber(116)
  MaterialGridTileBar ensureMaterialGridTileBar() => $_ensure(114);

  @$pb.TagNumber(117)
  MaterialIconButton get materialIconButton => $_getN(115);
  @$pb.TagNumber(117)
  set materialIconButton(MaterialIconButton v) { setField(117, v); }
  @$pb.TagNumber(117)
  $core.bool hasMaterialIconButton() => $_has(115);
  @$pb.TagNumber(117)
  void clearMaterialIconButton() => clearField(117);
  @$pb.TagNumber(117)
  MaterialIconButton ensureMaterialIconButton() => $_ensure(115);

  @$pb.TagNumber(118)
  MaterialIconButtonNamedFilled get materialIconButtonNamedFilled => $_getN(116);
  @$pb.TagNumber(118)
  set materialIconButtonNamedFilled(MaterialIconButtonNamedFilled v) { setField(118, v); }
  @$pb.TagNumber(118)
  $core.bool hasMaterialIconButtonNamedFilled() => $_has(116);
  @$pb.TagNumber(118)
  void clearMaterialIconButtonNamedFilled() => clearField(118);
  @$pb.TagNumber(118)
  MaterialIconButtonNamedFilled ensureMaterialIconButtonNamedFilled() => $_ensure(116);

  @$pb.TagNumber(119)
  MaterialIconButtonNamedFilledTonal get materialIconButtonNamedFilledTonal => $_getN(117);
  @$pb.TagNumber(119)
  set materialIconButtonNamedFilledTonal(MaterialIconButtonNamedFilledTonal v) { setField(119, v); }
  @$pb.TagNumber(119)
  $core.bool hasMaterialIconButtonNamedFilledTonal() => $_has(117);
  @$pb.TagNumber(119)
  void clearMaterialIconButtonNamedFilledTonal() => clearField(119);
  @$pb.TagNumber(119)
  MaterialIconButtonNamedFilledTonal ensureMaterialIconButtonNamedFilledTonal() => $_ensure(117);

  @$pb.TagNumber(120)
  MaterialIconButtonNamedOutlined get materialIconButtonNamedOutlined => $_getN(118);
  @$pb.TagNumber(120)
  set materialIconButtonNamedOutlined(MaterialIconButtonNamedOutlined v) { setField(120, v); }
  @$pb.TagNumber(120)
  $core.bool hasMaterialIconButtonNamedOutlined() => $_has(118);
  @$pb.TagNumber(120)
  void clearMaterialIconButtonNamedOutlined() => clearField(120);
  @$pb.TagNumber(120)
  MaterialIconButtonNamedOutlined ensureMaterialIconButtonNamedOutlined() => $_ensure(118);

  @$pb.TagNumber(121)
  MaterialInk get materialInk => $_getN(119);
  @$pb.TagNumber(121)
  set materialInk(MaterialInk v) { setField(121, v); }
  @$pb.TagNumber(121)
  $core.bool hasMaterialInk() => $_has(119);
  @$pb.TagNumber(121)
  void clearMaterialInk() => clearField(121);
  @$pb.TagNumber(121)
  MaterialInk ensureMaterialInk() => $_ensure(119);

  @$pb.TagNumber(122)
  MaterialInkResponse get materialInkResponse => $_getN(120);
  @$pb.TagNumber(122)
  set materialInkResponse(MaterialInkResponse v) { setField(122, v); }
  @$pb.TagNumber(122)
  $core.bool hasMaterialInkResponse() => $_has(120);
  @$pb.TagNumber(122)
  void clearMaterialInkResponse() => clearField(122);
  @$pb.TagNumber(122)
  MaterialInkResponse ensureMaterialInkResponse() => $_ensure(120);

  @$pb.TagNumber(123)
  MaterialInkWell get materialInkWell => $_getN(121);
  @$pb.TagNumber(123)
  set materialInkWell(MaterialInkWell v) { setField(123, v); }
  @$pb.TagNumber(123)
  $core.bool hasMaterialInkWell() => $_has(121);
  @$pb.TagNumber(123)
  void clearMaterialInkWell() => clearField(123);
  @$pb.TagNumber(123)
  MaterialInkWell ensureMaterialInkWell() => $_ensure(121);

  @$pb.TagNumber(124)
  MaterialInputChip get materialInputChip => $_getN(122);
  @$pb.TagNumber(124)
  set materialInputChip(MaterialInputChip v) { setField(124, v); }
  @$pb.TagNumber(124)
  $core.bool hasMaterialInputChip() => $_has(122);
  @$pb.TagNumber(124)
  void clearMaterialInputChip() => clearField(124);
  @$pb.TagNumber(124)
  MaterialInputChip ensureMaterialInputChip() => $_ensure(122);

  @$pb.TagNumber(125)
  MaterialListTile get materialListTile => $_getN(123);
  @$pb.TagNumber(125)
  set materialListTile(MaterialListTile v) { setField(125, v); }
  @$pb.TagNumber(125)
  $core.bool hasMaterialListTile() => $_has(123);
  @$pb.TagNumber(125)
  void clearMaterialListTile() => clearField(125);
  @$pb.TagNumber(125)
  MaterialListTile ensureMaterialListTile() => $_ensure(123);

  @$pb.TagNumber(126)
  MaterialListTileTheme get materialListTileTheme => $_getN(124);
  @$pb.TagNumber(126)
  set materialListTileTheme(MaterialListTileTheme v) { setField(126, v); }
  @$pb.TagNumber(126)
  $core.bool hasMaterialListTileTheme() => $_has(124);
  @$pb.TagNumber(126)
  void clearMaterialListTileTheme() => clearField(126);
  @$pb.TagNumber(126)
  MaterialListTileTheme ensureMaterialListTileTheme() => $_ensure(124);

  @$pb.TagNumber(127)
  MaterialMagnifier get materialMagnifier => $_getN(125);
  @$pb.TagNumber(127)
  set materialMagnifier(MaterialMagnifier v) { setField(127, v); }
  @$pb.TagNumber(127)
  $core.bool hasMaterialMagnifier() => $_has(125);
  @$pb.TagNumber(127)
  void clearMaterialMagnifier() => clearField(127);
  @$pb.TagNumber(127)
  MaterialMagnifier ensureMaterialMagnifier() => $_ensure(125);

  @$pb.TagNumber(128)
  MaterialMaterial get materialMaterial => $_getN(126);
  @$pb.TagNumber(128)
  set materialMaterial(MaterialMaterial v) { setField(128, v); }
  @$pb.TagNumber(128)
  $core.bool hasMaterialMaterial() => $_has(126);
  @$pb.TagNumber(128)
  void clearMaterialMaterial() => clearField(128);
  @$pb.TagNumber(128)
  MaterialMaterial ensureMaterialMaterial() => $_ensure(126);

  @$pb.TagNumber(129)
  MaterialMaterialButton get materialMaterialButton => $_getN(127);
  @$pb.TagNumber(129)
  set materialMaterialButton(MaterialMaterialButton v) { setField(129, v); }
  @$pb.TagNumber(129)
  $core.bool hasMaterialMaterialButton() => $_has(127);
  @$pb.TagNumber(129)
  void clearMaterialMaterialButton() => clearField(129);
  @$pb.TagNumber(129)
  MaterialMaterialButton ensureMaterialMaterialButton() => $_ensure(127);

  @$pb.TagNumber(130)
  MaterialCheckboxMenuButton get materialCheckboxMenuButton => $_getN(128);
  @$pb.TagNumber(130)
  set materialCheckboxMenuButton(MaterialCheckboxMenuButton v) { setField(130, v); }
  @$pb.TagNumber(130)
  $core.bool hasMaterialCheckboxMenuButton() => $_has(128);
  @$pb.TagNumber(130)
  void clearMaterialCheckboxMenuButton() => clearField(130);
  @$pb.TagNumber(130)
  MaterialCheckboxMenuButton ensureMaterialCheckboxMenuButton() => $_ensure(128);

  @$pb.TagNumber(131)
  MaterialMenuAcceleratorCallbackBinding get materialMenuAcceleratorCallbackBinding => $_getN(129);
  @$pb.TagNumber(131)
  set materialMenuAcceleratorCallbackBinding(MaterialMenuAcceleratorCallbackBinding v) { setField(131, v); }
  @$pb.TagNumber(131)
  $core.bool hasMaterialMenuAcceleratorCallbackBinding() => $_has(129);
  @$pb.TagNumber(131)
  void clearMaterialMenuAcceleratorCallbackBinding() => clearField(131);
  @$pb.TagNumber(131)
  MaterialMenuAcceleratorCallbackBinding ensureMaterialMenuAcceleratorCallbackBinding() => $_ensure(129);

  @$pb.TagNumber(132)
  MaterialMenuAcceleratorLabel get materialMenuAcceleratorLabel => $_getN(130);
  @$pb.TagNumber(132)
  set materialMenuAcceleratorLabel(MaterialMenuAcceleratorLabel v) { setField(132, v); }
  @$pb.TagNumber(132)
  $core.bool hasMaterialMenuAcceleratorLabel() => $_has(130);
  @$pb.TagNumber(132)
  void clearMaterialMenuAcceleratorLabel() => clearField(132);
  @$pb.TagNumber(132)
  MaterialMenuAcceleratorLabel ensureMaterialMenuAcceleratorLabel() => $_ensure(130);

  @$pb.TagNumber(133)
  MaterialMenuAnchor get materialMenuAnchor => $_getN(131);
  @$pb.TagNumber(133)
  set materialMenuAnchor(MaterialMenuAnchor v) { setField(133, v); }
  @$pb.TagNumber(133)
  $core.bool hasMaterialMenuAnchor() => $_has(131);
  @$pb.TagNumber(133)
  void clearMaterialMenuAnchor() => clearField(133);
  @$pb.TagNumber(133)
  MaterialMenuAnchor ensureMaterialMenuAnchor() => $_ensure(131);

  @$pb.TagNumber(134)
  MaterialMenuBar get materialMenuBar => $_getN(132);
  @$pb.TagNumber(134)
  set materialMenuBar(MaterialMenuBar v) { setField(134, v); }
  @$pb.TagNumber(134)
  $core.bool hasMaterialMenuBar() => $_has(132);
  @$pb.TagNumber(134)
  void clearMaterialMenuBar() => clearField(134);
  @$pb.TagNumber(134)
  MaterialMenuBar ensureMaterialMenuBar() => $_ensure(132);

  @$pb.TagNumber(135)
  MaterialMenuItemButton get materialMenuItemButton => $_getN(133);
  @$pb.TagNumber(135)
  set materialMenuItemButton(MaterialMenuItemButton v) { setField(135, v); }
  @$pb.TagNumber(135)
  $core.bool hasMaterialMenuItemButton() => $_has(133);
  @$pb.TagNumber(135)
  void clearMaterialMenuItemButton() => clearField(135);
  @$pb.TagNumber(135)
  MaterialMenuItemButton ensureMaterialMenuItemButton() => $_ensure(133);

  @$pb.TagNumber(136)
  MaterialSubmenuButton get materialSubmenuButton => $_getN(134);
  @$pb.TagNumber(136)
  set materialSubmenuButton(MaterialSubmenuButton v) { setField(136, v); }
  @$pb.TagNumber(136)
  $core.bool hasMaterialSubmenuButton() => $_has(134);
  @$pb.TagNumber(136)
  void clearMaterialSubmenuButton() => clearField(136);
  @$pb.TagNumber(136)
  MaterialSubmenuButton ensureMaterialSubmenuButton() => $_ensure(134);

  @$pb.TagNumber(137)
  MaterialMergeableMaterial get materialMergeableMaterial => $_getN(135);
  @$pb.TagNumber(137)
  set materialMergeableMaterial(MaterialMergeableMaterial v) { setField(137, v); }
  @$pb.TagNumber(137)
  $core.bool hasMaterialMergeableMaterial() => $_has(135);
  @$pb.TagNumber(137)
  void clearMaterialMergeableMaterial() => clearField(137);
  @$pb.TagNumber(137)
  MaterialMergeableMaterial ensureMaterialMergeableMaterial() => $_ensure(135);

  @$pb.TagNumber(138)
  MaterialNavigationBar get materialNavigationBar => $_getN(136);
  @$pb.TagNumber(138)
  set materialNavigationBar(MaterialNavigationBar v) { setField(138, v); }
  @$pb.TagNumber(138)
  $core.bool hasMaterialNavigationBar() => $_has(136);
  @$pb.TagNumber(138)
  void clearMaterialNavigationBar() => clearField(138);
  @$pb.TagNumber(138)
  MaterialNavigationBar ensureMaterialNavigationBar() => $_ensure(136);

  @$pb.TagNumber(139)
  MaterialNavigationDestination get materialNavigationDestination => $_getN(137);
  @$pb.TagNumber(139)
  set materialNavigationDestination(MaterialNavigationDestination v) { setField(139, v); }
  @$pb.TagNumber(139)
  $core.bool hasMaterialNavigationDestination() => $_has(137);
  @$pb.TagNumber(139)
  void clearMaterialNavigationDestination() => clearField(139);
  @$pb.TagNumber(139)
  MaterialNavigationDestination ensureMaterialNavigationDestination() => $_ensure(137);

  @$pb.TagNumber(140)
  MaterialNavigationDrawer get materialNavigationDrawer => $_getN(138);
  @$pb.TagNumber(140)
  set materialNavigationDrawer(MaterialNavigationDrawer v) { setField(140, v); }
  @$pb.TagNumber(140)
  $core.bool hasMaterialNavigationDrawer() => $_has(138);
  @$pb.TagNumber(140)
  void clearMaterialNavigationDrawer() => clearField(140);
  @$pb.TagNumber(140)
  MaterialNavigationDrawer ensureMaterialNavigationDrawer() => $_ensure(138);

  @$pb.TagNumber(141)
  MaterialNavigationDrawerDestination get materialNavigationDrawerDestination => $_getN(139);
  @$pb.TagNumber(141)
  set materialNavigationDrawerDestination(MaterialNavigationDrawerDestination v) { setField(141, v); }
  @$pb.TagNumber(141)
  $core.bool hasMaterialNavigationDrawerDestination() => $_has(139);
  @$pb.TagNumber(141)
  void clearMaterialNavigationDrawerDestination() => clearField(141);
  @$pb.TagNumber(141)
  MaterialNavigationDrawerDestination ensureMaterialNavigationDrawerDestination() => $_ensure(139);

  @$pb.TagNumber(142)
  MaterialOutlinedButton get materialOutlinedButton => $_getN(140);
  @$pb.TagNumber(142)
  set materialOutlinedButton(MaterialOutlinedButton v) { setField(142, v); }
  @$pb.TagNumber(142)
  $core.bool hasMaterialOutlinedButton() => $_has(140);
  @$pb.TagNumber(142)
  void clearMaterialOutlinedButton() => clearField(142);
  @$pb.TagNumber(142)
  MaterialOutlinedButton ensureMaterialOutlinedButton() => $_ensure(140);

  @$pb.TagNumber(143)
  MaterialOutlinedButtonNamedIcon get materialOutlinedButtonNamedIcon => $_getN(141);
  @$pb.TagNumber(143)
  set materialOutlinedButtonNamedIcon(MaterialOutlinedButtonNamedIcon v) { setField(143, v); }
  @$pb.TagNumber(143)
  $core.bool hasMaterialOutlinedButtonNamedIcon() => $_has(141);
  @$pb.TagNumber(143)
  void clearMaterialOutlinedButtonNamedIcon() => clearField(143);
  @$pb.TagNumber(143)
  MaterialOutlinedButtonNamedIcon ensureMaterialOutlinedButtonNamedIcon() => $_ensure(141);

  @$pb.TagNumber(144)
  MaterialCheckedPopupMenuItem get materialCheckedPopupMenuItem => $_getN(142);
  @$pb.TagNumber(144)
  set materialCheckedPopupMenuItem(MaterialCheckedPopupMenuItem v) { setField(144, v); }
  @$pb.TagNumber(144)
  $core.bool hasMaterialCheckedPopupMenuItem() => $_has(142);
  @$pb.TagNumber(144)
  void clearMaterialCheckedPopupMenuItem() => clearField(144);
  @$pb.TagNumber(144)
  MaterialCheckedPopupMenuItem ensureMaterialCheckedPopupMenuItem() => $_ensure(142);

  @$pb.TagNumber(145)
  MaterialPopupMenuDivider get materialPopupMenuDivider => $_getN(143);
  @$pb.TagNumber(145)
  set materialPopupMenuDivider(MaterialPopupMenuDivider v) { setField(145, v); }
  @$pb.TagNumber(145)
  $core.bool hasMaterialPopupMenuDivider() => $_has(143);
  @$pb.TagNumber(145)
  void clearMaterialPopupMenuDivider() => clearField(145);
  @$pb.TagNumber(145)
  MaterialPopupMenuDivider ensureMaterialPopupMenuDivider() => $_ensure(143);

  @$pb.TagNumber(146)
  MaterialPopupMenuItem get materialPopupMenuItem => $_getN(144);
  @$pb.TagNumber(146)
  set materialPopupMenuItem(MaterialPopupMenuItem v) { setField(146, v); }
  @$pb.TagNumber(146)
  $core.bool hasMaterialPopupMenuItem() => $_has(144);
  @$pb.TagNumber(146)
  void clearMaterialPopupMenuItem() => clearField(146);
  @$pb.TagNumber(146)
  MaterialPopupMenuItem ensureMaterialPopupMenuItem() => $_ensure(144);

  @$pb.TagNumber(147)
  MaterialCircularProgressIndicator get materialCircularProgressIndicator => $_getN(145);
  @$pb.TagNumber(147)
  set materialCircularProgressIndicator(MaterialCircularProgressIndicator v) { setField(147, v); }
  @$pb.TagNumber(147)
  $core.bool hasMaterialCircularProgressIndicator() => $_has(145);
  @$pb.TagNumber(147)
  void clearMaterialCircularProgressIndicator() => clearField(147);
  @$pb.TagNumber(147)
  MaterialCircularProgressIndicator ensureMaterialCircularProgressIndicator() => $_ensure(145);

  @$pb.TagNumber(148)
  MaterialCircularProgressIndicatorNamedAdaptive get materialCircularProgressIndicatorNamedAdaptive => $_getN(146);
  @$pb.TagNumber(148)
  set materialCircularProgressIndicatorNamedAdaptive(MaterialCircularProgressIndicatorNamedAdaptive v) { setField(148, v); }
  @$pb.TagNumber(148)
  $core.bool hasMaterialCircularProgressIndicatorNamedAdaptive() => $_has(146);
  @$pb.TagNumber(148)
  void clearMaterialCircularProgressIndicatorNamedAdaptive() => clearField(148);
  @$pb.TagNumber(148)
  MaterialCircularProgressIndicatorNamedAdaptive ensureMaterialCircularProgressIndicatorNamedAdaptive() => $_ensure(146);

  @$pb.TagNumber(149)
  MaterialLinearProgressIndicator get materialLinearProgressIndicator => $_getN(147);
  @$pb.TagNumber(149)
  set materialLinearProgressIndicator(MaterialLinearProgressIndicator v) { setField(149, v); }
  @$pb.TagNumber(149)
  $core.bool hasMaterialLinearProgressIndicator() => $_has(147);
  @$pb.TagNumber(149)
  void clearMaterialLinearProgressIndicator() => clearField(149);
  @$pb.TagNumber(149)
  MaterialLinearProgressIndicator ensureMaterialLinearProgressIndicator() => $_ensure(147);

  @$pb.TagNumber(150)
  MaterialRefreshProgressIndicator get materialRefreshProgressIndicator => $_getN(148);
  @$pb.TagNumber(150)
  set materialRefreshProgressIndicator(MaterialRefreshProgressIndicator v) { setField(150, v); }
  @$pb.TagNumber(150)
  $core.bool hasMaterialRefreshProgressIndicator() => $_has(148);
  @$pb.TagNumber(150)
  void clearMaterialRefreshProgressIndicator() => clearField(150);
  @$pb.TagNumber(150)
  MaterialRefreshProgressIndicator ensureMaterialRefreshProgressIndicator() => $_ensure(148);

  @$pb.TagNumber(151)
  MaterialScaffold get materialScaffold => $_getN(149);
  @$pb.TagNumber(151)
  set materialScaffold(MaterialScaffold v) { setField(151, v); }
  @$pb.TagNumber(151)
  $core.bool hasMaterialScaffold() => $_has(149);
  @$pb.TagNumber(151)
  void clearMaterialScaffold() => clearField(151);
  @$pb.TagNumber(151)
  MaterialScaffold ensureMaterialScaffold() => $_ensure(149);

  @$pb.TagNumber(152)
  MaterialScaffoldMessenger get materialScaffoldMessenger => $_getN(150);
  @$pb.TagNumber(152)
  set materialScaffoldMessenger(MaterialScaffoldMessenger v) { setField(152, v); }
  @$pb.TagNumber(152)
  $core.bool hasMaterialScaffoldMessenger() => $_has(150);
  @$pb.TagNumber(152)
  void clearMaterialScaffoldMessenger() => clearField(152);
  @$pb.TagNumber(152)
  MaterialScaffoldMessenger ensureMaterialScaffoldMessenger() => $_ensure(150);

  @$pb.TagNumber(153)
  MaterialScrollbar get materialScrollbar => $_getN(151);
  @$pb.TagNumber(153)
  set materialScrollbar(MaterialScrollbar v) { setField(153, v); }
  @$pb.TagNumber(153)
  $core.bool hasMaterialScrollbar() => $_has(151);
  @$pb.TagNumber(153)
  void clearMaterialScrollbar() => clearField(153);
  @$pb.TagNumber(153)
  MaterialScrollbar ensureMaterialScrollbar() => $_ensure(151);

  @$pb.TagNumber(154)
  MaterialSearchBar get materialSearchBar => $_getN(152);
  @$pb.TagNumber(154)
  set materialSearchBar(MaterialSearchBar v) { setField(154, v); }
  @$pb.TagNumber(154)
  $core.bool hasMaterialSearchBar() => $_has(152);
  @$pb.TagNumber(154)
  void clearMaterialSearchBar() => clearField(154);
  @$pb.TagNumber(154)
  MaterialSearchBar ensureMaterialSearchBar() => $_ensure(152);

  @$pb.TagNumber(155)
  MaterialSelectableText get materialSelectableText => $_getN(153);
  @$pb.TagNumber(155)
  set materialSelectableText(MaterialSelectableText v) { setField(155, v); }
  @$pb.TagNumber(155)
  $core.bool hasMaterialSelectableText() => $_has(153);
  @$pb.TagNumber(155)
  void clearMaterialSelectableText() => clearField(155);
  @$pb.TagNumber(155)
  MaterialSelectableText ensureMaterialSelectableText() => $_ensure(153);

  @$pb.TagNumber(156)
  MaterialSelectionArea get materialSelectionArea => $_getN(154);
  @$pb.TagNumber(156)
  set materialSelectionArea(MaterialSelectionArea v) { setField(156, v); }
  @$pb.TagNumber(156)
  $core.bool hasMaterialSelectionArea() => $_has(154);
  @$pb.TagNumber(156)
  void clearMaterialSelectionArea() => clearField(156);
  @$pb.TagNumber(156)
  MaterialSelectionArea ensureMaterialSelectionArea() => $_ensure(154);

  @$pb.TagNumber(157)
  MaterialSlider get materialSlider => $_getN(155);
  @$pb.TagNumber(157)
  set materialSlider(MaterialSlider v) { setField(157, v); }
  @$pb.TagNumber(157)
  $core.bool hasMaterialSlider() => $_has(155);
  @$pb.TagNumber(157)
  void clearMaterialSlider() => clearField(157);
  @$pb.TagNumber(157)
  MaterialSlider ensureMaterialSlider() => $_ensure(155);

  @$pb.TagNumber(158)
  MaterialSliderNamedAdaptive get materialSliderNamedAdaptive => $_getN(156);
  @$pb.TagNumber(158)
  set materialSliderNamedAdaptive(MaterialSliderNamedAdaptive v) { setField(158, v); }
  @$pb.TagNumber(158)
  $core.bool hasMaterialSliderNamedAdaptive() => $_has(156);
  @$pb.TagNumber(158)
  void clearMaterialSliderNamedAdaptive() => clearField(158);
  @$pb.TagNumber(158)
  MaterialSliderNamedAdaptive ensureMaterialSliderNamedAdaptive() => $_ensure(156);

  @$pb.TagNumber(159)
  MaterialSnackBar get materialSnackBar => $_getN(157);
  @$pb.TagNumber(159)
  set materialSnackBar(MaterialSnackBar v) { setField(159, v); }
  @$pb.TagNumber(159)
  $core.bool hasMaterialSnackBar() => $_has(157);
  @$pb.TagNumber(159)
  void clearMaterialSnackBar() => clearField(159);
  @$pb.TagNumber(159)
  MaterialSnackBar ensureMaterialSnackBar() => $_ensure(157);

  @$pb.TagNumber(160)
  MaterialSwitch get materialSwitch => $_getN(158);
  @$pb.TagNumber(160)
  set materialSwitch(MaterialSwitch v) { setField(160, v); }
  @$pb.TagNumber(160)
  $core.bool hasMaterialSwitch() => $_has(158);
  @$pb.TagNumber(160)
  void clearMaterialSwitch() => clearField(160);
  @$pb.TagNumber(160)
  MaterialSwitch ensureMaterialSwitch() => $_ensure(158);

  @$pb.TagNumber(161)
  MaterialSwitchNamedAdaptive get materialSwitchNamedAdaptive => $_getN(159);
  @$pb.TagNumber(161)
  set materialSwitchNamedAdaptive(MaterialSwitchNamedAdaptive v) { setField(161, v); }
  @$pb.TagNumber(161)
  $core.bool hasMaterialSwitchNamedAdaptive() => $_has(159);
  @$pb.TagNumber(161)
  void clearMaterialSwitchNamedAdaptive() => clearField(161);
  @$pb.TagNumber(161)
  MaterialSwitchNamedAdaptive ensureMaterialSwitchNamedAdaptive() => $_ensure(159);

  @$pb.TagNumber(162)
  MaterialSwitchListTile get materialSwitchListTile => $_getN(160);
  @$pb.TagNumber(162)
  set materialSwitchListTile(MaterialSwitchListTile v) { setField(162, v); }
  @$pb.TagNumber(162)
  $core.bool hasMaterialSwitchListTile() => $_has(160);
  @$pb.TagNumber(162)
  void clearMaterialSwitchListTile() => clearField(162);
  @$pb.TagNumber(162)
  MaterialSwitchListTile ensureMaterialSwitchListTile() => $_ensure(160);

  @$pb.TagNumber(163)
  MaterialSwitchListTileNamedAdaptive get materialSwitchListTileNamedAdaptive => $_getN(161);
  @$pb.TagNumber(163)
  set materialSwitchListTileNamedAdaptive(MaterialSwitchListTileNamedAdaptive v) { setField(163, v); }
  @$pb.TagNumber(163)
  $core.bool hasMaterialSwitchListTileNamedAdaptive() => $_has(161);
  @$pb.TagNumber(163)
  void clearMaterialSwitchListTileNamedAdaptive() => clearField(163);
  @$pb.TagNumber(163)
  MaterialSwitchListTileNamedAdaptive ensureMaterialSwitchListTileNamedAdaptive() => $_ensure(161);

  @$pb.TagNumber(164)
  MaterialDefaultTabController get materialDefaultTabController => $_getN(162);
  @$pb.TagNumber(164)
  set materialDefaultTabController(MaterialDefaultTabController v) { setField(164, v); }
  @$pb.TagNumber(164)
  $core.bool hasMaterialDefaultTabController() => $_has(162);
  @$pb.TagNumber(164)
  void clearMaterialDefaultTabController() => clearField(164);
  @$pb.TagNumber(164)
  MaterialDefaultTabController ensureMaterialDefaultTabController() => $_ensure(162);

  @$pb.TagNumber(165)
  MaterialTab get materialTab => $_getN(163);
  @$pb.TagNumber(165)
  set materialTab(MaterialTab v) { setField(165, v); }
  @$pb.TagNumber(165)
  $core.bool hasMaterialTab() => $_has(163);
  @$pb.TagNumber(165)
  void clearMaterialTab() => clearField(165);
  @$pb.TagNumber(165)
  MaterialTab ensureMaterialTab() => $_ensure(163);

  @$pb.TagNumber(166)
  MaterialTabBar get materialTabBar => $_getN(164);
  @$pb.TagNumber(166)
  set materialTabBar(MaterialTabBar v) { setField(166, v); }
  @$pb.TagNumber(166)
  $core.bool hasMaterialTabBar() => $_has(164);
  @$pb.TagNumber(166)
  void clearMaterialTabBar() => clearField(166);
  @$pb.TagNumber(166)
  MaterialTabBar ensureMaterialTabBar() => $_ensure(164);

  @$pb.TagNumber(167)
  MaterialTabBarNamedSecondary get materialTabBarNamedSecondary => $_getN(165);
  @$pb.TagNumber(167)
  set materialTabBarNamedSecondary(MaterialTabBarNamedSecondary v) { setField(167, v); }
  @$pb.TagNumber(167)
  $core.bool hasMaterialTabBarNamedSecondary() => $_has(165);
  @$pb.TagNumber(167)
  void clearMaterialTabBarNamedSecondary() => clearField(167);
  @$pb.TagNumber(167)
  MaterialTabBarNamedSecondary ensureMaterialTabBarNamedSecondary() => $_ensure(165);

  @$pb.TagNumber(168)
  MaterialTabBarView get materialTabBarView => $_getN(166);
  @$pb.TagNumber(168)
  set materialTabBarView(MaterialTabBarView v) { setField(168, v); }
  @$pb.TagNumber(168)
  $core.bool hasMaterialTabBarView() => $_has(166);
  @$pb.TagNumber(168)
  void clearMaterialTabBarView() => clearField(168);
  @$pb.TagNumber(168)
  MaterialTabBarView ensureMaterialTabBarView() => $_ensure(166);

  @$pb.TagNumber(169)
  MaterialTabPageSelector get materialTabPageSelector => $_getN(167);
  @$pb.TagNumber(169)
  set materialTabPageSelector(MaterialTabPageSelector v) { setField(169, v); }
  @$pb.TagNumber(169)
  $core.bool hasMaterialTabPageSelector() => $_has(167);
  @$pb.TagNumber(169)
  void clearMaterialTabPageSelector() => clearField(169);
  @$pb.TagNumber(169)
  MaterialTabPageSelector ensureMaterialTabPageSelector() => $_ensure(167);

  @$pb.TagNumber(170)
  MaterialTabPageSelectorIndicator get materialTabPageSelectorIndicator => $_getN(168);
  @$pb.TagNumber(170)
  set materialTabPageSelectorIndicator(MaterialTabPageSelectorIndicator v) { setField(170, v); }
  @$pb.TagNumber(170)
  $core.bool hasMaterialTabPageSelectorIndicator() => $_has(168);
  @$pb.TagNumber(170)
  void clearMaterialTabPageSelectorIndicator() => clearField(170);
  @$pb.TagNumber(170)
  MaterialTabPageSelectorIndicator ensureMaterialTabPageSelectorIndicator() => $_ensure(168);

  @$pb.TagNumber(171)
  MaterialTextButton get materialTextButton => $_getN(169);
  @$pb.TagNumber(171)
  set materialTextButton(MaterialTextButton v) { setField(171, v); }
  @$pb.TagNumber(171)
  $core.bool hasMaterialTextButton() => $_has(169);
  @$pb.TagNumber(171)
  void clearMaterialTextButton() => clearField(171);
  @$pb.TagNumber(171)
  MaterialTextButton ensureMaterialTextButton() => $_ensure(169);

  @$pb.TagNumber(172)
  MaterialTextButtonNamedIcon get materialTextButtonNamedIcon => $_getN(170);
  @$pb.TagNumber(172)
  set materialTextButtonNamedIcon(MaterialTextButtonNamedIcon v) { setField(172, v); }
  @$pb.TagNumber(172)
  $core.bool hasMaterialTextButtonNamedIcon() => $_has(170);
  @$pb.TagNumber(172)
  void clearMaterialTextButtonNamedIcon() => clearField(172);
  @$pb.TagNumber(172)
  MaterialTextButtonNamedIcon ensureMaterialTextButtonNamedIcon() => $_ensure(170);

  @$pb.TagNumber(173)
  MaterialTextField get materialTextField => $_getN(171);
  @$pb.TagNumber(173)
  set materialTextField(MaterialTextField v) { setField(173, v); }
  @$pb.TagNumber(173)
  $core.bool hasMaterialTextField() => $_has(171);
  @$pb.TagNumber(173)
  void clearMaterialTextField() => clearField(173);
  @$pb.TagNumber(173)
  MaterialTextField ensureMaterialTextField() => $_ensure(171);

  @$pb.TagNumber(174)
  MaterialTextFormField get materialTextFormField => $_getN(172);
  @$pb.TagNumber(174)
  set materialTextFormField(MaterialTextFormField v) { setField(174, v); }
  @$pb.TagNumber(174)
  $core.bool hasMaterialTextFormField() => $_has(172);
  @$pb.TagNumber(174)
  void clearMaterialTextFormField() => clearField(174);
  @$pb.TagNumber(174)
  MaterialTextFormField ensureMaterialTextFormField() => $_ensure(172);

  @$pb.TagNumber(175)
  MaterialToggleButtons get materialToggleButtons => $_getN(173);
  @$pb.TagNumber(175)
  set materialToggleButtons(MaterialToggleButtons v) { setField(175, v); }
  @$pb.TagNumber(175)
  $core.bool hasMaterialToggleButtons() => $_has(173);
  @$pb.TagNumber(175)
  void clearMaterialToggleButtons() => clearField(175);
  @$pb.TagNumber(175)
  MaterialToggleButtons ensureMaterialToggleButtons() => $_ensure(173);

  @$pb.TagNumber(176)
  MaterialTooltip get materialTooltip => $_getN(174);
  @$pb.TagNumber(176)
  set materialTooltip(MaterialTooltip v) { setField(176, v); }
  @$pb.TagNumber(176)
  $core.bool hasMaterialTooltip() => $_has(174);
  @$pb.TagNumber(176)
  void clearMaterialTooltip() => clearField(176);
  @$pb.TagNumber(176)
  MaterialTooltip ensureMaterialTooltip() => $_ensure(174);

  @$pb.TagNumber(177)
  MaterialTooltipVisibility get materialTooltipVisibility => $_getN(175);
  @$pb.TagNumber(177)
  set materialTooltipVisibility(MaterialTooltipVisibility v) { setField(177, v); }
  @$pb.TagNumber(177)
  $core.bool hasMaterialTooltipVisibility() => $_has(175);
  @$pb.TagNumber(177)
  void clearMaterialTooltipVisibility() => clearField(177);
  @$pb.TagNumber(177)
  MaterialTooltipVisibility ensureMaterialTooltipVisibility() => $_ensure(175);

  @$pb.TagNumber(178)
  MaterialUserAccountsDrawerHeader get materialUserAccountsDrawerHeader => $_getN(176);
  @$pb.TagNumber(178)
  set materialUserAccountsDrawerHeader(MaterialUserAccountsDrawerHeader v) { setField(178, v); }
  @$pb.TagNumber(178)
  $core.bool hasMaterialUserAccountsDrawerHeader() => $_has(176);
  @$pb.TagNumber(178)
  void clearMaterialUserAccountsDrawerHeader() => clearField(178);
  @$pb.TagNumber(178)
  MaterialUserAccountsDrawerHeader ensureMaterialUserAccountsDrawerHeader() => $_ensure(176);

  @$pb.TagNumber(179)
  FlutterPlatformSelectableRegionContextMenu get flutterPlatformSelectableRegionContextMenu => $_getN(177);
  @$pb.TagNumber(179)
  set flutterPlatformSelectableRegionContextMenu(FlutterPlatformSelectableRegionContextMenu v) { setField(179, v); }
  @$pb.TagNumber(179)
  $core.bool hasFlutterPlatformSelectableRegionContextMenu() => $_has(177);
  @$pb.TagNumber(179)
  void clearFlutterPlatformSelectableRegionContextMenu() => clearField(179);
  @$pb.TagNumber(179)
  FlutterPlatformSelectableRegionContextMenu ensureFlutterPlatformSelectableRegionContextMenu() => $_ensure(177);

  @$pb.TagNumber(180)
  FlutterFocusableActionDetector get flutterFocusableActionDetector => $_getN(178);
  @$pb.TagNumber(180)
  set flutterFocusableActionDetector(FlutterFocusableActionDetector v) { setField(180, v); }
  @$pb.TagNumber(180)
  $core.bool hasFlutterFocusableActionDetector() => $_has(178);
  @$pb.TagNumber(180)
  void clearFlutterFocusableActionDetector() => clearField(180);
  @$pb.TagNumber(180)
  FlutterFocusableActionDetector ensureFlutterFocusableActionDetector() => $_ensure(178);

  @$pb.TagNumber(181)
  FlutterAnimatedSize get flutterAnimatedSize => $_getN(179);
  @$pb.TagNumber(181)
  set flutterAnimatedSize(FlutterAnimatedSize v) { setField(181, v); }
  @$pb.TagNumber(181)
  $core.bool hasFlutterAnimatedSize() => $_has(179);
  @$pb.TagNumber(181)
  void clearFlutterAnimatedSize() => clearField(181);
  @$pb.TagNumber(181)
  FlutterAnimatedSize ensureFlutterAnimatedSize() => $_ensure(179);

  @$pb.TagNumber(182)
  FlutterAnimatedSwitcher get flutterAnimatedSwitcher => $_getN(180);
  @$pb.TagNumber(182)
  set flutterAnimatedSwitcher(FlutterAnimatedSwitcher v) { setField(182, v); }
  @$pb.TagNumber(182)
  $core.bool hasFlutterAnimatedSwitcher() => $_has(180);
  @$pb.TagNumber(182)
  void clearFlutterAnimatedSwitcher() => clearField(182);
  @$pb.TagNumber(182)
  FlutterAnimatedSwitcher ensureFlutterAnimatedSwitcher() => $_ensure(180);

  @$pb.TagNumber(183)
  FlutterWidgetsApp get flutterWidgetsApp => $_getN(181);
  @$pb.TagNumber(183)
  set flutterWidgetsApp(FlutterWidgetsApp v) { setField(183, v); }
  @$pb.TagNumber(183)
  $core.bool hasFlutterWidgetsApp() => $_has(181);
  @$pb.TagNumber(183)
  void clearFlutterWidgetsApp() => clearField(183);
  @$pb.TagNumber(183)
  FlutterWidgetsApp ensureFlutterWidgetsApp() => $_ensure(181);

  @$pb.TagNumber(184)
  FlutterWidgetsAppNamedRouter get flutterWidgetsAppNamedRouter => $_getN(182);
  @$pb.TagNumber(184)
  set flutterWidgetsAppNamedRouter(FlutterWidgetsAppNamedRouter v) { setField(184, v); }
  @$pb.TagNumber(184)
  $core.bool hasFlutterWidgetsAppNamedRouter() => $_has(182);
  @$pb.TagNumber(184)
  void clearFlutterWidgetsAppNamedRouter() => clearField(184);
  @$pb.TagNumber(184)
  FlutterWidgetsAppNamedRouter ensureFlutterWidgetsAppNamedRouter() => $_ensure(182);

  @$pb.TagNumber(185)
  FlutterAutofillGroup get flutterAutofillGroup => $_getN(183);
  @$pb.TagNumber(185)
  set flutterAutofillGroup(FlutterAutofillGroup v) { setField(185, v); }
  @$pb.TagNumber(185)
  $core.bool hasFlutterAutofillGroup() => $_has(183);
  @$pb.TagNumber(185)
  void clearFlutterAutofillGroup() => clearField(185);
  @$pb.TagNumber(185)
  FlutterAutofillGroup ensureFlutterAutofillGroup() => $_ensure(183);

  @$pb.TagNumber(186)
  FlutterAutomaticKeepAlive get flutterAutomaticKeepAlive => $_getN(184);
  @$pb.TagNumber(186)
  set flutterAutomaticKeepAlive(FlutterAutomaticKeepAlive v) { setField(186, v); }
  @$pb.TagNumber(186)
  $core.bool hasFlutterAutomaticKeepAlive() => $_has(184);
  @$pb.TagNumber(186)
  void clearFlutterAutomaticKeepAlive() => clearField(186);
  @$pb.TagNumber(186)
  FlutterAutomaticKeepAlive ensureFlutterAutomaticKeepAlive() => $_ensure(184);

  @$pb.TagNumber(187)
  FlutterCheckedModeBanner get flutterCheckedModeBanner => $_getN(185);
  @$pb.TagNumber(187)
  set flutterCheckedModeBanner(FlutterCheckedModeBanner v) { setField(187, v); }
  @$pb.TagNumber(187)
  $core.bool hasFlutterCheckedModeBanner() => $_has(185);
  @$pb.TagNumber(187)
  void clearFlutterCheckedModeBanner() => clearField(187);
  @$pb.TagNumber(187)
  FlutterCheckedModeBanner ensureFlutterCheckedModeBanner() => $_ensure(185);

  @$pb.TagNumber(188)
  FlutterAbsorbPointer get flutterAbsorbPointer => $_getN(186);
  @$pb.TagNumber(188)
  set flutterAbsorbPointer(FlutterAbsorbPointer v) { setField(188, v); }
  @$pb.TagNumber(188)
  $core.bool hasFlutterAbsorbPointer() => $_has(186);
  @$pb.TagNumber(188)
  void clearFlutterAbsorbPointer() => clearField(188);
  @$pb.TagNumber(188)
  FlutterAbsorbPointer ensureFlutterAbsorbPointer() => $_ensure(186);

  @$pb.TagNumber(189)
  FlutterAlign get flutterAlign => $_getN(187);
  @$pb.TagNumber(189)
  set flutterAlign(FlutterAlign v) { setField(189, v); }
  @$pb.TagNumber(189)
  $core.bool hasFlutterAlign() => $_has(187);
  @$pb.TagNumber(189)
  void clearFlutterAlign() => clearField(189);
  @$pb.TagNumber(189)
  FlutterAlign ensureFlutterAlign() => $_ensure(187);

  @$pb.TagNumber(190)
  FlutterAspectRatio get flutterAspectRatio => $_getN(188);
  @$pb.TagNumber(190)
  set flutterAspectRatio(FlutterAspectRatio v) { setField(190, v); }
  @$pb.TagNumber(190)
  $core.bool hasFlutterAspectRatio() => $_has(188);
  @$pb.TagNumber(190)
  void clearFlutterAspectRatio() => clearField(190);
  @$pb.TagNumber(190)
  FlutterAspectRatio ensureFlutterAspectRatio() => $_ensure(188);

  @$pb.TagNumber(191)
  FlutterBlockSemantics get flutterBlockSemantics => $_getN(189);
  @$pb.TagNumber(191)
  set flutterBlockSemantics(FlutterBlockSemantics v) { setField(191, v); }
  @$pb.TagNumber(191)
  $core.bool hasFlutterBlockSemantics() => $_has(189);
  @$pb.TagNumber(191)
  void clearFlutterBlockSemantics() => clearField(191);
  @$pb.TagNumber(191)
  FlutterBlockSemantics ensureFlutterBlockSemantics() => $_ensure(189);

  @$pb.TagNumber(192)
  FlutterCenter get flutterCenter => $_getN(190);
  @$pb.TagNumber(192)
  set flutterCenter(FlutterCenter v) { setField(192, v); }
  @$pb.TagNumber(192)
  $core.bool hasFlutterCenter() => $_has(190);
  @$pb.TagNumber(192)
  void clearFlutterCenter() => clearField(192);
  @$pb.TagNumber(192)
  FlutterCenter ensureFlutterCenter() => $_ensure(190);

  @$pb.TagNumber(193)
  FlutterClipOval get flutterClipOval => $_getN(191);
  @$pb.TagNumber(193)
  set flutterClipOval(FlutterClipOval v) { setField(193, v); }
  @$pb.TagNumber(193)
  $core.bool hasFlutterClipOval() => $_has(191);
  @$pb.TagNumber(193)
  void clearFlutterClipOval() => clearField(193);
  @$pb.TagNumber(193)
  FlutterClipOval ensureFlutterClipOval() => $_ensure(191);

  @$pb.TagNumber(194)
  FlutterClipPath get flutterClipPath => $_getN(192);
  @$pb.TagNumber(194)
  set flutterClipPath(FlutterClipPath v) { setField(194, v); }
  @$pb.TagNumber(194)
  $core.bool hasFlutterClipPath() => $_has(192);
  @$pb.TagNumber(194)
  void clearFlutterClipPath() => clearField(194);
  @$pb.TagNumber(194)
  FlutterClipPath ensureFlutterClipPath() => $_ensure(192);

  @$pb.TagNumber(195)
  FlutterClipRRect get flutterClipRRect => $_getN(193);
  @$pb.TagNumber(195)
  set flutterClipRRect(FlutterClipRRect v) { setField(195, v); }
  @$pb.TagNumber(195)
  $core.bool hasFlutterClipRRect() => $_has(193);
  @$pb.TagNumber(195)
  void clearFlutterClipRRect() => clearField(195);
  @$pb.TagNumber(195)
  FlutterClipRRect ensureFlutterClipRRect() => $_ensure(193);

  @$pb.TagNumber(196)
  FlutterClipRect get flutterClipRect => $_getN(194);
  @$pb.TagNumber(196)
  set flutterClipRect(FlutterClipRect v) { setField(196, v); }
  @$pb.TagNumber(196)
  $core.bool hasFlutterClipRect() => $_has(194);
  @$pb.TagNumber(196)
  void clearFlutterClipRect() => clearField(196);
  @$pb.TagNumber(196)
  FlutterClipRect ensureFlutterClipRect() => $_ensure(194);

  @$pb.TagNumber(197)
  FlutterColoredBox get flutterColoredBox => $_getN(195);
  @$pb.TagNumber(197)
  set flutterColoredBox(FlutterColoredBox v) { setField(197, v); }
  @$pb.TagNumber(197)
  $core.bool hasFlutterColoredBox() => $_has(195);
  @$pb.TagNumber(197)
  void clearFlutterColoredBox() => clearField(197);
  @$pb.TagNumber(197)
  FlutterColoredBox ensureFlutterColoredBox() => $_ensure(195);

  @$pb.TagNumber(198)
  FlutterColumn get flutterColumn => $_getN(196);
  @$pb.TagNumber(198)
  set flutterColumn(FlutterColumn v) { setField(198, v); }
  @$pb.TagNumber(198)
  $core.bool hasFlutterColumn() => $_has(196);
  @$pb.TagNumber(198)
  void clearFlutterColumn() => clearField(198);
  @$pb.TagNumber(198)
  FlutterColumn ensureFlutterColumn() => $_ensure(196);

  @$pb.TagNumber(199)
  FlutterCustomPaint get flutterCustomPaint => $_getN(197);
  @$pb.TagNumber(199)
  set flutterCustomPaint(FlutterCustomPaint v) { setField(199, v); }
  @$pb.TagNumber(199)
  $core.bool hasFlutterCustomPaint() => $_has(197);
  @$pb.TagNumber(199)
  void clearFlutterCustomPaint() => clearField(199);
  @$pb.TagNumber(199)
  FlutterCustomPaint ensureFlutterCustomPaint() => $_ensure(197);

  @$pb.TagNumber(200)
  FlutterExcludeSemantics get flutterExcludeSemantics => $_getN(198);
  @$pb.TagNumber(200)
  set flutterExcludeSemantics(FlutterExcludeSemantics v) { setField(200, v); }
  @$pb.TagNumber(200)
  $core.bool hasFlutterExcludeSemantics() => $_has(198);
  @$pb.TagNumber(200)
  void clearFlutterExcludeSemantics() => clearField(200);
  @$pb.TagNumber(200)
  FlutterExcludeSemantics ensureFlutterExcludeSemantics() => $_ensure(198);

  @$pb.TagNumber(201)
  FlutterExpanded get flutterExpanded => $_getN(199);
  @$pb.TagNumber(201)
  set flutterExpanded(FlutterExpanded v) { setField(201, v); }
  @$pb.TagNumber(201)
  $core.bool hasFlutterExpanded() => $_has(199);
  @$pb.TagNumber(201)
  void clearFlutterExpanded() => clearField(201);
  @$pb.TagNumber(201)
  FlutterExpanded ensureFlutterExpanded() => $_ensure(199);

  @$pb.TagNumber(202)
  FlutterFittedBox get flutterFittedBox => $_getN(200);
  @$pb.TagNumber(202)
  set flutterFittedBox(FlutterFittedBox v) { setField(202, v); }
  @$pb.TagNumber(202)
  $core.bool hasFlutterFittedBox() => $_has(200);
  @$pb.TagNumber(202)
  void clearFlutterFittedBox() => clearField(202);
  @$pb.TagNumber(202)
  FlutterFittedBox ensureFlutterFittedBox() => $_ensure(200);

  @$pb.TagNumber(203)
  FlutterFlexible get flutterFlexible => $_getN(201);
  @$pb.TagNumber(203)
  set flutterFlexible(FlutterFlexible v) { setField(203, v); }
  @$pb.TagNumber(203)
  $core.bool hasFlutterFlexible() => $_has(201);
  @$pb.TagNumber(203)
  void clearFlutterFlexible() => clearField(203);
  @$pb.TagNumber(203)
  FlutterFlexible ensureFlutterFlexible() => $_ensure(201);

  @$pb.TagNumber(204)
  FlutterFractionallySizedBox get flutterFractionallySizedBox => $_getN(202);
  @$pb.TagNumber(204)
  set flutterFractionallySizedBox(FlutterFractionallySizedBox v) { setField(204, v); }
  @$pb.TagNumber(204)
  $core.bool hasFlutterFractionallySizedBox() => $_has(202);
  @$pb.TagNumber(204)
  void clearFlutterFractionallySizedBox() => clearField(204);
  @$pb.TagNumber(204)
  FlutterFractionallySizedBox ensureFlutterFractionallySizedBox() => $_ensure(202);

  @$pb.TagNumber(205)
  FlutterIgnorePointer get flutterIgnorePointer => $_getN(203);
  @$pb.TagNumber(205)
  set flutterIgnorePointer(FlutterIgnorePointer v) { setField(205, v); }
  @$pb.TagNumber(205)
  $core.bool hasFlutterIgnorePointer() => $_has(203);
  @$pb.TagNumber(205)
  void clearFlutterIgnorePointer() => clearField(205);
  @$pb.TagNumber(205)
  FlutterIgnorePointer ensureFlutterIgnorePointer() => $_ensure(203);

  @$pb.TagNumber(206)
  FlutterIndexedSemantics get flutterIndexedSemantics => $_getN(204);
  @$pb.TagNumber(206)
  set flutterIndexedSemantics(FlutterIndexedSemantics v) { setField(206, v); }
  @$pb.TagNumber(206)
  $core.bool hasFlutterIndexedSemantics() => $_has(204);
  @$pb.TagNumber(206)
  void clearFlutterIndexedSemantics() => clearField(206);
  @$pb.TagNumber(206)
  FlutterIndexedSemantics ensureFlutterIndexedSemantics() => $_ensure(204);

  @$pb.TagNumber(207)
  FlutterIndexedStack get flutterIndexedStack => $_getN(205);
  @$pb.TagNumber(207)
  set flutterIndexedStack(FlutterIndexedStack v) { setField(207, v); }
  @$pb.TagNumber(207)
  $core.bool hasFlutterIndexedStack() => $_has(205);
  @$pb.TagNumber(207)
  void clearFlutterIndexedStack() => clearField(207);
  @$pb.TagNumber(207)
  FlutterIndexedStack ensureFlutterIndexedStack() => $_ensure(205);

  @$pb.TagNumber(208)
  FlutterIntrinsicHeight get flutterIntrinsicHeight => $_getN(206);
  @$pb.TagNumber(208)
  set flutterIntrinsicHeight(FlutterIntrinsicHeight v) { setField(208, v); }
  @$pb.TagNumber(208)
  $core.bool hasFlutterIntrinsicHeight() => $_has(206);
  @$pb.TagNumber(208)
  void clearFlutterIntrinsicHeight() => clearField(208);
  @$pb.TagNumber(208)
  FlutterIntrinsicHeight ensureFlutterIntrinsicHeight() => $_ensure(206);

  @$pb.TagNumber(209)
  FlutterIntrinsicWidth get flutterIntrinsicWidth => $_getN(207);
  @$pb.TagNumber(209)
  set flutterIntrinsicWidth(FlutterIntrinsicWidth v) { setField(209, v); }
  @$pb.TagNumber(209)
  $core.bool hasFlutterIntrinsicWidth() => $_has(207);
  @$pb.TagNumber(209)
  void clearFlutterIntrinsicWidth() => clearField(209);
  @$pb.TagNumber(209)
  FlutterIntrinsicWidth ensureFlutterIntrinsicWidth() => $_ensure(207);

  @$pb.TagNumber(210)
  FlutterKeyedSubtree get flutterKeyedSubtree => $_getN(208);
  @$pb.TagNumber(210)
  set flutterKeyedSubtree(FlutterKeyedSubtree v) { setField(210, v); }
  @$pb.TagNumber(210)
  $core.bool hasFlutterKeyedSubtree() => $_has(208);
  @$pb.TagNumber(210)
  void clearFlutterKeyedSubtree() => clearField(210);
  @$pb.TagNumber(210)
  FlutterKeyedSubtree ensureFlutterKeyedSubtree() => $_ensure(208);

  @$pb.TagNumber(211)
  FlutterKeyedSubtreeNamedWrap get flutterKeyedSubtreeNamedWrap => $_getN(209);
  @$pb.TagNumber(211)
  set flutterKeyedSubtreeNamedWrap(FlutterKeyedSubtreeNamedWrap v) { setField(211, v); }
  @$pb.TagNumber(211)
  $core.bool hasFlutterKeyedSubtreeNamedWrap() => $_has(209);
  @$pb.TagNumber(211)
  void clearFlutterKeyedSubtreeNamedWrap() => clearField(211);
  @$pb.TagNumber(211)
  FlutterKeyedSubtreeNamedWrap ensureFlutterKeyedSubtreeNamedWrap() => $_ensure(209);

  @$pb.TagNumber(212)
  FlutterLimitedBox get flutterLimitedBox => $_getN(210);
  @$pb.TagNumber(212)
  set flutterLimitedBox(FlutterLimitedBox v) { setField(212, v); }
  @$pb.TagNumber(212)
  $core.bool hasFlutterLimitedBox() => $_has(210);
  @$pb.TagNumber(212)
  void clearFlutterLimitedBox() => clearField(212);
  @$pb.TagNumber(212)
  FlutterLimitedBox ensureFlutterLimitedBox() => $_ensure(210);

  @$pb.TagNumber(213)
  FlutterListBody get flutterListBody => $_getN(211);
  @$pb.TagNumber(213)
  set flutterListBody(FlutterListBody v) { setField(213, v); }
  @$pb.TagNumber(213)
  $core.bool hasFlutterListBody() => $_has(211);
  @$pb.TagNumber(213)
  void clearFlutterListBody() => clearField(213);
  @$pb.TagNumber(213)
  FlutterListBody ensureFlutterListBody() => $_ensure(211);

  @$pb.TagNumber(214)
  FlutterListener get flutterListener => $_getN(212);
  @$pb.TagNumber(214)
  set flutterListener(FlutterListener v) { setField(214, v); }
  @$pb.TagNumber(214)
  $core.bool hasFlutterListener() => $_has(212);
  @$pb.TagNumber(214)
  void clearFlutterListener() => clearField(214);
  @$pb.TagNumber(214)
  FlutterListener ensureFlutterListener() => $_ensure(212);

  @$pb.TagNumber(215)
  FlutterMergeSemantics get flutterMergeSemantics => $_getN(213);
  @$pb.TagNumber(215)
  set flutterMergeSemantics(FlutterMergeSemantics v) { setField(215, v); }
  @$pb.TagNumber(215)
  $core.bool hasFlutterMergeSemantics() => $_has(213);
  @$pb.TagNumber(215)
  void clearFlutterMergeSemantics() => clearField(215);
  @$pb.TagNumber(215)
  FlutterMergeSemantics ensureFlutterMergeSemantics() => $_ensure(213);

  @$pb.TagNumber(216)
  FlutterMetaData get flutterMetaData => $_getN(214);
  @$pb.TagNumber(216)
  set flutterMetaData(FlutterMetaData v) { setField(216, v); }
  @$pb.TagNumber(216)
  $core.bool hasFlutterMetaData() => $_has(214);
  @$pb.TagNumber(216)
  void clearFlutterMetaData() => clearField(216);
  @$pb.TagNumber(216)
  FlutterMetaData ensureFlutterMetaData() => $_ensure(214);

  @$pb.TagNumber(217)
  FlutterMouseRegion get flutterMouseRegion => $_getN(215);
  @$pb.TagNumber(217)
  set flutterMouseRegion(FlutterMouseRegion v) { setField(217, v); }
  @$pb.TagNumber(217)
  $core.bool hasFlutterMouseRegion() => $_has(215);
  @$pb.TagNumber(217)
  void clearFlutterMouseRegion() => clearField(217);
  @$pb.TagNumber(217)
  FlutterMouseRegion ensureFlutterMouseRegion() => $_ensure(215);

  @$pb.TagNumber(218)
  FlutterOffstage get flutterOffstage => $_getN(216);
  @$pb.TagNumber(218)
  set flutterOffstage(FlutterOffstage v) { setField(218, v); }
  @$pb.TagNumber(218)
  $core.bool hasFlutterOffstage() => $_has(216);
  @$pb.TagNumber(218)
  void clearFlutterOffstage() => clearField(218);
  @$pb.TagNumber(218)
  FlutterOffstage ensureFlutterOffstage() => $_ensure(216);

  @$pb.TagNumber(219)
  FlutterOpacity get flutterOpacity => $_getN(217);
  @$pb.TagNumber(219)
  set flutterOpacity(FlutterOpacity v) { setField(219, v); }
  @$pb.TagNumber(219)
  $core.bool hasFlutterOpacity() => $_has(217);
  @$pb.TagNumber(219)
  void clearFlutterOpacity() => clearField(219);
  @$pb.TagNumber(219)
  FlutterOpacity ensureFlutterOpacity() => $_ensure(217);

  @$pb.TagNumber(220)
  FlutterOverflowBox get flutterOverflowBox => $_getN(218);
  @$pb.TagNumber(220)
  set flutterOverflowBox(FlutterOverflowBox v) { setField(220, v); }
  @$pb.TagNumber(220)
  $core.bool hasFlutterOverflowBox() => $_has(218);
  @$pb.TagNumber(220)
  void clearFlutterOverflowBox() => clearField(220);
  @$pb.TagNumber(220)
  FlutterOverflowBox ensureFlutterOverflowBox() => $_ensure(218);

  @$pb.TagNumber(221)
  FlutterPhysicalModel get flutterPhysicalModel => $_getN(219);
  @$pb.TagNumber(221)
  set flutterPhysicalModel(FlutterPhysicalModel v) { setField(221, v); }
  @$pb.TagNumber(221)
  $core.bool hasFlutterPhysicalModel() => $_has(219);
  @$pb.TagNumber(221)
  void clearFlutterPhysicalModel() => clearField(221);
  @$pb.TagNumber(221)
  FlutterPhysicalModel ensureFlutterPhysicalModel() => $_ensure(219);

  @$pb.TagNumber(222)
  FlutterPositioned get flutterPositioned => $_getN(220);
  @$pb.TagNumber(222)
  set flutterPositioned(FlutterPositioned v) { setField(222, v); }
  @$pb.TagNumber(222)
  $core.bool hasFlutterPositioned() => $_has(220);
  @$pb.TagNumber(222)
  void clearFlutterPositioned() => clearField(222);
  @$pb.TagNumber(222)
  FlutterPositioned ensureFlutterPositioned() => $_ensure(220);

  @$pb.TagNumber(223)
  FlutterPositionedNamedFill get flutterPositionedNamedFill => $_getN(221);
  @$pb.TagNumber(223)
  set flutterPositionedNamedFill(FlutterPositionedNamedFill v) { setField(223, v); }
  @$pb.TagNumber(223)
  $core.bool hasFlutterPositionedNamedFill() => $_has(221);
  @$pb.TagNumber(223)
  void clearFlutterPositionedNamedFill() => clearField(223);
  @$pb.TagNumber(223)
  FlutterPositionedNamedFill ensureFlutterPositionedNamedFill() => $_ensure(221);

  @$pb.TagNumber(224)
  FlutterPositionedDirectional get flutterPositionedDirectional => $_getN(222);
  @$pb.TagNumber(224)
  set flutterPositionedDirectional(FlutterPositionedDirectional v) { setField(224, v); }
  @$pb.TagNumber(224)
  $core.bool hasFlutterPositionedDirectional() => $_has(222);
  @$pb.TagNumber(224)
  void clearFlutterPositionedDirectional() => clearField(224);
  @$pb.TagNumber(224)
  FlutterPositionedDirectional ensureFlutterPositionedDirectional() => $_ensure(222);

  @$pb.TagNumber(225)
  FlutterRawImage get flutterRawImage => $_getN(223);
  @$pb.TagNumber(225)
  set flutterRawImage(FlutterRawImage v) { setField(225, v); }
  @$pb.TagNumber(225)
  $core.bool hasFlutterRawImage() => $_has(223);
  @$pb.TagNumber(225)
  void clearFlutterRawImage() => clearField(225);
  @$pb.TagNumber(225)
  FlutterRawImage ensureFlutterRawImage() => $_ensure(223);

  @$pb.TagNumber(226)
  FlutterRepaintBoundary get flutterRepaintBoundary => $_getN(224);
  @$pb.TagNumber(226)
  set flutterRepaintBoundary(FlutterRepaintBoundary v) { setField(226, v); }
  @$pb.TagNumber(226)
  $core.bool hasFlutterRepaintBoundary() => $_has(224);
  @$pb.TagNumber(226)
  void clearFlutterRepaintBoundary() => clearField(226);
  @$pb.TagNumber(226)
  FlutterRepaintBoundary ensureFlutterRepaintBoundary() => $_ensure(224);

  @$pb.TagNumber(227)
  FlutterRepaintBoundaryNamedWrap get flutterRepaintBoundaryNamedWrap => $_getN(225);
  @$pb.TagNumber(227)
  set flutterRepaintBoundaryNamedWrap(FlutterRepaintBoundaryNamedWrap v) { setField(227, v); }
  @$pb.TagNumber(227)
  $core.bool hasFlutterRepaintBoundaryNamedWrap() => $_has(225);
  @$pb.TagNumber(227)
  void clearFlutterRepaintBoundaryNamedWrap() => clearField(227);
  @$pb.TagNumber(227)
  FlutterRepaintBoundaryNamedWrap ensureFlutterRepaintBoundaryNamedWrap() => $_ensure(225);

  @$pb.TagNumber(228)
  FlutterRotatedBox get flutterRotatedBox => $_getN(226);
  @$pb.TagNumber(228)
  set flutterRotatedBox(FlutterRotatedBox v) { setField(228, v); }
  @$pb.TagNumber(228)
  $core.bool hasFlutterRotatedBox() => $_has(226);
  @$pb.TagNumber(228)
  void clearFlutterRotatedBox() => clearField(228);
  @$pb.TagNumber(228)
  FlutterRotatedBox ensureFlutterRotatedBox() => $_ensure(226);

  @$pb.TagNumber(229)
  FlutterRow get flutterRow => $_getN(227);
  @$pb.TagNumber(229)
  set flutterRow(FlutterRow v) { setField(229, v); }
  @$pb.TagNumber(229)
  $core.bool hasFlutterRow() => $_has(227);
  @$pb.TagNumber(229)
  void clearFlutterRow() => clearField(229);
  @$pb.TagNumber(229)
  FlutterRow ensureFlutterRow() => $_ensure(227);

  @$pb.TagNumber(230)
  FlutterSemantics get flutterSemantics => $_getN(228);
  @$pb.TagNumber(230)
  set flutterSemantics(FlutterSemantics v) { setField(230, v); }
  @$pb.TagNumber(230)
  $core.bool hasFlutterSemantics() => $_has(228);
  @$pb.TagNumber(230)
  void clearFlutterSemantics() => clearField(230);
  @$pb.TagNumber(230)
  FlutterSemantics ensureFlutterSemantics() => $_ensure(228);

  @$pb.TagNumber(231)
  FlutterSizedBox get flutterSizedBox => $_getN(229);
  @$pb.TagNumber(231)
  set flutterSizedBox(FlutterSizedBox v) { setField(231, v); }
  @$pb.TagNumber(231)
  $core.bool hasFlutterSizedBox() => $_has(229);
  @$pb.TagNumber(231)
  void clearFlutterSizedBox() => clearField(231);
  @$pb.TagNumber(231)
  FlutterSizedBox ensureFlutterSizedBox() => $_ensure(229);

  @$pb.TagNumber(232)
  FlutterSizedBoxNamedExpand get flutterSizedBoxNamedExpand => $_getN(230);
  @$pb.TagNumber(232)
  set flutterSizedBoxNamedExpand(FlutterSizedBoxNamedExpand v) { setField(232, v); }
  @$pb.TagNumber(232)
  $core.bool hasFlutterSizedBoxNamedExpand() => $_has(230);
  @$pb.TagNumber(232)
  void clearFlutterSizedBoxNamedExpand() => clearField(232);
  @$pb.TagNumber(232)
  FlutterSizedBoxNamedExpand ensureFlutterSizedBoxNamedExpand() => $_ensure(230);

  @$pb.TagNumber(233)
  FlutterSizedBoxNamedShrink get flutterSizedBoxNamedShrink => $_getN(231);
  @$pb.TagNumber(233)
  set flutterSizedBoxNamedShrink(FlutterSizedBoxNamedShrink v) { setField(233, v); }
  @$pb.TagNumber(233)
  $core.bool hasFlutterSizedBoxNamedShrink() => $_has(231);
  @$pb.TagNumber(233)
  void clearFlutterSizedBoxNamedShrink() => clearField(233);
  @$pb.TagNumber(233)
  FlutterSizedBoxNamedShrink ensureFlutterSizedBoxNamedShrink() => $_ensure(231);

  @$pb.TagNumber(234)
  FlutterSizedBoxNamedFromSize get flutterSizedBoxNamedFromSize => $_getN(232);
  @$pb.TagNumber(234)
  set flutterSizedBoxNamedFromSize(FlutterSizedBoxNamedFromSize v) { setField(234, v); }
  @$pb.TagNumber(234)
  $core.bool hasFlutterSizedBoxNamedFromSize() => $_has(232);
  @$pb.TagNumber(234)
  void clearFlutterSizedBoxNamedFromSize() => clearField(234);
  @$pb.TagNumber(234)
  FlutterSizedBoxNamedFromSize ensureFlutterSizedBoxNamedFromSize() => $_ensure(232);

  @$pb.TagNumber(235)
  FlutterSizedBoxNamedSquare get flutterSizedBoxNamedSquare => $_getN(233);
  @$pb.TagNumber(235)
  set flutterSizedBoxNamedSquare(FlutterSizedBoxNamedSquare v) { setField(235, v); }
  @$pb.TagNumber(235)
  $core.bool hasFlutterSizedBoxNamedSquare() => $_has(233);
  @$pb.TagNumber(235)
  void clearFlutterSizedBoxNamedSquare() => clearField(235);
  @$pb.TagNumber(235)
  FlutterSizedBoxNamedSquare ensureFlutterSizedBoxNamedSquare() => $_ensure(233);

  @$pb.TagNumber(236)
  FlutterSliverToBoxAdapter get flutterSliverToBoxAdapter => $_getN(234);
  @$pb.TagNumber(236)
  set flutterSliverToBoxAdapter(FlutterSliverToBoxAdapter v) { setField(236, v); }
  @$pb.TagNumber(236)
  $core.bool hasFlutterSliverToBoxAdapter() => $_has(234);
  @$pb.TagNumber(236)
  void clearFlutterSliverToBoxAdapter() => clearField(236);
  @$pb.TagNumber(236)
  FlutterSliverToBoxAdapter ensureFlutterSliverToBoxAdapter() => $_ensure(234);

  @$pb.TagNumber(237)
  FlutterStack get flutterStack => $_getN(235);
  @$pb.TagNumber(237)
  set flutterStack(FlutterStack v) { setField(237, v); }
  @$pb.TagNumber(237)
  $core.bool hasFlutterStack() => $_has(235);
  @$pb.TagNumber(237)
  void clearFlutterStack() => clearField(237);
  @$pb.TagNumber(237)
  FlutterStack ensureFlutterStack() => $_ensure(235);

  @$pb.TagNumber(238)
  FlutterTransformNamedRotate get flutterTransformNamedRotate => $_getN(236);
  @$pb.TagNumber(238)
  set flutterTransformNamedRotate(FlutterTransformNamedRotate v) { setField(238, v); }
  @$pb.TagNumber(238)
  $core.bool hasFlutterTransformNamedRotate() => $_has(236);
  @$pb.TagNumber(238)
  void clearFlutterTransformNamedRotate() => clearField(238);
  @$pb.TagNumber(238)
  FlutterTransformNamedRotate ensureFlutterTransformNamedRotate() => $_ensure(236);

  @$pb.TagNumber(239)
  FlutterTransformNamedScale get flutterTransformNamedScale => $_getN(237);
  @$pb.TagNumber(239)
  set flutterTransformNamedScale(FlutterTransformNamedScale v) { setField(239, v); }
  @$pb.TagNumber(239)
  $core.bool hasFlutterTransformNamedScale() => $_has(237);
  @$pb.TagNumber(239)
  void clearFlutterTransformNamedScale() => clearField(239);
  @$pb.TagNumber(239)
  FlutterTransformNamedScale ensureFlutterTransformNamedScale() => $_ensure(237);

  @$pb.TagNumber(240)
  FlutterTransformNamedFlip get flutterTransformNamedFlip => $_getN(238);
  @$pb.TagNumber(240)
  set flutterTransformNamedFlip(FlutterTransformNamedFlip v) { setField(240, v); }
  @$pb.TagNumber(240)
  $core.bool hasFlutterTransformNamedFlip() => $_has(238);
  @$pb.TagNumber(240)
  void clearFlutterTransformNamedFlip() => clearField(240);
  @$pb.TagNumber(240)
  FlutterTransformNamedFlip ensureFlutterTransformNamedFlip() => $_ensure(238);

  @$pb.TagNumber(241)
  FlutterUnconstrainedBox get flutterUnconstrainedBox => $_getN(239);
  @$pb.TagNumber(241)
  set flutterUnconstrainedBox(FlutterUnconstrainedBox v) { setField(241, v); }
  @$pb.TagNumber(241)
  $core.bool hasFlutterUnconstrainedBox() => $_has(239);
  @$pb.TagNumber(241)
  void clearFlutterUnconstrainedBox() => clearField(241);
  @$pb.TagNumber(241)
  FlutterUnconstrainedBox ensureFlutterUnconstrainedBox() => $_ensure(239);

  @$pb.TagNumber(242)
  FlutterWrap get flutterWrap => $_getN(240);
  @$pb.TagNumber(242)
  set flutterWrap(FlutterWrap v) { setField(242, v); }
  @$pb.TagNumber(242)
  $core.bool hasFlutterWrap() => $_has(240);
  @$pb.TagNumber(242)
  void clearFlutterWrap() => clearField(242);
  @$pb.TagNumber(242)
  FlutterWrap ensureFlutterWrap() => $_ensure(240);

  @$pb.TagNumber(243)
  FlutterContainer get flutterContainer => $_getN(241);
  @$pb.TagNumber(243)
  set flutterContainer(FlutterContainer v) { setField(243, v); }
  @$pb.TagNumber(243)
  $core.bool hasFlutterContainer() => $_has(241);
  @$pb.TagNumber(243)
  void clearFlutterContainer() => clearField(243);
  @$pb.TagNumber(243)
  FlutterContainer ensureFlutterContainer() => $_ensure(241);

  @$pb.TagNumber(244)
  FlutterDefaultSelectionStyle get flutterDefaultSelectionStyle => $_getN(242);
  @$pb.TagNumber(244)
  set flutterDefaultSelectionStyle(FlutterDefaultSelectionStyle v) { setField(244, v); }
  @$pb.TagNumber(244)
  $core.bool hasFlutterDefaultSelectionStyle() => $_has(242);
  @$pb.TagNumber(244)
  void clearFlutterDefaultSelectionStyle() => clearField(244);
  @$pb.TagNumber(244)
  FlutterDefaultSelectionStyle ensureFlutterDefaultSelectionStyle() => $_ensure(242);

  @$pb.TagNumber(245)
  FlutterDefaultSelectionStyleNamedFallback get flutterDefaultSelectionStyleNamedFallback => $_getN(243);
  @$pb.TagNumber(245)
  set flutterDefaultSelectionStyleNamedFallback(FlutterDefaultSelectionStyleNamedFallback v) { setField(245, v); }
  @$pb.TagNumber(245)
  $core.bool hasFlutterDefaultSelectionStyleNamedFallback() => $_has(243);
  @$pb.TagNumber(245)
  void clearFlutterDefaultSelectionStyleNamedFallback() => clearField(245);
  @$pb.TagNumber(245)
  FlutterDefaultSelectionStyleNamedFallback ensureFlutterDefaultSelectionStyleNamedFallback() => $_ensure(243);

  @$pb.TagNumber(246)
  FlutterDefaultTextEditingShortcuts get flutterDefaultTextEditingShortcuts => $_getN(244);
  @$pb.TagNumber(246)
  set flutterDefaultTextEditingShortcuts(FlutterDefaultTextEditingShortcuts v) { setField(246, v); }
  @$pb.TagNumber(246)
  $core.bool hasFlutterDefaultTextEditingShortcuts() => $_has(244);
  @$pb.TagNumber(246)
  void clearFlutterDefaultTextEditingShortcuts() => clearField(246);
  @$pb.TagNumber(246)
  FlutterDefaultTextEditingShortcuts ensureFlutterDefaultTextEditingShortcuts() => $_ensure(244);

  @$pb.TagNumber(247)
  FlutterDismissible get flutterDismissible => $_getN(245);
  @$pb.TagNumber(247)
  set flutterDismissible(FlutterDismissible v) { setField(247, v); }
  @$pb.TagNumber(247)
  $core.bool hasFlutterDismissible() => $_has(245);
  @$pb.TagNumber(247)
  void clearFlutterDismissible() => clearField(247);
  @$pb.TagNumber(247)
  FlutterDismissible ensureFlutterDismissible() => $_ensure(245);

  @$pb.TagNumber(248)
  FlutterDisplayFeatureSubScreen get flutterDisplayFeatureSubScreen => $_getN(246);
  @$pb.TagNumber(248)
  set flutterDisplayFeatureSubScreen(FlutterDisplayFeatureSubScreen v) { setField(248, v); }
  @$pb.TagNumber(248)
  $core.bool hasFlutterDisplayFeatureSubScreen() => $_has(246);
  @$pb.TagNumber(248)
  void clearFlutterDisplayFeatureSubScreen() => clearField(248);
  @$pb.TagNumber(248)
  FlutterDisplayFeatureSubScreen ensureFlutterDisplayFeatureSubScreen() => $_ensure(246);

  @$pb.TagNumber(249)
  FlutterDraggable get flutterDraggable => $_getN(247);
  @$pb.TagNumber(249)
  set flutterDraggable(FlutterDraggable v) { setField(249, v); }
  @$pb.TagNumber(249)
  $core.bool hasFlutterDraggable() => $_has(247);
  @$pb.TagNumber(249)
  void clearFlutterDraggable() => clearField(249);
  @$pb.TagNumber(249)
  FlutterDraggable ensureFlutterDraggable() => $_ensure(247);

  @$pb.TagNumber(250)
  FlutterLongPressDraggable get flutterLongPressDraggable => $_getN(248);
  @$pb.TagNumber(250)
  set flutterLongPressDraggable(FlutterLongPressDraggable v) { setField(250, v); }
  @$pb.TagNumber(250)
  $core.bool hasFlutterLongPressDraggable() => $_has(248);
  @$pb.TagNumber(250)
  void clearFlutterLongPressDraggable() => clearField(250);
  @$pb.TagNumber(250)
  FlutterLongPressDraggable ensureFlutterLongPressDraggable() => $_ensure(248);

  @$pb.TagNumber(251)
  FlutterDraggableScrollableActuator get flutterDraggableScrollableActuator => $_getN(249);
  @$pb.TagNumber(251)
  set flutterDraggableScrollableActuator(FlutterDraggableScrollableActuator v) { setField(251, v); }
  @$pb.TagNumber(251)
  $core.bool hasFlutterDraggableScrollableActuator() => $_has(249);
  @$pb.TagNumber(251)
  void clearFlutterDraggableScrollableActuator() => clearField(251);
  @$pb.TagNumber(251)
  FlutterDraggableScrollableActuator ensureFlutterDraggableScrollableActuator() => $_ensure(249);

  @$pb.TagNumber(252)
  FlutterFadeInImageNamedAssetNetwork get flutterFadeInImageNamedAssetNetwork => $_getN(250);
  @$pb.TagNumber(252)
  set flutterFadeInImageNamedAssetNetwork(FlutterFadeInImageNamedAssetNetwork v) { setField(252, v); }
  @$pb.TagNumber(252)
  $core.bool hasFlutterFadeInImageNamedAssetNetwork() => $_has(250);
  @$pb.TagNumber(252)
  void clearFlutterFadeInImageNamedAssetNetwork() => clearField(252);
  @$pb.TagNumber(252)
  FlutterFadeInImageNamedAssetNetwork ensureFlutterFadeInImageNamedAssetNetwork() => $_ensure(250);

  @$pb.TagNumber(253)
  FlutterExcludeFocus get flutterExcludeFocus => $_getN(251);
  @$pb.TagNumber(253)
  set flutterExcludeFocus(FlutterExcludeFocus v) { setField(253, v); }
  @$pb.TagNumber(253)
  $core.bool hasFlutterExcludeFocus() => $_has(251);
  @$pb.TagNumber(253)
  void clearFlutterExcludeFocus() => clearField(253);
  @$pb.TagNumber(253)
  FlutterExcludeFocus ensureFlutterExcludeFocus() => $_ensure(251);

  @$pb.TagNumber(254)
  FlutterFocus get flutterFocus => $_getN(252);
  @$pb.TagNumber(254)
  set flutterFocus(FlutterFocus v) { setField(254, v); }
  @$pb.TagNumber(254)
  $core.bool hasFlutterFocus() => $_has(252);
  @$pb.TagNumber(254)
  void clearFlutterFocus() => clearField(254);
  @$pb.TagNumber(254)
  FlutterFocus ensureFlutterFocus() => $_ensure(252);

  @$pb.TagNumber(255)
  FlutterFocusScope get flutterFocusScope => $_getN(253);
  @$pb.TagNumber(255)
  set flutterFocusScope(FlutterFocusScope v) { setField(255, v); }
  @$pb.TagNumber(255)
  $core.bool hasFlutterFocusScope() => $_has(253);
  @$pb.TagNumber(255)
  void clearFlutterFocusScope() => clearField(255);
  @$pb.TagNumber(255)
  FlutterFocusScope ensureFlutterFocusScope() => $_ensure(253);

  @$pb.TagNumber(256)
  FlutterExcludeFocusTraversal get flutterExcludeFocusTraversal => $_getN(254);
  @$pb.TagNumber(256)
  set flutterExcludeFocusTraversal(FlutterExcludeFocusTraversal v) { setField(256, v); }
  @$pb.TagNumber(256)
  $core.bool hasFlutterExcludeFocusTraversal() => $_has(254);
  @$pb.TagNumber(256)
  void clearFlutterExcludeFocusTraversal() => clearField(256);
  @$pb.TagNumber(256)
  FlutterExcludeFocusTraversal ensureFlutterExcludeFocusTraversal() => $_ensure(254);

  @$pb.TagNumber(257)
  FlutterFocusTraversalGroup get flutterFocusTraversalGroup => $_getN(255);
  @$pb.TagNumber(257)
  set flutterFocusTraversalGroup(FlutterFocusTraversalGroup v) { setField(257, v); }
  @$pb.TagNumber(257)
  $core.bool hasFlutterFocusTraversalGroup() => $_has(255);
  @$pb.TagNumber(257)
  void clearFlutterFocusTraversalGroup() => clearField(257);
  @$pb.TagNumber(257)
  FlutterFocusTraversalGroup ensureFlutterFocusTraversalGroup() => $_ensure(255);

  @$pb.TagNumber(258)
  FlutterForm get flutterForm => $_getN(256);
  @$pb.TagNumber(258)
  set flutterForm(FlutterForm v) { setField(258, v); }
  @$pb.TagNumber(258)
  $core.bool hasFlutterForm() => $_has(256);
  @$pb.TagNumber(258)
  void clearFlutterForm() => clearField(258);
  @$pb.TagNumber(258)
  FlutterForm ensureFlutterForm() => $_ensure(256);

  @$pb.TagNumber(259)
  FlutterErrorWidgetNamedWithDetails get flutterErrorWidgetNamedWithDetails => $_getN(257);
  @$pb.TagNumber(259)
  set flutterErrorWidgetNamedWithDetails(FlutterErrorWidgetNamedWithDetails v) { setField(259, v); }
  @$pb.TagNumber(259)
  $core.bool hasFlutterErrorWidgetNamedWithDetails() => $_has(257);
  @$pb.TagNumber(259)
  void clearFlutterErrorWidgetNamedWithDetails() => clearField(259);
  @$pb.TagNumber(259)
  FlutterErrorWidgetNamedWithDetails ensureFlutterErrorWidgetNamedWithDetails() => $_ensure(257);

  @$pb.TagNumber(260)
  FlutterGestureDetector get flutterGestureDetector => $_getN(258);
  @$pb.TagNumber(260)
  set flutterGestureDetector(FlutterGestureDetector v) { setField(260, v); }
  @$pb.TagNumber(260)
  $core.bool hasFlutterGestureDetector() => $_has(258);
  @$pb.TagNumber(260)
  void clearFlutterGestureDetector() => clearField(260);
  @$pb.TagNumber(260)
  FlutterGestureDetector ensureFlutterGestureDetector() => $_ensure(258);

  @$pb.TagNumber(261)
  FlutterRawGestureDetector get flutterRawGestureDetector => $_getN(259);
  @$pb.TagNumber(261)
  set flutterRawGestureDetector(FlutterRawGestureDetector v) { setField(261, v); }
  @$pb.TagNumber(261)
  $core.bool hasFlutterRawGestureDetector() => $_has(259);
  @$pb.TagNumber(261)
  void clearFlutterRawGestureDetector() => clearField(261);
  @$pb.TagNumber(261)
  FlutterRawGestureDetector ensureFlutterRawGestureDetector() => $_ensure(259);

  @$pb.TagNumber(262)
  FlutterGridPaper get flutterGridPaper => $_getN(260);
  @$pb.TagNumber(262)
  set flutterGridPaper(FlutterGridPaper v) { setField(262, v); }
  @$pb.TagNumber(262)
  $core.bool hasFlutterGridPaper() => $_has(260);
  @$pb.TagNumber(262)
  void clearFlutterGridPaper() => clearField(262);
  @$pb.TagNumber(262)
  FlutterGridPaper ensureFlutterGridPaper() => $_ensure(260);

  @$pb.TagNumber(263)
  FlutterHeroMode get flutterHeroMode => $_getN(261);
  @$pb.TagNumber(263)
  set flutterHeroMode(FlutterHeroMode v) { setField(263, v); }
  @$pb.TagNumber(263)
  $core.bool hasFlutterHeroMode() => $_has(261);
  @$pb.TagNumber(263)
  void clearFlutterHeroMode() => clearField(263);
  @$pb.TagNumber(263)
  FlutterHeroMode ensureFlutterHeroMode() => $_ensure(261);

  @$pb.TagNumber(264)
  FlutterIcon get flutterIcon => $_getN(262);
  @$pb.TagNumber(264)
  set flutterIcon(FlutterIcon v) { setField(264, v); }
  @$pb.TagNumber(264)
  $core.bool hasFlutterIcon() => $_has(262);
  @$pb.TagNumber(264)
  void clearFlutterIcon() => clearField(264);
  @$pb.TagNumber(264)
  FlutterIcon ensureFlutterIcon() => $_ensure(262);

  @$pb.TagNumber(265)
  FlutterImageNamedNetwork get flutterImageNamedNetwork => $_getN(263);
  @$pb.TagNumber(265)
  set flutterImageNamedNetwork(FlutterImageNamedNetwork v) { setField(265, v); }
  @$pb.TagNumber(265)
  $core.bool hasFlutterImageNamedNetwork() => $_has(263);
  @$pb.TagNumber(265)
  void clearFlutterImageNamedNetwork() => clearField(265);
  @$pb.TagNumber(265)
  FlutterImageNamedNetwork ensureFlutterImageNamedNetwork() => $_ensure(263);

  @$pb.TagNumber(266)
  FlutterImageNamedAsset get flutterImageNamedAsset => $_getN(264);
  @$pb.TagNumber(266)
  set flutterImageNamedAsset(FlutterImageNamedAsset v) { setField(266, v); }
  @$pb.TagNumber(266)
  $core.bool hasFlutterImageNamedAsset() => $_has(264);
  @$pb.TagNumber(266)
  void clearFlutterImageNamedAsset() => clearField(266);
  @$pb.TagNumber(266)
  FlutterImageNamedAsset ensureFlutterImageNamedAsset() => $_ensure(264);

  @$pb.TagNumber(267)
  FlutterImageIcon get flutterImageIcon => $_getN(265);
  @$pb.TagNumber(267)
  set flutterImageIcon(FlutterImageIcon v) { setField(267, v); }
  @$pb.TagNumber(267)
  $core.bool hasFlutterImageIcon() => $_has(265);
  @$pb.TagNumber(267)
  void clearFlutterImageIcon() => clearField(267);
  @$pb.TagNumber(267)
  FlutterImageIcon ensureFlutterImageIcon() => $_ensure(265);

  @$pb.TagNumber(268)
  FlutterAnimatedContainer get flutterAnimatedContainer => $_getN(266);
  @$pb.TagNumber(268)
  set flutterAnimatedContainer(FlutterAnimatedContainer v) { setField(268, v); }
  @$pb.TagNumber(268)
  $core.bool hasFlutterAnimatedContainer() => $_has(266);
  @$pb.TagNumber(268)
  void clearFlutterAnimatedContainer() => clearField(268);
  @$pb.TagNumber(268)
  FlutterAnimatedContainer ensureFlutterAnimatedContainer() => $_ensure(266);

  @$pb.TagNumber(269)
  FlutterAnimatedFractionallySizedBox get flutterAnimatedFractionallySizedBox => $_getN(267);
  @$pb.TagNumber(269)
  set flutterAnimatedFractionallySizedBox(FlutterAnimatedFractionallySizedBox v) { setField(269, v); }
  @$pb.TagNumber(269)
  $core.bool hasFlutterAnimatedFractionallySizedBox() => $_has(267);
  @$pb.TagNumber(269)
  void clearFlutterAnimatedFractionallySizedBox() => clearField(269);
  @$pb.TagNumber(269)
  FlutterAnimatedFractionallySizedBox ensureFlutterAnimatedFractionallySizedBox() => $_ensure(267);

  @$pb.TagNumber(270)
  FlutterAnimatedOpacity get flutterAnimatedOpacity => $_getN(268);
  @$pb.TagNumber(270)
  set flutterAnimatedOpacity(FlutterAnimatedOpacity v) { setField(270, v); }
  @$pb.TagNumber(270)
  $core.bool hasFlutterAnimatedOpacity() => $_has(268);
  @$pb.TagNumber(270)
  void clearFlutterAnimatedOpacity() => clearField(270);
  @$pb.TagNumber(270)
  FlutterAnimatedOpacity ensureFlutterAnimatedOpacity() => $_ensure(268);

  @$pb.TagNumber(271)
  FlutterAnimatedPositioned get flutterAnimatedPositioned => $_getN(269);
  @$pb.TagNumber(271)
  set flutterAnimatedPositioned(FlutterAnimatedPositioned v) { setField(271, v); }
  @$pb.TagNumber(271)
  $core.bool hasFlutterAnimatedPositioned() => $_has(269);
  @$pb.TagNumber(271)
  void clearFlutterAnimatedPositioned() => clearField(271);
  @$pb.TagNumber(271)
  FlutterAnimatedPositioned ensureFlutterAnimatedPositioned() => $_ensure(269);

  @$pb.TagNumber(272)
  FlutterAnimatedPositionedDirectional get flutterAnimatedPositionedDirectional => $_getN(270);
  @$pb.TagNumber(272)
  set flutterAnimatedPositionedDirectional(FlutterAnimatedPositionedDirectional v) { setField(272, v); }
  @$pb.TagNumber(272)
  $core.bool hasFlutterAnimatedPositionedDirectional() => $_has(270);
  @$pb.TagNumber(272)
  void clearFlutterAnimatedPositionedDirectional() => clearField(272);
  @$pb.TagNumber(272)
  FlutterAnimatedPositionedDirectional ensureFlutterAnimatedPositionedDirectional() => $_ensure(270);

  @$pb.TagNumber(273)
  FlutterAnimatedRotation get flutterAnimatedRotation => $_getN(271);
  @$pb.TagNumber(273)
  set flutterAnimatedRotation(FlutterAnimatedRotation v) { setField(273, v); }
  @$pb.TagNumber(273)
  $core.bool hasFlutterAnimatedRotation() => $_has(271);
  @$pb.TagNumber(273)
  void clearFlutterAnimatedRotation() => clearField(273);
  @$pb.TagNumber(273)
  FlutterAnimatedRotation ensureFlutterAnimatedRotation() => $_ensure(271);

  @$pb.TagNumber(274)
  FlutterAnimatedScale get flutterAnimatedScale => $_getN(272);
  @$pb.TagNumber(274)
  set flutterAnimatedScale(FlutterAnimatedScale v) { setField(274, v); }
  @$pb.TagNumber(274)
  $core.bool hasFlutterAnimatedScale() => $_has(272);
  @$pb.TagNumber(274)
  void clearFlutterAnimatedScale() => clearField(274);
  @$pb.TagNumber(274)
  FlutterAnimatedScale ensureFlutterAnimatedScale() => $_ensure(272);

  @$pb.TagNumber(275)
  FlutterSliverAnimatedOpacity get flutterSliverAnimatedOpacity => $_getN(273);
  @$pb.TagNumber(275)
  set flutterSliverAnimatedOpacity(FlutterSliverAnimatedOpacity v) { setField(275, v); }
  @$pb.TagNumber(275)
  $core.bool hasFlutterSliverAnimatedOpacity() => $_has(273);
  @$pb.TagNumber(275)
  void clearFlutterSliverAnimatedOpacity() => clearField(275);
  @$pb.TagNumber(275)
  FlutterSliverAnimatedOpacity ensureFlutterSliverAnimatedOpacity() => $_ensure(273);

  @$pb.TagNumber(276)
  FlutterInteractiveViewer get flutterInteractiveViewer => $_getN(274);
  @$pb.TagNumber(276)
  set flutterInteractiveViewer(FlutterInteractiveViewer v) { setField(276, v); }
  @$pb.TagNumber(276)
  $core.bool hasFlutterInteractiveViewer() => $_has(274);
  @$pb.TagNumber(276)
  void clearFlutterInteractiveViewer() => clearField(276);
  @$pb.TagNumber(276)
  FlutterInteractiveViewer ensureFlutterInteractiveViewer() => $_ensure(274);

  @$pb.TagNumber(277)
  FlutterListWheelScrollView get flutterListWheelScrollView => $_getN(275);
  @$pb.TagNumber(277)
  set flutterListWheelScrollView(FlutterListWheelScrollView v) { setField(277, v); }
  @$pb.TagNumber(277)
  $core.bool hasFlutterListWheelScrollView() => $_has(275);
  @$pb.TagNumber(277)
  void clearFlutterListWheelScrollView() => clearField(277);
  @$pb.TagNumber(277)
  FlutterListWheelScrollView ensureFlutterListWheelScrollView() => $_ensure(275);

  @$pb.TagNumber(278)
  FlutterLookupBoundary get flutterLookupBoundary => $_getN(276);
  @$pb.TagNumber(278)
  set flutterLookupBoundary(FlutterLookupBoundary v) { setField(278, v); }
  @$pb.TagNumber(278)
  $core.bool hasFlutterLookupBoundary() => $_has(276);
  @$pb.TagNumber(278)
  void clearFlutterLookupBoundary() => clearField(278);
  @$pb.TagNumber(278)
  FlutterLookupBoundary ensureFlutterLookupBoundary() => $_ensure(276);

  @$pb.TagNumber(279)
  FlutterModalBarrier get flutterModalBarrier => $_getN(277);
  @$pb.TagNumber(279)
  set flutterModalBarrier(FlutterModalBarrier v) { setField(279, v); }
  @$pb.TagNumber(279)
  $core.bool hasFlutterModalBarrier() => $_has(277);
  @$pb.TagNumber(279)
  void clearFlutterModalBarrier() => clearField(279);
  @$pb.TagNumber(279)
  FlutterModalBarrier ensureFlutterModalBarrier() => $_ensure(277);

  @$pb.TagNumber(280)
  FlutterNavigationToolbar get flutterNavigationToolbar => $_getN(278);
  @$pb.TagNumber(280)
  set flutterNavigationToolbar(FlutterNavigationToolbar v) { setField(280, v); }
  @$pb.TagNumber(280)
  $core.bool hasFlutterNavigationToolbar() => $_has(278);
  @$pb.TagNumber(280)
  void clearFlutterNavigationToolbar() => clearField(280);
  @$pb.TagNumber(280)
  FlutterNavigationToolbar ensureFlutterNavigationToolbar() => $_ensure(278);

  @$pb.TagNumber(281)
  FlutterHeroControllerScopeNamedNone get flutterHeroControllerScopeNamedNone => $_getN(279);
  @$pb.TagNumber(281)
  set flutterHeroControllerScopeNamedNone(FlutterHeroControllerScopeNamedNone v) { setField(281, v); }
  @$pb.TagNumber(281)
  $core.bool hasFlutterHeroControllerScopeNamedNone() => $_has(279);
  @$pb.TagNumber(281)
  void clearFlutterHeroControllerScopeNamedNone() => clearField(281);
  @$pb.TagNumber(281)
  FlutterHeroControllerScopeNamedNone ensureFlutterHeroControllerScopeNamedNone() => $_ensure(279);

  @$pb.TagNumber(282)
  FlutterNavigator get flutterNavigator => $_getN(280);
  @$pb.TagNumber(282)
  set flutterNavigator(FlutterNavigator v) { setField(282, v); }
  @$pb.TagNumber(282)
  $core.bool hasFlutterNavigator() => $_has(280);
  @$pb.TagNumber(282)
  void clearFlutterNavigator() => clearField(282);
  @$pb.TagNumber(282)
  FlutterNavigator ensureFlutterNavigator() => $_ensure(280);

  @$pb.TagNumber(283)
  FlutterNotificationListener get flutterNotificationListener => $_getN(281);
  @$pb.TagNumber(283)
  set flutterNotificationListener(FlutterNotificationListener v) { setField(283, v); }
  @$pb.TagNumber(283)
  $core.bool hasFlutterNotificationListener() => $_has(281);
  @$pb.TagNumber(283)
  void clearFlutterNotificationListener() => clearField(283);
  @$pb.TagNumber(283)
  FlutterNotificationListener ensureFlutterNotificationListener() => $_ensure(281);

  @$pb.TagNumber(284)
  FlutterOverflowBar get flutterOverflowBar => $_getN(282);
  @$pb.TagNumber(284)
  set flutterOverflowBar(FlutterOverflowBar v) { setField(284, v); }
  @$pb.TagNumber(284)
  $core.bool hasFlutterOverflowBar() => $_has(282);
  @$pb.TagNumber(284)
  void clearFlutterOverflowBar() => clearField(284);
  @$pb.TagNumber(284)
  FlutterOverflowBar ensureFlutterOverflowBar() => $_ensure(282);

  @$pb.TagNumber(285)
  FlutterOverlay get flutterOverlay => $_getN(283);
  @$pb.TagNumber(285)
  set flutterOverlay(FlutterOverlay v) { setField(285, v); }
  @$pb.TagNumber(285)
  $core.bool hasFlutterOverlay() => $_has(283);
  @$pb.TagNumber(285)
  void clearFlutterOverlay() => clearField(285);
  @$pb.TagNumber(285)
  FlutterOverlay ensureFlutterOverlay() => $_ensure(283);

  @$pb.TagNumber(286)
  FlutterPageView get flutterPageView => $_getN(284);
  @$pb.TagNumber(286)
  set flutterPageView(FlutterPageView v) { setField(286, v); }
  @$pb.TagNumber(286)
  $core.bool hasFlutterPageView() => $_has(284);
  @$pb.TagNumber(286)
  void clearFlutterPageView() => clearField(286);
  @$pb.TagNumber(286)
  FlutterPageView ensureFlutterPageView() => $_ensure(284);

  @$pb.TagNumber(287)
  FlutterPerformanceOverlay get flutterPerformanceOverlay => $_getN(285);
  @$pb.TagNumber(287)
  set flutterPerformanceOverlay(FlutterPerformanceOverlay v) { setField(287, v); }
  @$pb.TagNumber(287)
  $core.bool hasFlutterPerformanceOverlay() => $_has(285);
  @$pb.TagNumber(287)
  void clearFlutterPerformanceOverlay() => clearField(287);
  @$pb.TagNumber(287)
  FlutterPerformanceOverlay ensureFlutterPerformanceOverlay() => $_ensure(285);

  @$pb.TagNumber(288)
  FlutterPerformanceOverlayNamedAllEnabled get flutterPerformanceOverlayNamedAllEnabled => $_getN(286);
  @$pb.TagNumber(288)
  set flutterPerformanceOverlayNamedAllEnabled(FlutterPerformanceOverlayNamedAllEnabled v) { setField(288, v); }
  @$pb.TagNumber(288)
  $core.bool hasFlutterPerformanceOverlayNamedAllEnabled() => $_has(286);
  @$pb.TagNumber(288)
  void clearFlutterPerformanceOverlayNamedAllEnabled() => clearField(288);
  @$pb.TagNumber(288)
  FlutterPerformanceOverlayNamedAllEnabled ensureFlutterPerformanceOverlayNamedAllEnabled() => $_ensure(286);

  @$pb.TagNumber(289)
  FlutterPlaceholder get flutterPlaceholder => $_getN(287);
  @$pb.TagNumber(289)
  set flutterPlaceholder(FlutterPlaceholder v) { setField(289, v); }
  @$pb.TagNumber(289)
  $core.bool hasFlutterPlaceholder() => $_has(287);
  @$pb.TagNumber(289)
  void clearFlutterPlaceholder() => clearField(289);
  @$pb.TagNumber(289)
  FlutterPlaceholder ensureFlutterPlaceholder() => $_ensure(287);

  @$pb.TagNumber(290)
  FlutterAndroidView get flutterAndroidView => $_getN(288);
  @$pb.TagNumber(290)
  set flutterAndroidView(FlutterAndroidView v) { setField(290, v); }
  @$pb.TagNumber(290)
  $core.bool hasFlutterAndroidView() => $_has(288);
  @$pb.TagNumber(290)
  void clearFlutterAndroidView() => clearField(290);
  @$pb.TagNumber(290)
  FlutterAndroidView ensureFlutterAndroidView() => $_ensure(288);

  @$pb.TagNumber(291)
  FlutterHtmlElementView get flutterHtmlElementView => $_getN(289);
  @$pb.TagNumber(291)
  set flutterHtmlElementView(FlutterHtmlElementView v) { setField(291, v); }
  @$pb.TagNumber(291)
  $core.bool hasFlutterHtmlElementView() => $_has(289);
  @$pb.TagNumber(291)
  void clearFlutterHtmlElementView() => clearField(291);
  @$pb.TagNumber(291)
  FlutterHtmlElementView ensureFlutterHtmlElementView() => $_ensure(289);

  @$pb.TagNumber(292)
  FlutterUiKitView get flutterUiKitView => $_getN(290);
  @$pb.TagNumber(292)
  set flutterUiKitView(FlutterUiKitView v) { setField(292, v); }
  @$pb.TagNumber(292)
  $core.bool hasFlutterUiKitView() => $_has(290);
  @$pb.TagNumber(292)
  void clearFlutterUiKitView() => clearField(292);
  @$pb.TagNumber(292)
  FlutterUiKitView ensureFlutterUiKitView() => $_ensure(290);

  @$pb.TagNumber(293)
  FlutterPrimaryScrollControllerNamedNone get flutterPrimaryScrollControllerNamedNone => $_getN(291);
  @$pb.TagNumber(293)
  set flutterPrimaryScrollControllerNamedNone(FlutterPrimaryScrollControllerNamedNone v) { setField(293, v); }
  @$pb.TagNumber(293)
  $core.bool hasFlutterPrimaryScrollControllerNamedNone() => $_has(291);
  @$pb.TagNumber(293)
  void clearFlutterPrimaryScrollControllerNamedNone() => clearField(293);
  @$pb.TagNumber(293)
  FlutterPrimaryScrollControllerNamedNone ensureFlutterPrimaryScrollControllerNamedNone() => $_ensure(291);

  @$pb.TagNumber(294)
  FlutterReorderableDelayedDragStartListener get flutterReorderableDelayedDragStartListener => $_getN(292);
  @$pb.TagNumber(294)
  set flutterReorderableDelayedDragStartListener(FlutterReorderableDelayedDragStartListener v) { setField(294, v); }
  @$pb.TagNumber(294)
  $core.bool hasFlutterReorderableDelayedDragStartListener() => $_has(292);
  @$pb.TagNumber(294)
  void clearFlutterReorderableDelayedDragStartListener() => clearField(294);
  @$pb.TagNumber(294)
  FlutterReorderableDelayedDragStartListener ensureFlutterReorderableDelayedDragStartListener() => $_ensure(292);

  @$pb.TagNumber(295)
  FlutterReorderableDragStartListener get flutterReorderableDragStartListener => $_getN(293);
  @$pb.TagNumber(295)
  set flutterReorderableDragStartListener(FlutterReorderableDragStartListener v) { setField(295, v); }
  @$pb.TagNumber(295)
  $core.bool hasFlutterReorderableDragStartListener() => $_has(293);
  @$pb.TagNumber(295)
  void clearFlutterReorderableDragStartListener() => clearField(295);
  @$pb.TagNumber(295)
  FlutterReorderableDragStartListener ensureFlutterReorderableDragStartListener() => $_ensure(293);

  @$pb.TagNumber(296)
  FlutterRestorationScope get flutterRestorationScope => $_getN(294);
  @$pb.TagNumber(296)
  set flutterRestorationScope(FlutterRestorationScope v) { setField(296, v); }
  @$pb.TagNumber(296)
  $core.bool hasFlutterRestorationScope() => $_has(294);
  @$pb.TagNumber(296)
  void clearFlutterRestorationScope() => clearField(296);
  @$pb.TagNumber(296)
  FlutterRestorationScope ensureFlutterRestorationScope() => $_ensure(294);

  @$pb.TagNumber(297)
  FlutterRootRestorationScope get flutterRootRestorationScope => $_getN(295);
  @$pb.TagNumber(297)
  set flutterRootRestorationScope(FlutterRootRestorationScope v) { setField(297, v); }
  @$pb.TagNumber(297)
  $core.bool hasFlutterRootRestorationScope() => $_has(295);
  @$pb.TagNumber(297)
  void clearFlutterRootRestorationScope() => clearField(297);
  @$pb.TagNumber(297)
  FlutterRootRestorationScope ensureFlutterRootRestorationScope() => $_ensure(295);

  @$pb.TagNumber(298)
  FlutterUnmanagedRestorationScope get flutterUnmanagedRestorationScope => $_getN(296);
  @$pb.TagNumber(298)
  set flutterUnmanagedRestorationScope(FlutterUnmanagedRestorationScope v) { setField(298, v); }
  @$pb.TagNumber(298)
  $core.bool hasFlutterUnmanagedRestorationScope() => $_has(296);
  @$pb.TagNumber(298)
  void clearFlutterUnmanagedRestorationScope() => clearField(298);
  @$pb.TagNumber(298)
  FlutterUnmanagedRestorationScope ensureFlutterUnmanagedRestorationScope() => $_ensure(296);

  @$pb.TagNumber(299)
  FlutterSafeArea get flutterSafeArea => $_getN(297);
  @$pb.TagNumber(299)
  set flutterSafeArea(FlutterSafeArea v) { setField(299, v); }
  @$pb.TagNumber(299)
  $core.bool hasFlutterSafeArea() => $_has(297);
  @$pb.TagNumber(299)
  void clearFlutterSafeArea() => clearField(299);
  @$pb.TagNumber(299)
  FlutterSafeArea ensureFlutterSafeArea() => $_ensure(297);

  @$pb.TagNumber(300)
  FlutterSliverSafeArea get flutterSliverSafeArea => $_getN(298);
  @$pb.TagNumber(300)
  set flutterSliverSafeArea(FlutterSliverSafeArea v) { setField(300, v); }
  @$pb.TagNumber(300)
  $core.bool hasFlutterSliverSafeArea() => $_has(298);
  @$pb.TagNumber(300)
  void clearFlutterSliverSafeArea() => clearField(300);
  @$pb.TagNumber(300)
  FlutterSliverSafeArea ensureFlutterSliverSafeArea() => $_ensure(298);

  @$pb.TagNumber(301)
  FlutterScrollNotificationObserver get flutterScrollNotificationObserver => $_getN(299);
  @$pb.TagNumber(301)
  set flutterScrollNotificationObserver(FlutterScrollNotificationObserver v) { setField(301, v); }
  @$pb.TagNumber(301)
  $core.bool hasFlutterScrollNotificationObserver() => $_has(299);
  @$pb.TagNumber(301)
  void clearFlutterScrollNotificationObserver() => clearField(301);
  @$pb.TagNumber(301)
  FlutterScrollNotificationObserver ensureFlutterScrollNotificationObserver() => $_ensure(299);

  @$pb.TagNumber(302)
  FlutterCustomScrollView get flutterCustomScrollView => $_getN(300);
  @$pb.TagNumber(302)
  set flutterCustomScrollView(FlutterCustomScrollView v) { setField(302, v); }
  @$pb.TagNumber(302)
  $core.bool hasFlutterCustomScrollView() => $_has(300);
  @$pb.TagNumber(302)
  void clearFlutterCustomScrollView() => clearField(302);
  @$pb.TagNumber(302)
  FlutterCustomScrollView ensureFlutterCustomScrollView() => $_ensure(300);

  @$pb.TagNumber(303)
  FlutterGridViewNamedCount get flutterGridViewNamedCount => $_getN(301);
  @$pb.TagNumber(303)
  set flutterGridViewNamedCount(FlutterGridViewNamedCount v) { setField(303, v); }
  @$pb.TagNumber(303)
  $core.bool hasFlutterGridViewNamedCount() => $_has(301);
  @$pb.TagNumber(303)
  void clearFlutterGridViewNamedCount() => clearField(303);
  @$pb.TagNumber(303)
  FlutterGridViewNamedCount ensureFlutterGridViewNamedCount() => $_ensure(301);

  @$pb.TagNumber(304)
  FlutterGridViewNamedExtent get flutterGridViewNamedExtent => $_getN(302);
  @$pb.TagNumber(304)
  set flutterGridViewNamedExtent(FlutterGridViewNamedExtent v) { setField(304, v); }
  @$pb.TagNumber(304)
  $core.bool hasFlutterGridViewNamedExtent() => $_has(302);
  @$pb.TagNumber(304)
  void clearFlutterGridViewNamedExtent() => clearField(304);
  @$pb.TagNumber(304)
  FlutterGridViewNamedExtent ensureFlutterGridViewNamedExtent() => $_ensure(302);

  @$pb.TagNumber(305)
  FlutterListView get flutterListView => $_getN(303);
  @$pb.TagNumber(305)
  set flutterListView(FlutterListView v) { setField(305, v); }
  @$pb.TagNumber(305)
  $core.bool hasFlutterListView() => $_has(303);
  @$pb.TagNumber(305)
  void clearFlutterListView() => clearField(305);
  @$pb.TagNumber(305)
  FlutterListView ensureFlutterListView() => $_ensure(303);

  @$pb.TagNumber(306)
  FlutterRawScrollbar get flutterRawScrollbar => $_getN(304);
  @$pb.TagNumber(306)
  set flutterRawScrollbar(FlutterRawScrollbar v) { setField(306, v); }
  @$pb.TagNumber(306)
  $core.bool hasFlutterRawScrollbar() => $_has(304);
  @$pb.TagNumber(306)
  void clearFlutterRawScrollbar() => clearField(306);
  @$pb.TagNumber(306)
  FlutterRawScrollbar ensureFlutterRawScrollbar() => $_ensure(304);

  @$pb.TagNumber(307)
  FlutterSelectionContainerNamedDisabled get flutterSelectionContainerNamedDisabled => $_getN(305);
  @$pb.TagNumber(307)
  set flutterSelectionContainerNamedDisabled(FlutterSelectionContainerNamedDisabled v) { setField(307, v); }
  @$pb.TagNumber(307)
  $core.bool hasFlutterSelectionContainerNamedDisabled() => $_has(305);
  @$pb.TagNumber(307)
  void clearFlutterSelectionContainerNamedDisabled() => clearField(307);
  @$pb.TagNumber(307)
  FlutterSelectionContainerNamedDisabled ensureFlutterSelectionContainerNamedDisabled() => $_ensure(305);

  @$pb.TagNumber(308)
  FlutterSemanticsDebugger get flutterSemanticsDebugger => $_getN(306);
  @$pb.TagNumber(308)
  set flutterSemanticsDebugger(FlutterSemanticsDebugger v) { setField(308, v); }
  @$pb.TagNumber(308)
  $core.bool hasFlutterSemanticsDebugger() => $_has(306);
  @$pb.TagNumber(308)
  void clearFlutterSemanticsDebugger() => clearField(308);
  @$pb.TagNumber(308)
  FlutterSemanticsDebugger ensureFlutterSemanticsDebugger() => $_ensure(306);

  @$pb.TagNumber(309)
  FlutterSharedAppData get flutterSharedAppData => $_getN(307);
  @$pb.TagNumber(309)
  set flutterSharedAppData(FlutterSharedAppData v) { setField(309, v); }
  @$pb.TagNumber(309)
  $core.bool hasFlutterSharedAppData() => $_has(307);
  @$pb.TagNumber(309)
  void clearFlutterSharedAppData() => clearField(309);
  @$pb.TagNumber(309)
  FlutterSharedAppData ensureFlutterSharedAppData() => $_ensure(307);

  @$pb.TagNumber(310)
  FlutterShortcutRegistrar get flutterShortcutRegistrar => $_getN(308);
  @$pb.TagNumber(310)
  set flutterShortcutRegistrar(FlutterShortcutRegistrar v) { setField(310, v); }
  @$pb.TagNumber(310)
  $core.bool hasFlutterShortcutRegistrar() => $_has(308);
  @$pb.TagNumber(310)
  void clearFlutterShortcutRegistrar() => clearField(310);
  @$pb.TagNumber(310)
  FlutterShortcutRegistrar ensureFlutterShortcutRegistrar() => $_ensure(308);

  @$pb.TagNumber(311)
  FlutterSingleChildScrollView get flutterSingleChildScrollView => $_getN(309);
  @$pb.TagNumber(311)
  set flutterSingleChildScrollView(FlutterSingleChildScrollView v) { setField(311, v); }
  @$pb.TagNumber(311)
  $core.bool hasFlutterSingleChildScrollView() => $_has(309);
  @$pb.TagNumber(311)
  void clearFlutterSingleChildScrollView() => clearField(311);
  @$pb.TagNumber(311)
  FlutterSingleChildScrollView ensureFlutterSingleChildScrollView() => $_ensure(309);

  @$pb.TagNumber(312)
  FlutterSizeChangedLayoutNotifier get flutterSizeChangedLayoutNotifier => $_getN(310);
  @$pb.TagNumber(312)
  set flutterSizeChangedLayoutNotifier(FlutterSizeChangedLayoutNotifier v) { setField(312, v); }
  @$pb.TagNumber(312)
  $core.bool hasFlutterSizeChangedLayoutNotifier() => $_has(310);
  @$pb.TagNumber(312)
  void clearFlutterSizeChangedLayoutNotifier() => clearField(312);
  @$pb.TagNumber(312)
  FlutterSizeChangedLayoutNotifier ensureFlutterSizeChangedLayoutNotifier() => $_ensure(310);

  @$pb.TagNumber(313)
  FlutterKeepAlive get flutterKeepAlive => $_getN(311);
  @$pb.TagNumber(313)
  set flutterKeepAlive(FlutterKeepAlive v) { setField(313, v); }
  @$pb.TagNumber(313)
  $core.bool hasFlutterKeepAlive() => $_has(311);
  @$pb.TagNumber(313)
  void clearFlutterKeepAlive() => clearField(313);
  @$pb.TagNumber(313)
  FlutterKeepAlive ensureFlutterKeepAlive() => $_ensure(311);

  @$pb.TagNumber(314)
  FlutterSliverConstrainedCrossAxis get flutterSliverConstrainedCrossAxis => $_getN(312);
  @$pb.TagNumber(314)
  set flutterSliverConstrainedCrossAxis(FlutterSliverConstrainedCrossAxis v) { setField(314, v); }
  @$pb.TagNumber(314)
  $core.bool hasFlutterSliverConstrainedCrossAxis() => $_has(312);
  @$pb.TagNumber(314)
  void clearFlutterSliverConstrainedCrossAxis() => clearField(314);
  @$pb.TagNumber(314)
  FlutterSliverConstrainedCrossAxis ensureFlutterSliverConstrainedCrossAxis() => $_ensure(312);

  @$pb.TagNumber(315)
  FlutterSliverCrossAxisExpanded get flutterSliverCrossAxisExpanded => $_getN(313);
  @$pb.TagNumber(315)
  set flutterSliverCrossAxisExpanded(FlutterSliverCrossAxisExpanded v) { setField(315, v); }
  @$pb.TagNumber(315)
  $core.bool hasFlutterSliverCrossAxisExpanded() => $_has(313);
  @$pb.TagNumber(315)
  void clearFlutterSliverCrossAxisExpanded() => clearField(315);
  @$pb.TagNumber(315)
  FlutterSliverCrossAxisExpanded ensureFlutterSliverCrossAxisExpanded() => $_ensure(313);

  @$pb.TagNumber(316)
  FlutterSliverCrossAxisGroup get flutterSliverCrossAxisGroup => $_getN(314);
  @$pb.TagNumber(316)
  set flutterSliverCrossAxisGroup(FlutterSliverCrossAxisGroup v) { setField(316, v); }
  @$pb.TagNumber(316)
  $core.bool hasFlutterSliverCrossAxisGroup() => $_has(314);
  @$pb.TagNumber(316)
  void clearFlutterSliverCrossAxisGroup() => clearField(316);
  @$pb.TagNumber(316)
  FlutterSliverCrossAxisGroup ensureFlutterSliverCrossAxisGroup() => $_ensure(314);

  @$pb.TagNumber(317)
  FlutterSliverFixedExtentListNamedList get flutterSliverFixedExtentListNamedList => $_getN(315);
  @$pb.TagNumber(317)
  set flutterSliverFixedExtentListNamedList(FlutterSliverFixedExtentListNamedList v) { setField(317, v); }
  @$pb.TagNumber(317)
  $core.bool hasFlutterSliverFixedExtentListNamedList() => $_has(315);
  @$pb.TagNumber(317)
  void clearFlutterSliverFixedExtentListNamedList() => clearField(317);
  @$pb.TagNumber(317)
  FlutterSliverFixedExtentListNamedList ensureFlutterSliverFixedExtentListNamedList() => $_ensure(315);

  @$pb.TagNumber(318)
  FlutterSliverGridNamedCount get flutterSliverGridNamedCount => $_getN(316);
  @$pb.TagNumber(318)
  set flutterSliverGridNamedCount(FlutterSliverGridNamedCount v) { setField(318, v); }
  @$pb.TagNumber(318)
  $core.bool hasFlutterSliverGridNamedCount() => $_has(316);
  @$pb.TagNumber(318)
  void clearFlutterSliverGridNamedCount() => clearField(318);
  @$pb.TagNumber(318)
  FlutterSliverGridNamedCount ensureFlutterSliverGridNamedCount() => $_ensure(316);

  @$pb.TagNumber(319)
  FlutterSliverGridNamedExtent get flutterSliverGridNamedExtent => $_getN(317);
  @$pb.TagNumber(319)
  set flutterSliverGridNamedExtent(FlutterSliverGridNamedExtent v) { setField(319, v); }
  @$pb.TagNumber(319)
  $core.bool hasFlutterSliverGridNamedExtent() => $_has(317);
  @$pb.TagNumber(319)
  void clearFlutterSliverGridNamedExtent() => clearField(319);
  @$pb.TagNumber(319)
  FlutterSliverGridNamedExtent ensureFlutterSliverGridNamedExtent() => $_ensure(317);

  @$pb.TagNumber(320)
  FlutterSliverIgnorePointer get flutterSliverIgnorePointer => $_getN(318);
  @$pb.TagNumber(320)
  set flutterSliverIgnorePointer(FlutterSliverIgnorePointer v) { setField(320, v); }
  @$pb.TagNumber(320)
  $core.bool hasFlutterSliverIgnorePointer() => $_has(318);
  @$pb.TagNumber(320)
  void clearFlutterSliverIgnorePointer() => clearField(320);
  @$pb.TagNumber(320)
  FlutterSliverIgnorePointer ensureFlutterSliverIgnorePointer() => $_ensure(318);

  @$pb.TagNumber(321)
  FlutterSliverListNamedList get flutterSliverListNamedList => $_getN(319);
  @$pb.TagNumber(321)
  set flutterSliverListNamedList(FlutterSliverListNamedList v) { setField(321, v); }
  @$pb.TagNumber(321)
  $core.bool hasFlutterSliverListNamedList() => $_has(319);
  @$pb.TagNumber(321)
  void clearFlutterSliverListNamedList() => clearField(321);
  @$pb.TagNumber(321)
  FlutterSliverListNamedList ensureFlutterSliverListNamedList() => $_ensure(319);

  @$pb.TagNumber(322)
  FlutterSliverMainAxisGroup get flutterSliverMainAxisGroup => $_getN(320);
  @$pb.TagNumber(322)
  set flutterSliverMainAxisGroup(FlutterSliverMainAxisGroup v) { setField(322, v); }
  @$pb.TagNumber(322)
  $core.bool hasFlutterSliverMainAxisGroup() => $_has(320);
  @$pb.TagNumber(322)
  void clearFlutterSliverMainAxisGroup() => clearField(322);
  @$pb.TagNumber(322)
  FlutterSliverMainAxisGroup ensureFlutterSliverMainAxisGroup() => $_ensure(320);

  @$pb.TagNumber(323)
  FlutterSliverOffstage get flutterSliverOffstage => $_getN(321);
  @$pb.TagNumber(323)
  set flutterSliverOffstage(FlutterSliverOffstage v) { setField(323, v); }
  @$pb.TagNumber(323)
  $core.bool hasFlutterSliverOffstage() => $_has(321);
  @$pb.TagNumber(323)
  void clearFlutterSliverOffstage() => clearField(323);
  @$pb.TagNumber(323)
  FlutterSliverOffstage ensureFlutterSliverOffstage() => $_ensure(321);

  @$pb.TagNumber(324)
  FlutterSliverOpacity get flutterSliverOpacity => $_getN(322);
  @$pb.TagNumber(324)
  set flutterSliverOpacity(FlutterSliverOpacity v) { setField(324, v); }
  @$pb.TagNumber(324)
  $core.bool hasFlutterSliverOpacity() => $_has(322);
  @$pb.TagNumber(324)
  void clearFlutterSliverOpacity() => clearField(324);
  @$pb.TagNumber(324)
  FlutterSliverOpacity ensureFlutterSliverOpacity() => $_ensure(322);

  @$pb.TagNumber(325)
  FlutterSliverFillRemaining get flutterSliverFillRemaining => $_getN(323);
  @$pb.TagNumber(325)
  set flutterSliverFillRemaining(FlutterSliverFillRemaining v) { setField(325, v); }
  @$pb.TagNumber(325)
  $core.bool hasFlutterSliverFillRemaining() => $_has(323);
  @$pb.TagNumber(325)
  void clearFlutterSliverFillRemaining() => clearField(325);
  @$pb.TagNumber(325)
  FlutterSliverFillRemaining ensureFlutterSliverFillRemaining() => $_ensure(323);

  @$pb.TagNumber(326)
  FlutterSliverPrototypeExtentListNamedList get flutterSliverPrototypeExtentListNamedList => $_getN(324);
  @$pb.TagNumber(326)
  set flutterSliverPrototypeExtentListNamedList(FlutterSliverPrototypeExtentListNamedList v) { setField(326, v); }
  @$pb.TagNumber(326)
  $core.bool hasFlutterSliverPrototypeExtentListNamedList() => $_has(324);
  @$pb.TagNumber(326)
  void clearFlutterSliverPrototypeExtentListNamedList() => clearField(326);
  @$pb.TagNumber(326)
  FlutterSliverPrototypeExtentListNamedList ensureFlutterSliverPrototypeExtentListNamedList() => $_ensure(324);

  @$pb.TagNumber(327)
  FlutterSpacer get flutterSpacer => $_getN(325);
  @$pb.TagNumber(327)
  set flutterSpacer(FlutterSpacer v) { setField(327, v); }
  @$pb.TagNumber(327)
  $core.bool hasFlutterSpacer() => $_has(325);
  @$pb.TagNumber(327)
  void clearFlutterSpacer() => clearField(327);
  @$pb.TagNumber(327)
  FlutterSpacer ensureFlutterSpacer() => $_ensure(325);

  @$pb.TagNumber(328)
  FlutterTable get flutterTable => $_getN(326);
  @$pb.TagNumber(328)
  set flutterTable(FlutterTable v) { setField(328, v); }
  @$pb.TagNumber(328)
  $core.bool hasFlutterTable() => $_has(326);
  @$pb.TagNumber(328)
  void clearFlutterTable() => clearField(328);
  @$pb.TagNumber(328)
  FlutterTable ensureFlutterTable() => $_ensure(326);

  @$pb.TagNumber(329)
  FlutterTableCell get flutterTableCell => $_getN(327);
  @$pb.TagNumber(329)
  set flutterTableCell(FlutterTableCell v) { setField(329, v); }
  @$pb.TagNumber(329)
  $core.bool hasFlutterTableCell() => $_has(327);
  @$pb.TagNumber(329)
  void clearFlutterTableCell() => clearField(329);
  @$pb.TagNumber(329)
  FlutterTableCell ensureFlutterTableCell() => $_ensure(327);

  @$pb.TagNumber(330)
  FlutterTapRegion get flutterTapRegion => $_getN(328);
  @$pb.TagNumber(330)
  set flutterTapRegion(FlutterTapRegion v) { setField(330, v); }
  @$pb.TagNumber(330)
  $core.bool hasFlutterTapRegion() => $_has(328);
  @$pb.TagNumber(330)
  void clearFlutterTapRegion() => clearField(330);
  @$pb.TagNumber(330)
  FlutterTapRegion ensureFlutterTapRegion() => $_ensure(328);

  @$pb.TagNumber(331)
  FlutterTapRegionSurface get flutterTapRegionSurface => $_getN(329);
  @$pb.TagNumber(331)
  set flutterTapRegionSurface(FlutterTapRegionSurface v) { setField(331, v); }
  @$pb.TagNumber(331)
  $core.bool hasFlutterTapRegionSurface() => $_has(329);
  @$pb.TagNumber(331)
  void clearFlutterTapRegionSurface() => clearField(331);
  @$pb.TagNumber(331)
  FlutterTapRegionSurface ensureFlutterTapRegionSurface() => $_ensure(329);

  @$pb.TagNumber(332)
  FlutterTextFieldTapRegion get flutterTextFieldTapRegion => $_getN(330);
  @$pb.TagNumber(332)
  set flutterTextFieldTapRegion(FlutterTextFieldTapRegion v) { setField(332, v); }
  @$pb.TagNumber(332)
  $core.bool hasFlutterTextFieldTapRegion() => $_has(330);
  @$pb.TagNumber(332)
  void clearFlutterTextFieldTapRegion() => clearField(332);
  @$pb.TagNumber(332)
  FlutterTextFieldTapRegion ensureFlutterTextFieldTapRegion() => $_ensure(330);

  @$pb.TagNumber(333)
  FlutterDefaultTextStyleNamedFallback get flutterDefaultTextStyleNamedFallback => $_getN(331);
  @$pb.TagNumber(333)
  set flutterDefaultTextStyleNamedFallback(FlutterDefaultTextStyleNamedFallback v) { setField(333, v); }
  @$pb.TagNumber(333)
  $core.bool hasFlutterDefaultTextStyleNamedFallback() => $_has(331);
  @$pb.TagNumber(333)
  void clearFlutterDefaultTextStyleNamedFallback() => clearField(333);
  @$pb.TagNumber(333)
  FlutterDefaultTextStyleNamedFallback ensureFlutterDefaultTextStyleNamedFallback() => $_ensure(331);

  @$pb.TagNumber(334)
  FlutterText get flutterText => $_getN(332);
  @$pb.TagNumber(334)
  set flutterText(FlutterText v) { setField(334, v); }
  @$pb.TagNumber(334)
  $core.bool hasFlutterText() => $_has(332);
  @$pb.TagNumber(334)
  void clearFlutterText() => clearField(334);
  @$pb.TagNumber(334)
  FlutterText ensureFlutterText() => $_ensure(332);

  @$pb.TagNumber(335)
  FlutterTextSelectionGestureDetector get flutterTextSelectionGestureDetector => $_getN(333);
  @$pb.TagNumber(335)
  set flutterTextSelectionGestureDetector(FlutterTextSelectionGestureDetector v) { setField(335, v); }
  @$pb.TagNumber(335)
  $core.bool hasFlutterTextSelectionGestureDetector() => $_has(333);
  @$pb.TagNumber(335)
  void clearFlutterTextSelectionGestureDetector() => clearField(335);
  @$pb.TagNumber(335)
  FlutterTextSelectionGestureDetector ensureFlutterTextSelectionGestureDetector() => $_ensure(333);

  @$pb.TagNumber(336)
  FlutterTexture get flutterTexture => $_getN(334);
  @$pb.TagNumber(336)
  set flutterTexture(FlutterTexture v) { setField(336, v); }
  @$pb.TagNumber(336)
  $core.bool hasFlutterTexture() => $_has(334);
  @$pb.TagNumber(336)
  void clearFlutterTexture() => clearField(336);
  @$pb.TagNumber(336)
  FlutterTexture ensureFlutterTexture() => $_ensure(334);

  @$pb.TagNumber(337)
  FlutterTickerMode get flutterTickerMode => $_getN(335);
  @$pb.TagNumber(337)
  set flutterTickerMode(FlutterTickerMode v) { setField(337, v); }
  @$pb.TagNumber(337)
  $core.bool hasFlutterTickerMode() => $_has(335);
  @$pb.TagNumber(337)
  void clearFlutterTickerMode() => clearField(337);
  @$pb.TagNumber(337)
  FlutterTickerMode ensureFlutterTickerMode() => $_ensure(335);

  @$pb.TagNumber(338)
  FlutterTitle get flutterTitle => $_getN(336);
  @$pb.TagNumber(338)
  set flutterTitle(FlutterTitle v) { setField(338, v); }
  @$pb.TagNumber(338)
  $core.bool hasFlutterTitle() => $_has(336);
  @$pb.TagNumber(338)
  void clearFlutterTitle() => clearField(338);
  @$pb.TagNumber(338)
  FlutterTitle ensureFlutterTitle() => $_ensure(336);

  @$pb.TagNumber(339)
  FlutterSliverVisibility get flutterSliverVisibility => $_getN(337);
  @$pb.TagNumber(339)
  set flutterSliverVisibility(FlutterSliverVisibility v) { setField(339, v); }
  @$pb.TagNumber(339)
  $core.bool hasFlutterSliverVisibility() => $_has(337);
  @$pb.TagNumber(339)
  void clearFlutterSliverVisibility() => clearField(339);
  @$pb.TagNumber(339)
  FlutterSliverVisibility ensureFlutterSliverVisibility() => $_ensure(337);

  @$pb.TagNumber(340)
  FlutterSliverVisibilityNamedMaintain get flutterSliverVisibilityNamedMaintain => $_getN(338);
  @$pb.TagNumber(340)
  set flutterSliverVisibilityNamedMaintain(FlutterSliverVisibilityNamedMaintain v) { setField(340, v); }
  @$pb.TagNumber(340)
  $core.bool hasFlutterSliverVisibilityNamedMaintain() => $_has(338);
  @$pb.TagNumber(340)
  void clearFlutterSliverVisibilityNamedMaintain() => clearField(340);
  @$pb.TagNumber(340)
  FlutterSliverVisibilityNamedMaintain ensureFlutterSliverVisibilityNamedMaintain() => $_ensure(338);

  @$pb.TagNumber(341)
  FlutterVisibility get flutterVisibility => $_getN(339);
  @$pb.TagNumber(341)
  set flutterVisibility(FlutterVisibility v) { setField(341, v); }
  @$pb.TagNumber(341)
  $core.bool hasFlutterVisibility() => $_has(339);
  @$pb.TagNumber(341)
  void clearFlutterVisibility() => clearField(341);
  @$pb.TagNumber(341)
  FlutterVisibility ensureFlutterVisibility() => $_ensure(339);

  @$pb.TagNumber(342)
  FlutterVisibilityNamedMaintain get flutterVisibilityNamedMaintain => $_getN(340);
  @$pb.TagNumber(342)
  set flutterVisibilityNamedMaintain(FlutterVisibilityNamedMaintain v) { setField(342, v); }
  @$pb.TagNumber(342)
  $core.bool hasFlutterVisibilityNamedMaintain() => $_has(340);
  @$pb.TagNumber(342)
  void clearFlutterVisibilityNamedMaintain() => clearField(342);
  @$pb.TagNumber(342)
  FlutterVisibilityNamedMaintain ensureFlutterVisibilityNamedMaintain() => $_ensure(340);

  @$pb.TagNumber(343)
  FlutterWidgetInspector get flutterWidgetInspector => $_getN(341);
  @$pb.TagNumber(343)
  set flutterWidgetInspector(FlutterWidgetInspector v) { setField(343, v); }
  @$pb.TagNumber(343)
  $core.bool hasFlutterWidgetInspector() => $_has(341);
  @$pb.TagNumber(343)
  void clearFlutterWidgetInspector() => clearField(343);
  @$pb.TagNumber(343)
  FlutterWidgetInspector ensureFlutterWidgetInspector() => $_ensure(341);

  @$pb.TagNumber(344)
  FlutterWillPopScope get flutterWillPopScope => $_getN(342);
  @$pb.TagNumber(344)
  set flutterWillPopScope(FlutterWillPopScope v) { setField(344, v); }
  @$pb.TagNumber(344)
  $core.bool hasFlutterWillPopScope() => $_has(342);
  @$pb.TagNumber(344)
  void clearFlutterWillPopScope() => clearField(344);
  @$pb.TagNumber(344)
  FlutterWillPopScope ensureFlutterWillPopScope() => $_ensure(342);

  @$pb.TagNumber(345)
  FlutterProjectMyApp get flutterProjectMyApp => $_getN(343);
  @$pb.TagNumber(345)
  set flutterProjectMyApp(FlutterProjectMyApp v) { setField(345, v); }
  @$pb.TagNumber(345)
  $core.bool hasFlutterProjectMyApp() => $_has(343);
  @$pb.TagNumber(345)
  void clearFlutterProjectMyApp() => clearField(345);
  @$pb.TagNumber(345)
  FlutterProjectMyApp ensureFlutterProjectMyApp() => $_ensure(343);

  @$pb.TagNumber(346)
  FlutterProjectMyHomePage get flutterProjectMyHomePage => $_getN(344);
  @$pb.TagNumber(346)
  set flutterProjectMyHomePage(FlutterProjectMyHomePage v) { setField(346, v); }
  @$pb.TagNumber(346)
  $core.bool hasFlutterProjectMyHomePage() => $_has(344);
  @$pb.TagNumber(346)
  void clearFlutterProjectMyHomePage() => clearField(346);
  @$pb.TagNumber(346)
  FlutterProjectMyHomePage ensureFlutterProjectMyHomePage() => $_ensure(344);
}


const _omitFieldNames = $core.bool.fromEnvironment('protobuf.omit_field_names');
const _omitMessageNames = $core.bool.fromEnvironment('protobuf.omit_message_names');
